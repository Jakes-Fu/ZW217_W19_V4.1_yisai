/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 描述：消息数据结构定义文件
// 作者：LaoTan
// 日期：2017-11-16 10:17:32
// 版本：V0.0.1
// 版权：CopyRight(c) By RDA
// 
// 消息定义格
//    <MsgID MsgName>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </MsgID MsgName>
//
// 子结构定义
//    <Sub T_Temp>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </Sub T_Temp>
//
//  一个参数的bit位定义
//    <Bit T_Var>
//         成员名      在参数中的Bit位起始位置         成员长度(Bit数)         成员含义       成员选项
//    </Bit T_Var>
//
//  指针类型参数定义
//     参数名          Ptr           参数基类型         参数含义
//  e.g:
//      u16  *pPdschPointer;             ===> pPdschPointer      Ptr   u16             pPdschPointer 
//      T_PDSCH_MEM  *pPdschMapPointer;  ===> pPdschMapPointer   Ptr   T_PDSCH_MEM     pPdschMapPointer
//
//
// 选项定义：
//    |input;|                       参数值允许输入
//    |nochange;|                    参数值不允许改变
//    |select;值1:含义;值2:含义;|    参数值只能选择
//    |dismember;名称;|              参数bit定义
//    |multiedit;|                   数组输入
//         
//  注意：
//      1. 不支持union类型
//      2. ..:取值范围定义,e.g: 1..5,表示1到5范围
//      3. 空格符作为各列间的分隔符，如内容中有空格符，使用Tab符代替.
//      4. 参数基类型，支持u8、u16、u32，s8，s16，s32，自定义子结构、数组、指针类型(Ptr)
// 
/////////////////////////////////////////////////////////////////////////////////////////////////////////



#define  MAX_MODE_NUM  0x2
#define  MAX_LTE_CELL_NUM  0x40
#define  MAX_LTE_FREQ_NUM  0x8
#define  MEM_FIX_RESERVERD_LEN  0x4
#define  STRONGEST_NCELL_NUM_ENG_MODE  0x6
#define  MAX_NCELL_NUM_FOR_MAIN_INFO  0x6
#define  TRACE_NCELL_NUM_THREE_MODE  0x50
#define  MAX_PLMN_RAT_LEN  0x5
#define  MAX_IMEISV_LEN  0xa
#define  MAX_IMEI_LEN  0x9
#define  MAX_HNBNAME_LEN  0x30
#define  FUNCTION_NAME_ARRAY_SIZE  0x800
#define  FUNCTION_NAME_LENGTH  0xf
#define  CAPI_NO_CAUSE  0x0
#define  CAPI_SPV_CAUSE  0x10
#define  CAPI_MMI_CAUSE  0x11
#define  CAPI_SAP_CAUSE  0x12
#define  CAPI_SIM_CAUSE  0x13
#define  CAPI_LOCAL_CAUSE  0x40
#define  CAPI_SS_ERR_CAUSE  0x41
#define  CAPI_MM_NET_CAUSE  0x42
#define  CAPI_CC_NET_CAUSE  0x43
#define  CAPI_TP_CAUSE  0x44
#define  CAPI_RP_CAUSE  0x45
#define  CAPI_CP_CAUSE  0x46
#define  CAPI_SM_CAUSE  0x47
#define  CAPI_ESM_CAUSE  0x48
#define  CAPI_MM_NET_CAUSE_EMM  0x49
#define  CAPI_LOCAL_CAUSE_EMM  0x50
#define  CAPI_SS_REJ_GEN_CAUSE  0x80
#define  CAPI_SS_REJ_INV_CAUSE  0x81
#define  CAPI_SS_REJ_RES_CAUSE  0x82
#define  CAPI_SS_REJ_ERR_CAUSE  0x83
#define  SAP_CS_NO_CAUSE  0x0
#define  SAP_CS_ACCESS_UNKNOWN  0x1
#define  SAP_CS_ACCESS_NOT_ALLOWED  0x2
#define  SAP_CS_CHV1_NOT_ALLOWED  0x3
#define  SAP_CS_CHV2_NOT_ALLOWED  0x4
#define  SAP_CS_TIMER_TIMEOUT_ERROR  0x5
#define  SAP_CS_FILE_INDEX_INVALID  0x6
#define  SAP_CS_FILE_LENGTH_ERROR  0x7
#define  SAP_CS_FCP_CONTENT_CHK_ERR  0x8
#define  SAP_CS_PBR_CONTENT_CHK_ERR  0x9
#define  SAP_CS_UST_CONTENT_CHK_ERR  0xa
#define  SAP_CS_ARR_CONTENT_CHK_ERR  0xb
#define  SAP_CS_MFDIR_CONTENT_CHK_ERR  0xc
#define  SAP_CS_MOBI_REQ_WRONG_PARA  0xd
#define  SAP_CS_USIM_IS_CORRUPTED  0xe
#define  SAP_CS_FCP_CONTENT_ABSENT  0xf
#define  SAP_CS_IMG_CONTENT_CHK_ERR  0x10
#define  SAP_CS_DRV_EXCEP_RX_PARITY_ERR  0x11
#define  SAP_CS_DRV_EXCEP_TX_PARITY_ERR  0x12
#define  SAP_CS_DRV_EXCEP_CARD_UNRESPONSE  0x13
#define  SAP_CS_DRV_EXCEP_CARD_IS_OUT  0x14
#define  SAP_CS_DRV_EXCEP_CARD_IS_IN  0x15
#define  SAP_CS_DRV_EXCEP_ATR_FAILED  0x21
#define  SAP_CS_DRV_EXCEP_PTS_FAILED  0x22
#define  SAP_CS_DRV_EXCEP_PROCEDURE_BYTE_ERR  0x23
#define  SAP_CS_DRV_EXCEP_WTO  0x24
#define  SAP_CS_DRV_EXCEP_MUTE  0x25
#define  SAP_CS_DRV_EXCEP_EARLY  0x26
#define  SAP_CS_DRV_EXCEP_SUPL  0x27
#define  SAP_CS_DRV_EXCEP_PROT  0x28
#define  SAP_CS_DRV_EXCEP_OTHER  0x29
#define  SAP_CS_DRV_ATR_USIM_INSERTED_ERR  0x31
#define  SAP_CS_DRV_ATR_INSERTED_NO_USIM  0x32
#define  SAP_CS_AUTH_CONTEXT_NOT_MATCH  0x33
#define  SAP_CS_UPIN_NOT_ALLOWED  0x34
#define  SAP_CS_USIM_IS_RETRIEVED  0x35
#define  CAPI_EPS_EMM_IMSI_UNKNOWN_IN_HSS  0x2
#define  CAPI_EPS_EMM_ILLEGAL_UE  0x3
#define  CAPI_EPS_EMM_IMEI_NOT_ACCEPTED  0x5
#define  CAPI_EPS_EMM_ILLEGAL_ME  0x6
#define  CAPI_EPS_EMM_EPS_SERVICE_NOT_ALLOWED  0x7
#define  CAPI_EPS_EMM_EPS_SERVICE_AND_NON_EPS_SERVICE_NOT_ALLOWED  0x8
#define  CAPI_EPS_EMM_UE_IDENTITY_CAN_NOT_DERIVED_BY_NETWORK  0x9
#define  CAPI_EPS_EMM_IMPLICITY_DETACH  0xa
#define  CAPI_EPS_EMM_PLMN_NOT_ALLOWED  0xb
#define  CAPI_EPS_EMM_TRACKING_AREA_NOT_ALLOWED  0xc
#define  CAPI_EPS_EMM_ROAM_NOT_ALLOWED_IN_TRACKING_AREA  0xd
#define  CAPI_EPS_EMM_EPS_SERVICE_NOT_ALLOWED_IN_THIS_PLMN  0xe
#define  CAPI_EPS_EMM_NO_SUITABLE_CELL_IN_TRACKING_AREA  0xf
#define  CAPI_EPS_EMM_MSC_TEMPORARILY_NOT_REACHABLE  0x10
#define  CAPI_EPS_EMM_NETWORK_FAILURE  0x11
#define  CAPI_EPS_EMM_CS_DOMAIN_NOT_AVAILABLE  0x12
#define  CAPI_EPS_EMM_ESM_FAILURE  0x13
#define  CAPI_EPS_EMM_MAC_FAILURE  0x14
#define  CAPI_EPS_EMM_SYNCH_FAILURE  0x15
#define  CAPI_EPS_EMM_CONGESTION  0x16
#define  CAPI_EPS_EMM_UE_SECURITY_CAPABILITIES_MISMATCH  0x17
#define  CAPI_EPS_EMM_SECURITY_MODE_REJECTED_UNSPECIFIED  0x18
#define  CAPI_EPS_EMM_NOT_AUTHORIZED_FOR_THIS_CSG  0x19
#define  CAPI_EPS_EMM_NON_EPS_AUTHENTICATION_UNACCEPTABLE  0x1a
#define  CAPI_EPS_EMM_REQUESTED_SERVICE_NOT_AHTH_IN_THIS_PLMN  0x23
#define  CAPI_EPS_EMM_CS_DOMAIN_TEMPORARILY_NOT_AVAILABLE  0x27
#define  CAPI_EPS_EMM_NO_EPS_BEARER_CONTEXT_ACTIVATED  0x28
#define  CAPI_EPS_EMM_SERVICE_NETWORK_FAILURE  0x2a
#define  CAPI_EPS_EMM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_EPS_EMM_INVALID_MANDATORY_INFORMATION  0x60
#define  CAPI_EPS_EMM_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENT  0x61
#define  CAPI_EPS_EMM_MESSAGE_TYPE_NON_COMP_WITH_THE_PRO_STATE  0x62
#define  CAPI_EPS_EMM_INFO_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED  0x63
#define  CAPI_EPS_EMM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_EPS_EMM_MESSAGE_NOT_CAMP_WITH_PROTOCOL_STATE  0x65
#define  CAPI_EPS_EMM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_CS_RP_UNALLOC_UNASSIGN_NBR  0x1
#define  CAPI_CS_RP_OPERATOR_DET_BAR  0x8
#define  CAPI_CS_RP_CALL_BARRED  0xa
#define  CAPI_CS_RP_SMS_TRANS_REJECTED  0x15
#define  CAPI_CS_RP_MEMORY_CAPACITY_EXCEEDED  0x16
#define  CAPI_CS_RP_DEST_OUT_OF_SERVICE  0x1b
#define  CAPI_CS_RP_UNIDENT_SUBSCRIBER  0x1c
#define  CAPI_CS_RP_FACILITY_REJECTED  0x1d
#define  CAPI_CS_RP_UNKNOWN_SUBSCRIBER  0x1e
#define  CAPI_CS_RP_NETWORK_OUT_OF_ORDER  0x26
#define  CAPI_CS_RP_TEMPORARY_FAILURE  0x29
#define  CAPI_CS_RP_CONGESTION  0x2a
#define  CAPI_CS_RP_RESOURCES_UNAVAILABLE  0x2f
#define  CAPI_CS_RP_REQ_FACILITY_NOT_SUBSCR  0x32
#define  CAPI_CS_RP_REQ_FACILITY_NOT_IMPL  0x45
#define  CAPI_CS_RP_INVALID_SMS_TRANS_REF_VAL  0x51
#define  CAPI_CS_RP_INVALID_SHORT_MSG  0x5f
#define  CAPI_CS_RP_MANDATORY_IE_MISSING  0x60
#define  CAPI_CS_RP_MSG_TYPE_NONEXISTENT  0x61
#define  CAPI_CS_RP_INCOMPATIBLE_PROT_STATE  0x62
#define  CAPI_CS_RP_IE_NONEXISTENT_NOTIMPL  0x63
#define  CAPI_CS_RP_INVALID_IE_CONTENTS  0x64
#define  CAPI_CS_RP_PROTOCOL_UNSPECIFIED  0x6f
#define  CAPI_CS_RP_IWK_UNSPECIFIED  0x7f
#define  CAPI_CS_CP_NETWORK_FAILURE  0x11
#define  CAPI_CS_CP_CONGESTION  0x16
#define  CAPI_CS_CP_INVALID_TI  0x51
#define  CAPI_CS_CP_INVALID_SHORT_MSG  0x5f
#define  CAPI_CS_CP_MANDATORY_IE_MISSING  0x60
#define  CAPI_CS_CP_MSG_TYPE_NONEXISTENT  0x61
#define  CAPI_CS_CP_INCOMPATIBLE_PROT_STATE  0x62
#define  CAPI_CS_CP_IE_NONEXISTENT_NOTIMPL  0x63
#define  CAPI_CS_CP_PROTOCOL_UNSPECIFIED  0x6f
#define  CAPI_CS_TP_TELEMATIC_INTERWORKING_NOT_SUPPORTED  0x80
#define  CAPI_CS_TP_SHORT_MESSAGE_TYPE_0_NOT_SUPPORTED  0x81
#define  CAPI_CS_TP_CANNOT_REPLACE_SHORT_MESSAGE  0x82
#define  CAPI_CS_TP_UNSPECIFIED_TP_PID_ERROR  0x8f
#define  CAPI_CS_TP_DATA_CODING_SCHEME_ALPHABET_NOT_SUPPORTED  0x90
#define  CAPI_CS_TP_MESSAGE_CLASS_NOT_SUPPORTED  0x91
#define  CAPI_CS_TP_UNSPECIFIED_TP_DCS_ERROR  0x9f
#define  CAPI_CS_TP_COMMAND_CANNOT_BE_ACTIONED  0xa0
#define  CAPI_CS_TP_COMMAND_UNSUPPORTED  0xa1
#define  CAPI_CS_TP_UNSPECIFIED_TP_COMMAND_ERROR  0xaf
#define  CAPI_CS_TP_TPDU_NOT_SUPPORTED  0xb0
#define  CAPI_CS_TP_SC_BUSY  0xc0
#define  CAPI_CS_TP_NO_SC_SUBSCRIPTION  0xc1
#define  CAPI_CS_TP_SC_SYSTEM_FAILURE  0xc2
#define  CAPI_CS_TP_INVALID_SME_ADDRESS  0xc3
#define  CAPI_CS_TP_DESTINATION_SME_BARRED  0xc4
#define  CAPI_CS_TP_SM_REJECTED_DUPLICATE_SM  0xc5
#define  CAPI_CS_TP_TP_VPF_NOT_SUPPORTED  0xc6
#define  CAPI_CS_TP_TP_VP_NOT_SUPPORTED  0xc7
#define  CAPI_CS_TP_D0_SIM_SMS_STORAGE_FULL  0xd0
#define  CAPI_CS_TP_NO_SMS_STORAGE_CAPABILITY_IN_SIM  0xd1
#define  CAPI_CS_TP_ERROR_IN_MS  0xd2
#define  CAPI_CS_TP_MEMORY_CAPACITY_EXCEEDED  0xd3
#define  CAPI_CS_TP_SIM_APPLICATION_TOOLKIT_BUSY  0xd4
#define  CAPI_CS_TP_SIM_DATA_DOWNLOAD_ERROR  0xd5
#define  CAPI_CS_TP_UNSPECIFIED_ERROR_CAUSE  0xff
#define  CAPI_PS_ESM_OPERATOR_DETERMINTED_BAR  0x8
#define  CAPI_PS_ESM_INSUFFICIENT_RESOURCES  0x1a
#define  CAPI_PS_ESM_MISSING_OR_UNKNOWN_APN  0x1b
#define  CAPI_PS_ESM_UNKNOWN_EPS_ADDR_OR_TYPE  0x1c
#define  CAPI_PS_ESM_USER_AUTHENTICATION_FAILED  0x1d
#define  CAPI_PS_ESM_REQUEST_REJECT_BY_SGW_RO_PGW  0x1e
#define  CAPI_PS_ESM_REJECTED_WITH_UNSPECIFIED  0x1f
#define  CAPI_PS_ESM_SERVICE_NOT_SUPPORTED  0x20
#define  CAPI_PS_ESM_SERVICE_NOT_SUBSCRIBED  0x21
#define  CAPI_PS_ESM_SERVICE_OUT_OF_ORDER  0x22
#define  CAPI_PS_ESM_PTI_ALREADY_IN_USE  0x23
#define  CAPI_PS_ESM_REGULAR_DEACTIVATION  0x24
#define  CAPI_PS_ESM_QOS_NOT_ACCEPTED  0x25
#define  CAPI_PS_ESM_NETWORK_FAILURE  0x26
#define  CAPI_PS_ESM_REACTIVATION_REQUESTED  0x27
#define  CAPI_PS_ESM_SEMANTIC_ERROR_IN_TFT  0x29
#define  CAPI_PS_ESM_SYNTACTICAL_ERROR_IN_TFT  0x2a
#define  CAPI_PS_ESM_INVALID_EBI  0x2b
#define  CAPI_PS_ESM_SEMANTIC_ERROR_IN_FILTER  0x2c
#define  CAPI_PS_ESM_SYNCTACTICAL_ERROR_IN_FILTER  0x2d
#define  CAPI_PS_ESM_EPS_WITHOUT_TFT_ACTIVATED  0x2e
#define  CAPI_PS_ESM_PTI_MISMATCH  0x2f
#define  CAPI_PS_ESM_LAST_PDN_DISCONNECT_NOT_ALLOWED  0x31
#define  CAPI_PS_ESM_IPV4_ONLY_ALLOWED  0x32
#define  CAPI_PS_ESM_IPV6_ONLY_ALLOWED  0x33
#define  CAPI_PS_ESM_SIGNALE_ADDRESS_BEARERS_ONLY_ALLOWE  0x34
#define  CAPI_PS_ESM_ESM_INFO_NOT_RECEIVED  0x35
#define  CAPI_PS_ESM_PDN_CONNECT_NOT_EXIST  0x36
#define  CAPI_PS_ESM_MULT_PDN_FOR_GIVEN_APN_NOT_ALLOWED  0x37
#define  CAPI_PS_ESM_COLLISION_WITH_NET_INITIATED_REQUEST  0x38
#define  CAPI_PS_ESM_UNSUPPORTED_QCI_VALUE  0x3b
#define  CAPI_PS_ESM_BEARER_HANDLING_NOT_SUPPORTED  0x3c
#define  CAPI_PS_ESM_MAX_EPS_BEARER_NUM_REACHED  0x41
#define  CAPI_PS_ESM_REQ_APN_NOT_SUPPORTED_IN_THE_RAT_PLMN  0x42
#define  CAPI_PS_ESM_INVALID_PTI_VALUE  0x51
#define  CAPI_PS_ESM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_PS_ESM_INVALID_MANDATORY_INFORM  0x60
#define  CAPI_PS_ESM_MESSAGE_NON_EXIST_IMPLEMENTED  0x61
#define  CAPI_PS_ESM_MESSAGE_NON_COMPATIBLE_STATE  0x62
#define  CAPI_PS_ESM_IE_NOT_EXIST_OR_IMPLEMENTED  0x63
#define  CAPI_PS_ESM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_PS_ESM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x65
#define  CAPI_PS_ESM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_PS_ESM_APN_INCOMPATIBLE_WITH_ACTIVE_BEARER  0x70
#define  CAPI_PS_ESM_MULTI_ACCESS_TO_A_PDN_NOT_ALLOWED  0x71
#define  CAPI_CS_LC_STATE_ERROR  0x1
#define  CAPI_CS_LC_NO_CALL_ENTITY  0x2
#define  CAPI_CS_LC_WRONG_TI  0x3
#define  CAPI_CS_LC_NO_SMS_ENTITY  0x4
#define  CAPI_CS_LC_NO_SS_ENTITY  0x5
#define  CAPI_CS_LC_DTMF_BUF_OVERFLOW  0x6
#define  CAPI_CS_LC_CALL_DISCONNECTED  0x7
#define  CAPI_CS_LC_OPERATION_DENIED  0x8
#define  CAPI_CS_LC_NO_CELL_AVAIL  0x11
#define  CAPI_CS_LC_MSG_NOT_COMP_MM_STATE  0x12
#define  CAPI_CS_LC_ABORT_BY_USER  0x13
#define  CAPI_CS_LC_ASN1_DCD_ERROR  0x14
#define  CAPI_CS_LC_GSM_SYNTAX_ERR  0x15
#define  CAPI_CS_LC_SET_PLMN_MODE_REJ  0x16
#define  CAPI_CS_LC_SIM_AUTH_FAILURE  0x17
#define  CAPI_CS_LC_LOCAL_REJECTION  0x20
#define  CAPI_CS_LC_PLMN_NOT_ALLOWED  0x21
#define  CAPI_CS_LC_EMERG_CALL_NOT_POSSIBLE  0x22
#define  CAPI_CS_LC_AUTHENTICATION_REJECTED  0x23
#define  CAPI_CS_LC_NETWORK_REJECTION  0x24
#define  CAPI_CS_LC_LA_NOT_ALLOWED  0x25
#define  CAPI_CS_LC_LOCAL_TIMEOUT  0x26
#define  CAPI_CS_LC_SERV_CONGESTION  0x27
#define  CAPI_CS_LC_LOCAL_DATA_REJECTION  0x28
#define  CAPI_CS_LC_REFRESH_REJECT  0x29
#define  CAPI_CS_LC_NETWORK_FAILURE  0x30
#define  CAPI_CS_LC_MS_DETACHED_FOR_CS  0x31
#define  CAPI_CS_LC_WAITING_CALL_REJECTED  0x32
#define  CAPI_CS_LC_WAITING_CALL_ACCEPTED  0x33
#define  CAPI_CS_LC_NETWORK_TIMEOUT  0x34
#define  CAPI_LC_BACKGROUND_PLMN_SELECT_FAIL  0x35
#define  CAPI_CS_LC_CONFLICT_WITH_OTHERCARD  0x36
#define  CAPI_PS_LC_REL_LOW_LAYER_FAILURE  0x32
#define  CAPI_PS_LC_REL_PLMN_NOT_ALLO  0x33
#define  CAPI_PS_LC_REL_PERFORMING_REG  0x34
#define  CAPI_PS_LC_REL_AUTH_REJ  0x35
#define  CAPI_PS_LC_REL_IMSI_DET  0x36
#define  CAPI_PS_LC_REL_SERV_REJ  0x37
#define  CAPI_PS_LC_REL_NO_NET_RESP  0x38
#define  CAPI_PS_LC_REL_EST_NOT_ALLO  0x39
#define  CAPI_PS_LC_REL_LA_NOT_ALLO  0x3a
#define  CAPI_PS_LC_REL_NORMAL_RELEASE  0x3b
#define  CAPI_PS_LC_REL_NET_ERROR  0x3c
#define  CAPI_PS_LC_REL_TSM_LOCAL_ERROR  0x3d
#define  CAPI_PS_LC_DELETE_SM  0x3e
#define  CAPI_PS_RECEIVE_GMM_PDP_STATUS_IND  0x3f
#define  CAPI_PS_RECEIVE_EMM_EPS_STATUS_IND  0x40
#define  CAPI_PS_LC_REL_IMSI_PAGING  0x50
#define  CAPI_PS_LC_REL_NORMAL_PS_RELEASE  0x51
#define  CAPI_PS_LC_MS_DETACHED_FOR_PS  0x52
#define  CAPI_PS_LC_NET_DETACHED_FOR_PS  0x53
#define  CAPI_PS_LC_EPS_BEARER_NOT_EXIT  0x54
#define  CAPI_PS_LC_ABORT_BY_USER  0x55
#define  CAPI_PS_LC_REPORT_MMC_STATE  0x56
#define  CAPI_PS_LC_PDP_TRIG_PS_ATTACH  0x57
#define  CAPI_PS_LC_LOCAL_REL  0x58
#define  CAPI_PS_LC_SIM_AUTH_FAILURE  0x59
#define  CAPI_PS_LC_REL_ESM_LOCAL_ERROR  0x5a
#define  CAPI_PS_LC_T3492_EXPIRY_FOR_5_TIMES  0x5b
#define  CAPI_PS_LC_EPS_LOCAL_DEACTIVE  0x5c
#define  CAPI_PS_LC_TRANSMISSION_ERROR  0x5d
#define  CAPI_PS_LC_EPS_REQUEST_DETACH  0x5e
#define  CAPI_PS_LC_EPS_LOCAL_DETACH  0x5f
#define  CAPI_PS_LC_TBF_RELEASE_IND  0x71
#define  CAPI_PS_LC_DEACT_NON_EM_PDP_BEARER  0x72
#define  CAPI_PS_LC_EMCBS_COLLISION  0x73
#define  CAPI_PS_LC_CONFLICT_WITH_OTHERCARD  0x74
#define  CAPI_PS_LC_GSM_PLMN_SEARCHING  0x61
#define  DBA_RESERVED_PDCP_HEADER_LEN  0x2
#define  DBA_RESERVED_UL_EXTRA_LEN  0x8
#define  DBA_IP_HEAD_LEN  0x3c
#define  DBA_RESERVED_EXT_LEN  0x10
#define  DBA_RESERVED_UL_OFFSET  0x18
#define  DBA_RESERVED_DL_OFFSET  0x4c
#define  DBA_RESERVED_UL_LEN  0x56
#define  DBA_RESERVED_DL_LEN  0x4c
#define  CK_LEN  0x10
#define  IK_LEN  0x10
#define  MAX_NAS_MSG_LEN  0x640
#define  MAX_TMSI_LEN  0x4
#define  MAX_PTMSI_LEN  0x4
#define  MAX_LAC_LEN  0x2
#define  MAX_LAI_LEN  0x5
#define  MAX_RAI_LEN  0x6
#define  MAX_PLMN_NUM  0x10
#define  MAX_POSSIBLE_PLMNS_NUM  0x10
#define  MAX_STMSI_LEN  0x5
#define  MAX_MME_ID_LEN  0x3
#define  KEY_ENB_LEN  0x20
#define  KEY_ASME_LEN  0x20
#define  MAX_AS_RADIO_ACCESS_CAP_LEN  0x35
#define  MAX_NETWORK_CAPABILITY_LEN  0xa
#define  MAX_SUPPORTED_CODECS  0xa
#define  MAX_FORBIDDEN_LAI_NUM  0x32
#define  MAX_FORBIDDEN_TAI_NUM  0x5
#define  MAX_RAB_ID_NUM  0xff
#define  MAX_CELL_PLMN_NUM  0x6
#define  MAX_UE_ACC_CLASS_LEN  0x2
#define  TCC_PD  0x3
#define  TMM_PD  0x5
#define  GMM_PD  0x8
#define  ESM_PD  0x2
#define  EMM_PD  0x7
#define  GMS_PD  0x9
#define  TSM_PD  0xa
#define  TSS_PD  0xb
#define  TRR_PD  0x6
#define  TEST_PD  0xf
#define  MAX_HSDPA_BUFFER_LEN  0x20000
#define  MAX_HSDPA_BUFFER_LEN_1  0x1ffff
#define  INVALID_U8  0xff
#define  INVALID_U16  0xffff
#define  INVALID_U32  0xffffffff
#define  MAX_RB_NUM  0x20
#define  MAX_PDCP_DECOMP_HEADER  0x80
#define  MAX_NPDU_NUM  0x10
#define  MEM_VALID  0x1
#define  MEM_INVALID  0x0
#define  MEM_OK  0x0
#define  MEM_ERROR  0xe
#define  TC_CLOSE_UE_TEST_LOOP  0x40
#define  TC_CLOSE_UE_TEST_LOOP_COMPLETE  0x41
#define  TC_OPEN_UE_TEST_LOOP  0x42
#define  TC_OPEN_UE_TEST_LOOP_COMPLETE  0x43
#define  TC_ACTIVATE_RB_TEST_MODE  0x0
#define  TC_ACTIVATE_RB_TEST_MODE_COMPLETE  0x0
#define  TC_DEACTIVATE_RB_TEST_MODE  0x46
#define  TC_DEACTIVATE_RB_TEST_MODE_COMPLETE  0x47
#define  TC_TEST_MODE3_RLC_COUNTER_REQ  0x49
#define  TC_TEST_MODE3_RLC_COUNTER_RESPONCE  0x4a
#define  TC_NO_ERROR  0x0
#define  TC_NO_RADIO_BEAR  0x1
#define  PS_ONE_CARD  0x1
#define  PS_TWO_CARD  0x2
#define  STOP_PSDATA  0x1
#define  START_PSDATA  0x0
#define  MAX_BA_LIST_NUM_LTE  0x40
#define  MAX_POSSIBLE_CELL_NUM  0xa
#define  MAX_UL_IP_DATA_NUM  0x2e1
#define  CLASSMARK_NO_MODE  0x0
#define  CLASSMARK_TDL_MODE  0x1
#define  CLASSMARK_TDS_MODE  0x2
#define  CLASSMARK_GGE_MODE  0x4
#define  CLASSMARK_LTEFDD_MODE  0x8
#define  CLASSMARK_WCDMA_MODE  0x10
#define  MAX_RB_NUM_LTE  0x23
#define  MAX_FREQ_NUM  0x9
#define  MAX_CAPI_MSG_LEN  0xff
#define  MAX_MBMS_SERVICE_NUM  0x40
#define  MAX_BMC_N  0xff
#define  SIM_FILE_MAX_PLMN_SEL_LEN  0x51
#define  SIM_FILE_MAX_FPLMN_LEN  0xd
#define  CAPI_SS_COMPONENT_TYPE_INVOKE  0xa1
#define  CAPI_SS_COMPONENT_TYPE_RESULT  0xa2
#define  CAPI_SS_COMPONENT_TYPE_ERROR  0xa3
#define  CAPI_SS_COMPONENT_TYPE_REJECT  0xa4
#define  RELIABILITY_CLASS_SUBSCRIBED  0x0
#define  ACK_GTP_LLC_RLC_PROTECTED  0x1
#define  UNACK_GTP_ACK_LLC_RLC_PROTECTED  0x2
#define  UNACK_GTP_LLC_ACK_RLC_PROTECTED  0x3
#define  UNACK_GTP_LLC_RLC_PROTECTED  0x4
#define  UNACK_GTP_LLC_RLC_UNPROTECTED  0x5
#define  RELIABILITY_RESERVED  0x7
#define  DELAY_CLASS_SUBSCRIBED  0x0
#define  DELAY_CLASS1  0x1
#define  DELAY_CLASS2  0x2
#define  DELAY_CLASS3  0x3
#define  DELAY_CLASS4  0x4
#define  DELAY_CLASS_RESERVED  0x7
#define  PREC_SUBSCRIBED  0x0
#define  PREC_HIGH_PRIORITY  0x1
#define  PREC_NORMAL_PRIORITY  0x2
#define  PREC_LOW_PRIORITY  0x3
#define  PREC_RESERVED  0x7
#define  PEAK_THR_SUBSCRIBED  0x0
#define  PEAK_THR_1K  0x1
#define  PEAK_THR_2K  0x2
#define  PEAK_THR_4K  0x3
#define  PEAK_THR_8K  0x4
#define  PEAK_THR_16K  0x5
#define  PEAK_THR_32K  0x6
#define  PEAK_THR_64K  0x7
#define  PEAK_THR_128K  0x8
#define  PEAK_THR_256K  0x9
#define  PEAK_THR_RESERVED  0xf
#define  MEAN_THR_SUBSCRIBED  0x0
#define  MEAN_THR_100  0x1
#define  MEAN_THR_200  0x2
#define  MEAN_THR_500  0x3
#define  MEAN_THR_1K  0x4
#define  MEAN_THR_2K  0x5
#define  MEAN_THR_5K  0x6
#define  MEAN_THR_10K  0x7
#define  MEAN_THR_20K  0x8
#define  MEAN_THR_50K  0x9
#define  MEAN_THR_100K  0xa
#define  MEAN_THR_200K  0xb
#define  MEAN_THR_500K  0xc
#define  MEAN_THR_1M  0xd
#define  MEAN_THR_2M  0xe
#define  MEAN_THR_5M  0xf
#define  MEAN_THR_10M  0x10
#define  MEAN_THR_20M  0x11
#define  MEAN_THR_50M  0x12
#define  MEAN_THR_RESERVED  0x1e
#define  MEAN_THR_BEST_EFFORT  0x1f
#define  DELIVER_ERR_SDU_SUBSCRIBED  0x0
#define  DELIVER_ERR_SDU_NO_DETECT  0x1
#define  DELIVER_ERR_SDU  0x2
#define  DELIVER_ERR_SDU_NOT_DELIVERED  0x3
#define  DELIVER_ERR_SDU_RESERVED  0x7
#define  DELIVER_ORDER_SUBSCRIBED  0x0
#define  DELIVER_ORDER_WITH  0x1
#define  DELIVER_ORDER_WITHOUT  0x2
#define  DELIVER_ORDER_RESERVED  0x3
#define  TRAFFIC_CLASS_SUBSCRIBED  0x0
#define  TRAFFIC_CLASS_CONVERSATION  0x1
#define  TRAFFIC_CLASS_STREAM  0x2
#define  TRAFFIC_CLASS_INTERACTIVE  0x3
#define  TRAFFIC_CLASS_BACKGROUND  0x4
#define  TRAFFIC_CLASS_RESERVED  0x7
#define  MAX_SDU_SIZE_SUBSCIRBED  0x0
#define  MAX_SDU_SIZE_RESERVED  0xff
#define  UPLINK_MAX_BITRATE_SUBSCRIBED  0x0
#define  UPLINK_MAX_BITRATE_0KBPS  0xff
#define  DOWNLINK_MAX_BITRATE_SUBSCRIBED  0x0
#define  DOWNLINK_MAX_BITRATE_0KBPS  0xff
#define  RESIDUAL_BER_SUBSCRIBED  0x0
#define  RESIDUAL_BER_50M  0x1
#define  RESIDUAL_BER_10M  0x2
#define  RESIDUAL_BER_5M  0x3
#define  RESIDUAL_BER_4M  0x4
#define  RESIDUAL_BER_1M  0x5
#define  RESIDUAL_BER_100U  0x6
#define  RESIDUAL_BER_10U  0x7
#define  RESIDUAL_BER_1U  0x8
#define  RESIDUAL_BER_60N  0x9
#define  RESIDUAL_BER_RESERVED  0xf
#define  SDU_ERR_RATIO_SUBSCRIBED  0x0
#define  SDU_ERR_RATIO_10M  0x1
#define  SDU_ERR_RATIO_7M  0x2
#define  SDU_ERR_RATIO_1M  0x3
#define  SDU_ERR_RATIO_100U  0x4
#define  SDU_ERR_RATIO_10U  0x5
#define  SDU_ERR_RATIO_1U  0x6
#define  SDU_ERR_RATIO_100M  0x7
#define  SDU_ERR_RATIO_RESERVED  0xf
#define  TRAF_HANDLE_PRIORITY_SUBSCRIBED  0x0
#define  TRAF_HANDLE_PRIORITY_LEVEL1  0x1
#define  TRAF_HANDLE_PRIORITY_LEVEL2  0x2
#define  TRAF_HANDLE_PRIORITY_LEVEL3  0x3
#define  TRANSFER_DELAY_SUBSCRIBED  0x0
#define  TRANSFER_DELAY_RESERVED  0x3f
#define  DOWNLINK_GUARA_BITRATE_SUBSCRIBED  0x0
#define  DOWNLINK_GUARA_BITRATE_0KBPS  0xff
#define  UPLINK_GUARA_BITRATE_SUBSCRIBED  0x0
#define  UPLINK_GUARA_BITRATE_0KBPS  0xff
#define  SOURCE_STATISTICS_UNKNOWN  0x0
#define  SOURCE_STATISTICS_SPEECH  0x1
#define  SIGNAL_IND_NOT_OPTIMISED  0x0
#define  SIGNAL_IND_OPTIMISED  0x1
#define  EXTEND_FLAG_FALSE  0x0
#define  EXTEND_FLAG_TRUE  0x1
#define  EXTEND_BIT_RATE_NOT_EXIST  0x0
#define  ETSI_ALLOC_ADD  0x0
#define  IETF_ALLOC_ADD  0x1
#define  EMPTY_PDP_TYPE_TD  0xf
#define  IPV4_TYPE  0x21
#define  IPV6_TYPE  0x57
#define  IPV4V6_TYPE  0x8d
#define  PDN_IPV4_TYPE  0x1
#define  PDN_IPV6_TYPE  0x2
#define  PDN_IPV4V6_TYPE  0x3
#define  MAIN_FUNC_TRACE_CONTROL  0x0
#define  SUB_FUNC_TRACE_CONTROL  0x1
#define  VAR_TRACE_CONTROL  0x2
#define  ARRAY_TRACE_CONTROL  0x3
#define  CHAR_STRING_TRACE_CONTROL  0x4
#define  CAPI_SIM_STATE_NO_SIM  0x0
#define  CAPI_SIM_STATE_SIM_PRESENT  0x1
#define  CAPI_PLMN_MODE_AUTO  0x0
#define  CAPI_PLMN_MODE_MANUAL  0x1
#define  CAPI_REG_POWER_ON  0x0
#define  CAPI_REG_POWER_OFF  0x1
#define  CAPI_DEREG_GPRS_DETACH  0x1
#define  CAPI_DEREG_IMSI_DETACH  0x2
#define  CAPI_DEREG_COM_DETACH  0x3
#define  CAPI_NO_ATTACH_REQ  0x0
#define  CAPI_COMBINE_ATTACH_REQ  0x1
#define  CAPI_ONLY_GPRS_ATTACH_REQ  0x2
#define  CAPI_ONLY_IMSI_ATTACH_REQ  0x3
#define  CAPI_REG_STATE_NO_CARRIER  0x0
#define  CAPI_REG_STATE_EMERG_IDLE  0x1
#define  CAPI_REG_STATE_IDLE_UPD  0x2
#define  CAPI_REG_STATE_INVALID  0x3
#define  CAPI_REG_STATE_DETACH_IND  0x4
#define  CAPI_REG_STATE_IDLE_UPD_SMS_ONLY  0x5
#define  CAPI_REG_STATE_IDLE_UPD_CSFB_NOT_PREFER  0x6
#define  CAPI_REG_STATE_EMERG_UPD  0x7
#define  CAPI_REG_STATE_LOOP_TEST  0x8
#define  CAPI_NON_AIR_MODE  0x0
#define  CAPI_AIR_MODE  0x1
#define  CAPI_CALL_STATE_DELIVERED  0x4
#define  CAPI_CALL_STATE_PRESENT  0x6
#define  CAPI_CALL_STATE_RECEIVED  0x7
#define  CAPI_CALL_STATE_ACTIVE  0xa
#define  ASSERT_CONTINUE  0x0
#define  ASSERT_RESET  0x1
#define  INSTANCE_NUM0  0x0
#define  INSTANCE_NUM1  0x1
#define  INSTANCE_NUM2  0x2
#define  INSTANCE_NUM3  0x3
#define  INSTANCE_NUM4  0x4
#define  INSTANCE_NUM5  0x5
#define  INSTANCE_NUM6  0x6
#define  PS_STATIC_NV  0x1
#define  PS_DYNAMIC_NV  0x2
#define  PS_ENG_NV  0x3
#define  MAX_SETPLMN_LIST_NUM  0xa
#define  MAX_RECORD_PROCESS_NUM  0xa
#define  MAX_RECORD_STATE_NUM  0x14
#define  MASTER_FILE  0x3f00
#define  DIR_MF_TELECOM  0x7f10
#define  DIR_MF_GSM  0x7f20
#define  APPLICATION_DF  0x7fff
#define  DIR_GSM_DF_IRIDIUM  0x5f30
#define  DIR_GSM_DF_GLOBST  0x5f31
#define  DIR_GSM_DF_ICO  0x5f32
#define  DIR_GSM_DF_ACES  0x5f33
#define  DIR_GSM_DF_EIATIA  0x5f40
#define  DIR_GSM_DF_CTS  0x5f60
#define  DIR_GSM_DF_SOLSA  0x5f70
#define  DIR_GSM_DF_MEXE  0x5f3c
#define  DIR_TEL_DF_GRAPHICS  0x5f50
#define  DIR_TEL_DF_PHONE  0x5f3a
#define  DIR_TEL_DF_MULTIMEDIA  0x5f3b
#define  DIR_ADF_PHONEBOOK  0x5f3a
#define  DIR_ADF_GSMACCESS  0x5f3b
#define  DIR_ADF_MEXE  0x5f3c
#define  DIR_ADF_SOLSA  0x5f70
#define  DIR_ADF_WLAN  0x5f40
#define  DIR_RFU  0xffff
#define  EF_RFU  0xffff
#define  FILE_MF_DIR  0x2f00
#define  FILE_MF_PL  0x2f05
#define  FILE_MF_ARR  0x2f06
#define  FILE_MF_ICCID  0x2fe2
#define  FILE_GSM_LP  0x6f05
#define  FILE_GSM_IMSI  0x6f07
#define  FILE_GSM_KC  0x6f20
#define  FILE_GSM_DCK  0x6f2c
#define  FILE_GSM_PLMNSEL  0x6f30
#define  FILE_GSM_HPLMN  0x6f31
#define  FILE_GSM_CNL  0x6f32
#define  FILE_GSM_ACMMAX  0x6f37
#define  FILE_GSM_SST  0x6f38
#define  FILE_GSM_ACM  0x6f39
#define  FILE_GSM_GID1  0x6f3e
#define  FILE_GSM_GID2  0x6f3f
#define  FILE_GSM_PUCT  0x6f41
#define  FILE_GSM_CBMI  0x6f45
#define  FILE_GSM_SPN  0x6f46
#define  FILE_GSM_CBMID  0x6f48
#define  FILE_GSM_BCCH  0x6f74
#define  FILE_GSM_ACC  0x6f78
#define  FILE_GSM_FPLMN  0x6f7b
#define  FILE_GSM_LOCI  0x6f7e
#define  FILE_GSM_AD  0x6fad
#define  FILE_GSM_PHASE  0x6fae
#define  FILE_GSM_VGCS  0x6fb1
#define  FILE_GSM_VGCSS  0x6fb2
#define  FILE_GSM_VBS  0x6fb3
#define  FILE_GSM_VBSS  0x6fb4
#define  FILE_GSM_EMLPP  0x6fb5
#define  FILE_GSM_AAEM  0x6fb6
#define  FILE_GSM_ECC  0x6fb7
#define  FILE_GSM_CBMIR  0x6f50
#define  FILE_GSM_NIA  0x6f51
#define  FILE_GSM_KCGPRS  0x6f52
#define  FILE_GSM_LOCIGPRS  0x6f53
#define  FILE_GSM_SUME  0x6f54
#define  FILE_GSM_PLMNWACT  0x6f60
#define  FILE_GSM_OPLMNWACT  0x6f61
#define  FILE_GSM_HPLMNACT  0x6f62
#define  FILE_GSM_CPBCCH  0x6f63
#define  FILE_GSM_INVSCAN  0x6f64
#define  FILE_GSM_PNN  0x6fc5
#define  FILE_GSM_OPL  0x6fc6
#define  FILE_GSM_MBDN  0x6fc7
#define  FILE_GSM_EXT6  0x6fc8
#define  FILE_GSM_MBI  0x6fc9
#define  FILE_GSM_MWIS  0x6fca
#define  FILE_GSM_CFIS  0x6fcb
#define  FILE_GSM_EXT7  0x6fcc
#define  FILE_GSM_SPDI  0x6fcd
#define  FILE_GSM_MMSN  0x6fce
#define  FILE_GSM_EXT8  0x6fcf
#define  FILE_GSM_MMSICP  0x6fd0
#define  FILE_GSM_MMSUP  0x6fd1
#define  FILE_GSM_MMSUCP  0x6fd2
#define  FILE_GSM_SOLSA_SAL  0x4f30
#define  FILE_GSM_SOLSA_SLL  0x4f31
#define  FILE_GSM_MEXE_MEXEST  0x4f40
#define  FILE_GSM_MEXE_ORPK  0x4f41
#define  FILE_GSM_MEXE_ARPK  0x4f42
#define  FILE_GSM_MEXE_TPRPK  0x4f43
#define  FILE_ADF_WLAN_PSEUDO  0x4f41
#define  FILE_ADF_WLAN_UPLMNWL  0x4f42
#define  FILE_ADF_WLAN_OPLMNWL  0x4f43
#define  FILE_ADF_WLAN_USSIDL  0x4f44
#define  FILE_ADF_WLAN_OSSIDL  0x4f45
#define  FILE_ADF_WLAN_WRI  0x4f46
#define  FILE_ADF_ACSGL  0x4f81
#define  FILE_ADF_OCSGL  0x4f84
#define  FILE_ADF_LI  0x6f05
#define  FILE_ADF_ARR  0x6f06
#define  FILE_ADF_IMSI  0x6f07
#define  FILE_ADF_KEYS  0x6f08
#define  FILE_ADF_KEYSPS  0x6f09
#define  FILE_ADF_DCK  0x6f2c
#define  FILE_ADF_HPLMN  0x6f31
#define  FILE_ADF_CNL  0x6f32
#define  FILE_ADF_ACMMAX  0x6f37
#define  FILE_ADF_UST  0x6f38
#define  FILE_ADF_ACM  0x6f39
#define  FILE_ADF_FDN  0x6f3b
#define  FILE_ADF_SMS  0x6f3c
#define  FILE_ADF_GID1  0x6f3e
#define  FILE_ADF_GID2  0x6f3f
#define  FILE_ADF_MSISDN  0x6f40
#define  FILE_ADF_PUCT  0x6f41
#define  FILE_ADF_SMSP  0x6f42
#define  FILE_ADF_SMSS  0x6f43
#define  FILE_ADF_CBMI  0x6f45
#define  FILE_ADF_SPN  0x6f46
#define  FILE_ADF_SMSR  0x6f47
#define  FILE_ADF_CBMID  0x6f48
#define  FILE_ADF_SDN  0x6f49
#define  FILE_ADF_EXT2  0x6f4b
#define  FILE_ADF_EXT3  0x6f4c
#define  FILE_ADF_BDN  0x6f4d
#define  FILE_ADF_EXT5  0x6f4e
#define  FILE_ADF_CCP2  0x6f4f
#define  FILE_ADF_CBMIR  0x6f50
#define  FILE_ADF_EXT4  0x6f55
#define  FILE_ADF_EST  0x6f56
#define  FILE_ADF_ACL  0x6f57
#define  FILE_ADF_CMI  0x6f58
#define  FILE_ADF_STARTHFN  0x6f5b
#define  FILE_ADF_THRESHOLD  0x6f5c
#define  FILE_ADF_PLMNWACT  0x6f60
#define  FILE_ADF_OPLMNWACT  0x6f61
#define  FILE_ADF_HPLMNWACT  0x6f62
#define  FILE_ADF_PSLOCI  0x6f73
#define  FILE_ADF_ACC  0x6f78
#define  FILE_ADF_FPLMN  0x6f7b
#define  FILE_ADF_LOCI  0x6f7e
#define  FILE_ADF_ICI  0x6f80
#define  FILE_ADF_OCI  0x6f81
#define  FILE_ADF_ICT  0x6f82
#define  FILE_ADF_OCT  0x6f83
#define  FILE_ADF_AD  0x6fad
#define  FILE_ADF_EMLPP  0x6fb5
#define  FILE_ADF_AAEM  0x6fb6
#define  FILE_ADF_ECC  0x6fb7
#define  FILE_ADF_HIDDENKEY  0x6fc3
#define  FILE_ADF_NETPAR  0x6fc4
#define  FILE_ADF_PNN  0x6fc5
#define  FILE_ADF_OPL  0x6fc6
#define  FILE_ADF_MBDN  0x6fc7
#define  FILE_ADF_EXT6  0x6fc8
#define  FILE_ADF_MBI  0x6fc9
#define  FILE_ADF_MWIS  0x6fca
#define  FILE_ADF_CFIS  0x6fcb
#define  FILE_ADF_EXT7  0x6fcc
#define  FILE_ADF_SPDI  0x6fcd
#define  FILE_ADF_MMSN  0x6fce
#define  FILE_ADF_EXT8  0x6fcf
#define  FILE_ADF_MMSICP  0x6fd0
#define  FILE_ADF_MMSUP  0x6fd1
#define  FILE_ADF_MMSUCP  0x6fd2
#define  FILE_ADF_NIA  0x6fd3
#define  FILE_ADF_VGCS  0x6fb1
#define  FILE_ADF_VGCSS  0x6fb2
#define  FILE_ADF_VBS  0x6fb3
#define  FILE_ADF_VBSS  0x6fb4
#define  FILE_ADF_VGCSCA  0x6fd4
#define  FILE_ADF_VBSCA  0x6fd5
#define  FILE_ADF_GBABP  0x6fd6
#define  FILE_ADF_MSK  0x6fd7
#define  FILE_ADF_MUK  0x6fd8
#define  FILE_ADF_GBANL  0x6fda
#define  FILE_ADF_EHPLMN  0x6fd9
#define  FILE_ADF_EPSLOCI  0x6fe3
#define  FILE_ADF_EPSNSC  0x6fe4
#define  FILE_ADF_NASCONFIG  0x6fe8
#define  FILE_ADF_QOSP  0xd1
#define  FILE_ADF_SML  0xd2
#define  FILE_ADF_KC  0x4f20
#define  FILE_ADF_KCGPRS  0x4f52
#define  FILE_ADF_CPBCCH  0x4f63
#define  FILE_ADF_INVSCAN  0x4f64
#define  FILE_ADF_SOLSA_SAL  0x4f30
#define  FILE_ADF_SOLSA_SLL  0x4f31
#define  FILE_ADF_MEXEST  0x4f40
#define  FILE_ADF_ORPK  0x4f41
#define  FILE_ADF_ARPK  0x4f42
#define  FILE_ADF_TPRK  0x4f43
#define  FILE_ADF_TKCDF  0xffff
#define  FILE_ADF_PBR  0x4f30
#define  FILE_ADF_PSC  0x4f22
#define  FILE_ADF_CC  0x4f23
#define  FILE_ADF_PUID  0x4f24
#define  FILE_TEL_ARR  0x6f06
#define  FILE_TEL_ADN  0x6f3a
#define  FILE_TEL_FDN  0x6f3b
#define  FILE_TEL_SMS  0x6f3c
#define  FILE_TEL_CCP  0x6f3d
#define  FILE_TEL_ECCP  0x6f4f
#define  FILE_TEL_MSISDN  0x6f40
#define  FILE_TEL_SMSP  0x6f42
#define  FILE_TEL_SMSS  0x6f43
#define  FILE_TEL_LND  0x6f44
#define  FILE_TEL_SMSR  0x6f47
#define  FILE_TEL_SDN  0x6f49
#define  FILE_TEL_EXT1  0x6f4a
#define  FILE_TEL_EXT2  0x6f4b
#define  FILE_TEL_EXT3  0x6f4c
#define  FILE_TEL_BDN  0x6f4d
#define  FILE_TEL_EXT4  0x6f4e
#define  FILE_TEL_CMI  0x6f58
#define  FILE_TEL_SUME  0x6f54
#define  FILE_TEL_V4KEY  0x6fe0
#define  FILE_TEL_IMG  0x4f20
#define  FILE_TEL_MML  0x4f47
#define  FILE_TEL_MMDF  0x4f48
#define  FILE_TEL_PBR  0x4f30
#define  FILE_TEL_PSC  0x4f22
#define  FILE_TEL_CC  0x4f23
#define  FILE_TEL_PUID  0x4f24
#define  SIM_MAX_FILES_IN_LIST  0x32
#define  SIM_LEN_CHV  0x8
#define  SIM_MAX_LEN_SEARCH_PATTERN  0x10
#define  SIM_MAX_LEN_STATUS  0x64
#define  MAX_SIZE_VALUE_ADD_RECORD  0x3
#define  MAX_SIZE_INCREASED_RECORD  0x3
#define  MAX_SIZE_ENV_PARAM_STK  0xff
#define  MAX_SIZE_ACK_DATA_STK  0x100
#define  MAX_SIZE_TERM_PROF_STK  0x1d
#define  MAX_SIZE_TERM_RESP_STK  0xff
#define  MAX_SIZE_POACT_CMD_STK  0x100
#define  MAX_SIZE_SEEK_RECORD_NUM  0xfe
#define  SIM_MAX_SIZE_AUTH_REQ_DATA  0xff
#define  SIM_MAX_SIZE_AUTH_RSP_DATA  0x100
#define  SIM_MAX_SIZE_RECORD_DATA  0xff
#define  SIM_MAX_SIZE_BIN_DATA_READ  0x100
#define  SIM_MAX_SIZE_BIN_DATA_UPDATE  0xff
#define  SIM_MAX_SIZE_SEND_DATA_ATCMD  0xff
#define  SIM_MAX_SIZE_RECEIVE_DATA_ATCMD  0x100
#define  SIM_MAX_SIZE_DATA_RETRIEVE  0x100
#define  SIM_MAX_SIZE_DATA_SET  0xff
#define  SIM_MAX_PATH_DATA_LEN  0x10
#define  SAP_MAX_AID_LEN  0x10
#define  NO_MORE_INFO  0x0
#define  FILE_OF_BINARY  0x1
#define  FILE_OF_RECORD  0x2
#define  FILE_OF_BERTLV  0x3
#define  FILE_ERROR_AND_NO_MORE_INFO  0xe0
#define  FILE_OF_BINARY_ERROR  0xe1
#define  FILE_OF_RECORD_ERROR  0xe2
#define  FILE_OF_BERTLV_ERROR  0xe3
#define  SAP_EF_NO_INFO  0x0
#define  SAP_EF_TRANSPARENT  0x1
#define  SAP_EF_LINEAR  0x2
#define  SAP_EF_CYCLIC  0x6
#define  SAP_EF_BERTLV  0x39
#define  ADOPMODE_NORMAL  0x0
#define  ADOPMODE_APPROVAL  0x80
#define  ADOPMODE_NORM_SPECIFIC  0x1
#define  ADOPMODE_APPROVAL_SPECIFIC  0x81
#define  ADOPMODE_MAINTENANCE  0x2
#define  ADOPMODE_CELL_TEST  0x4
#define  ADOPMODE_UNKNOWN  0xff
#define  SIM_AUTH_CONTEXT_GSM  0x0
#define  SIM_AUTH_CONTEXT_3G  0x1
#define  SIM_AUTH_CONTEXT_VGCS_VBS  0x2
#define  SIM_AUTH_CONTEXT_GBA  0x4
#define  SIM_AUTH_CONTEXT_MBMS  0x5
#define  SIM_AUTH_CONTEXT_LOCAL_KEY  0x6
#define  SAP_MAX_DATA_ORIENTED_TAG_LEN  0x3
#define  EAS_MAX_LTE_CELL_NUM  0x60
#define  EAS_MAX_LTE_FREQ_NUM  0x9
#define  EAS_MAX_N1_PUCCH_NUM  0x4
#define  EAS_MAX_IDL_BLACKCELL_NUM  0x10
#define  EAS_MAX_DCH_BLACKCELL_NUM  0x20
#define  EAS_MAX_ICS_CELL_NUM  0x40
#define  EAS_MAX_SWEEP_POINT  0x2d
#define  EAS_MAX_IDL_UTRA_FREQ_NUM  0x10
#define  EAS_MAX_DCH_UTRA_FREQ_NUM  0xc
#define  EAS_MAX_UTRA_CELL_NUM  0x40
#define  EAS_MAX_GGE_CELL_NUM  0x20
#define  EAS_MAX_PCH_INFO_LENGTH  0x78
#define  EAS_MAX_SI_DATA_LENGTH  0x78
#define  EAS_MAX_PCH_INFO_LENGTH  0x100
#define  EAS_MAX_SI_DATA_LENGTH  0x200
#define  EAS_MAX_SI_NUM  0x20
#define  EAS_MAX_BSIC_CELL_NUM  0x8
#define  EAS_MAX_SETUP_RB_NUM  0x10
#define  EAS_MAX_MSG3_LENGTH  0xc
#define  EAS_MAX_CCCH_DATA_LEN  0x78
#define  EAS_MAX_CGI_DATA_LENTH  0x200
#define  EAS_MAX_FREQBAND  0xa
#define  EAS_MAX_FREQ_MEAS_NUM  0x12
#define  EAS_MAX_CELL_NUM_EACH_FREQ  0x20
#define  EAS_MAX_MBSFN_NUM  0x8
#define  EAS_MAX_SCELL_NUM  0x7
#define  LTE_TO_TDS_START  0x1
#define  LTE_TO_GGE_START  0x2
#define  TDS_TO_LTE_FAIL  0x3
#define  GGE_TO_LTE_FAIL  0x4
#define  LTE_TO_TDS_HO_START  0x5
#define  LTE_TO_GGE_HO_START  0x6
#define  LTE_TO_WCDMA_START  0x7
#define  WCDMA_TO_LTE_FAIL  0x8
#define  LTE_TO_WCDMA_HO_START  0x9
#define  PDSCH_CANNOT_DECODE  0x1
#define  LOSS_COVERAGE_LTE  0x2
#define  PCH_CANNOT_DECODE_LTE  0x3
#define  BCH_CANNOT_DECODE_LTE  0x4
#define  PLMN_FINE_PWR_FAILURE  0x5
#define  NO_GAP_FOR_SERVING_CELL  0x6
#define  NORMAL_ABORT  0x0
#define  MMC_ABORT  0x1
#define  SI_CHANGE_ABORT  0x2
#define  ACC_INITIAL_ABORT  0x3
#define  CELL_RES_ABORT  0x4
#define  POWER_OFF_LTE  0x5
#define  ABORT_IRAT_PLMN_SERACH  0x6
#define  IRAT_RES_ABORT  0x7
#define  GSM_ABORT_LTE_PLMN  0x8
#define  GSM_ABORT_LTE_MEAS  0x9
#define  TDS_ABORT_LTE_MEAS  0xa
#define  EL1_RELEASE_RF_SOURCE  0xb
#define  ERRC_NO_AVAILIABLE_CELL  0x0
#define  ERRC_POWER_OFF  0x1
#define  ERRC_PSM_DEACT  0x2
#define  ERRC_EDRX_DEACT  0x3
#define  T310_EXPIRE  0x0
#define  TAT_EXPIRE  0x1
#define  SR_TRANSCOUNTER_TO_MAX  0x2
#define  CELL_SELECT_LTE  0x0
#define  CELL_RESELECT_LTE  0x1
#define  ONLY_MEAS_LTE  0x2
#define  ONLY_RECEIVED_SIB1_LTE  0x3
#define  FINE_PWR_RESULT  0x1
#define  PWR_RESULT  0x2
#define  CELL_SEARCH_FOLLOW_FINE_PWR  0x3
#define  BA_MEAS_FOR_SEL_FREQ  0x4
#define  BA_MEAS_FOR_SEL_CELL  0x5
#define  MAX_SDU_SEGMENT_NUM  0x8
#define  MAX_WINDOW_SIZE_LTE  0x200
#define  MAX_WINDOW_SIZE_LTE_1  0x1ff
#define  MAX_CTRL_SDU_BUFF_NUM  0xa
#define  MAX_USER_PDU_BUFF_LEN_LTE  0x200
#define  MAX_AM_SN_LTE  0x400
#define  MAX_AM_SN_LTE_1  0x3ff
#define  ERLC_ESTABLISH  0x1
#define  ERLC_RECONFIG  0x2
#define  ERLC_REESTABLISH  0x4
#define  ERLC_RECONFIG_FULLCONFIG  0x8
#define  ERLC_SUSPEND  0x1
#define  ERLC_RESUME  0x2
#define  ERLC_TM_MODE  0x0
#define  ERLC_UM_MODE  0x1
#define  ERLC_AM_MODE  0x2
#define  MAX_FREQUENCY_NUM_LTE  0x9
#define  TMD_PDU_TYPE  0x0
#define  UMD_PDU5_TYPE  0x1
#define  UMD_PDU10_TYPE  0x2
#define  AMD_PDU_TYPE  0x3
#define  AMD_PDU_SEGMENT_TYPE  0x4
#define  STATUS_PDU_TYPE  0x5
#define  MAX_RB_SETUP_LTE  0x10
#define  MAX_BLACK_PCID_GROUP_NUM  0x3
#define  hiPDSCHidentities  0x1
#define  hiPUSCHidentities  0x1
#define  hiRM  0x100
#define  maxAC  0x10
#define  maxAdditionalMeas  0x4
#define  maxASC  0x8
#define  maxASCmap  0x7
#define  maxASCpersist  0x6
#define  maxCCTrCH  0x1
#define  maxCellMeas  0x20
#define  maxCellMeas_1  0x1f
#define  maxCNdomains  0x2
#define  maxCPCHsets  0x1
#define  maxDPCH_DLchan  0x8
#define  maxDPDCH_UL  0x6
#define  maxDRACclasses  0x1
#define  maxFACHPCH  0x8
#define  maxFreq  0x8
#define  maxFreqBandsFDD  0x1
#define  maxFreqBandsTDD  0x4
#define  maxFreqBandsGSM  0x1
#define  maxHProcesses  0x8
#define  maxHSSCCHs  0x4
#define  maxInterSysMessages  0x4
#define  maxLoCHperRLC  0x2
#define  maxMAC_d_PDUsizes  0x8
#define  maxMeasEvent  0x8
#define  maxMeasIntervals  0x3
#define  maxMeasParEvent  0x2
#define  maxNumCDMA2000Freqs  0x1
#define  maxNumGSMFreqRanges  0x1
#define  maxNumFDDFreqs  0x1
#define  maxNumTDDFreqs  0x8
#define  maxNoOfMeas  0x10
#define  maxOtherRAT  0x1
#define  maxOtherRAT_16  0x1
#define  maxPage1  0x8
#define  maxPCPCH_APsig  0x1
#define  maxPCPCH_APsubCh  0x1
#define  maxPCPCH_CDsig  0x1
#define  maxPCPCH_CDsubCh  0x1
#define  maxPCPCH_SF  0x1
#define  maxPCPCHs  0x1
#define  maxPDCPAlgoType  0x8
#define  maxPDSCH  0x1
#define  maxPDSCH_TFCIgroups  0x1
#define  maxPRACH  0x10
#define  maxPRACH_FPACH  0x8
#define  maxPredefConfig  0x10
#define  maxPUSCH  0x1
#define  maxRABsetup  0x10
#define  maxQueueIDs  0x8
#define  maxRAT  0x1
#define  maxRB  0xa
#define  maxRBallRABs  0x1b
#define  maxRBMuxOptions  0x4
#define  maxRBperRAB  0x3
#define  maxReportedGSMCells  0x8
#define  maxRL  0x1
#define  maxRL_1  0x1
#define  maxROHC_PacketSizes_r4  0x10
#define  maxROHC_Profile_r4  0x10
#define  maxSat  0x10
#define  maxSCCPCH  0x10
#define  maxSIB  0x20
#define  maxSIB_FACH  0x8
#define  maxSIBperMsg  0x10
#define  maxSRBsetup  0x8
#define  maxSystemCapability  0x1
#define  maxTDD128Carrier  0x6
#define  maxTF  0x18
#define  maxTF_CPCH  0x1
#define  MAX_SIB16_INSTANCE  0x10
#define  maxTFC  0x80
#define  maxTFC  0x20
#define  maxTFCsub  0x3c
#define  maxTFCI_2_Combs  0x1
#define  maxTGPS  0x1
#define  maxTrCH  0x6
#define  maxTrCHpreconf  0x6
#define  maxTS  0x6
#define  maxTS_1  0x5
#define  maxTS_LCR  0x6
#define  maxTS_LCR_1  0x5
#define  maxURA  0x8
#define  MAX_TDM_NUM  0x6
#define  maxMacDFlow  0x8
#define  maxBeta  0x8
#define  maxEagch  0x4
#define  maxEhich  0x4
#define  maxPrach  0x2
#define  maxE_DCHMACdFlow  0x8
#define  maxNumEagch  0x4
#define  maxNumEhich  0x4
#define  maxRlcPduSize  0x20
#define  maxBands  0x40
#define  maxCDMA_BandClass  0x20
#define  maxCellBlack  0x10
#define  maxCellInter  0x10
#define  maxCellIntra  0x10
#define  maxCellMeas  0x20
#define  maxCellReport  0x8
#define  maxDRB  0xb
#define  maxEARFCN  0xffff
#define  maxFreq  0x8
#define  maxGERAN_SI  0xa
#define  maxGNFG  0x10
#define  maxMBSFN_Allocations  0x8
#define  maxMCS_1  0x10
#define  maxMeasId  0x20
#define  maxObjectId  0x20
#define  maxPageRec  0x10
#define  maxPNOffset  0x1ff
#define  maxRAT_Capabilities  0x8
#define  maxReportConfigId  0x20
#define  maxSIB  0x20
#define  maxSIB_1  0x1f
#define  maxSI_Message  0x20
#define  maxUTRA_FDD_Carrier  0x10
#define  maxUTRA_TDD_Carrier  0x10
#define  maxMultiBands  0x8
#define  MAX_PLMN_LEN  0x3
#define  MAX_IMSI_LEN  0x9
#define  MAX_EQU_PLMNS_NUM  0x14
#define  MAX_PREV_USED_LTE_FREQ_LEN  0x14
#define  MAX_PREV_USED_LTE_BAND_NUM  0x5
#define  MAX_BAINFO_LEN  0x12c
#define  MAX_POWER_ON_FREQ_LEN  0xa
#define  MAX_EPS_QOS_LEN  0xd
#define  MAX_APN_LEN  0x64
#define  MAX_PCO_LEN  0xfb
#define  MAX_ADDRESSINFOR_LEN  0x14
#define  MAX_PACKETFILTERLIST_LEN  0xfe
#define  MAX_PLMN_NOT_ALLOWED_GPRS_LEN  0xd
#define  MAX_LAI_NOT_ALLOWED_LEN  0x1a
#define  MAX_ROAMING_NOT_ALLOWED_LEN  0x1a
#define  MAX_PLMN_NUM_MULTIMODE  0x10
#define  MAX_TAILIST_LEN  0x10
#define  MAX_SEC_KEY_LEN  0x10
#define  MAX_TAI_LEN  0x5
#define  MAX_NSAPI_NUM  0x10
#define  MAX_EBI_NUM  0x10



<sub T_MsgHeader>
    len          u16    u16    len          |input;|
    txName       u8     u8     txName       |input;|
    txIns        u8     u8     txIns        |input;|
    rxName       u8     u8     rxName       |input;|
    rxIns        u8     u8     rxIns        |input;|
    opType       u16    u16    opType       |input;|
    simFlag      u8     u8     simFlag      |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_MsgHeader>


<sub Prim_Hdr_Type>
    lPrimId   U32  U32  lPrimId   |input;|
    lPrimLen  U32  U32  lPrimLen  |input;|
</sub Prim_Hdr_Type>


<union T_MsgHdr_U>
    hdr           struct         Prim_Hdr_Type  
    signalHeader  struct         T_MsgHeader    
</union T_MsgHdr_U>


<sub T_HeaderInfo>
    subFrameNum    u16  u16  subFrameNum    |input;|
    workMode       u16  u16  workMode       |input;|
    stateFlag      u16  u16  stateFlag      |input;|
    primitiveFlag  u16  u16  primitiveFlag  |input;|
    spareLen       u16  u16  spareLen       |input;|
    length         u16  u16  length         |input;|
</sub T_HeaderInfo>


<sub T_CommonPdu>
    pduLen         u16  u16  pduLen         |input;|
    pdcpHeaderLen  u16  u16  pdcpHeaderLen  |input;|
    pduData        Ptr  u8   
</sub T_CommonPdu>


<sub T_RohcRestoreInfo>
    rohcHeaderLen  u16  u16  rohcHeaderLen  |input;|
    ipHeaderPoint  u32  u32  ipHeaderPoint  |input;|
    ipHeaderData   Ptr  u8   
</sub T_RohcRestoreInfo>


<sub T_ComPduLte>
    ebi                    u16                u16                ebi                    |input;|
    pdcpSn                 u16                u16                pdcpSn                 |input;|
    pduType                u16                u16                pduType                |input;|
    maxExpireCnt           u16                u16                maxExpireCnt           |input;|
    count                  u32                u32                count                  |input;|
    sduOffset              u16                u16                sduOffset              |input;|
    li                     u16                u16                li                     |input;|
    pduLen                 u16                u16                pduLen                 |input;|
    pdcpHeaderLen          u16                u16                pdcpHeaderLen          |input;|
    rohcRestoreInfo        struct             T_RohcRestoreInfo  
    pPduData               Ptr                u8                 
    pFreeQE                Ptr                void               
    pNext                  Ptr                T_ComPduLte_Tag    
</sub T_ComPduLte>


<sub T_ComSduLte>
    pdcpSn                 u16     u16     pdcpSn                 |input;|
    diacardFlag            u16     u16     diacardFlag            |input;|
    sduLen                 u16     u16     sduLen                 |input;|
    pdcpHeaderLen          u16     u16     pdcpHeaderLen          |input;|
    dhcpFlag               u32     u32     dhcpFlag               |input;|
    pSduData               Ptr     u8      
    pSduDataFree           Ptr     void    
    pNext                  Ptr     T_ComSduLte_Tag
</sub T_ComSduLte>


<sub T_CellDescLte>
    frequency  u16  u16  frequency  |input;|
    phyCellId  u16  u16  phyCellId  |input;|
</sub T_CellDescLte>


<sub T_EPDC_DATA>
    times     u8   u8   times     |input;|
    ul_bytes  u32  u32  ul_bytes  |input;|
    dl_bytes  u32  u32  dl_bytes  |input;|
    ul_bps    u32  u32  ul_bps    |input;|
    dl_bps    u32  u32  dl_bps    |input;|
</sub T_EPDC_DATA>


<sub T_UBIT_DMA_INFO>
    sourceAddr  u32  u32  sourceAddr  |input;|
    length      u32  u32  length      |input;|
</sub T_UBIT_DMA_INFO>


<sub T_CellMesResult_MultiMode>
    freq             u16  u16  freq             |input;|
    cellParameterId  u16  u16  cellParameterId  |input;|
    rscp             u8   u8   rscp             |input;|
    rsrq             u8   u8   rsrq             |input;|
    sfType           u8   u8   sfType           |input;|
    sfPattern        u8   u8   sfPattern        |input;|
</sub T_CellMesResult_MultiMode>


<sub T_CellInfo_MultiMode>
    servCell                                        struct                     T_CellMesResult_MultiMode  
    lteNum                                          u16                        u16                        lteNum                                          |input;|
    lteNeighbourCell[STRONGEST_NCELL_NUM_ENG_MODE]  array                      T_CellMesResult_MultiMode  lteNeighbourCell                                |multiedit;|
</sub T_CellInfo_MultiMode>


<sub T_NcellInfoForTrace>
    tdNum                                  u8     u8     tdNum                                  |input;|
    gsmNum                                 u8     u8     gsmNum                                 |input;|
    lteNum                                 u8     u8     lteNum                                 |input;|
    reserved                               u8     u8     reserved                               |input;|
    frequency[TRACE_NCELL_NUM_THREE_MODE]  array  u16    frequency                              |multiedit;|
    cellId[TRACE_NCELL_NUM_THREE_MODE]     array  u16    cellId                                 |multiedit;|
    rscpLevel[TRACE_NCELL_NUM_THREE_MODE]  array  u8     rscpLevel                              |multiedit;|
    rssiLevel[TRACE_NCELL_NUM_THREE_MODE]  array  u8     rssiLevel                              |multiedit;|
    s[TRACE_NCELL_NUM_THREE_MODE]          array  s8     s                                      |multiedit;|
    r[TRACE_NCELL_NUM_THREE_MODE]          array  s16    r                                      |multiedit;|
</sub T_NcellInfoForTrace>


<sub T_scellInfoForTrace>
    rrcMode       u8     u8     rrcMode       |input;|
    rrcSubState   u8     u8     rrcSubState   |input;|
    freq          u16    u16    freq          |input;|
    sync          u8     u8     sync          |input;|
    midamble      u8     u8     midamble      |input;|
    icsResult     u8     u8     icsResult     |input;|
    fpachResult   u8     u8     fpachResult   |input;|
    cellId        u32    u32    cellId        |input;|
    workFreq      u16    u16    workFreq      |input;|
    fpachFreq     u16    u16    fpachFreq     |input;|
    measEvent     u32    u32    measEvent     |input;|
    dlTsNum       u8     u8     dlTsNum       |input;|
    reserved      u8     u8     reserved      |input;|
    rai[6]        array  u8     rai           |multiedit;|
    iscplevel[6]  array  u8     iscplevel     |multiedit;|
    sir[6]        array  u8     sir           |multiedit;|
</sub T_scellInfoForTrace>


<sub T_SpecialProcessForTest>
    processFlag       u16  u16  processFlag       |input;|
    targetCellFreq    u16  u16  targetCellFreq    |input;|
    targetCellParaId  u16  u16  targetCellParaId  |input;|
</sub T_SpecialProcessForTest>


<sub T_CellMainInfo>
    type    u16  u16  type    |input;|
    mcc     u16  u16  mcc     |input;|
    mnc     u16  u16  mnc     |input;|
    lac     u16  u16  lac     |input;|
    cellId  u32  u32  cellId  |input;|
    arfcn   u16  u16  arfcn   |input;|
    cpi     u8   u8   cpi     |input;|
    rxlev   u8   u8   rxlev   |input;|
</sub T_CellMainInfo>


<sub T_NcellInfo>
    ncellNum                                u32             u32             ncellNum                                |input;|
    ncellList[MAX_NCELL_NUM_FOR_MAIN_INFO]  array           T_CellMainInfo  ncellList                               |multiedit;|
</sub T_NcellInfo>


<sub T_PagingInfo>
    pagingPeriod     u16  u16  pagingPeriod     |input;|
    pagingFrame      u16  u16  pagingFrame      |input;|
    pagingOccation   u16  u16  pagingOccation   |input;|
    pagingNbIndex    u16  u16  pagingNbIndex    |input;|
    maxMpdcchRepNum  u16  u16  maxMpdcchRepNum  |input;|
    reserved         u16  u16  reserved         |input;|
</sub T_PagingInfo>


<sub T_L1cIdleFreqInfo>
    frequecy              u16  u16  frequecy              |input;|
    measBandWith          u8   u8   measBandWith          |input;|
    presenceAntennaPort1  u8   u8   presenceAntennaPort1  |input;|
    neighCellConfig       u8   u8   neighCellConfig       |input;|
    cellNum               u8   u8   cellNum               |input;|
    measUpdateType        u8   u8   measUpdateType        |input;|
    reserved              u8   u8   reserved              |input;|
</sub T_L1cIdleFreqInfo>


<sub T_FL1C_PAGING_SATRT_REQ>
    servCellInfo         struct                   T_CellServLte            
    firstPoSfn           u16                      u16                      firstPoSfn           |input;|
    pagingHfn            u16                      u16                      pagingHfn            |input;|
    reserved             u16                      u16                      reserved             |input;|
    siHoppingConfigComm  u8                       u8                       siHoppingConfigComm  |input;|
    startSymbolLC        u8                       u8                       startSymbolLC        |input;|
    pagingInfo           struct                   T_PagingInfo             
    pdschCommInfo        struct                   T_Pdsch_CommInfo         
    validSubFrameConfig  struct                   T_BLValidSubfBitMap      
    freqHoppingParam     struct                   T_FreqHoppingParameters  
</sub T_FL1C_PAGING_SATRT_REQ>


<0x12d8 OP_FL1C_PAGING_SATRT_REQ>
    signalHeader           struct                   T_MsgHeader              
    FL1C_PAGING_SATRT_REQ  struct                   T_FL1C_PAGING_SATRT_REQ  
</0x12d8 OP_FL1C_PAGING_SATRT_REQ>


<0x12da OP_FL1C_DEACTIVE_ALL_BE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x12da OP_FL1C_DEACTIVE_ALL_BE_REQ>


<sub T_FL1C_IDL_MEAS_REQ>
    measId                 u16                u16                measId                 |input;|
    lteFreqNum             u16                u16                lteFreqNum             |input;|
    pagingCanceledHfn      u16                u16                pagingCanceledHfn      |input;|
    pagingCanceledSfn      u16                u16                pagingCanceledSfn      |input;|
    lteMeasFreqInfo[9]     array              T_L1cIdleFreqInfo  lteMeasFreqInfo        |multiedit;|
    lteMeasCellIdList[96]  array              u16                lteMeasCellIdList      |multiedit;|
    lteSyncOffset[96]      array              u32                lteSyncOffset          |multiedit;|
    cellCpType[96]         array              u16                cellCpType             |multiedit;|
</sub T_FL1C_IDL_MEAS_REQ>


<0x12d9 OP_FL1C_IDL_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    FL1C_IDL_MEAS_REQ  struct               T_FL1C_IDL_MEAS_REQ  
</0x12d9 OP_FL1C_IDL_MEAS_REQ>


<sub T_PL1C_IDL_MEAS_IND>
    measId                      u16               u16               measId                      |input;|
    lteFreqNum                  u16               u16               lteFreqNum                  |input;|
    serverRsrp                  u16               u16               serverRsrp                  |input;|
    serverRsrq                  u16               u16               serverRsrq                  |input;|
    lteMeasResult[9]            array             T_MeasFreqResult  lteMeasResult               |multiedit;|
    rsrp[96]                    array             u16               rsrp                        |multiedit;|
    rsrq[96]                    array             u16               rsrq                        |multiedit;|
    lteSyncOffset[96]           array             u32               lteSyncOffset               |multiedit;|
    cellCpType[96]              array             u16               cellCpType                  |multiedit;|
    lteBlindMeasCellIdList[28]  array             u16               lteBlindMeasCellIdList      |multiedit;|
    blindMeasRsrp[28]           array             u16               blindMeasRsrp               |multiedit;|
    blindMeasRsrq[28]           array             u16               blindMeasRsrq               |multiedit;|
    lteBlindSyncOffset[28]      array             u32               lteBlindSyncOffset          |multiedit;|
    lteBlindCpType[28]          array             u16               lteBlindCpType              |multiedit;|
</sub T_PL1C_IDL_MEAS_IND>


<0x12d0 OP_PL1C_IDL_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    PL1C_IDL_MEAS_IND  struct               T_PL1C_IDL_MEAS_IND  
</0x12d0 OP_PL1C_IDL_MEAS_IND>


<sub T_PL1C_RL_SYNC_IND>
    status    u16  u16  status    |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_PL1C_RL_SYNC_IND>


<0x12d6 OP_PL1C_RL_SYNC_IND>
    signalHeader      struct              T_MsgHeader         
    PL1C_RL_SYNC_IND  struct              T_PL1C_RL_SYNC_IND  
</0x12d6 OP_PL1C_RL_SYNC_IND>


<sub T_PL1C_SYNC_STATUS_IND>
    successFlag  u8     u8     successFlag  |input;|
    mibPresent   u8     u8     mibPresent   |input;|
    sfn_low2bit  u8     u8     sfn_low2bit  |input;|
    reserved     u8     u8     reserved     |input;|
    mibData[4]   array  u8     mibData      |multiedit;|
</sub T_PL1C_SYNC_STATUS_IND>


<0x12d3 OP_PL1C_SYNC_STATUS_IND>
    signalHeader          struct                  T_MsgHeader             
    PL1C_SYNC_STATUS_IND  struct                  T_PL1C_SYNC_STATUS_IND  
</0x12d3 OP_PL1C_SYNC_STATUS_IND>


<0x12d4 OP_PL1C_PAGING_END_IND>
    signalHeader  struct       T_MsgHeader  
</0x12d4 OP_PL1C_PAGING_END_IND>


<0x12d5 OP_PL1C_DEACTIVE_ALL_BE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x12d5 OP_PL1C_DEACTIVE_ALL_BE_CNF>


<0x12ca OP_PL1C_PWR_SWEEP_CNF>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_PL1C_PWR_SWEEP_CNF  
</0x12ca OP_PL1C_PWR_SWEEP_CNF>


<0x12cc OP_PL1C_CELL_SEARCH_CNF>
    signalHeader  struct                  T_MsgHeader             
    sigInfo       struct                  T_PL1C_CELL_SEARCH_CNF  
</0x12cc OP_PL1C_CELL_SEARCH_CNF>


<0x12c6 OP_PL1C_FREQ_MEAS_CNF>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_PL1C_FREQ_MEAS_CNF  
</0x12c6 OP_PL1C_FREQ_MEAS_CNF>


<0x12cd OP_PL1C_CELL_SYNC_CNF>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_PL1C_CELL_SYNC_CNF  
</0x12cd OP_PL1C_CELL_SYNC_CNF>


<0x12c7 OP_DL1C_MIB_DATA_IND>
    signalHeader  struct               T_MsgHeader          
    sigInfo       struct               T_DL1C_MIB_DATA_IND  
</0x12c7 OP_DL1C_MIB_DATA_IND>


<0x12c8 OP_DL1C_SIB1_DATA_IND>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_DL1C_SIB1_DATA_IND  
</0x12c8 OP_DL1C_SIB1_DATA_IND>


<0x12c9 OP_DL1C_SI_DATA_IND>
    signalHeader  struct              T_MsgHeader         
    sigInfo       struct              T_DL1C_SI_DATA_IND  
</0x12c9 OP_DL1C_SI_DATA_IND>


<0x12ce OP_DL1C_PAGING_DATA_IND>
    signalHeader  struct                  T_MsgHeader             
    sigInfo       struct                  T_DL1C_PAGING_DATA_IND  
</0x12ce OP_DL1C_PAGING_DATA_IND>


<0x12d2 OP_PL1C_DCH_MEAS_IND>
    signalHeader  struct               T_MsgHeader          
    sigInfo       struct               T_PL1C_DCH_MEAS_IND  
</0x12d2 OP_PL1C_DCH_MEAS_IND>


<0x12d7 OP_PL1C_PLMN_SEARCH_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x12d7 OP_PL1C_PLMN_SEARCH_STOP_CNF>


<0x12d1 OP_PL1C_CGI_MEAS_IND>
    signalHeader  struct               T_MsgHeader          
    sigInfo       struct               T_PL1C_CGI_MEAS_IND  
</0x12d1 OP_PL1C_CGI_MEAS_IND>


<0x12cf OP_DL1C_DIRECT_IND>
    signalHeader  struct             T_MsgHeader        
    sigInfo       struct             T_DL1C_DIRECT_IND  
</0x12cf OP_DL1C_DIRECT_IND>


<0x12c0 OP_DL1C_RAR_RESULT_IND>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_DL1C_RAR_RESULT_IND  
</0x12c0 OP_DL1C_RAR_RESULT_IND>


<0x12c1 OP_DL1C_PDCCH_ORDER_IND>
    signalHeader  struct                  T_MsgHeader             
    sigInfo       struct                  T_DL1C_PDCCH_ORDER_IND  
</0x12c1 OP_DL1C_PDCCH_ORDER_IND>


<0x12c2 OP_DL1C_DL_HARQ_INFO_IND>
    signalHeader  struct                   T_MsgHeader              
    sigInfo       struct                   T_DL1C_DL_HARQ_INFO_IND  
</0x12c2 OP_DL1C_DL_HARQ_INFO_IND>


<0x12c3 OP_DL1C_UL_HARQ_INFO_IND>
    signalHeader  struct                   T_MsgHeader              
    sigInfo       struct                   T_DL1C_UL_HARQ_INFO_IND  
</0x12c3 OP_DL1C_UL_HARQ_INFO_IND>


<0x12c4 OP_DL1C_PDSCH_DLSCH_READ_IND>
    signalHeader  struct                       T_MsgHeader                  
    sigInfo       struct                       T_DL1C_PDSCH_DLSCH_READ_IND  
</0x12c4 OP_DL1C_PDSCH_DLSCH_READ_IND>


<0x12c5 OP_PL1C_SR_MAXNUM_IND>
    signalHeader  struct       T_MsgHeader  
</0x12c5 OP_PL1C_SR_MAXNUM_IND>


<sub T_RbPduInfo>
    rbIdentity   u8     u8     rbIdentity   |input;|
    pduNum       u8     u8     pduNum       |input;|
    reserved1    u8     u8     reserved1    |input;|
    snNum        u8     u8     snNum        |input;|
    rbPduSn[64]  array  u16    rbPduSn      |multiedit;|
</sub T_RbPduInfo>


<sub T_PDSCH_MEM>
    remain_len   u16  u16  remain_len   |input;|
    pdsch_data   Ptr  u8   
</sub T_PDSCH_MEM>


<sub T_ERLC_SDU_SEG>
    fi                       u8           u8           fi                       |input;|
    len                      u16          u16          len                      |input;|
    data                     Ptr          u8           
    pdsch_mem                Ptr          T_PDSCH_MEM  
    next                     Ptr          T_ERLC_SDU_SEG_tag
</sub T_ERLC_SDU_SEG>


<sub T_ERLC_DL_SDU>
    count                   u32             u32             count                   |input;|
    seg                     Ptr             T_ERLC_SDU_SEG  
    next                    Ptr             T_ERLC_DL_SDU_tag
</sub T_ERLC_DL_SDU>


<sub T_RabAndRbInfo>
    rabId  u8  u8  rabId  |input;|
    rbId   u8  u8  rbId   |input;|
</sub T_RabAndRbInfo>


<sub T_CsServiceClass>
    ti            u8  u8  ti            |input;|
    rabId         u8  u8  rabId         |input;|
    serviceClass  u8  u8  serviceClass  |input;|
</sub T_CsServiceClass>


<sub T_BackCellInfo>
    cellList[64]      array  u16    cellList          |multiedit;|
    rsrp[64]          array  u8     rsrp              |multiedit;|
    rsrq[64]          array  u8     rsrq              |multiedit;|
    CellTsOffset[64]  array  u32    CellTsOffset      |multiedit;|
</sub T_BackCellInfo>


<sub T_BackFreqInfo>
    frequency      u16  u16  frequency      |input;|
    listedCellNum  u8   u8   listedCellNum  |input;|
    blindCellNum   u8   u8   blindCellNum   |input;|
</sub T_BackFreqInfo>


<sub T_L1C_BackupMeasCtrInfo>
    serveCellFreq       u16             u16             serveCellFreq       |input;|
    serveCellId         u16             u16             serveCellId         |input;|
    hoppScheTimes       u8              u8              hoppScheTimes       |input;|
    padding             u8              u8              padding             |input;|
    siValidTimer        u32             u32             siValidTimer        |input;|
    measScheCounter[6]  array           u8              measScheCounter     |multiedit;|
    measTriggerF[6]     array           u8              measTriggerF        |multiedit;|
    freqInfoList[9]     array           T_BackFreqInfo  freqInfoList        |multiedit;|
    cellInfoList        struct          T_BackCellInfo  
</sub T_L1C_BackupMeasCtrInfo>


<sub T_Qos>
    Length   u8     u8     Length   |input;|
    QoS[16]  array  u8     QoS      |multiedit;|
</sub T_Qos>


<sub T_ApnAmbr>
    Length       u8     u8     Length       |input;|
    APN_AMBR[6]  array  u8     APN_AMBR     |multiedit;|
</sub T_ApnAmbr>


<sub T_PdpAddress>
    pdpTypeOrg                          u8     u8     pdpTypeOrg                          |input;|
    pdpType                             u8     u8     pdpType                             |input;|
    addressLen                          u8     u8     addressLen                          |input;|
    addressInfor[MAX_ADDRESSINFOR_LEN]  array  u8     addressInfor                        |multiedit;|
</sub T_PdpAddress>


<sub T_Tft>
    Length    u8     u8     Length    |input;|
    TFT[255]  array  u8     TFT       |multiedit;|
</sub T_Tft>


<sub T_CellDesc>
    frequency  u16  u16  frequency  |input;|
</sub T_CellDesc>


<sub T_csDataDesc>
    csBlockNum   u8   u8   csBlockNum   |input;|
    csBlockSize  u16  u16  csBlockSize  |input;|
</sub T_csDataDesc>


<sub T_Plmn>
    mcc[2]  array  u8     mcc     |multiedit;|
    mnc     u8     u8     mnc     |input;|
</sub T_Plmn>


<sub T_fsmCurrentStatus>
    fsmCurrentStatus[MAX_RECORD_PROCESS_NUM]  array  u16    fsmCurrentStatus                          |multiedit;|
</sub T_fsmCurrentStatus>


<sub T_CurrentCellInfo>
    freq              u16  u16  freq              |input;|
    bsic              u8   u8   bsic              |input;|
    rscp              u8   u8   rscp              |input;|
    txRxSlot          u8   u8   txRxSlot          |input;|
    txPower           u8   u8   txPower           |input;|
    protocolStatus    u8   u8   protocolStatus    |input;|
    rrcStatus         u8   u8   rrcStatus         |input;|
    userNumInCurSlot  u16  u16  userNumInCurSlot  |input;|
</sub T_CurrentCellInfo>


<sub T_ServeCellLte>
    freq       u16  u16  freq       |input;|
    cellPhyId  u16  u16  cellPhyId  |input;|
    rsrp       u8   u8   rsrp       |input;|
    rsrq       u8   u8   rsrq       |input;|
    sfType     u8   u8   sfType     |input;|
    sfPattern  u8   u8   sfPattern  |input;|
</sub T_ServeCellLte>


<sub T_CFW_TC_PSDATA_IND>
    Cid      u8     u8     Cid      |input;|
    DataLen  u16    u16    DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub T_CFW_TC_PSDATA_IND>


<0x1124 OP_CFW_TC_PSDATA_IND>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_CFW_TC_PSDATA_IND  
</0x1124 OP_CFW_TC_PSDATA_IND>


<sub T_API_TC_CTRL_IND>
    bTestLoopModeH  u8  u8  bTestLoopModeH  |input;|
</sub T_API_TC_CTRL_IND>


<0x1125 OP_API_TC_CTRL_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_API_TC_CTRL_IND  
</0x1125 OP_API_TC_CTRL_IND>


<sub T_API_TC_DATA_REQ>
    DataLen  u16    u16    DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub T_API_TC_DATA_REQ>


<0x1126 OP_API_TC_DATA_REQ>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_API_TC_DATA_REQ  
</0x1126 OP_API_TC_DATA_REQ>


<0x1127 OP_API_TC_DATA_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1127 OP_API_TC_DATA_CNF>


<sub T_API_TC_DATA_IND>
    DataLen  u16    u16    DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub T_API_TC_DATA_IND>


<0x1128 OP_API_TC_DATA_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_API_TC_DATA_IND  
</0x1128 OP_API_TC_DATA_IND>


<sub T_RABM_TC_CTRL_IND>
    bTestLoopMode  u8  u8  bTestLoopMode  |input;|
</sub T_RABM_TC_CTRL_IND>


<0x1129 OP_RABM_TC_CTRL_IND>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_CTRL_IND  
</0x1129 OP_RABM_TC_CTRL_IND>


<sub T_RABM_TC_DATA_REQ>
    ebi        u8           u8           ebi        |input;|
    pPduData   Ptr          T_ComPduLte  
</sub T_RABM_TC_DATA_REQ>


<0x112a OP_RABM_TC_DATA_REQ>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_DATA_REQ  
</0x112a OP_RABM_TC_DATA_REQ>


<sub T_RABM_TC_DATA_IND>
    ebi        u8           u8           ebi        |input;|
    drbId      u8           u8           drbId      |input;|
    pSduData   Ptr          T_ComSduLte  
</sub T_RABM_TC_DATA_IND>


<0x112b OP_RABM_TC_DATA_IND>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_DATA_IND  
</0x112b OP_RABM_TC_DATA_IND>


<sub T_ESM_TC_PDN_ACT_IND>
    PdnType      u8     u8     PdnType      |input;|
    Ipv4Addr[4]  array  u8     Ipv4Addr     |multiedit;|
</sub T_ESM_TC_PDN_ACT_IND>


<0x112c OP_ESM_TC_PDN_ACT_IND>
    signalHeader  struct                T_MsgHeader           
    body          struct                T_ESM_TC_PDN_ACT_IND  
</0x112c OP_ESM_TC_PDN_ACT_IND>


<sub T_EMM_TC_STAT_IND>
    RrcReleased  u8  u8  RrcReleased  |input;|
    PsDetached   u8  u8  PsDetached   |input;|
</sub T_EMM_TC_STAT_IND>


<0x112d OP_EMM_TC_STAT_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_STAT_IND  
</0x112d OP_EMM_TC_STAT_IND>


<sub T_EMM_TC_DATA_REQ>
    DataLen                u16    u16    DataLen                |input;|
    Dummy                  u16    u16    Dummy                  |input;|
    Data[MAX_NAS_MSG_LEN]  array  u8     Data                   |multiedit;|
</sub T_EMM_TC_DATA_REQ>


<0x112e OP_EMM_TC_DATA_REQ>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_DATA_REQ  
</0x112e OP_EMM_TC_DATA_REQ>


<sub T_EMM_TC_DATA_IND>
    DataLen                u16    u16    DataLen                |input;|
    Dummy                  u16    u16    Dummy                  |input;|
    Data[MAX_NAS_MSG_LEN]  array  u8     Data                   |multiedit;|
</sub T_EMM_TC_DATA_IND>


<0x112f OP_EMM_TC_DATA_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_DATA_IND  
</0x112f OP_EMM_TC_DATA_IND>


<sub T_CPDCP_TC_DATA_REQ>
    rbId       u8           u8           rbId       |input;|
    pPduData   Ptr          T_ComPduLte  
</sub T_CPDCP_TC_DATA_REQ>


<0x1130 OP_CPDCP_TC_DATA_REQ>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_CPDCP_TC_DATA_REQ  
</0x1130 OP_CPDCP_TC_DATA_REQ>


<sub T_EPCM_LOOP_TEST_IND>
    command          u8     u8     command          |input;|
    ipPduDelayTimer  u8     u8     ipPduDelayTimer  |input;|
    reserved[2]      array  u8     reserved         |multiedit;|
</sub T_EPCM_LOOP_TEST_IND>


<sub T_EPCM_LOOP_TEST_RSP>
    command  u8  u8  command  |input;|
    cause    u8  u8  cause    |input;|
</sub T_EPCM_LOOP_TEST_RSP>


<0x1122 OP_EPCM_LOOP_TEST_IND>
    signalHeader        struct                T_MsgHeader           
    EPCM_LOOP_TEST_IND  struct                T_EPCM_LOOP_TEST_IND  
</0x1122 OP_EPCM_LOOP_TEST_IND>


<0x1123 OP_EPCM_LOOP_TEST_RSP>
    signalHeader        struct                T_MsgHeader           
    EPCM_LOOP_TEST_RSP  struct                T_EPCM_LOOP_TEST_RSP  
</0x1123 OP_EPCM_LOOP_TEST_RSP>


<sub T_RABM_EPCM_DATA_IND>
    ebi     u8           u8           ebi     |input;|
    pdata   Ptr          T_ComSduLte  
</sub T_RABM_EPCM_DATA_IND>


<0x1121 OP_RABM_EPCM_DATA_IND>
    signalHeader        struct                T_MsgHeader           
    RABM_EPCM_DATA_IND  struct                T_RABM_EPCM_DATA_IND  
</0x1121 OP_RABM_EPCM_DATA_IND>


<sub T_RABM_EPCM_DATA_REQ>
    ebi           u8           u8           ebi           |input;|
    dataPointer   Ptr          T_ComPduLte  
</sub T_RABM_EPCM_DATA_REQ>


<0x1120 OP_RABM_EPCM_DATA_REQ>
    signalHeader        struct                T_MsgHeader           
    RABM_EPCM_DATA_REQ  struct                T_RABM_EPCM_DATA_REQ  
</0x1120 OP_RABM_EPCM_DATA_REQ>


<sub T_MobiErr>
    indexId      u16  u16  indexId      |input;|
    causeSelect  u8   u8   causeSelect  |input;|
    sw1          u8   u8   sw1          |input;|
    sw2          u8   u8   sw2          |input;|
</sub T_MobiErr>


<0xffff OP_MobiErr>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0xffff OP_MobiErr>


<sub T_MOBI_SAP_AUTHENTICATE_REQ>
    authContextId                         u8     u8     authContextId                         |input;|
    length                                u8     u8     length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_REQ_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_REQ>


<0x0300 OP_MOBI_SAP_AUTHENTICATE_REQ>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_AUTHENTICATE_REQ  struct                       T_MOBI_SAP_AUTHENTICATE_REQ  
</0x0300 OP_MOBI_SAP_AUTHENTICATE_REQ>


<sub T_MOBI_SAP_AUTHENTICATE_CNF>
    length                                u16    u16    length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_RSP_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_CNF>


<0x0301 OP_MOBI_SAP_AUTHENTICATE_CNF>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_AUTHENTICATE_CNF  struct                       T_MOBI_SAP_AUTHENTICATE_CNF  
</0x0301 OP_MOBI_SAP_AUTHENTICATE_CNF>


<sub T_MOBI_SAP_RECORD_READ_REQ>
    indexId       u16  u16  indexId       |input;|
    recordNumber  u8   u8   recordNumber  |input;|
</sub T_MOBI_SAP_RECORD_READ_REQ>


<0x0303 OP_MOBI_SAP_RECORD_READ_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_RECORD_READ_REQ  struct                      T_MOBI_SAP_RECORD_READ_REQ  
</0x0303 OP_MOBI_SAP_RECORD_READ_REQ>


<sub T_MOBI_SAP_RECORD_READ_CNF>
    indexId                               u16    u16    indexId                               |input;|
    recordNumber                          u8     u8     recordNumber                          |input;|
    lengthOfRecord                        u8     u8     lengthOfRecord                        |input;|
    recordData[SIM_MAX_SIZE_RECORD_DATA]  array  u8     recordData                            |multiedit;|
</sub T_MOBI_SAP_RECORD_READ_CNF>


<0x0304 OP_MOBI_SAP_RECORD_READ_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_RECORD_READ_CNF  struct                      T_MOBI_SAP_RECORD_READ_CNF  
</0x0304 OP_MOBI_SAP_RECORD_READ_CNF>


<sub T_MOBI_SAP_RECORD_UPDATE_REQ>
    indexId                               u16    u16    indexId                               |input;|
    recordNumber                          u8     u8     recordNumber                          |input;|
    lengthOfRecord                        u8     u8     lengthOfRecord                        |input;|
    recordData[SIM_MAX_SIZE_RECORD_DATA]  array  u8     recordData                            |multiedit;|
</sub T_MOBI_SAP_RECORD_UPDATE_REQ>


<0x0306 OP_MOBI_SAP_RECORD_UPDATE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RECORD_UPDATE_REQ  struct                        T_MOBI_SAP_RECORD_UPDATE_REQ  
</0x0306 OP_MOBI_SAP_RECORD_UPDATE_REQ>


<sub T_MOBI_SAP_RECORD_UPDATE_CNF>
    indexId       u16  u16  indexId       |input;|
    recordNumber  u8   u8   recordNumber  |input;|
</sub T_MOBI_SAP_RECORD_UPDATE_CNF>


<0x0307 OP_MOBI_SAP_RECORD_UPDATE_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RECORD_UPDATE_CNF  struct                        T_MOBI_SAP_RECORD_UPDATE_CNF  
</0x0307 OP_MOBI_SAP_RECORD_UPDATE_CNF>


<sub T_MOBI_SAP_BINARY_READ_REQ>
    indexId      u16  u16  indexId      |input;|
    offsetVal    u16  u16  offsetVal    |input;|
    excpDataLen  u8   u8   excpDataLen  |input;|
</sub T_MOBI_SAP_BINARY_READ_REQ>


<0x0309 OP_MOBI_SAP_BINARY_READ_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_BINARY_READ_REQ  struct                      T_MOBI_SAP_BINARY_READ_REQ  
</0x0309 OP_MOBI_SAP_BINARY_READ_REQ>


<sub T_MOBI_SAP_BINARY_READ_CNF>
    indexId                                 u16    u16    indexId                                 |input;|
    lengthData                              u16    u16    lengthData                              |input;|
    binaryData[SIM_MAX_SIZE_BIN_DATA_READ]  array  u8     binaryData                              |multiedit;|
</sub T_MOBI_SAP_BINARY_READ_CNF>


<0x030a OP_MOBI_SAP_BINARY_READ_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_BINARY_READ_CNF  struct                      T_MOBI_SAP_BINARY_READ_CNF  
</0x030a OP_MOBI_SAP_BINARY_READ_CNF>


<sub T_MOBI_SAP_BINARY_UPDATE_REQ>
    indexId                                   u16    u16    indexId                                   |input;|
    offsetVal                                 u16    u16    offsetVal                                 |input;|
    lengthData                                u8     u8     lengthData                                |input;|
    binaryData[SIM_MAX_SIZE_BIN_DATA_UPDATE]  array  u8     binaryData                                |multiedit;|
</sub T_MOBI_SAP_BINARY_UPDATE_REQ>


<0x030c OP_MOBI_SAP_BINARY_UPDATE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_BINARY_UPDATE_REQ  struct                        T_MOBI_SAP_BINARY_UPDATE_REQ  
</0x030c OP_MOBI_SAP_BINARY_UPDATE_REQ>


<sub T_MOBI_SAP_BINARY_UPDATE_CNF>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_BINARY_UPDATE_CNF>


<0x030d OP_MOBI_SAP_BINARY_UPDATE_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_BINARY_UPDATE_CNF  struct                        T_MOBI_SAP_BINARY_UPDATE_CNF  
</0x030d OP_MOBI_SAP_BINARY_UPDATE_CNF>


<sub T_CAPI_REG_REGISTRATION_REQ>
    airMode  u8  u8  airMode  |input;|
</sub T_CAPI_REG_REGISTRATION_REQ>


<0x0101 OP_CAPI_REG_REGISTRATION_REQ>
    signalHeader  struct                       T_MsgHeader                  
    body          struct                       T_CAPI_REG_REGISTRATION_REQ  
</0x0101 OP_CAPI_REG_REGISTRATION_REQ>


<sub T_CAPI_REG_DEREGISTRATION_REQ>
    deregType  u8  u8  deregType  |input;|
</sub T_CAPI_REG_DEREGISTRATION_REQ>


<0x0102 OP_CAPI_REG_DEREGISTRATION_REQ>
    signalHeader  struct                         T_MsgHeader                    
    body          struct                         T_CAPI_REG_DEREGISTRATION_REQ  
</0x0102 OP_CAPI_REG_DEREGISTRATION_REQ>


<sub T_CAPI_REG_DEREGISTRATION_CNF>
    aireMode  u8  u8  aireMode  |input;|
</sub T_CAPI_REG_DEREGISTRATION_CNF>


<0x0103 OP_CAPI_REG_DEREGISTRATION_CNF>
    signalHeader  struct                         T_MsgHeader                    
    body          struct                         T_CAPI_REG_DEREGISTRATION_CNF  
</0x0103 OP_CAPI_REG_DEREGISTRATION_CNF>


<sub T_CAPI_REG_ATTACH_REQ>
    type  u8  u8  type  |input;|
</sub T_CAPI_REG_ATTACH_REQ>


<0x0104 OP_CAPI_REG_ATTACH_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 T_CAPI_REG_ATTACH_REQ  
</0x0104 OP_CAPI_REG_ATTACH_REQ>


<sub T_CAPI_REG_DETACH_REQ>
    type  u8  u8  type  |input;|
</sub T_CAPI_REG_DETACH_REQ>


<0x0105 OP_CAPI_REG_DETACH_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 T_CAPI_REG_DETACH_REQ  
</0x0105 OP_CAPI_REG_DETACH_REQ>


<0x0106 OP_CAPI_REG_AVAIL_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x0106 OP_CAPI_REG_AVAIL_PLMN_REQ>


<sub T_CAPI_REG_AVAIL_PLMN_IND>
    plmnNum                    u8     u8     plmnNum                    |input;|
    plmnList[60]               array  u8     plmnList                   |multiedit;|
    plmnListStatus[20]         array  u8     plmnListStatus             |multiedit;|
</sub T_CAPI_REG_AVAIL_PLMN_IND>


<0x0107 OP_CAPI_REG_AVAIL_PLMN_IND>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_AVAIL_PLMN_IND  
</0x0107 OP_CAPI_REG_AVAIL_PLMN_IND>


<sub T_CAPI_REG_NW_SEL_REQ>
    plmn[MAX_PLMN_LEN]  array  u8     plmn                |multiedit;|
</sub T_CAPI_REG_NW_SEL_REQ>


<0x0108 OP_CAPI_REG_NW_SEL_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 T_CAPI_REG_NW_SEL_REQ  
</0x0108 OP_CAPI_REG_NW_SEL_REQ>


<0x010a OP_CAPI_REG_NW_RESEL_REQ>
    signalHeader  struct       T_MsgHeader  
</0x010a OP_CAPI_REG_NW_RESEL_REQ>


<sub T_CAPI_REG_NW_SELMODE_REQ>
    mode  u8  u8  mode  |input;|
</sub T_CAPI_REG_NW_SELMODE_REQ>


<0x0109 OP_CAPI_REG_NW_SELMODE_REQ>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_NW_SELMODE_REQ  
</0x0109 OP_CAPI_REG_NW_SELMODE_REQ>


<0x010b OP_CAPI_REG_ABORT_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x010b OP_CAPI_REG_ABORT_PLMN_REQ>


<sub T_CAPI_REG_ABORT_PLMN_IND>
    Cause  u8  u8  Cause  |input;|
</sub T_CAPI_REG_ABORT_PLMN_IND>


<0x010c OP_CAPI_REG_ABORT_PLMN_IND>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_ABORT_PLMN_IND  
</0x010c OP_CAPI_REG_ABORT_PLMN_IND>


<sub T_CAPI_REG_STATE_IND>
    csRegState          u8     u8     csRegState          |input;|
    psRegState          u8     u8     psRegState          |input;|
    cause               u8     u8     cause               |input;|
    cellIdentity[4]     array  u8     cellIdentity        |multiedit;|
    plmn[MAX_PLMN_LEN]  array  u8     plmn                |multiedit;|
    tac[2]              array  u8     tac                 |multiedit;|
    roaming             u8     u8     roaming             |input;|
    aireMode            u8     u8     aireMode            |input;|
    autoPdnAct          u8     u8     autoPdnAct          |input;|
</sub T_CAPI_REG_STATE_IND>


<0x010d OP_CAPI_REG_STATE_IND>
    signalHeader  struct                T_MsgHeader           
    body          struct                T_CAPI_REG_STATE_IND  
</0x010d OP_CAPI_REG_STATE_IND>


<sub T_CAPI_REG_SIM_ERROR_IND>
    index        u16  u16  index        |input;|
    causeSelect  u8   u8   causeSelect  |input;|
    sw1          u8   u8   sw1          |input;|
    sw2          u8   u8   sw2          |input;|
</sub T_CAPI_REG_SIM_ERROR_IND>


<0x010e OP_CAPI_REG_SIM_ERROR_IND>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_CAPI_REG_SIM_ERROR_IND  
</0x010e OP_CAPI_REG_SIM_ERROR_IND>


<sub T_CAPI_REG_MM_INFO_IND>
    localTimeZone[2]          array  u8     localTimeZone             |multiedit;|
    univTimeLocalTimeZone[8]  array  u8     univTimeLocalTimeZone     |multiedit;|
    netDaylightSavingTime[2]  array  u8     netDaylightSavingTime     |multiedit;|
    fullNameForNetwork[115]   array  u8     fullNameForNetwork        |multiedit;|
    shortNameForNetwork[115]  array  u8     shortNameForNetwork       |multiedit;|
</sub T_CAPI_REG_MM_INFO_IND>


<0x0100 OP_CAPI_REG_MM_INFO_IND>
    signalHeader  struct                  T_MsgHeader             
    body          struct                  T_CAPI_REG_MM_INFO_IND  
</0x0100 OP_CAPI_REG_MM_INFO_IND>


<sub T_CAPI_REG_PSM_CONFIG_REQ>
    psmStatus      u8  u8  psmStatus      |input;|
    bitmap         u8  u8  bitmap         |input;|
    t3324Value     u8  u8  t3324Value     |input;|
    t3412ExtValue  u8  u8  t3412ExtValue  |input;|
</sub T_CAPI_REG_PSM_CONFIG_REQ>


<0x010f OP_CAPI_REG_PSM_CONFIG_REQ>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_PSM_CONFIG_REQ  
</0x010f OP_CAPI_REG_PSM_CONFIG_REQ>


<sub T_CAPI_REG_EMODE_CONFIG_REQ>
    LteOpMode  u8  u8  LteOpMode  |input;|
</sub T_CAPI_REG_EMODE_CONFIG_REQ>


<0x0119 OP_CAPI_REG_EMODE_CONFIG_REQ>
    signalHeader  struct                       T_MsgHeader                  
    body          struct                       T_CAPI_REG_EMODE_CONFIG_REQ  
</0x0119 OP_CAPI_REG_EMODE_CONFIG_REQ>


<sub T_CAPI_REG_SIM_OPEN_IND>
    SimStatus  u8  u8  SimStatus  |input;|
</sub T_CAPI_REG_SIM_OPEN_IND>


<0x0111 OP_CAPI_REG_SIM_OPEN_IND>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_CAPI_REG_SIM_OPEN_IND  
</0x0111 OP_CAPI_REG_SIM_OPEN_IND>


<0x0112 OP_CAPI_REG_SIM_CLOSE_IND>
    signalHeader  struct       T_MsgHeader  
</0x0112 OP_CAPI_REG_SIM_CLOSE_IND>


<0x0113 OP_CAPI_REG_SIM_CLOSE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x0113 OP_CAPI_REG_SIM_CLOSE_CNF>


<sub T_CAPI_REG_CELL_IND>
    CurrRat  u8  u8  CurrRat  |input;|
</sub T_CAPI_REG_CELL_IND>


<0x0114 OP_CAPI_REG_CELL_IND>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_CAPI_REG_CELL_IND  
</0x0114 OP_CAPI_REG_CELL_IND>


<sub T_CAPI_REG_IRAT_START_IND>
    SourceRat  u8  u8  SourceRat  |input;|
    TargetRat  u8  u8  TargetRat  |input;|
</sub T_CAPI_REG_IRAT_START_IND>


<0x0115 OP_CAPI_REG_IRAT_START_IND>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_IRAT_START_IND  
</0x0115 OP_CAPI_REG_IRAT_START_IND>


<sub T_CAPI_REG_IRAT_END_IND>
    CurrRat  u8  u8  CurrRat  |input;|
    Cause    u8  u8  Cause    |input;|
</sub T_CAPI_REG_IRAT_END_IND>


<0x0116 OP_CAPI_REG_IRAT_END_IND>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_CAPI_REG_IRAT_END_IND  
</0x0116 OP_CAPI_REG_IRAT_END_IND>


<0x0117 OP_CAPI_NW_CSREGSTATUS_IND>
    signalHeader    struct                  T_MsgHeader             
    csRegStatusInd  struct                  api_NwCsRegStatusInd_t  
</0x0117 OP_CAPI_NW_CSREGSTATUS_IND>


<0x0118 OP_CAPI_NW_PSREGSTATUS_IND>
    signalHeader    struct                  T_MsgHeader             
    psRegStatusInd  struct                  api_NwPsRegStatusInd_t  
</0x0118 OP_CAPI_NW_PSREGSTATUS_IND>


<sub T_SMREG_EPS_DEFAULT_CONFIG_REQ>
    pdnType           u8     u8     pdnType           |input;|
    apnLen            u8     u8     apnLen            |input;|
    apn[MAX_APN_LEN]  array  u8     apn               |multiedit;|
    pcoLen            u8     u8     pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_DEFAULT_CONFIG_REQ>


<0x040c OP_SMREG_EPS_DEFAULT_CONFIG_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    SMREG_EPS_DEFAULT_CONFIG_REQ  struct                          T_SMREG_EPS_DEFAULT_CONFIG_REQ  
</0x040c OP_SMREG_EPS_DEFAULT_CONFIG_REQ>


<sub T_SMREG_EPS_ACTIVATE_REQ>
    SmIndex           u8            u8            SmIndex           |input;|
    nCid              u8            u8            nCid              |input;|
    pdnAddress        struct        T_PdnAddress  
    apnLen            u8            u8            apnLen            |input;|
    apn[MAX_APN_LEN]  array         u8            apn               |multiedit;|
    pcoLen            u8            u8            pcoLen            |input;|
    pco[MAX_PCO_LEN]  array         u8            pco               |multiedit;|
    flag              u8            u8            flag              |input;|
</sub T_SMREG_EPS_ACTIVATE_REQ>


<0x0400 OP_SMREG_EPS_ACTIVATE_REQ>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_REQ  struct                    T_SMREG_EPS_ACTIVATE_REQ  
</0x0400 OP_SMREG_EPS_ACTIVATE_REQ>


<sub T_SMREG_EPS_ACTIVATE_CNF>
    SmIndex           u8            u8            SmIndex           |input;|
    ebi               u8            u8            ebi               |input;|
    nCid              u8            u8            nCid              |input;|
    pdnAddress        struct        T_PdnAddress  
    ApnLen            u8            u8            ApnLen            |input;|
    Apn[MAX_APN_LEN]  array         u8            Apn               |multiedit;|
    epsQos            struct        T_EpsQos      
    qosFlag           u8            u8            qosFlag           |input;|
    qos               struct        T_Qos         
    pcoLen            u8            u8            pcoLen            |input;|
    pco[MAX_PCO_LEN]  array         u8            pco               |multiedit;|
</sub T_SMREG_EPS_ACTIVATE_CNF>


<0x0401 OP_SMREG_EPS_ACTIVATE_CNF>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_CNF  struct                    T_SMREG_EPS_ACTIVATE_CNF  
</0x0401 OP_SMREG_EPS_ACTIVATE_CNF>


<sub T_SMREG_EPS_ACTIVATE_ERR>
    SmIndex  u8  u8  SmIndex  |input;|
    nCid     u8  u8  nCid     |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ACTIVATE_ERR>


<0x0402 OP_SMREG_EPS_ACTIVATE_ERR>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_ERR  struct                    T_SMREG_EPS_ACTIVATE_ERR  
</0x0402 OP_SMREG_EPS_ACTIVATE_ERR>


<sub T_SMREG_EPS_ACTIVATE_IND>
    SmIndex    u8        u8        SmIndex    |input;|
    ebi        u8        u8        ebi        |input;|
    linkedEbi  u8        u8        linkedEbi  |input;|
    actType    u8        u8        actType    |input;|
    epsQos     struct    T_EpsQos  
    tft        struct    T_Tft     
    qosFlag    u8        u8        qosFlag    |input;|
    qos        struct    T_Qos     
</sub T_SMREG_EPS_ACTIVATE_IND>


<0x040e OP_SMREG_EPS_ACTIVATE_IND>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_IND  struct                    T_SMREG_EPS_ACTIVATE_IND  
</0x040e OP_SMREG_EPS_ACTIVATE_IND>


<sub T_SMREG_EPS_ACTIVATE_RSP>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_ACTIVATE_RSP>


<0x040f OP_SMREG_EPS_ACTIVATE_RSP>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_RSP  struct                    T_SMREG_EPS_ACTIVATE_RSP  
</0x040f OP_SMREG_EPS_ACTIVATE_RSP>


<sub T_SMREG_EPS_ACTIVATE_REJ>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ACTIVATE_REJ>


<0x0410 OP_SMREG_EPS_ACTIVATE_REJ>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_REJ  struct                    T_SMREG_EPS_ACTIVATE_REJ  
</0x0410 OP_SMREG_EPS_ACTIVATE_REJ>


<sub T_SMREG_EPS_ALLOCATION_REQ>
    SmIndex    u8        u8        SmIndex    |input;|
    linkedEbi  u8        u8        linkedEbi  |input;|
    tft        struct    T_Tft     
    epsQos     struct    T_EpsQos  
</sub T_SMREG_EPS_ALLOCATION_REQ>


<0x0411 OP_SMREG_EPS_ALLOCATION_REQ>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_REQ  struct                      T_SMREG_EPS_ALLOCATION_REQ  
</0x0411 OP_SMREG_EPS_ALLOCATION_REQ>


<sub T_SMREG_EPS_ALLOCATION_CNF>
    SmIndex   u8  u8  SmIndex   |input;|
    respType  u8  u8  respType  |input;|
</sub T_SMREG_EPS_ALLOCATION_CNF>


<0x0412 OP_SMREG_EPS_ALLOCATION_CNF>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_CNF  struct                      T_SMREG_EPS_ALLOCATION_CNF  
</0x0412 OP_SMREG_EPS_ALLOCATION_CNF>


<sub T_SMREG_EPS_ALLOCATION_ERR>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ALLOCATION_ERR>


<0x0413 OP_SMREG_EPS_ALLOCATION_ERR>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_ERR  struct                      T_SMREG_EPS_ALLOCATION_ERR  
</0x0413 OP_SMREG_EPS_ALLOCATION_ERR>


<sub T_SMREG_EPS_DEACTIVATE_REQ>
    SmIndex  u8     u8     SmIndex  |input;|
    tfa      struct T_Tft  
</sub T_SMREG_EPS_DEACTIVATE_REQ>


<0x0403 OP_SMREG_EPS_DEACTIVATE_REQ>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_REQ  struct                      T_SMREG_EPS_DEACTIVATE_REQ  
</0x0403 OP_SMREG_EPS_DEACTIVATE_REQ>


<sub T_SMREG_EPS_DEACTIVATE_CNF>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_DEACTIVATE_CNF>


<0x0404 OP_SMREG_EPS_DEACTIVATE_CNF>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_CNF  struct                      T_SMREG_EPS_DEACTIVATE_CNF  
</0x0404 OP_SMREG_EPS_DEACTIVATE_CNF>


<sub T_SMREG_EPS_DEACTIVATE_IND>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_DEACTIVATE_IND>


<0x0405 OP_SMREG_EPS_DEACTIVATE_IND>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_IND  struct                      T_SMREG_EPS_DEACTIVATE_IND  
</0x0405 OP_SMREG_EPS_DEACTIVATE_IND>


<sub T_SMREG_EPS_MODIFY_REQ>
    SmIndex  u8        u8        SmIndex  |input;|
    tfa      struct    T_Tft     
    qosFlag  u8        u8        qosFlag  |input;|
    epsQos   struct    T_EpsQos  
</sub T_SMREG_EPS_MODIFY_REQ>


<0x0407 OP_SMREG_EPS_MODIFY_REQ>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_REQ  struct                  T_SMREG_EPS_MODIFY_REQ  
</0x0407 OP_SMREG_EPS_MODIFY_REQ>


<sub T_SMREG_EPS_MODIFY_CNF>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_MODIFY_CNF>


<0x0408 OP_SMREG_EPS_MODIFY_CNF>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_CNF  struct                  T_SMREG_EPS_MODIFY_CNF  
</0x0408 OP_SMREG_EPS_MODIFY_CNF>


<sub T_SMREG_EPS_MODIFY_ERR>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_MODIFY_ERR>


<0x0409 OP_SMREG_EPS_MODIFY_ERR>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_ERR  struct                  T_SMREG_EPS_MODIFY_ERR  
</0x0409 OP_SMREG_EPS_MODIFY_ERR>


<sub T_SMREG_EPS_MODIFY_IND>
    SmIndex           u8        u8        SmIndex           |input;|
    epsQosFlag        u8        u8        epsQosFlag        |input;|
    epsQos            struct    T_EpsQos  
    qosFlag           u8        u8        qosFlag           |input;|
    qos               struct    T_Qos     
    tftFlag           u8        u8        tftFlag           |input;|
    tft               struct    T_Tft     
    pcoLen            u8        u8        pcoLen            |input;|
    pco[MAX_PCO_LEN]  array     u8        pco               |multiedit;|
</sub T_SMREG_EPS_MODIFY_IND>


<0x0406 OP_SMREG_EPS_MODIFY_IND>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_IND  struct                  T_SMREG_EPS_MODIFY_IND  
</0x0406 OP_SMREG_EPS_MODIFY_IND>


<sub T_SMREG_EPS_MODIFY_RSP>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_MODIFY_RSP>


<0x040a OP_SMREG_EPS_MODIFY_RSP>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_RSP  struct                  T_SMREG_EPS_MODIFY_RSP  
</0x040a OP_SMREG_EPS_MODIFY_RSP>


<sub T_SMREG_EPS_MODIFY_REJ>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_MODIFY_REJ>


<0x040b OP_SMREG_EPS_MODIFY_REJ>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_REJ  struct                  T_SMREG_EPS_MODIFY_REJ  
</0x040b OP_SMREG_EPS_MODIFY_REJ>


<sub T_SMS_UNITDATA_REQ>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_SMS_UNITDATA_REQ>


<sub T_SMS_UNITDATA_IND>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_SMS_UNITDATA_IND>


<sub T_EMMSMS_EST_REQ>
    TI  u8  u8  TI  |input;|
</sub T_EMMSMS_EST_REQ>


<0x1000 OP_EMMSMS_EST_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_EST_REQ  struct            T_EMMSMS_EST_REQ  
</0x1000 OP_EMMSMS_EST_REQ>


<0x1001 OP_EMMSMS_EST_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1001 OP_EMMSMS_EST_CNF>


<sub T_EMMSMS_EST_IND>
    TI  u8  u8  TI  |input;|
</sub T_EMMSMS_EST_IND>


<0x1008 OP_EMMSMS_EST_IND>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_EST_IND  struct            T_EMMSMS_EST_IND  
</0x1008 OP_EMMSMS_EST_IND>


<sub T_EMMSMS_ERROR_IND>
    TI     u8  u8  TI     |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMSMS_ERROR_IND>


<0x1002 OP_EMMSMS_ERROR_IND>
    signalHeader      struct              T_MsgHeader         
    EMMSMS_ERROR_IND  struct              T_EMMSMS_ERROR_IND  
</0x1002 OP_EMMSMS_ERROR_IND>


<0x1003 OP_EMMSMS_UNITDATA_REQ>
    signalHeader      struct              T_MsgHeader         
    SMS_UNITDATA_REQ  struct              T_SMS_UNITDATA_REQ  
</0x1003 OP_EMMSMS_UNITDATA_REQ>


<0x1004 OP_EMMSMS_UNITDATA_IND>
    signalHeader      struct              T_MsgHeader         
    SMS_UNITDATA_IND  struct              T_SMS_UNITDATA_IND  
</0x1004 OP_EMMSMS_UNITDATA_IND>


<sub T_EMMSMS_REL_REQ>
    TI  u8  u8  TI  |input;|
</sub T_EMMSMS_REL_REQ>


<0x1005 OP_EMMSMS_REL_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_REL_REQ  struct            T_EMMSMS_REL_REQ  
</0x1005 OP_EMMSMS_REL_REQ>


<sub T_EMMESM_ESTABLISH_REQ>
    pti                          u8     u8     pti                          |input;|
    ebi                          u8     u8     ebi                          |input;|
    length                       u16    u16    length                       |input;|
    esmMessage[MAX_NAS_MSG_LEN]  array  u8     esmMessage                   |multiedit;|
</sub T_EMMESM_ESTABLISH_REQ>


<0x1020 OP_EMMESM_ESTABLISH_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_ESTABLISH_REQ  struct                  T_EMMESM_ESTABLISH_REQ  
</0x1020 OP_EMMESM_ESTABLISH_REQ>


<sub T_EMMESM_ESTABLISH_CNF>
    pti  u8  u8  pti  |input;|
    ebi  u8  u8  ebi  |input;|
</sub T_EMMESM_ESTABLISH_CNF>


<0x1021 OP_EMMESM_ESTABLISH_CNF>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_ESTABLISH_CNF  struct                  T_EMMESM_ESTABLISH_CNF  
</0x1021 OP_EMMESM_ESTABLISH_CNF>


<sub T_EMMESM_RELEASE_IND>
    pti    u8  u8  pti    |input;|
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMESM_RELEASE_IND>


<0x1023 OP_EMMESM_RELEASE_IND>
    signalHeader        struct                T_MsgHeader           
    EMMESM_RELEASE_IND  struct                T_EMMESM_RELEASE_IND  
</0x1023 OP_EMMESM_RELEASE_IND>


<sub T_EMMESM_EPS_STATUS_IND>
    pti  u8  u8  pti  |input;|
    ebi  u8  u8  ebi  |input;|
</sub T_EMMESM_EPS_STATUS_IND>


<0x1024 OP_EMMESM_EPS_STATUS_IND>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_EPS_STATUS_IND  struct                   T_EMMESM_EPS_STATUS_IND  
</0x1024 OP_EMMESM_EPS_STATUS_IND>


<sub T_EMMESM_DATA_REQ>
    length                    u16    u16    length                    |input;|
    dummy                     u16    u16    dummy                     |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMESM_DATA_REQ>


<0x1025 OP_EMMESM_DATA_REQ>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_REQ  struct             T_EMMESM_DATA_REQ  
</0x1025 OP_EMMESM_DATA_REQ>


<sub T_EMMESM_DATA_IND>
    length                    u16    u16    length                    |input;|
    protFlag                  u8     u8     protFlag                  |input;|
    dummy                     u8     u8     dummy                     |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMESM_DATA_IND>


<0x1026 OP_EMMESM_DATA_IND>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_IND  struct             T_EMMESM_DATA_IND  
</0x1026 OP_EMMESM_DATA_IND>


<sub T_EMMESM_EPS_DELETE_REQ>
    pti    u8  u8  pti    |input;|
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMESM_EPS_DELETE_REQ>


<0x1027 OP_EMMESM_EPS_DELETE_REQ>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_EPS_DELETE_REQ  struct                   T_EMMESM_EPS_DELETE_REQ  
</0x1027 OP_EMMESM_EPS_DELETE_REQ>


<sub T_EMMESM_LOOP_TEST_IND>
    command  u8  u8  command  |input;|
</sub T_EMMESM_LOOP_TEST_IND>


<0x1029 OP_EMMESM_LOOP_TEST_IND>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_LOOP_TEST_IND  struct                  T_EMMESM_LOOP_TEST_IND  
</0x1029 OP_EMMESM_LOOP_TEST_IND>


<sub T_EMMESM_LOOP_TEST_REQ>
    ipType  u8  u8  ipType  |input;|
</sub T_EMMESM_LOOP_TEST_REQ>


<0x1028 OP_EMMESM_LOOP_TEST_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_LOOP_TEST_REQ  struct                  T_EMMESM_LOOP_TEST_REQ  
</0x1028 OP_EMMESM_LOOP_TEST_REQ>


<sub T_EMMESM_DATA_CNF>
    esmMsgType  u8  u8  esmMsgType  |input;|
    result      u8  u8  result      |input;|
    ebi         u8  u8  ebi         |input;|
    pti         u8  u8  pti         |input;|
</sub T_EMMESM_DATA_CNF>


<0x102a OP_EMMESM_DATA_CNF>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_CNF  struct             T_EMMESM_DATA_CNF  
</0x102a OP_EMMESM_DATA_CNF>


<0x102b OP_EMMESM_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x102b OP_EMMESM_ABORT_REQ>


<sub T_EMMESM_PDN_CON_IND>
    withoutPdnInd  u8  u8  withoutPdnInd  |input;|
</sub T_EMMESM_PDN_CON_IND>


<0x102c OP_EMMESM_PDN_CON_IND>
    signalHeader        struct                T_MsgHeader           
    EMMESM_PDN_CON_IND  struct                T_EMMESM_PDN_CON_IND  
</0x102c OP_EMMESM_PDN_CON_IND>


<sub T_EMMESM_STATUS_REQ>
    status   u8   u8   status   |input;|
    content  u16  u16  content  |input;|
</sub T_EMMESM_STATUS_REQ>


<0x102d OP_EMMESM_STATUS_REQ>
    signalHeader       struct               T_MsgHeader          
    EMMESM_STATUS_REQ  struct               T_EMMESM_STATUS_REQ  
</0x102d OP_EMMESM_STATUS_REQ>


<sub T_EMMESM_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMMESM_STATUS_IND>


<0x102e OP_EMMESM_STATUS_IND>
    signalHeader       struct               T_MsgHeader          
    EMMESM_STATUS_IND  struct               T_EMMESM_STATUS_IND  
</0x102e OP_EMMESM_STATUS_IND>


<0xffff OP_EMMESM_RAT_CHANGE_IND>
</0xffff OP_EMMESM_RAT_CHANGE_IND>


<0x104c OP_EMM_IMSI_PAGE_IND>
    signalHeader  struct       T_MsgHeader  
</0x104c OP_EMM_IMSI_PAGE_IND>


<0x1040 OP_EMM_CELL_INFO_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1040 OP_EMM_CELL_INFO_REQ>


<0x1041 OP_EMM_DETACH_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1041 OP_EMM_DETACH_REQ>


<0x104a OP_EMM_DETACH_IND>
    signalHeader  struct       T_MsgHeader  
</0x104a OP_EMM_DETACH_IND>


<0x1049 OP_EMM_ATTACH_IND>
    signalHeader  struct       T_MsgHeader  
</0x1049 OP_EMM_ATTACH_IND>


<0x1048 OP_EMM_TAU_IND>
    signalHeader  struct       T_MsgHeader  
</0x1048 OP_EMM_TAU_IND>


<0x1047 OP_EMM_SERV_REJ_IND>
    signalHeader  struct       T_MsgHeader  
</0x1047 OP_EMM_SERV_REJ_IND>


<sub T_EMM_LOOP_TEST_IND>
    command                      u8     u8     command                      |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMM_LOOP_TEST_IND>


<0x1044 OP_EMM_LOOP_TEST_IND>
    signalHeader       struct               T_MsgHeader          
    EMM_LOOP_TEST_IND  struct               T_EMM_LOOP_TEST_IND  
</0x1044 OP_EMM_LOOP_TEST_IND>


<sub T_EMM_LOOP_TEST_REQ>
    command  u8  u8  command  |input;|
    cause    u8  u8  cause    |input;|
</sub T_EMM_LOOP_TEST_REQ>


<0x1042 OP_EMM_LOOP_TEST_REQ>
    signalHeader       struct               T_MsgHeader          
    EMM_LOOP_TEST_REQ  struct               T_EMM_LOOP_TEST_REQ  
</0x1042 OP_EMM_LOOP_TEST_REQ>


<sub T_EMM_STATUS_REQ>
    status  u8  u8  status  |input;|
</sub T_EMM_STATUS_REQ>


<0x1043 OP_EMM_STATUS_REQ>
    signalHeader    struct            T_MsgHeader       
    EMM_STATUS_REQ  struct            T_EMM_STATUS_REQ  
</0x1043 OP_EMM_STATUS_REQ>


<sub T_EMM_COMBINED_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_COMBINED_IND>


<0x1045 OP_EMM_COMBINED_IND>
    signalHeader      struct              T_MsgHeader         
    EMM_COMBINED_IND  struct              T_EMM_COMBINED_IND  
</0x1045 OP_EMM_COMBINED_IND>


<sub T_EMM_AUTH_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_AUTH_IND>


<0x1046 OP_EMM_AUTH_IND>
    signalHeader  struct          T_MsgHeader     
    EMM_AUTH_IND  struct          T_EMM_AUTH_IND  
</0x1046 OP_EMM_AUTH_IND>


<0x104b OP_EMM_GUTI_IND>
    signalHeader  struct       T_MsgHeader  
</0x104b OP_EMM_GUTI_IND>


<sub T_EMM_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_STATUS_IND>


<0x104d OP_EMM_STATUS_IND>
    signalHeader    struct            T_MsgHeader       
    EMM_STATUS_IND  struct            T_EMM_STATUS_IND  
</0x104d OP_EMM_STATUS_IND>


<0x104e OP_EMM_KENB_IND>
    signalHeader  struct       T_MsgHeader  
</0x104e OP_EMM_KENB_IND>


<sub T_EMM_BAR_ALLEVIATE_IND>
    barAlleviateType  u8  u8  barAlleviateType  |input;|
</sub T_EMM_BAR_ALLEVIATE_IND>


<0x104f OP_EMM_BAR_ALLEVIATE_IND>
    signalHeader           struct                   T_MsgHeader              
    EMM_BAR_ALLEVIATE_IND  struct                   T_EMM_BAR_ALLEVIATE_IND  
</0x104f OP_EMM_BAR_ALLEVIATE_IND>


<0x1050 OP_EMM_SET_STATE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1050 OP_EMM_SET_STATE_REQ>


<sub T_EMMRABM_REESTABLISH_REQ>
    dataStatus  u16  u16  dataStatus  |input;|
</sub T_EMMRABM_REESTABLISH_REQ>


<0x1061 OP_EMMRABM_REESTABLISH_REQ>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_REESTABLISH_REQ  struct                     T_EMMRABM_REESTABLISH_REQ  
</0x1061 OP_EMMRABM_REESTABLISH_REQ>


<0x1060 OP_EMMRABM_REESTABLISH_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1060 OP_EMMRABM_REESTABLISH_CNF>


<sub T_EMMRABM_REESTABLISH_ERR>
    cause  u8  u8  cause  |input;|
</sub T_EMMRABM_REESTABLISH_ERR>


<0x1062 OP_EMMRABM_REESTABLISH_ERR>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_REESTABLISH_ERR  struct                     T_EMMRABM_REESTABLISH_ERR  
</0x1062 OP_EMMRABM_REESTABLISH_ERR>


<sub T_EMMRABM_STATUS_IND>
    statusInd  u8  u8  statusInd  |input;|
</sub T_EMMRABM_STATUS_IND>


<0x1063 OP_EMMRABM_STATUS_IND>
    signalHeader        struct                T_MsgHeader           
    EMMRABM_STATUS_IND  struct                T_EMMRABM_STATUS_IND  
</0x1063 OP_EMMRABM_STATUS_IND>


<sub T_RABMESM_ACTIVATE_IND>
    ebi        u8  u8  ebi        |input;|
    cpOnlyInd  u8  u8  cpOnlyInd  |input;|
</sub T_RABMESM_ACTIVATE_IND>


<0x1080 OP_RABMESM_ACTIVATE_IND>
    signalHeader          struct                  T_MsgHeader             
    RABMESM_ACTIVATE_IND  struct                  T_RABMESM_ACTIVATE_IND  
</0x1080 OP_RABMESM_ACTIVATE_IND>


<0xffff OP_RABMESM_IR_ACTIVATE_IND>
</0xffff OP_RABMESM_IR_ACTIVATE_IND>


<sub T_RABMESM_ACTIVATE_RSP>
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_RABMESM_ACTIVATE_RSP>


<0x1081 OP_RABMESM_ACTIVATE_RSP>
    signalHeader          struct                  T_MsgHeader             
    RABMESM_ACTIVATE_RSP  struct                  T_RABMESM_ACTIVATE_RSP  
</0x1081 OP_RABMESM_ACTIVATE_RSP>


<sub T_RABMESM_DEACTIVATE_IND>
    ebi  u8  u8  ebi  |input;|
</sub T_RABMESM_DEACTIVATE_IND>


<0x1082 OP_RABMESM_DEACTIVATE_IND>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_IND  struct                    T_RABMESM_DEACTIVATE_IND  
</0x1082 OP_RABMESM_DEACTIVATE_IND>


<sub T_RABMESM_DEACTIVATE_REQ>
    ebi  u8  u8  ebi  |input;|
</sub T_RABMESM_DEACTIVATE_REQ>


<0x1084 OP_RABMESM_DEACTIVATE_REQ>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_REQ  struct                    T_RABMESM_DEACTIVATE_REQ  
</0x1084 OP_RABMESM_DEACTIVATE_REQ>


<sub T_RABMESM_DATA_REQ>
    ebi                    u8     u8     ebi                    |input;|
    RelAssistInd           u8     u8     RelAssistInd           |input;|
    length                 u16    u16    length                 |input;|
    data[MAX_NAS_MSG_LEN]  array  u8     data                   |multiedit;|
</sub T_RABMESM_DATA_REQ>


<0x1086 OP_RABMESM_DATA_REQ>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_REQ  struct              T_RABMESM_DATA_REQ  
</0x1086 OP_RABMESM_DATA_REQ>


<sub T_RABMESM_DATA_CNF>
    ebi     u8  u8  ebi     |input;|
    result  u8  u8  result  |input;|
</sub T_RABMESM_DATA_CNF>


<0x1088 OP_RABMESM_DATA_CNF>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_CNF  struct              T_RABMESM_DATA_CNF  
</0x1088 OP_RABMESM_DATA_CNF>


<sub T_RABMESM_DATA_IND>
    ebi                    u8     u8     ebi                    |input;|
    dummy                  u8     u8     dummy                  |input;|
    length                 u16    u16    length                 |input;|
    data[MAX_NAS_MSG_LEN]  array  u8     data                   |multiedit;|
</sub T_RABMESM_DATA_IND>


<0x1087 OP_RABMESM_DATA_IND>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_IND  struct              T_RABMESM_DATA_IND  
</0x1087 OP_RABMESM_DATA_IND>


<sub T_EMMAS_ESTABLISH_REQ>
    establishCause               u8     u8     establishCause               |input;|
    callType                     u8     u8     callType                     |input;|
    length                       u16    u16    length                       |input;|
    registFlag                   u8     u8     registFlag                   |input;|
    nasMsgSn                     u8     u8     nasMsgSn                     |input;|
    eabFlag                      u8     u8     eabFlag                      |input;|
    campInd                      u8     u8     campInd                      |input;|
    piggybackeOnResumeFlag       u8     u8     piggybackeOnResumeFlag       |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMMAS_ESTABLISH_REQ>


<sub T_EMMAS_ESTABLISH_CNF>
    resumeFallbackedFlag  u8  u8  resumeFallbackedFlag  |input;|
</sub T_EMMAS_ESTABLISH_CNF>


<sub T_EMMAS_RELEASE_REQ>
    cause  u8  u8  cause  |input;|
</sub T_EMMAS_RELEASE_REQ>


<sub T_EMMAS_RELEASE_IND>
    releaseCause      u8   u8   releaseCause      |input;|
    rrcSuspendFlag    u8   u8   rrcSuspendFlag    |input;|
    extendedWaitTime  u16  u16  extendedWaitTime  |input;|
</sub T_EMMAS_RELEASE_IND>


<sub T_EMMAS_PAGE_IND>
    ueIdType     u8  u8  ueIdType     |input;|
    pagingCause  u8  u8  pagingCause  |input;|
</sub T_EMMAS_PAGE_IND>


<sub T_EMMAS_SYNC_IND>
    syncCause  u8  u8  syncCause  |input;|
</sub T_EMMAS_SYNC_IND>


<sub T_EMMAS_DATA_REQ>
    length                       u16    u16    length                       |input;|
    dummy                        u8     u8     dummy                        |input;|
    nasMsgSn                     u8     u8     nasMsgSn                     |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMMAS_DATA_REQ>


<sub T_EMMAS_DATA_IND>
    length                       u16    u16    length                       |input;|
    dummy                        u16    u16    dummy                        |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMMAS_DATA_IND>


<sub T_EMMAS_DATA_CNF>
    stateFlag  u8  u8  stateFlag  |input;|
    cnfNum     u8  u8  cnfNum     |input;|
    nasMsgSn   u8  u8  nasMsgSn   |input;|
</sub T_EMMAS_DATA_CNF>


<0x120b OP_EMMAS_ESTABLISH_REQ>
    signalHeader         struct                 T_MsgHeader            
    EMMAS_ESTABLISH_REQ  struct                 T_EMMAS_ESTABLISH_REQ  
</0x120b OP_EMMAS_ESTABLISH_REQ>


<0x120a OP_EMMAS_ESTABLISH_CNF>
    signalHeader         struct                 T_MsgHeader            
    EMMAS_ESTABLISH_CNF  struct                 T_EMMAS_ESTABLISH_CNF  
</0x120a OP_EMMAS_ESTABLISH_CNF>


<0x120c OP_EMMAS_RELEASE_REQ>
    signalHeader       struct               T_MsgHeader          
    EMMAS_RELEASE_REQ  struct               T_EMMAS_RELEASE_REQ  
</0x120c OP_EMMAS_RELEASE_REQ>


<0x1205 OP_EMMAS_RELEASE_IND>
    signalHeader       struct               T_MsgHeader          
    EMMAS_RELEASE_IND  struct               T_EMMAS_RELEASE_IND  
</0x1205 OP_EMMAS_RELEASE_IND>


<0x1209 OP_EMMAS_PAGE_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_PAGE_IND  struct            T_EMMAS_PAGE_IND  
</0x1209 OP_EMMAS_PAGE_IND>


<0x1206 OP_EMMAS_SYNC_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_SYNC_IND  struct            T_EMMAS_SYNC_IND  
</0x1206 OP_EMMAS_SYNC_IND>


<0x120d OP_EMMAS_DATA_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_REQ  struct            T_EMMAS_DATA_REQ  
</0x120d OP_EMMAS_DATA_REQ>


<0x1207 OP_EMMAS_DATA_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_IND  struct            T_EMMAS_DATA_IND  
</0x1207 OP_EMMAS_DATA_IND>


<0x1208 OP_EMMAS_DATA_CNF>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_CNF  struct            T_EMMAS_DATA_CNF  
</0x1208 OP_EMMAS_DATA_CNF>


<sub T_EMMAS_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMMAS_STATUS_IND>


<0x120e OP_EMMAS_STATUS_IND>
    signalHeader      struct              T_MsgHeader         
    EMMAS_STATUS_IND  struct              T_EMMAS_STATUS_IND  
</0x120e OP_EMMAS_STATUS_IND>


<sub T_EPossPlmn>
    cellInfo         struct         T_CellDescLte  
    tac[2]           array          u8             tac              |multiedit;|
    rsrpValue        u8             u8             rsrpValue        |input;|
    plmnNum          u8             u8             plmnNum          |input;|
    possiblePlmn[6]  array          T_Plmn         possiblePlmn     |multiedit;|
</sub T_EPossPlmn>


<sub T_ERR_ACT_REQ>
    imsi                                      struct         T_Imsi         
    plmnSelected                              struct         T_Plmn         
    equivalentPlmnNum                         u8             u8             equivalentPlmnNum                         |input;|
    nFreqNum                                  u8             u8             nFreqNum                                  |input;|
    equivalentPlmn[MAX_EQU_PLMNS_NUM]         array          T_Plmn         equivalentPlmn                            |multiedit;|
    neighbourFreq[MAX_FREQ_NUM]               array          T_CellDescLte  neighbourFreq                             |multiedit;|
    accessControlClass[MAX_UE_ACC_CLASS_LEN]  array          u8             accessControlClass                        |multiedit;|
    actType                                   u8             u8             actType                                   |input;|
</sub T_ERR_ACT_REQ>


<sub T_ERR_ACT_IND>
    tac[2]                           array          u8             tac                              |multiedit;|
    servCellPlmnNum                  u8             u8             servCellPlmnNum                  |input;|
    servCellPlmn[MAX_CELL_PLMN_NUM]  array          T_Plmn         servCellPlmn                     |multiedit;|
    plmn                             struct         T_Plmn         
    servAttachWithoutPDN             u8             u8             servAttachWithoutPDN             |input;|
    upCIoTEPSOptimisation            u8             u8             upCIoTEPSOptimisation            |input;|
    cpCIoTEPSOptimisation            u8             u8             cpCIoTEPSOptimisation            |input;|
    cellIdentity[4]                  array          u8             cellIdentity                     |multiedit;|
    neighbouringFreqNum              u8             u8             neighbouringFreqNum              |input;|
    neighbourFreq[MAX_FREQ_NUM]      array          T_CellDescLte  neighbourFreq                    |multiedit;|
    cellNum                          u8             u8             cellNum                          |input;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array          T_EPossPlmn    cellInfo                         |multiedit;|
</sub T_ERR_ACT_IND>


<0x1222 OP_ERR_ACT_ERR>
    signalHeader  struct       T_MsgHeader  
</0x1222 OP_ERR_ACT_ERR>


<sub T_ERR_DEACT_REQ>
    deactCause  u8  u8  deactCause  |input;|
</sub T_ERR_DEACT_REQ>


<0x122c OP_ERR_DEACT_REQ>
    signalHeader   struct           T_MsgHeader      
    ERR_DEACT_REQ  struct           T_ERR_DEACT_REQ  
</0x122c OP_ERR_DEACT_REQ>


<0x122d OP_ERR_ABORT_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x122d OP_ERR_ABORT_PLMN_REQ>


<sub T_ERR_GET_PLMN_REQ>
    hplmnFlag  u8  u8  hplmnFlag  |input;|
</sub T_ERR_GET_PLMN_REQ>


<sub T_ERR_GET_PLMN_CNF>
    cellNum                          u8           u8           cellNum                          |input;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array        T_EPossPlmn  cellInfo                         |multiedit;|
</sub T_ERR_GET_PLMN_CNF>


<sub T_ERR_NEW_PARAM_REQ>
    equivalentPlmnNum                                      u8                                                     u8                                                     equivalentPlmnNum                                      |input;|
    equivaHplmnNum                                         u8                                                     u8                                                     equivaHplmnNum                                         |input;|
    k                                                      u8                                                     u8                                                     k                                                      |input;|
    forbiddenTaiNum                                        u8                                                     u8                                                     forbiddenTaiNum                                        |input;|
    stmsiValid                                             u8                                                     u8                                                     stmsiValid                                             |input;|
    lteKeyValid                                            u8                                                     u8                                                     lteKeyValid                                            |input;|
    regTai[MAX_TAI_LEN]                                    array                                                  u8                                                     regTai                                                 |multiedit;|
    mmeid[MAX_MME_ID_LEN]                                  array                                                  u8                                                     mmeid                                                  |multiedit;|
    stmsi[MAX_STMSI_LEN]                                   array                                                  u8                                                     stmsi                                                  |multiedit;|
    selectedPlmn                                           struct                                                 T_Plmn                                                 
    simHplmn                                               struct                                                 T_Plmn                                                 
    equEhplmn[MAX_EQU_PLMNS_NUM]                           array                                                  T_Plmn                                                 equEhplmn                                              |multiedit;|
    equivalentPlmn[MAX_EQU_PLMNS_NUM]                      array                                                  T_Plmn                                                 equivalentPlmn                                         |multiedit;|
    forbiddenTaiForNationalRoam[MAX_FORBIDDEN_TAI_NUM]     array                                                  T_forbiddenTaiForNationalRoam                          forbiddenTaiForNationalRoam                            |multiedit;|
    kEnb[KEY_ENB_LEN]                                      array                                                  u8                                                     kEnb                                                   |multiedit;|
    kAsme[KEY_ASME_LEN]                                    array                                                  u8                                                     kAsme                                                  |multiedit;|
</sub T_ERR_NEW_PARAM_REQ>


<sub T_forbiddenTaiForNationalRoam
    forbiddenTaiForNationalRoam[5]                         array                                                  u8                                                     forbiddenTaiForNationalRoam                            |multiedit;|
</sub T_forbiddenTaiForNationalRoam


<sub T_ERR_SET_STATE_REQ>
    stateFlag     u8      u8      stateFlag     |input;|
    plmnSelected  struct  T_Plmn  
</sub T_ERR_SET_STATE_REQ>


<sub T_ERR_LOOP_TEST_REQ>
    command                 u8           u8           command                 |input;|
    rbNum                   u8           u8           rbNum                   |input;|
    rbList[MAX_RB_NUM_LTE]  array        T_rbParaLte  rbList                  |multiedit;|
</sub T_ERR_LOOP_TEST_REQ>


<sub T_ERR_LOOP_TEST_CNF>
    command  u8  u8  command  |input;|
    cause    u8  u8  cause    |input;|
</sub T_ERR_LOOP_TEST_CNF>


<0x1226 OP_ERR_ACT_REQ>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_REQ   struct         T_ERR_ACT_REQ  
</0x1226 OP_ERR_ACT_REQ>


<0x1221 OP_ERR_ACT_IND>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_IND   struct         T_ERR_ACT_IND  
</0x1221 OP_ERR_ACT_IND>


<0x1227 OP_ERR_GET_PLMN_REQ>
    signalHeader      struct              T_MsgHeader         
    ERR_GET_PLMN_REQ  struct              T_ERR_GET_PLMN_REQ  
</0x1227 OP_ERR_GET_PLMN_REQ>


<0x1225 OP_ERR_GET_PLMN_CNF>
    signalHeader      struct              T_MsgHeader         
    ERR_GET_PLMN_CNF  struct              T_ERR_GET_PLMN_CNF  
</0x1225 OP_ERR_GET_PLMN_CNF>


<0x122b OP_ERR_NEW_PARAM_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_NEW_PARAM_REQ  struct               T_ERR_NEW_PARAM_REQ  
</0x122b OP_ERR_NEW_PARAM_REQ>


<0x122a OP_ERR_SET_STATE_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_SET_STATE_REQ  struct               T_ERR_SET_STATE_REQ  
</0x122a OP_ERR_SET_STATE_REQ>


<0x1229 OP_ERR_LOOP_TEST_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_LOOP_TEST_REQ  struct               T_ERR_LOOP_TEST_REQ  
</0x1229 OP_ERR_LOOP_TEST_REQ>


<0x1223 OP_ERR_LOOP_TEST_CNF>
    signalHeader       struct               T_MsgHeader          
    ERR_LOOP_TEST_CNF  struct               T_ERR_LOOP_TEST_CNF  
</0x1223 OP_ERR_LOOP_TEST_CNF>


<sub T_ERR_BAR_ALLEVIATE_IND>
    barAlleviateType  u8  u8  barAlleviateType  |input;|
</sub T_ERR_BAR_ALLEVIATE_IND>


<0x1220 OP_ERR_BAR_ALLEVIATE_IND>
    signalHeader           struct                   T_MsgHeader              
    ERR_BAR_ALLEVIATE_IND  struct                   T_ERR_BAR_ALLEVIATE_IND  
</0x1220 OP_ERR_BAR_ALLEVIATE_IND>


<0x1231 OP_ERR_GET_PLMN_REJ>
    signalHeader  struct       T_MsgHeader  
</0x1231 OP_ERR_GET_PLMN_REJ>


<0x1230 OP_ERR_ABORT_PLMN_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1230 OP_ERR_ABORT_PLMN_CNF>


<0x1232 OP_ERR_DEACT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1232 OP_ERR_DEACT_CNF>


<sub T_ERR_EDRX_IND>
    edrxSleepTime  u32  u32  edrxSleepTime  |input;|
</sub T_ERR_EDRX_IND>


<0x122f OP_ERR_EDRX_IND>
    signalHeader  struct          T_MsgHeader     
    ERR_EDRX_IND  struct          T_ERR_EDRX_IND  
</0x122f OP_ERR_EDRX_IND>


<sub T_ERR_EDRX_PARAM_REQ>
    eDrxStatus  u8   u8   eDrxStatus  |input;|
    edrxPeriod  u32  u32  edrxPeriod  |input;|
    ptw         u32  u32  ptw         |input;|
</sub T_ERR_EDRX_PARAM_REQ>


<0x122e OP_ERR_EDRX_PARAM_REQ>
    signalHeader        struct                T_MsgHeader           
    ERR_EDRX_PARAM_REQ  struct                T_ERR_EDRX_PARAM_REQ  
</0x122e OP_ERR_EDRX_PARAM_REQ>


<sub T_ERR_CEMODE_IND>
    ceMode  u8  u8  ceMode  |input;|
</sub T_ERR_CEMODE_IND>


<0x1233 OP_ERR_CEMODE_IND>
    signalHeader    struct            T_MsgHeader       
    ERR_CEMODE_IND  struct            T_ERR_CEMODE_IND  
</0x1233 OP_ERR_CEMODE_IND>


<sub T_ERABMAS_ESTABLISH_IND>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_ESTABLISH_IND>


<sub T_ERABMAS_ESTABLISH_RSP>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_ESTABLISH_RSP>


<sub T_ERABMAS_ESTABLISH_REJ>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_ESTABLISH_REJ>


<sub T_ERABMAS_RELEASE_IND>
    rabNum                u8              u8              rabNum                |input;|
    epsRelFlag            u8              u8              epsRelFlag            |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_RELEASE_IND>


<sub T_ERABMAS_STATUS_IND>
    cause  u8  u8  cause  |input;|
</sub T_ERABMAS_STATUS_IND>


<0x1200 OP_ERABMAS_ESTABLISH_IND>
    signalHeader           struct                   T_MsgHeader              
    ERABMAS_ESTABLISH_IND  struct                   T_ERABMAS_ESTABLISH_IND  
</0x1200 OP_ERABMAS_ESTABLISH_IND>


<0x1201 OP_ERABMAS_ESTABLISH_RSP>
    signalHeader           struct                   T_MsgHeader              
    ERABMAS_ESTABLISH_RSP  struct                   T_ERABMAS_ESTABLISH_RSP  
</0x1201 OP_ERABMAS_ESTABLISH_RSP>


<0xffff OP_ERABMAS_ESTABLISH_REJ>
    signalHeader           struct                   T_MsgHeader              
    ERABMAS_ESTABLISH_REJ  struct                   T_ERABMAS_ESTABLISH_REJ  
</0xffff OP_ERABMAS_ESTABLISH_REJ>


<0x1202 OP_ERABMAS_RELEASE_IND>
    signalHeader         struct                 T_MsgHeader            
    ERABMAS_RELEASE_IND  struct                 T_ERABMAS_RELEASE_IND  
</0x1202 OP_ERABMAS_RELEASE_IND>


<0x1204 OP_ERABMAS_STATUS_IND>
    signalHeader        struct                T_MsgHeader           
    ERABMAS_STATUS_IND  struct                T_ERABMAS_STATUS_IND  
</0x1204 OP_ERABMAS_STATUS_IND>


<0x1203 OP_ERABMAS_RELEASE_RSP>
    signalHeader  struct       T_MsgHeader  
</0x1203 OP_ERABMAS_RELEASE_RSP>


<sub T_PDCP_DATA_REQ_LTE>
    rbIdentity     u8           u8           rbIdentity     |input;|
    reserved3[3]   array        u8           reserved3      |multiedit;|
    pDataPointer   Ptr          T_ComPduLte  
</sub T_PDCP_DATA_REQ_LTE>


<sub T_PDCP_DATA_IND_LTE>
    rbIdentity    u8           u8           rbIdentity    |input;|
    reserved3[3]  array        u8           reserved3     |multiedit;|
    pdata         Ptr          T_ComSduLte  
</sub T_PDCP_DATA_IND_LTE>


<0x12a8 OP_PDCP_DATA_REQ_LTE>
    signalHeader       struct               T_MsgHeader          
    PDCP_DATA_REQ_LTE  struct               T_PDCP_DATA_REQ_LTE  
</0x12a8 OP_PDCP_DATA_REQ_LTE>


<0x12a7 OP_PDCP_DATA_IND_LTE>
    signalHeader       struct               T_MsgHeader          
    PDCP_DATA_IND_LTE  struct               T_PDCP_DATA_IND_LTE  
</0x12a7 OP_PDCP_DATA_IND_LTE>


<0x12ab OP_PDCP_ENTER_FLOW_CTR_IND>
    signalHeader  struct       T_MsgHeader  
</0x12ab OP_PDCP_ENTER_FLOW_CTR_IND>


<0x12aa OP_PDCP_RELEASE_FLOW_CTR_IND>
    signalHeader  struct       T_MsgHeader  
</0x12aa OP_PDCP_RELEASE_FLOW_CTR_IND>


<sub T_PDCP_FLOW_ALLOWANCE_IND>
    rbIdentity    u8   u8   rbIdentity    |input;|
    allowedIpNum  u16  u16  allowedIpNum  |input;|
</sub T_PDCP_FLOW_ALLOWANCE_IND>


<0x12a9 OP_PDCP_FLOW_ALLOWANCE_IND>
    signalHeader             struct                     T_MsgHeader                
    PDCP_FLOW_ALLOWANCE_IND  struct                     T_PDCP_FLOW_ALLOWANCE_IND  
</0x12a9 OP_PDCP_FLOW_ALLOWANCE_IND>


<sub T_securityAlgorithm>
    integrityAlgorithm  u8     u8     integrityAlgorithm  |input;|
    ciperAlgorithm      u8     u8     ciperAlgorithm      |input;|
    reserved2[2]        array  u8     reserved2           |multiedit;|
</sub T_securityAlgorithm>


<sub T_securityKey>
    keyRrcInt[16]  array  u8     keyRrcInt      |multiedit;|
    keyRrcEnc[16]  array  u8     keyRrcEnc      |multiedit;|
    keyUpEnc[16]   array  u8     keyUpEnc       |multiedit;|
    keyEnb[32]     array  u8     keyEnb         |multiedit;|
</sub T_securityKey>


<sub T_CPDCP_CONFIG_REQ_LTE>
    rbId                  u8                   u8                   rbId                  |input;|
    configCause           u8                   u8                   configCause           |input;|
    discardTimer          u8                   u8                   discardTimer          |input;|
    rlcMode               u8                   u8                   rlcMode               |input;|
    snSize                u8                   u8                   snSize                |input;|
    statusReportRequried  u8                   u8                   statusReportRequried  |input;|
    heaComFlag            u8                   u8                   heaComFlag            |input;|
    loopTestMode          u8                   u8                   loopTestMode          |input;|
    headComInfo           struct               T_headComInfo        
    securityAlgorithm     struct               T_securityAlgorithm  
    securityKey           struct               T_securityKey        
    pduSize               u16                  u16                  pduSize               |input;|
    asContextFlag         u8                   u8                   asContextFlag         |input;|
    reserved1             u8                   u8                   reserved1             |input;|
    pCurrentErlcSduPos    u32                  u32                  pCurrentErlcSduPos    |input;|
</sub T_CPDCP_CONFIG_REQ_LTE>


<sub T_CPDCP_RELEASE_REQ_LTE>
    rbId  u8  u8  rbId  |input;|
</sub T_CPDCP_RELEASE_REQ_LTE>


<sub T_CPDCP_INTEGRITY_IND_LTE>
    rbId           u8     u8     rbId           |input;|
    integrityFlag  u8     u8     integrityFlag  |input;|
    mess[5]        array  u8     mess           |multiedit;|
    reserved1      u8     u8     reserved1      |input;|
</sub T_CPDCP_INTEGRITY_IND_LTE>


<sub T_CPDCP_DATA_CNF_LTE>
    stateFlag  u8  u8  stateFlag  |input;|
    cnfNum     u8  u8  cnfNum     |input;|
    nasMsgSn   u8  u8  nasMsgSn   |input;|
    reserved1  u8  u8  reserved1  |input;|
</sub T_CPDCP_DATA_CNF_LTE>


<sub T_CPDCP_DATA_REQ_LTE>
    rbId          u8           u8           rbId          |input;|
    cipherFlag    u8           u8           cipherFlag    |input;|
    reserved2[2]  array        u8           reserved2     |multiedit;|
    pduData       Ptr          T_ComPduLte  
</sub T_CPDCP_DATA_REQ_LTE>


<sub T_CPDCP_DATA_IND_LTE>
    rbId           u8           u8           rbId           |input;|
    pdcpHeaderLen  u8           u8           pdcpHeaderLen  |input;|
    pduLen         u16          u16          pduLen         |input;|
    pduData        Ptr          T_ComSduLte  
</sub T_CPDCP_DATA_IND_LTE>


<0x12a0 OP_CPDCP_CONFIG_REQ_LTE>
    signalHeader          struct                  T_MsgHeader             
    CPDCP_CONFIG_REQ_LTE  struct                  T_CPDCP_CONFIG_REQ_LTE  
</0x12a0 OP_CPDCP_CONFIG_REQ_LTE>


<0x12a1 OP_CPDCP_RELEASE_REQ_LTE>
    signalHeader           struct                   T_MsgHeader              
    CPDCP_RELEASE_REQ_LTE  struct                   T_CPDCP_RELEASE_REQ_LTE  
</0x12a1 OP_CPDCP_RELEASE_REQ_LTE>


<0x12a4 OP_CPDCP_INTEGRITY_IND_LTE>
    signalHeader             struct                     T_MsgHeader                
    CPDCP_INTEGRITY_IND_LTE  struct                     T_CPDCP_INTEGRITY_IND_LTE  
</0x12a4 OP_CPDCP_INTEGRITY_IND_LTE>


<0x12a5 OP_CPDCP_DATA_CNF_LTE>
    signalHeader        struct                T_MsgHeader           
    CPDCP_DATA_CNF_LTE  struct                T_CPDCP_DATA_CNF_LTE  
</0x12a5 OP_CPDCP_DATA_CNF_LTE>


<0x12a3 OP_CPDCP_DATA_REQ_LTE>
    signalHeader        struct                T_MsgHeader           
    CPDCP_DATA_REQ_LTE  struct                T_CPDCP_DATA_REQ_LTE  
</0x12a3 OP_CPDCP_DATA_REQ_LTE>


<0x12a6 OP_CPDCP_DATA_IND_LTE>
    signalHeader        struct                T_MsgHeader           
    CPDCP_DATA_IND_LTE  struct                T_CPDCP_DATA_IND_LTE  
</0x12a6 OP_CPDCP_DATA_IND_LTE>


<sub T_RarResourceInfo>
    ceMode           u16  u16  ceMode           |input;|
    msg3NbIndex      u16  u16  msg3NbIndex      |input;|
    startRB          u16  u16  startRB          |input;|
    lcrb             u16  u16  lcrb             |input;|
    msg3RepNum       u16  u16  msg3RepNum       |input;|
    modulationOrder  u16  u16  modulationOrder  |input;|
    tbSize           u16  u16  tbSize           |input;|
    tpcCommond       u16  u16  tpcCommond       |input;|
    csiFlag          u16  u16  csiFlag          |input;|
    uldelay          u16  u16  uldelay          |input;|
    mpdcchNbIndex    u16  u16  mpdcchNbIndex    |input;|
    reserved         u16  u16  reserved         |input;|
</sub T_RarResourceInfo>


<sub T_ResourceInfo>
    dciType          u16  u16  dciType          |input;|
    hoppingFlag      u16  u16  hoppingFlag      |input;|
    startRB          u16  u16  startRB          |input;|
    lcrb             u16  u16  lcrb             |input;|
    nb_index         u16  u16  nb_index         |input;|
    tranRepNum       u16  u16  tranRepNum       |input;|
    harqId           u16  u16  harqId           |input;|
    ndiValue         u16  u16  ndiValue         |input;|
    redundancyVers   u16  u16  redundancyVers   |input;|
    tpcCommond       u16  u16  tpcCommond       |input;|
    ulIndex          u16  u16  ulIndex          |input;|
    dai              u16  u16  dai              |input;|
    csiFlag          u16  u16  csiFlag          |input;|
    srsFlag          u16  u16  srsFlag          |input;|
    dciRepNum        u16  u16  dciRepNum        |input;|
    spsFlag          u16  u16  spsFlag          |input;|
    modulationOrder  u16  u16  modulationOrder  |input;|
    tbsize           u16  u16  tbsize           |input;|
    dmrsValue        u16  u16  dmrsValue        |input;|
    ulDelay          u16  u16  ulDelay          |input;|
</sub T_ResourceInfo>


<sub T_PuschDataCtr>
    flag      u16  u16  flag      |input;|
    reserved  u16  u16  reserved  |input;|
    dataPtr   Ptr  u8   
</sub T_PuschDataCtr>


<union T_Msg3ResourceInfo_union>
    rarResource  struct             T_RarResourceInfo  
    dciResource  struct             T_ResourceInfo     
</union T_Msg3ResourceInfo_union>


<sub T_ML1C_PRACH_SEND_REQ>
    cellDesc          struct         T_CellServLte  
    prachType         u16            u16            prachType         |input;|
    preamblIndex      u16            u16            preamblIndex      |input;|
    prachMaskIndex    u16            u16            prachMaskIndex    |input;|
    rarHopping        u16            u16            rarHopping        |input;|
    preambRepNum      u16            u16            preambRepNum      |input;|
    rarWinLen         u16            u16            rarWinLen         |input;|
    targetTransPower  s16            s16            targetTransPower  |input;|
    ceLevel           u16            u16            ceLevel           |input;|
</sub T_ML1C_PRACH_SEND_REQ>


<sub T_ML1C_RAR_RESULT_IND>
    rarSfn        u16    u16    rarSfn        |input;|
    successFlag   u16    u16    successFlag   |input;|
    rarData[128]  array  u8     rarData       |multiedit;|
</sub T_ML1C_RAR_RESULT_IND>


<sub T_ML1C_SEND_MSG3_REQ>
    msg3Sfn        u16             u16             msg3Sfn        |input;|
    transType      u16             u16             transType      |input;|
    ceMode         u16             u16             ceMode         |input;|
    mpdcchNbIndex  u16             u16             mpdcchNbIndex  |input;|
    grantInfo      struct          T_ResourceInfo  
    tempCrnti      u32             u32             tempCrnti      |input;|
    crnti          u32             u32             crnti          |input;|
    msg3           Ptr             T_PuschDataCtr  
</sub T_ML1C_SEND_MSG3_REQ>


<sub T_ML1C_PDCCH_ORDER_IND>
    raPreamblIndex  u16  u16  raPreamblIndex  |input;|
    prachMaskIndex  u16  u16  prachMaskIndex  |input;|
    startCeLevel    u16  u16  startCeLevel    |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_ML1C_PDCCH_ORDER_IND>


<sub T_ML1C_PRACH_END_REQ>
    crnti  u32  u32  crnti  |input;|
</sub T_ML1C_PRACH_END_REQ>


<sub T_ML1C_DL_HARQ_INFO_IND>
    dciRecvSfn    u16  u16  dciRecvSfn    |input;|
    pdschEndSfn   u16  u16  pdschEndSfn   |input;|
    harqId        u16  u16  harqId        |input;|
    dataType      u16  u16  dataType      |input;|
    resourceType  u16  u16  resourceType  |input;|
    reserved      u16  u16  reserved      |input;|
</sub T_ML1C_DL_HARQ_INFO_IND>


<sub T_ML1C_PDSCH_DLSCH_READ_IND>
    dataSfn  u16  u16  dataSfn  |input;|
    crcFlag  u16  u16  crcFlag  |input;|
    tbSize   u16  u16  tbSize   |input;|
    harqId   u16  u16  harqId   |input;|
    data     Ptr  u8   
</sub T_ML1C_PDSCH_DLSCH_READ_IND>


<sub T_ML1C_UL_HARQ_INFO_IND>
    dciRecvSfn       u16             u16             dciRecvSfn       |input;|
    resourceType     u16             u16             resourceType     |input;|
    crntiResInfoNum  u16             u16             crntiResInfoNum  |input;|
    spsResInfoNum    u16             u16             spsResInfoNum    |input;|
    crntiResInfo[2]  array           T_ResourceInfo  crntiResInfo     |multiedit;|
    spsResInfo[2]    array           T_ResourceInfo  spsResInfo       |multiedit;|
</sub T_ML1C_UL_HARQ_INFO_IND>


<sub T_ML1C_PUSCH_SEND_REQ>
    sendSfn     u16             u16             sendSfn     |input;|
    transType   u16             u16             transType   |input;|
    rnti        u16             u16             rnti        |input;|
    reserved    u16             u16             reserved    |input;|
    resourInfo  struct          T_ResourceInfo  
    data        Ptr             T_PuschDataCtr  
</sub T_ML1C_PUSCH_SEND_REQ>


<sub T_ML1C_SR_SEND_REQ>
    srPeriod         u16  u16  srPeriod         |input;|
    srOffset         u16  u16  srOffset         |input;|
    srMaxNum         u16  u16  srMaxNum         |input;|
    srProhibitTimer  u16  u16  srProhibitTimer  |input;|
    srResourceIndex  u16  u16  srResourceIndex  |input;|
    reserved         u16  u16  reserved         |input;|
</sub T_ML1C_SR_SEND_REQ>


<sub T_ML1C_DRX_STATUS_REQ>
    cause     u16  u16  cause     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_ML1C_DRX_STATUS_REQ>


<sub T_ML1C_ADJUST_TA_REQ>
    sfn        u16  u16  sfn        |input;|
    ta         u16  u16  ta         |input;|
    rarTaFlag  u16  u16  rarTaFlag  |input;|
    reserved   u16  u16  reserved   |input;|
</sub T_ML1C_ADJUST_TA_REQ>


<0x124c OP_ML1C_PRACH_SEND_REQ>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_PRACH_SEND_REQ  
</0x124c OP_ML1C_PRACH_SEND_REQ>


<0x124d OP_ML1C_RAR_RESULT_IND>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_RAR_RESULT_IND  
</0x124d OP_ML1C_RAR_RESULT_IND>


<0x124e OP_ML1C_SEND_MSG3_REQ>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_ML1C_SEND_MSG3_REQ  
</0x124e OP_ML1C_SEND_MSG3_REQ>


<0x124f OP_ML1C_CONTENTION_SUCCESS_IND>
    signalHeader  struct       T_MsgHeader  
</0x124f OP_ML1C_CONTENTION_SUCCESS_IND>


<0x1250 OP_ML1C_PDCCH_ORDER_IND>
    signalHeader  struct                  T_MsgHeader             
    sigInfo       struct                  T_ML1C_PDCCH_ORDER_IND  
</0x1250 OP_ML1C_PDCCH_ORDER_IND>


<0x1251 OP_ML1C_PRACH_END_REQ>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_ML1C_PRACH_END_REQ  
</0x1251 OP_ML1C_PRACH_END_REQ>


<0x1252 OP_ML1C_DL_HARQ_INFO_IND>
    signalHeader  struct                   T_MsgHeader              
    sigInfo       struct                   T_ML1C_DL_HARQ_INFO_IND  
</0x1252 OP_ML1C_DL_HARQ_INFO_IND>


<0x1253 OP_ML1C_UL_HARQ_INFO_IND>
    signalHeader  struct                   T_MsgHeader              
    sigInfo       struct                   T_ML1C_UL_HARQ_INFO_IND  
</0x1253 OP_ML1C_UL_HARQ_INFO_IND>


<0x1255 OP_ML1C_ADJUST_TA_REQ>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_ML1C_ADJUST_TA_REQ  
</0x1255 OP_ML1C_ADJUST_TA_REQ>


<0x1256 OP_ML1C_SR_SEND_REQ>
    signalHeader  struct              T_MsgHeader         
    sigInfo       struct              T_ML1C_SR_SEND_REQ  
</0x1256 OP_ML1C_SR_SEND_REQ>


<0x1257 OP_ML1C_SR_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1257 OP_ML1C_SR_STOP_REQ>


<0x1258 OP_ML1C_PUSCH_SEND_REQ>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_PUSCH_SEND_REQ  
</0x1258 OP_ML1C_PUSCH_SEND_REQ>


<0x1259 OP_ML1C_INITIAL_CR_SUCCESS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1259 OP_ML1C_INITIAL_CR_SUCCESS_REQ>


<0x125a OP_ML1C_DRX_STATUS_REQ>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_DRX_STATUS_REQ  
</0x125a OP_ML1C_DRX_STATUS_REQ>


<0x1254 OP_ML1C_PDSCH_DLSCH_READ_IND>
    signalHeader  struct                       T_MsgHeader                  
    sigInfo       struct                       T_ML1C_PDSCH_DLSCH_READ_IND  
</0x1254 OP_ML1C_PDSCH_DLSCH_READ_IND>


<0x125b OP_ML1C_SR_MAXNUM_IND>
    signalHeader  struct       T_MsgHeader  
</0x125b OP_ML1C_SR_MAXNUM_IND>


<0x1343 OP_T_EMAC_periodicBSR>
    signalHeader  struct       T_MsgHeader  
</0x1343 OP_T_EMAC_periodicBSR>


<sub T_MAC_DRX_EVENT_IND_LTE>
    cycleChange      u16  u16  cycleChange      |input;|
    drxStatusChange  u16  u16  drxStatusChange  |input;|
</sub T_MAC_DRX_EVENT_IND_LTE>


<0x1246 OP_MAC_DRX_EVENT_IND_LTE>
    signalHeader           struct                   T_MsgHeader              
    MAC_DRX_EVENT_IND_LTE  struct                   T_MAC_DRX_EVENT_IND_LTE  
</0x1246 OP_MAC_DRX_EVENT_IND_LTE>


<sub T_DrxConfigInfo>
    validFlag           u16  u16  validFlag           |input;|
    onDurationTimer     u16  u16  onDurationTimer     |input;|
    inactiveTimer       u16  u16  inactiveTimer       |input;|
    dlReTranTimer       u16  u16  dlReTranTimer       |input;|
    ulRetranTimer       u16  u16  ulRetranTimer       |input;|
    longDrxCycle        u16  u16  longDrxCycle        |input;|
    longDrxStartOffset  u16  u16  longDrxStartOffset  |input;|
    shortDrxCycle       u16  u16  shortDrxCycle       |input;|
    shortCycleTimer     u16  u16  shortCycleTimer     |input;|
    reserved            u16  u16  reserved            |input;|
</sub T_DrxConfigInfo>


<sub T_CellServLte>
    frequency          u16  u16  frequency          |input;|
    phyCellId          u16  u16  phyCellId          |input;|
    cellType           u16  u16  cellType           |input;|
    dlBandWidth        u16  u16  dlBandWidth        |input;|
    ulBandWidth        u16  u16  ulBandWidth        |input;|
    dlCpType           u16  u16  dlCpType           |input;|
    ulCpType           u16  u16  ulCpType           |input;|
    sfAssigment        u16  u16  sfAssigment        |input;|
    specialSfPatern    u16  u16  specialSfPatern    |input;|
    antennaPortsCount  u16  u16  antennaPortsCount  |input;|
</sub T_CellServLte>


<sub T_p0Persistent>
    p0PersisTentFlag  u16  u16  p0PersisTentFlag  |input;|
    p0UePusch         s16  s16  p0UePusch         |input;|
    p0NomiPusch       s16  s16  p0NomiPusch       |input;|
    reserved          u16  u16  reserved          |input;|
</sub T_p0Persistent>


<sub T_SpsConfigUl>
    spsUlFlag             u16             u16             spsUlFlag             |input;|
    spsIntervalUl         u16             u16             spsIntervalUl         |input;|
    implicitReleaseAfter  u16             u16             implicitReleaseAfter  |input;|
    reserved              u16             u16             reserved              |input;|
    p0Persistent          struct          T_p0Persistent  
    twoIntervalFlag       u16             u16             twoIntervalFlag       |input;|
    numUlProcess          u16             u16             numUlProcess          |input;|
</sub T_SpsConfigUl>


<sub T_SpsConfigDl>
    spsDlFlag                        u16    u16    spsDlFlag                        |input;|
    spsIntervalDl                    u16    u16    spsIntervalDl                    |input;|
    numDlProcess                     u16    u16    numDlProcess                     |input;|
    n1PucchNum                       u16    u16    n1PucchNum                       |input;|
    n1PucchNumP1                     u16    u16    n1PucchNumP1                     |input;|
    reserved                         u16    u16    reserved                         |input;|
    n1Pucch[EAS_MAX_N1_PUCCH_NUM]    array  u16    n1Pucch                          |multiedit;|
    n1PucchP1[EAS_MAX_N1_PUCCH_NUM]  array  u16    n1PucchP1                        |multiedit;|
</sub T_SpsConfigDl>


<sub T_SpsConfigInfo>
    spsRnti      u32            u32            spsRnti      |input;|
    spsConfigDl  struct         T_SpsConfigDl  
    spsConfigUl  struct         T_SpsConfigUl  
</sub T_SpsConfigInfo>


<sub T_Prach_ConfigInfo>
    prachConfigIndex           u16  u16  prachConfigIndex           |input;|
    highSpeedFlag              u16  u16  highSpeedFlag              |input;|
    zeroCorrelationZoneConfig  u16  u16  zeroCorrelationZoneConfig  |input;|
    prachFreqOffset            u16  u16  prachFreqOffset            |input;|
</sub T_Prach_ConfigInfo>


<sub T_Prach_Config>
    rootSequenceIndex  u16                 u16                 rootSequenceIndex  |input;|
    reserved           u16                 u16                 reserved           |input;|
    prachConfigInfo    struct              T_Prach_ConfigInfo  
</sub T_Prach_Config>


<sub T_PRACH_ParametersListCE>
    prachConfigIndex                u16    u16    prachConfigIndex                |input;|
    prachFreqOffset                 u16    u16    prachFreqOffset                 |input;|
    prachStartingSubframe           u16    u16    prachStartingSubframe           |input;|
    maxNumPreambleAttemptCE         u16    u16    maxNumPreambleAttemptCE         |input;|
    numRepetitionPerPreambleAttemp  u16    u16    numRepetitionPerPreambleAttemp  |input;|
    mpdcchNbsNum                    u16    u16    mpdcchNbsNum                    |input;|
    mpdcchNbsToMonitor[2]           array  u16    mpdcchNbsToMonitor              |multiedit;|
    mpdcchNumRepetitionRA           u16    u16    mpdcchNumRepetitionRA           |input;|
    prachHopConfig                  u16    u16    prachHopConfig                  |input;|
</sub T_PRACH_ParametersListCE>


<sub T_Prach_Config_R13>
    rsrpThresholdNum                u16                       u16                       rsrpThresholdNum                |input;|
    rsrpThresholdsPrachInfoList[3]  array                     u16                       rsrpThresholdsPrachInfoList     |multiedit;|
    mpdcchStartSFCssRAType          u16                       u16                       mpdcchStartSFCssRAType          |input;|
    mpdcchStartSFCssRA              u16                       u16                       mpdcchStartSFCssRA              |input;|
    prachHoppingOffset              u16                       u16                       prachHoppingOffset              |input;|
    prachParameterNum               u16                       u16                       prachParameterNum               |input;|
    prachParametersListCE[4]        array                     T_PRACH_ParametersListCE  prachParametersListCE           |multiedit;|
    initialCeLevel                  u16                       u16                       initialCeLevel                  |input;|
    reserved                        u16                       u16                       reserved                        |input;|
</sub T_Prach_Config_R13>


<sub T_BLValidSubfBitMap>
    validMapBitNum                 u16    u16    validMapBitNum                 |input;|
    fddDownOrTddSubframeBitmap[3]  array  u16    fddDownOrTddSubframeBitmap     |multiedit;|
    fddUplinkSubframeBitmapLC      u16    u16    fddUplinkSubframeBitmapLC      |input;|
    Reserved                       u16    u16    Reserved                       |input;|
</sub T_BLValidSubfBitMap>


<sub T_MbsfnConfigInfo>
    radioframeAllocatPeriod  u16  u16  radioframeAllocatPeriod  |input;|
    radioframeAllocatOffset  u16  u16  radioframeAllocatOffset  |input;|
    subframeAllocationInfo   u32  u32  subframeAllocationInfo   |input;|
</sub T_MbsfnConfigInfo>


<sub T_IdlMeasFreqInfo>
    frequency                                   u16    u16    frequency                                   |input;|
    measBandWith                                u16    u16    measBandWith                                |input;|
    presenceAntennaPort1                        u16    u16    presenceAntennaPort1                        |input;|
    neighCellConfig                             u16    u16    neighCellConfig                             |input;|
    cellNum                                     u16    u16    cellNum                                     |input;|
    priority                                    u16    u16    priority                                    |input;|
    blackCellNum                                u16    u16    blackCellNum                                |input;|
    reserved                                    u16    u16    reserved                                    |input;|
    blackPhyId[EAS_MAX_IDL_BLACKCELL_NUM]       array  u16    blackPhyId                                  |multiedit;|
    blackPhyIdRange[EAS_MAX_IDL_BLACKCELL_NUM]  array  u16    blackPhyIdRange                             |multiedit;|
</sub T_IdlMeasFreqInfo>


<sub T_Pdsch_CommInfo>
    referenceSignalPower             s16  s16  referenceSignalPower             |input;|
    pb                               u16  u16  pb                               |input;|
    pdschMaxNumRepetitionCEmodeAR13  u16  u16  pdschMaxNumRepetitionCEmodeAR13  |input;|
    pdschMaxNumRepetitionCEmodeBR13  u16  u16  pdschMaxNumRepetitionCEmodeBR13  |input;|
</sub T_Pdsch_CommInfo>


<sub T_PuschRsInfo>
    groupHopFlag     u16  u16  groupHopFlag     |input;|
    groupAssign      u16  u16  groupAssign      |input;|
    sequenceHopFlag  u16  u16  sequenceHopFlag  |input;|
    cyclicShift      u16  u16  cyclicShift      |input;|
</sub T_PuschRsInfo>


<sub T_PuschConfigBasic>
    nSb        u16  u16  nSb        |input;|
    hopMode    u16  u16  hopMode    |input;|
    hopOffset  u16  u16  hopOffset  |input;|
    qam64Flag  u16  u16  qam64Flag  |input;|
</sub T_PuschConfigBasic>


<sub T_Pusch_CommInfo>
    puschRs             struct         T_PuschRsInfo  
    puschMaxNumCEModeA  u16            u16            puschMaxNumCEModeA  |input;|
    puschMaxNumCEModeB  u16            u16            puschMaxNumCEModeB  |input;|
    puschHoppingOffset  u16            u16            puschHoppingOffset  |input;|
    reserved            u16            u16            reserved            |input;|
</sub T_Pusch_CommInfo>


<sub T_Pucch_CommInfo>
    deltaPucchShift                 u16    u16    deltaPucchShift                 |input;|
    cqiNrb                          u16    u16    cqiNrb                          |input;|
    nCsAn                           u16    u16    nCsAn                           |input;|
    n1pucchAnNum                    u16    u16    n1pucchAnNum                    |input;|
    n1pucchAnList[4]                array  u16    n1pucchAnList                   |multiedit;|
    pucchNumRepetitionCEMsg4Level0  u16    u16    pucchNumRepetitionCEMsg4Level0  |input;|
    pucchNumRepetitionCEMsg4Level1  u16    u16    pucchNumRepetitionCEMsg4Level1  |input;|
    pucchNumRepetitionCEMsg4Level2  u16    u16    pucchNumRepetitionCEMsg4Level2  |input;|
    pucchNumRepetitionCEMsg4Level3  u16    u16    pucchNumRepetitionCEMsg4Level3  |input;|
</sub T_Pucch_CommInfo>


<sub T_FreqHoppingParameters>
    mpdcchPdschHoppingNB              u16  u16  mpdcchPdschHoppingNB              |input;|
    dlModeAType                       u16  u16  dlModeAType                       |input;|
    intervalDlHoppingConfigCommModeA  u16  u16  intervalDlHoppingConfigCommModeA  |input;|
    dlModeBType                       u16  u16  dlModeBType                       |input;|
    intervalDlHoppingConfigCommModeB  u16  u16  intervalDlHoppingConfigCommModeB  |input;|
    ulModeAType                       u16  u16  ulModeAType                       |input;|
    intervalUlHoppingConfigCommModeA  u16  u16  intervalUlHoppingConfigCommModeA  |input;|
    ulModeBType                       u16  u16  ulModeBType                       |input;|
    intervalUlHoppingConfigCommModeB  u16  u16  intervalUlHoppingConfigCommModeB  |input;|
    mpdcchPdschHoppingOffset          u16  u16  mpdcchPdschHoppingOffset          |input;|
</sub T_FreqHoppingParameters>


<sub T_UlSrsCommInfo>
    ulSrsCommInfoFlag  u16  u16  ulSrsCommInfoFlag  |input;|
    srsBandWidth       u16  u16  srsBandWidth       |input;|
    srsSubFrameType    u16  u16  srsSubFrameType    |input;|
    ackNackSimulFlag   u16  u16  ackNackSimulFlag   |input;|
    uptsRecofigFlag    u16  u16  uptsRecofigFlag    |input;|
    reserved           u16  u16  reserved           |input;|
</sub T_UlSrsCommInfo>


<sub T_PucchDeltaFList>
    format1   u16  u16  format1   |input;|
    format1b  u16  u16  format1b  |input;|
    format2   u16  u16  format2   |input;|
    format2a  u16  u16  format2a  |input;|
    format2b  u16  u16  format2b  |input;|
    reseved   u16  u16  reseved   |input;|
</sub T_PucchDeltaFList>


<sub T_UlPowerCtlCommInfo>
    p0NomiPusch        s16                s16                p0NomiPusch        |input;|
    alpha              u16                u16                alpha              |input;|
    p0NomiPucch        s16                s16                p0NomiPucch        |input;|
    deltaPreambleMsg3  s16                s16                deltaPreambleMsg3  |input;|
    pucchDeltaFlist    struct             T_PucchDeltaFList  
</sub T_UlPowerCtlCommInfo>


<sub T_CqiReportConf>
    cqiReportFlag      u16  u16  cqiReportFlag      |input;|
    reportModeAp       u16  u16  reportModeAp       |input;|
    nomPdschRsEpreOff  s16  s16  nomPdschRsEpreOff  |input;|
    cqiRepPeriodFlag   u16  u16  cqiRepPeriodFlag   |input;|
    simulFlag          u16  u16  simulFlag          |input;|
    cqiPucchRescIndex  u16  u16  cqiPucchRescIndex  |input;|
    pmiConfIndex       u16  u16  pmiConfIndex       |input;|
    cqiFormatInd       u16  u16  cqiFormatInd       |input;|
    k                  u16  u16  k                  |input;|
    riIndex            u16  u16  riIndex            |input;|
    pmiRiReportFlag    u16  u16  pmiRiReportFlag    |input;|
    cqiMaskFlag        u16  u16  cqiMaskFlag        |input;|
</sub T_CqiReportConf>


<sub T_AntennaInfo>
    transMode           u16    u16    transMode           |input;|
    codBkSubSetNum      u16    u16    codBkSubSetNum      |input;|
    codBkSubsetRest[8]  array  u16    codBkSubsetRest     |multiedit;|
    ueTransAntSel       u16    u16    ueTransAntSel       |input;|
    reserved            u16    u16    reserved            |input;|
</sub T_AntennaInfo>


<sub T_PdschConfigDedicated>
    pa        u16  u16  pa        |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_PdschConfigDedicated>


<sub T_MpdcchConfigR13>
    validF                    u16  u16  validF                    |input;|
    csiNumRepetitionCE        u16  u16  csiNumRepetitionCE        |input;|
    mpdcchPdschHoppingConfig  u16  u16  mpdcchPdschHoppingConfig  |input;|
    mpdcchStartSFUESS         u16  u16  mpdcchStartSFUESS         |input;|
    mpdcchNumRepetition       u16  u16  mpdcchNumRepetition       |input;|
    mpdcchNarrowband          u16  u16  mpdcchNarrowband          |input;|
</sub T_MpdcchConfigR13>


<sub T_EpdcchSetConfigR11>
    transmissionType            u16                u16                transmissionType            |input;|
    numberPbrPais               u16                u16                numberPbrPais               |input;|
    resBlockAssignBitNum        u16                u16                resBlockAssignBitNum        |input;|
    resourceBlockAssignment[3]  array              u16                resourceBlockAssignment     |multiedit;|
    dmrsScramblingSequenceInt   u16                u16                dmrsScramblingSequenceInt   |input;|
    pucchResourceStartOffset    u16                u16                pucchResourceStartOffset    |input;|
    csiRSConfigZPId2            u16                u16                csiRSConfigZPId2            |input;|
    reserved                    u16                u16                reserved                    |input;|
    mpdcchConfigR13             struct             T_MpdcchConfigR13  
</sub T_EpdcchSetConfigR11>


<sub T_EpdcchConfigR11>
    startSymbolR11         u16                   u16                   startSymbolR11         |input;|
    EpdcchSetNum           u16                   u16                   EpdcchSetNum           |input;|
    EpdcchSetConfigR11[2]  array                 T_EpdcchSetConfigR11  EpdcchSetConfigR11     |multiedit;|
</sub T_EpdcchConfigR11>


<sub T_PuschDediInfo>
    ackIndexBetaOffset  u16  u16  ackIndexBetaOffset  |input;|
    riIndexBetaOffset   u16  u16  riIndexBetaOffset   |input;|
    cqiIndexBetaOffset  u16  u16  cqiIndexBetaOffset  |input;|
    puschHoppingConfig  u16  u16  puschHoppingConfig  |input;|
</sub T_PuschDediInfo>


<sub T_TpcConfig>
    tpcRnti        u32  u32  tpcRnti        |input;|
    formatType     u16  u16  formatType     |input;|
    IndexFormat3   u16  u16  IndexFormat3   |input;|
    IndexFormat3A  u16  u16  IndexFormat3A  |input;|
    reserved       u16  u16  reserved       |input;|
</sub T_TpcConfig>


<sub T_SrsConfigApR10>
    srsAntennaPortApR10  u16  u16  srsAntennaPortApR10  |input;|
    srsBandwidthApR10    u16  u16  srsBandwidthApR10    |input;|
    freqDomainPosApR10   u16  u16  freqDomainPosApR10   |input;|
    transCombApR10       u16  u16  transCombApR10       |input;|
    cyclicShiftApR10     u16  u16  cyclicShiftApR10     |input;|
    reserved             u16  u16  reserved             |input;|
</sub T_SrsConfigApR10>


<sub T_UlSrsDediInfoAperiodicR10>
    confFlag             u16  u16  confFlag             |input;|
    srsConfigIndexApR10  u16  u16  srsConfigIndexApR10  |input;|
</sub T_UlSrsDediInfoAperiodicR10>


<sub T_UlSrsDediInfo>
    ulSrsDediFlag           u16  u16  ulSrsDediFlag           |input;|
    srsBandWidth            u16  u16  srsBandWidth            |input;|
    srsHopBand              u16  u16  srsHopBand              |input;|
    freqDomainPos           u16  u16  freqDomainPos           |input;|
    duration                u16  u16  duration                |input;|
    srsConfIndex            u16  u16  srsConfIndex            |input;|
    transComb               u16  u16  transComb               |input;|
    cyclicShift             u16  u16  cyclicShift             |input;|
    srsAntennaPortR10       u16  u16  srsAntennaPortR10       |input;|
    transmissionCombNumR13  u16  u16  transmissionCombNumR13  |input;|
</sub T_UlSrsDediInfo>


<sub T_Pucch_Param_R13>
    validF          u16  u16  validF          |input;|
    nPucchIdentity  u16  u16  nPucchIdentity  |input;|
    n1PucchAN       u16  u16  n1PucchAN       |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_Pucch_Param_R13>


<sub T_Pucch_NumRepetitionCe>
    validF         u16  u16  validF         |input;|
    modeType       u16  u16  modeType       |input;|
    repNumFormat1  u16  u16  repNumFormat1  |input;|
    repNumFormat2  u16  u16  repNumFormat2  |input;|
</sub T_Pucch_NumRepetitionCe>


<sub T_Pucch_DedInfo>
    tddAckNackFeedbackMode  u16                      u16                      tddAckNackFeedbackMode  |input;|
    reserved                u16                      u16                      reserved                |input;|
    pucchParamR13           struct                   T_Pucch_Param_R13        
    pucchNumRepInfo         struct                   T_Pucch_NumRepetitionCe  
</sub T_Pucch_DedInfo>


<sub T_UlPowerCtrDediInfo>
    p0UePusch     s16  s16  p0UePusch     |input;|
    deltaMcsFlag  u16  u16  deltaMcsFlag  |input;|
    accumFlag     u16  u16  accumFlag     |input;|
    p0UePucch     s16  s16  p0UePucch     |input;|
    pSrsOffset    u16  u16  pSrsOffset    |input;|
    filterCoeff   u16  u16  filterCoeff   |input;|
</sub T_UlPowerCtrDediInfo>


<sub T_MeasSubframePatternR10>
    subframePatternIndex  u16    u16    subframePatternIndex  |input;|
    subframePattern[7]    array  u16    subframePattern       |multiedit;|
</sub T_MeasSubframePatternR10>


<sub T_DchMeasFreqInfo>
    frequency                                  u16                       u16                       frequency                                  |input;|
    measBandWith                               u16                       u16                       measBandWith                               |input;|
    presenceAntennaPort1                       u16                       u16                       presenceAntennaPort1                       |input;|
    neighCellConfig                            u16                       u16                       neighCellConfig                            |input;|
    measUpdateType                             u16                       u16                       measUpdateType                             |input;|
    blackCellNum                               u16                       u16                       blackCellNum                               |input;|
    reserved                                   u16                       u16                       reserved                                   |input;|
    measSubframeCellNum                        u16                       u16                       measSubframeCellNum                        |input;|
    measSubframePattern                        struct                    T_MeasSubframePatternR10  
    startPhyCellId[EAS_MAX_DCH_BLACKCELL_NUM]  array                     u16                       startPhyCellId                             |multiedit;|
    phyCellIdRange[EAS_MAX_DCH_BLACKCELL_NUM]  array                     u16                       phyCellIdRange                             |multiedit;|
</sub T_DchMeasFreqInfo>


<sub T_MeasFreqResult>
    frequency         u16  u16  frequency         |input;|
    intraCellMeasNum  u16  u16  intraCellMeasNum  |input;|
    blindMeasNum      u16  u16  blindMeasNum      |input;|
    reserved2         u16  u16  reserved2         |input;|
</sub T_MeasFreqResult>


<sub T_FreqBandLte>
    startPoint  u16  u16  startPoint  |input;|
    endPoint    u16  u16  endPoint    |input;|
</sub T_FreqBandLte>


<sub T_RL1C_PWR_SWEEP_REQ>
    sweepId                     u16            u16            sweepId                     |input;|
    freqBandNum                 u16            u16            freqBandNum                 |input;|
    plmnSearchFlag              u16            u16            plmnSearchFlag              |input;|
    reserved                    u16            u16            reserved                    |input;|
    freqBand[EAS_MAX_FREQBAND]  array          T_FreqBandLte  freqBand                    |multiedit;|
</sub T_RL1C_PWR_SWEEP_REQ>


<sub T_RL1C_PWR_SWEEP_CNF>
    sweepId           u16            u16            sweepId           |input;|
    freqPointNum      u16            u16            freqPointNum      |input;|
    scanFreqBandInfo  struct         T_FreqBandLte  
</sub T_RL1C_PWR_SWEEP_CNF>


<0x126a OP_RL1C_PWR_SWEEP_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_PWR_SWEEP_CNF  struct                T_RL1C_PWR_SWEEP_CNF  
</0x126a OP_RL1C_PWR_SWEEP_CNF>


<sub T_RL1C_CELL_SEARCH_REQ>
    cellSearchId    u16  u16  cellSearchId    |input;|
    freq            u16  u16  freq            |input;|
    plmnSearchFlag  u16  u16  plmnSearchFlag  |input;|
    pwrFlag         u16  u16  pwrFlag         |input;|
</sub T_RL1C_CELL_SEARCH_REQ>


<sub T_RL1C_CELL_SEARCH_CNF>
    cellSearchId  u16    u16    cellSearchId  |input;|
    cellNum       u16    u16    cellNum       |input;|
    frequency     u16    u16    frequency     |input;|
    reserved      u16    u16    reserved      |input;|
    phyCellId[3]  array  u16    phyCellId     |multiedit;|
    dlCpType[3]   array  u16    dlCpType      |multiedit;|
    syncOff[3]    array  u32    syncOff       |multiedit;|
</sub T_RL1C_CELL_SEARCH_CNF>


<0x126c OP_RL1C_CELL_SEARCH_CNF>
    signalHeader          struct                  T_MsgHeader             
    RL1C_CELL_SEARCH_CNF  struct                  T_RL1C_CELL_SEARCH_CNF  
</0x126c OP_RL1C_CELL_SEARCH_CNF>


<sub T_RL1C_FREQ_MEAS_REQ>
    freqMeasId                   u16    u16    freqMeasId                   |input;|
    freqNum                      u16    u16    freqNum                      |input;|
    freq[EAS_MAX_FREQ_MEAS_NUM]  array  u16    freq                         |multiedit;|
</sub T_RL1C_FREQ_MEAS_REQ>


<sub T_RL1C_FREQ_MEAS_CNF>
    freqMeasId                   u16    u16    freqMeasId                   |input;|
    freqNum                      u16    u16    freqNum                      |input;|
    freq[EAS_MAX_FREQ_MEAS_NUM]  array  u16    freq                         |multiedit;|
</sub T_RL1C_FREQ_MEAS_CNF>


<sub T_RL1C_CELL_SYNC_REQ>
    syncId        u16            u16            syncId        |input;|
    reserved      u16            u16            reserved      |input;|
    cellInfo      struct         T_CellServLte  
    syncOffset    u32            u32            syncOffset    |input;|
    syncType      u16            u16            syncType      |input;|
    syncBackFlag  u16            u16            syncBackFlag  |input;|
</sub T_RL1C_CELL_SYNC_REQ>


<sub T_RL1C_CELL_SYNC_CNF>
    syncId          u16  u16  syncId          |input;|
    successfulFlag  u16  u16  successfulFlag  |input;|
    dlCpType        u16  u16  dlCpType        |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_RL1C_CELL_SYNC_CNF>


<0x126d OP_RL1C_CELL_SYNC_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_CELL_SYNC_CNF  struct                T_RL1C_CELL_SYNC_CNF  
</0x126d OP_RL1C_CELL_SYNC_CNF>


<sub T_RL1C_SI_READ_REQ>
    siCellDesc                 struct                   T_CellServLte            
    plmnSearchFlag             u16                      u16                      plmnSearchFlag             |input;|
    useSysModPeriodFlag        u16                      u16                      useSysModPeriodFlag        |input;|
    syncOffset                 u32                      u32                      syncOffset                 |input;|
    siWindowLenth              u16                      u16                      siWindowLenth              |input;|
    siType                     u16                      u16                      siType                     |input;|
    siNum                      u16                      u16                      siNum                      |input;|
    siSchedulNum               u16                      u16                      siSchedulNum               |input;|
    siNvalue[EAS_MAX_SI_NUM]   array                    u16                      siNvalue                   |multiedit;|
    siPeriod[EAS_MAX_SI_NUM]   array                    u16                      siPeriod                   |multiedit;|
    sib1SchedulIndex           u16                      u16                      sib1SchedulIndex           |input;|
    siRepPatten                u16                      u16                      siRepPatten                |input;|
    siHoppingComCfg            u16                      u16                      siHoppingComCfg            |input;|
    startSymbolLC              u16                      u16                      startSymbolLC              |input;|
    validSubFrameConfig        struct                   T_BLValidSubfBitMap      
    freqHoppingParam           struct                   T_FreqHoppingParameters  
    siNbIndex[EAS_MAX_SI_NUM]  array                    u16                      siNbIndex                  |multiedit;|
    siTBS[EAS_MAX_SI_NUM]      array                    u16                      siTBS                      |multiedit;|
</sub T_RL1C_SI_READ_REQ>


<sub T_RL1C_MIB_DATA_IND>
    crcFlag            u16    u16    crcFlag            |input;|
    rsrp               u16    u16    rsrp               |input;|
    rsrq               u16    u16    rsrq               |input;|
    antennaPortsCount  u16    u16    antennaPortsCount  |input;|
    sfn_low2bit        u16    u16    sfn_low2bit        |input;|
    reserved           u16    u16    reserved           |input;|
    data[4]            array  u8     data               |multiedit;|
</sub T_RL1C_MIB_DATA_IND>


<sub T_RL1C_SIB1_DATA_IND>
    crcFlag                       u16    u16    crcFlag                       |input;|
    dataLen                       u16    u16    dataLen                       |input;|
    data[EAS_MAX_SI_DATA_LENGTH]  array  u8     data                          |multiedit;|
</sub T_RL1C_SIB1_DATA_IND>


<0x1268 OP_RL1C_SIB1_DATA_IND>
    signalHeader        struct                T_MsgHeader           
    RL1C_SIB1_DATA_IND  struct                T_RL1C_SIB1_DATA_IND  
</0x1268 OP_RL1C_SIB1_DATA_IND>


<sub T_RL1C_SI_DATA_IND>
    dataLen                       u16    u16    dataLen                       |input;|
    reserved                      u16    u16    reserved                      |input;|
    data[EAS_MAX_SI_DATA_LENGTH]  array  u8     data                          |multiedit;|
</sub T_RL1C_SI_DATA_IND>


<0x1269 OP_RL1C_SI_DATA_IND>
    signalHeader      struct              T_MsgHeader         
    RL1C_SI_DATA_IND  struct              T_RL1C_SI_DATA_IND  
</0x1269 OP_RL1C_SI_DATA_IND>


<sub T_PhichConfig>
    phichDuration  u16  u16  phichDuration  |input;|
    phichResource  u16  u16  phichResource  |input;|
</sub T_PhichConfig>


<sub T_RL1C_IDL_CONFIG_REQ>
    cellDescInfo                             struct                   T_CellServLte            
    measId                                   u16                      u16                      measId                                   |input;|
    pMax                                     s16                      s16                      pMax                                     |input;|
    qualMin                                  s16                      s16                      qualMin                                  |input;|
    qRxLevMin                                s16                      s16                      qRxLevMin                                |input;|
    intraSearchP                             u16                      u16                      intraSearchP                             |input;|
    intraSearchQ                             u16                      u16                      intraSearchQ                             |input;|
    nonIntraSearchP                          u16                      u16                      nonIntraSearchP                          |input;|
    nonIntraSearchQ                          u16                      u16                      nonIntraSearchQ                          |input;|
    lteHighPriorFreqNum                      u16                      u16                      lteHighPriorFreqNum                      |input;|
    lteLowPriorFreqNum                       u16                      u16                      lteLowPriorFreqNum                       |input;|
    nValue                                   u16                      u16                      nValue                                   |input;|
    pagingPeriod                             u16                      u16                      pagingPeriod                             |input;|
    ueIdPo                                   u16                      u16                      ueIdPo                                   |input;|
    reserved                                 u16                      u16                      reserved                                 |input;|
    siModiPeriod                             u32                      u32                      siModiPeriod                             |input;|
    lteMeasFreqInfo[EAS_MAX_LTE_FREQ_NUM]    array                    T_IdlMeasFreqInfo        lteMeasFreqInfo                          |multiedit;|
    lteMeasCellIdList[EAS_MAX_LTE_CELL_NUM]  array                    u16                      lteMeasCellIdList                        |multiedit;|
    pdschCommInfo                            struct                   T_Pdsch_CommInfo         
    idlConfigType                            u16                      u16                      idlConfigType                            |input;|
    ueIdPtw                                  u16                      u16                      ueIdPtw                                  |input;|
    edrxPeriod                               u32                      u32                      edrxPeriod                               |input;|
    ptwLen                                   u32                      u32                      ptwLen                                   |input;|
    maxMpdcchRepNum                          u16                      u16                      maxMpdcchRepNum                          |input;|
    numOfPagingNb                            u16                      u16                      numOfPagingNb                            |input;|
    siHoppingConfigComm                      u16                      u16                      siHoppingConfigComm                      |input;|
    startSymbolLC                            u16                      u16                      startSymbolLC                            |input;|
    validSfn                                 struct                   T_BLValidSubfBitMap      
    freqHoppingParam                         struct                   T_FreqHoppingParameters  
</sub T_RL1C_IDL_CONFIG_REQ>


<sub T_RL1C_PAGING_DATA_IND>
    result                         u16    u16    result                         |input;|
    dataLen                        u16    u16    dataLen                        |input;|
    data[EAS_MAX_PCH_INFO_LENGTH]  array  u8     data                           |multiedit;|
</sub T_RL1C_PAGING_DATA_IND>


<sub T_IdlMeasFreqResult>
    intraCellNum    u16  u16  intraCellNum    |input;|
    resultTypeFlag  u16  u16  resultTypeFlag  |input;|
    frequency       u16  u16  frequency       |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_IdlMeasFreqResult>


<sub T_RL1C_IDL_MEAS_IND>
    measId                                   u16                  u16                  measId                                   |input;|
    lteFreqNum                               u16                  u16                  lteFreqNum                               |input;|
    serveRsrp                                u16                  u16                  serveRsrp                                |input;|
    serveRsrq                                u16                  u16                  serveRsrq                                |input;|
    lteMeasResult[EAS_MAX_LTE_FREQ_NUM]      array                T_IdlMeasFreqResult  lteMeasResult                            |multiedit;|
    lteMeasCellIdList[EAS_MAX_LTE_CELL_NUM]  array                u16                  lteMeasCellIdList                        |multiedit;|
    rsrp[EAS_MAX_LTE_CELL_NUM]               array                u16                  rsrp                                     |multiedit;|
    rsrq[EAS_MAX_LTE_CELL_NUM]               array                u16                  rsrq                                     |multiedit;|
    syncOffset[EAS_MAX_LTE_CELL_NUM]         array                u32                  syncOffset                               |multiedit;|
    cellCpType[EAS_MAX_LTE_CELL_NUM]         array                u16                  cellCpType                               |multiedit;|
</sub T_RL1C_IDL_MEAS_IND>


<sub T_UlPowerCtlCommInfoV1020>
    ulPowerCtlComV1020Flag   u16  u16  ulPowerCtlComV1020Flag   |input;|
    deltafPucchFormat3R10    u16  u16  deltafPucchFormat3R10    |input;|
    deltaPucchFormat1bCsR10  u16  u16  deltaPucchFormat1bCsR10  |input;|
    reserved                 u16  u16  reserved                 |input;|
</sub T_UlPowerCtlCommInfoV1020>


<sub T_RL1C_CHN_COMM_CONFIG_REQ>
    servCellInfo        struct                   T_CellServLte            
    pcmax               s16                      s16                      pcmax               |input;|
    reserved            u16                      u16                      reserved            |input;|
    prachCfg            struct                   T_Prach_Config           
    pdschCommCfg        struct                   T_Pdsch_CommInfo         
    puschCommCfg        struct                   T_Pusch_CommInfo         
    pucchCommCfg        struct                   T_Pucch_CommInfo         
    ulSrsCommInfo       struct                   T_UlSrsCommInfo          
    ulPowerCtrCommInfo  struct                   T_UlPowerCtlCommInfo     
    startSymbolLC       u16                      u16                      startSymbolLC       |input;|
    reserved1           u16                      u16                      reserved1           |input;|
    prachCfg_R13        struct                   T_Prach_Config_R13       
    freqHoppingParam    struct                   T_FreqHoppingParameters  
    validSfn            struct                   T_BLValidSubfBitMap      
</sub T_RL1C_CHN_COMM_CONFIG_REQ>


<sub T_AntennaInfoUlR10>
    ulTransMode               u16  u16  ulTransMode               |input;|
    fourAntennaPortActivated  u16  u16  fourAntennaPortActivated  |input;|
</sub T_AntennaInfoUlR10>


<sub T_CqiReportAperiodicR10>
    aperiodicCqiFlag         u16  u16  aperiodicCqiFlag         |input;|
    cqiReportModeAperiodic   u16  u16  cqiReportModeAperiodic   |input;|
    aperiodicCSITrigger1R10  u16  u16  aperiodicCSITrigger1R10  |input;|
    aperiodicCSITrigger2R10  u16  u16  aperiodicCSITrigger2R10  |input;|
</sub T_CqiReportAperiodicR10>


<sub T_CqiReportPeriodicR10>
    periodicCqiFlag             u16  u16  periodicCqiFlag             |input;|
    cqiPucchResourceIndexR10    u16  u16  cqiPucchResourceIndexR10    |input;|
    cqiPucchResourceP1IndexR10  u16  u16  cqiPucchResourceP1IndexR10  |input;|
    cqiPmiConfigIndex           u16  u16  cqiPmiConfigIndex           |input;|
    cqiFormatIndFlag            u16  u16  cqiFormatIndFlag            |input;|
    csiReportMode               u16  u16  csiReportMode               |input;|
    k                           u16  u16  k                           |input;|
    periodicityFactorR10        u16  u16  periodicityFactorR10        |input;|
    riConfigIndex               u16  u16  riConfigIndex               |input;|
    simultaneousAckNackAndCQI   u16  u16  simultaneousAckNackAndCQI   |input;|
    cqiMaskFlag                 u16  u16  cqiMaskFlag                 |input;|
    csiConfigFlag               u16  u16  csiConfigFlag               |input;|
    cqiPmiConfigIndex2R10       u16  u16  cqiPmiConfigIndex2R10       |input;|
    riConfigIndex2R10           u16  u16  riConfigIndex2R10           |input;|
</sub T_CqiReportPeriodicR10>


<sub T_CqiReportConfR10>
    cqiReportR10Flag       u16                      u16                      cqiReportR10Flag       |input;|
    nomPdschRsEpreOffset   s16                      s16                      nomPdschRsEpreOffset   |input;|
    cqiReportAperiodicR10  struct                   T_CqiReportAperiodicR10  
    cqiReportPeriodicR10   struct                   T_CqiReportPeriodicR10   
    pmiRIReportR9          u16                      u16                      pmiRIReportR9          |input;|
    reserved               u16                      u16                      reserved               |input;|
</sub T_CqiReportConfR10>


<sub T_UlPowerCtlDediCatedV1020>
    ulPowerCtlDedV1020Flag            u16  u16  ulPowerCtlDedV1020Flag            |input;|
    deltaTxOffsetPucchFormat1R10      u16  u16  deltaTxOffsetPucchFormat1R10      |input;|
    deltaTxOffsetPucchFormat1a1bR10   u16  u16  deltaTxOffsetPucchFormat1a1bR10   |input;|
    deltaTxOffsetPucchFormat22a2bR10  u16  u16  deltaTxOffsetPucchFormat22a2bR10  |input;|
    deltaTxOffsetPucchFormat3R10      u16  u16  deltaTxOffsetPucchFormat3R10      |input;|
    pSrsOffsetApR10                   u16  u16  pSrsOffsetApR10                   |input;|
</sub T_UlPowerCtlDediCatedV1020>


<sub T_PucchConfigDedicatedV1020>
    pucchCfgDedV1020Flag               u16                       u16                       pucchCfgDedV1020Flag               |input;|
    pucchFromatChoice                  u16                       u16                       pucchFromatChoice                  |input;|
    n3PucchAnListR10[4]                array                     u16                       n3PucchAnListR10                   |multiedit;|
    twoAntPortActivatedFormat3R10Flag  u16                       u16                       twoAntPortActivatedFormat3R10Flag  |input;|
    n3PucchAnListP1R10[4]              array                     u16                       n3PucchAnListP1R10                 |multiedit;|
    n1PucchAnCsR10Flag                 u16                       u16                       n1PucchAnCsR10Flag                 |input;|
    n1PucchAnCsListR10[2]              array                     T_n1PucchAnCsListR10      n1PucchAnCsListR10                 |multiedit;|
    twoAntPortActPucchFormat1a1bR10    u16                       u16                       twoAntPortActPucchFormat1a1bR10    |input;|
    simulPucchPuschR10                 u16                       u16                       simulPucchPuschR10                 |input;|
    n1PucchAnRepP1R10                  u16                       u16                       n1PucchAnRepP1R10                  |input;|
    reserved                           u16                       u16                       reserved                           |input;|
</sub T_PucchConfigDedicatedV1020>


<sub T_n1PucchAnCsListR10
    n1PucchAnCsListR10[4]              array                     u16                       n1PucchAnCsListR10                 |multiedit;|
</sub T_n1PucchAnCsListR10


<0x127a OP_RL1C_CHN_COMM_CONFIG_REQ>
    signalHeader              struct                      T_MsgHeader                 
    RL1C_CHN_COMM_CONFIG_REQ  struct                      T_RL1C_CHN_COMM_CONFIG_REQ  
</0x127a OP_RL1C_CHN_COMM_CONFIG_REQ>


<sub T_CsiRsConfigR10>
    csiRsConfigFlag       u16  u16  csiRsConfigFlag       |input;|
    antennaPortsCount     u16  u16  antennaPortsCount     |input;|
    resourceConfig        u16  u16  resourceConfig        |input;|
    subframeConfig        u16  u16  subframeConfig        |input;|
    pC                    u16  u16  pC                    |input;|
    zeroTxPowerFlag       u16  u16  zeroTxPowerFlag       |input;|
    zeroTxPwrSubframeCfg  u16  u16  zeroTxPwrSubframeCfg  |input;|
    reserved              u16  u16  reserved              |input;|
    zeroTxPwrResourceCfg  u32  u32  zeroTxPwrResourceCfg  |input;|
</sub T_CsiRsConfigR10>


<sub T_RL1C_CHN_DED_CONFIG_REQ>
    servCellInfo         struct                       T_CellServLte                
    crnti                u32                          u32                          crnti                |input;|
    n310                 u16                          u16                          n310                 |input;|
    n311                 u16                          u16                          n311                 |input;|
    t310                 u16                          u16                          t310                 |input;|
    reserved             u16                          u16                          reserved             |input;|
    pucchDedInfo         struct                       T_Pucch_DedInfo              
    cqiReportConf        struct                       T_CqiReportConf              
    cqiReportConfR10     struct                       T_CqiReportConfR10           
    antennalInfo         struct                       T_AntennaInfo                
    pdschDedInfo         struct                       T_PdschConfigDedicated       
    puschDedCfg          struct                       T_PuschDediInfo              
    tpcPusch             struct                       T_TpcConfig                  
    tpcPucch             struct                       T_TpcConfig                  
    srsDedInfo           struct                       T_UlSrsDediInfo              
    srsApInfo            struct                       T_UlSrsDediInfoAperiodicR10  
    spsConfig            struct                       T_SpsConfigInfo              
    ulPowerCtrlDediInfo  struct                       T_UlPowerCtrDediInfo         
    drxConfig            struct                       T_DrxConfigInfo              
    ceMode               u16                          u16                          ceMode               |input;|
    reserved1            u16                          u16                          reserved1            |input;|
    epdcchInfo           struct                       T_EpdcchConfigR11            
</sub T_RL1C_CHN_DED_CONFIG_REQ>


<0x127b OP_RL1C_CHN_DED_CONFIG_REQ>
    signalHeader             struct                     T_MsgHeader                
    RL1C_CHN_DED_CONFIG_REQ  struct                     T_RL1C_CHN_DED_CONFIG_REQ  
</0x127b OP_RL1C_CHN_DED_CONFIG_REQ>


<sub T_RL1C_DCH_MEAS_REQ>
    measId                                      u16                u16                measId                                      |input;|
    gapType                                     u16                u16                gapType                                     |input;|
    gapOffset                                   u16                u16                gapOffset                                   |input;|
    filterCoefRsrp                              u16                u16                filterCoefRsrp                              |input;|
    filterCoefRsrq                              u16                u16                filterCoefRsrq                              |input;|
    lteFreqNum                                  u16                u16                lteFreqNum                                  |input;|
    blackListCellNum                            u16                u16                blackListCellNum                            |input;|
    reserved                                    u16                u16                reserved                                    |input;|
    serveInfo                                   struct             T_CellDescLte      
    lteMeasFreqInfo[EAS_MAX_LTE_FREQ_NUM]       array              T_DchMeasFreqInfo  lteMeasFreqInfo                             |multiedit;|
    blackPhyId[EAS_MAX_DCH_BLACKCELL_NUM]       array              u16                blackPhyId                                  |multiedit;|
    blackPhyIdRange[EAS_MAX_DCH_BLACKCELL_NUM]  array              u16                blackPhyIdRange                             |multiedit;|
    rsrqOnAllSymbol                             u16                u16                rsrqOnAllSymbol                             |input;|
    filterCoefSinr                              u16                u16                filterCoefSinr                              |input;|
</sub T_RL1C_DCH_MEAS_REQ>


<sub T_RL1C_DCH_MEAS_IND>
    measId                                   u16               u16               measId                                   |input;|
    lteFreqNum                               u16               u16               lteFreqNum                               |input;|
    measStatus                               u16               u16               measStatus                               |input;|
    serverCellRsrp                           u16               u16               serverCellRsrp                           |input;|
    serverCellRsrq                           u16               u16               serverCellRsrq                           |input;|
    reserved                                 u16               u16               reserved                                 |input;|
    lteMeasResult[EAS_MAX_LTE_FREQ_NUM]      array             T_MeasFreqResult  lteMeasResult                            |multiedit;|
    lteMeasCellIdList[EAS_MAX_LTE_CELL_NUM]  array             u16               lteMeasCellIdList                        |multiedit;|
    rsrp[EAS_MAX_LTE_CELL_NUM]               array             u16               rsrp                                     |multiedit;|
    rsrq[EAS_MAX_LTE_CELL_NUM]               array             u16               rsrq                                     |multiedit;|
    syncOffset[EAS_MAX_LTE_CELL_NUM]         array             u32               syncOffset                               |multiedit;|
    cellCpType[EAS_MAX_LTE_CELL_NUM]         array             u16               cellCpType                               |multiedit;|
    serverCellRxTxDiff                       u16               u16               serverCellRxTxDiff                       |input;|
    serverCellSinr                           u16               u16               serverCellSinr                           |input;|
    sinr[EAS_MAX_LTE_CELL_NUM]               array             u16               sinr                                     |multiedit;|
</sub T_RL1C_DCH_MEAS_IND>


<0x1261 OP_RL1C_PLMN_SEARCH_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1261 OP_RL1C_PLMN_SEARCH_STOP_REQ>


<0x127d OP_RL1C_PLMN_SEARCH_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x127d OP_RL1C_PLMN_SEARCH_STOP_CNF>


<sub T_RL1C_DEACT_REQ>
    cause     u16  u16  cause     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_DEACT_REQ>


<0x126e OP_RL1C_DEACT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x126e OP_RL1C_DEACT_CNF>


<0x127c OP_RL1C_PHY_RESET_REQ>
    signalHeader  struct       T_MsgHeader  
</0x127c OP_RL1C_PHY_RESET_REQ>


<sub T_RL1C_CGI_MEAS_REQ>
    cgiCellInfo           struct         T_CellDescLte  
    syncOffset            u32            u32            syncOffset            |input;|
    cellCpType            u16            u16            cellCpType            |input;|
    autoGapFlag           u16            u16            autoGapFlag           |input;|
    presenceAntennaPort1  u16            u16            presenceAntennaPort1  |input;|
    cellType              u16            u16            cellType              |input;|
</sub T_RL1C_CGI_MEAS_REQ>


<0x1274 OP_RL1C_CGI_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    RL1C_CGI_MEAS_REQ  struct               T_RL1C_CGI_MEAS_REQ  
</0x1274 OP_RL1C_CGI_MEAS_REQ>


<sub T_RL1C_CGI_MEAS_IND>
    cgiData[EAS_MAX_SI_DATA_LENGTH]  array  u8     cgiData                          |multiedit;|
    cgiDataLen                       u16    u16    cgiDataLen                       |input;|
    reserved                         u16    u16    reserved                         |input;|
</sub T_RL1C_CGI_MEAS_IND>


<0x1275 OP_RL1C_CGI_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_CGI_MEAS_IND  struct               T_RL1C_CGI_MEAS_IND  
</0x1275 OP_RL1C_CGI_MEAS_IND>


<0x1276 OP_RL1C_STOP_CGI_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1276 OP_RL1C_STOP_CGI_REQ>


<sub T_RL1C_RLF_STATUS_IND>
    statusInd  u32  u32  statusInd  |input;|
</sub T_RL1C_RLF_STATUS_IND>


<0x1279 OP_RL1C_RLF_STATUS_IND>
    signalHeader         struct                 T_MsgHeader            
    RL1C_RLF_STATUS_IND  struct                 T_RL1C_RLF_STATUS_IND  
</0x1279 OP_RL1C_RLF_STATUS_IND>


<sub T_RL1C_EDRX_SLEEP_IND>
    sleepLen  u32  u32  sleepLen  |input;|
</sub T_RL1C_EDRX_SLEEP_IND>


<0x1272 OP_RL1C_EDRX_SLEEP_IND>
    signalHeader         struct                 T_MsgHeader            
    RL1C_EDRX_SLEEP_IND  struct                 T_RL1C_EDRX_SLEEP_IND  
</0x1272 OP_RL1C_EDRX_SLEEP_IND>


<sub T_RL1C_DIRECT_IND>
    data      u16  u16  data      |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_DIRECT_IND>


<0x1271 OP_RL1C_DIRECT_IND>
    signalHeader     struct             T_MsgHeader        
    RL1C_DIRECT_IND  struct             T_RL1C_DIRECT_IND  
</0x1271 OP_RL1C_DIRECT_IND>


<0x126f OP_RL1C_OUT_OF_SERVICE_IND>
    signalHeader  struct       T_MsgHeader  
</0x126f OP_RL1C_OUT_OF_SERVICE_IND>


<0x125c OP_RL1C_SI_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x125c OP_RL1C_SI_STOP_REQ>


<0x125d OP_RL1C_IDL_CONFIG_REQ>
    signalHeader         struct                 T_MsgHeader            
    RL1C_IDL_CONFIG_REQ  struct                 T_RL1C_IDL_CONFIG_REQ  
</0x125d OP_RL1C_IDL_CONFIG_REQ>


<0x125e OP_RL1C_FREQ_MEAS_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_FREQ_MEAS_REQ  struct                T_RL1C_FREQ_MEAS_REQ  
</0x125e OP_RL1C_FREQ_MEAS_REQ>


<0x125f OP_RL1C_FREQ_MEAS_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_FREQ_MEAS_CNF  struct                T_RL1C_FREQ_MEAS_CNF  
</0x125f OP_RL1C_FREQ_MEAS_CNF>


<0x1260 OP_RL1C_SI_READ_REQ>
    signalHeader      struct              T_MsgHeader         
    RL1C_SI_READ_REQ  struct              T_RL1C_SI_READ_REQ  
</0x1260 OP_RL1C_SI_READ_REQ>


<0x1267 OP_RL1C_MIB_DATA_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_MIB_DATA_IND  struct               T_RL1C_MIB_DATA_IND  
</0x1267 OP_RL1C_MIB_DATA_IND>


<0x1270 OP_RL1C_PAGING_DATA_IND>
    signalHeader          struct                  T_MsgHeader             
    RL1C_PAGING_DATA_IND  struct                  T_RL1C_PAGING_DATA_IND  
</0x1270 OP_RL1C_PAGING_DATA_IND>


<0x1262 OP_RL1C_CELL_SEARCH_REQ>
    signalHeader          struct                  T_MsgHeader             
    RL1C_CELL_SEARCH_REQ  struct                  T_RL1C_CELL_SEARCH_REQ  
</0x1262 OP_RL1C_CELL_SEARCH_REQ>


<0x1263 OP_RL1C_CELL_SYNC_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_CELL_SYNC_REQ  struct                T_RL1C_CELL_SYNC_REQ  
</0x1263 OP_RL1C_CELL_SYNC_REQ>


<0x1264 OP_RL1C_DEACT_REQ>
    signalHeader    struct            T_MsgHeader       
    RL1C_DEACT_REQ  struct            T_RL1C_DEACT_REQ  
</0x1264 OP_RL1C_DEACT_REQ>


<0x1265 OP_RL1C_PWR_SWEEP_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_PWR_SWEEP_REQ  struct                T_RL1C_PWR_SWEEP_REQ  
</0x1265 OP_RL1C_PWR_SWEEP_REQ>


<0x1273 OP_RL1C_IDL_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_IDL_MEAS_IND  struct               T_RL1C_IDL_MEAS_IND  
</0x1273 OP_RL1C_IDL_MEAS_IND>


<0x1278 OP_RL1C_DCH_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_DCH_MEAS_IND  struct               T_RL1C_DCH_MEAS_IND  
</0x1278 OP_RL1C_DCH_MEAS_IND>


<0x1277 OP_RL1C_DCH_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    RL1C_DCH_MEAS_REQ  struct               T_RL1C_DCH_MEAS_REQ  
</0x1277 OP_RL1C_DCH_MEAS_REQ>


<sub T_MAC_DATA_IND_LTE>
    rbIdentity    u8                u8                rbIdentity    |input;|
    reserved3[3]  array             u8                reserved3     |multiedit;|
    pPduPointer   Ptr               T_ERLC_DlPduInfo  
</sub T_MAC_DATA_IND_LTE>


<sub T_ERLC_UL_PDU>
    pduLen                  u16     u16     pduLen                  |input;|
    sduLen                  u16     u16     sduLen                  |input;|
    data[125]               array   u8      data                    |multiedit;|
    next                    Ptr     T_ERLC_UL_PDU_tag
</sub T_ERLC_UL_PDU>


<sub T_MAC_DATA_REQ_LTE>
    rbIdentity    u8             u8             rbIdentity    |input;|
    reserved3[3]  array          u8             reserved3     |multiedit;|
    pdu           Ptr            T_ERLC_UL_PDU  
</sub T_MAC_DATA_REQ_LTE>


<sub T_MAC_REGULAR_BSR_REQ_LTE>
    lcid  u8  u8  lcid  |input;|
</sub T_MAC_REGULAR_BSR_REQ_LTE>


<sub T_L1DMA_BUFF_INFO>
    used_len   u16    u16    used_len   |input;|
    total_len  u16    u16    total_len  |input;|
    buff[128]  array  u8     buff       |multiedit;|
</sub T_L1DMA_BUFF_INFO>


<sub T_MAC_STATUS_IND_LTE>
    rbIdentity   u8                 u8                 rbIdentity   |input;|
    flagLastPdu  u8                 u8                 flagLastPdu  |input;|
    pduSize      u16                u16                pduSize      |input;|
    head_buff    Ptr                T_L1DMA_BUFF_INFO  
</sub T_MAC_STATUS_IND_LTE>


<0x124a OP_MAC_DATA_IND_LTE>
    signalHeader      struct              T_MsgHeader         
    MAC_DATA_IND_LTE  struct              T_MAC_DATA_IND_LTE  
</0x124a OP_MAC_DATA_IND_LTE>


<0x1249 OP_MAC_DATA_REQ_LTE>
    signalHeader      struct              T_MsgHeader         
    MAC_DATA_REQ_LTE  struct              T_MAC_DATA_REQ_LTE  
</0x1249 OP_MAC_DATA_REQ_LTE>


<0x1248 OP_MAC_STATUS_IND_LTE>
    signalHeader        struct                T_MsgHeader           
    MAC_STATUS_IND_LTE  struct                T_MAC_STATUS_IND_LTE  
</0x1248 OP_MAC_STATUS_IND_LTE>


<0x124b OP_MAC_REGULAR_BSR_REQ_LTE>
    signalHeader             struct                     T_MsgHeader                
    MAC_REGULAR_BSR_REQ_LTE  struct                     T_MAC_REGULAR_BSR_REQ_LTE  
</0x124b OP_MAC_REGULAR_BSR_REQ_LTE>


<sub T_RachCe_Info>
    firstPreamble                 u8     u8     firstPreamble                 |input;|
    lastPreamble                  u8     u8     lastPreamble                  |input;|
    rarHoppingConfig              u8     u8     rarHoppingConfig              |input;|
    raResponseWindowSize          u8     u8     raResponseWindowSize          |input;|
    macContentionResolutionTimer  u8     u8     macContentionResolutionTimer  |input;|
    reserved[3]                   array  u8     reserved                      |multiedit;|
</sub T_RachCe_Info>


<sub T_PreamblesGroupAConfig>
    validFlag                 u16  u16  validFlag                 |input;|
    sizeOfRA_PreamblesGroupA  u16  u16  sizeOfRA_PreamblesGroupA  |input;|
    messageSizeGroupA         u16  u16  messageSizeGroupA         |input;|
    messagePowerOffsetGroupB  u16  u16  messagePowerOffsetGroupB  |input;|
</sub T_PreamblesGroupAConfig>


<sub T_PreambleInfo>
    numberOfRA_Preambles   u16                      u16                      numberOfRA_Preambles   |input;|
    reserved               u16                      u16                      reserved               |input;|
    preamblesGroupAConfig  struct                   T_PreamblesGroupAConfig  
</sub T_PreambleInfo>


<sub T_Rach_CommInfo>
    powerRampingStep         u8              u8              powerRampingStep         |input;|
    preambleInitTargetPower  u8              u8              preambleInitTargetPower  |input;|
    preambleTransMax         u8              u8              preambleTransMax         |input;|
    rachCeNum                u8              u8              rachCeNum                |input;|
    rachCeLevel[4]           array           T_RachCe_Info   rachCeLevel              |multiedit;|
    preambleInfo             struct          T_PreambleInfo  
</sub T_Rach_CommInfo>


<sub T_SrConfigInfo>
    srPucchResourIndex  u16  u16  srPucchResourIndex  |input;|
    srConfigIndex       u8   u8   srConfigIndex       |input;|
    srTranMax           u8   u8   srTranMax           |input;|
</sub T_SrConfigInfo>


<sub T_RbInforSetup>
    rbIdentity                u8  u8  rbIdentity                |input;|
    serviceType               u8  u8  serviceType               |input;|
    epsBearerId               u8  u8  epsBearerId               |input;|
    ulRlcMode                 u8  u8  ulRlcMode                 |input;|
    logicalChID               u8  u8  logicalChID               |input;|
    logicalPriority           u8  u8  logicalPriority           |input;|
    pbr                       u8  u8  pbr                       |input;|
    bsd                       u8  u8  bsd                       |input;|
    logicalChGroup            u8  u8  logicalChGroup            |input;|
    logicalChannelSrMask      u8  u8  logicalChannelSrMask      |input;|
    logicalChannelSrProhibit  u8  u8  logicalChannelSrProhibit  |input;|
    reserved                  u8  u8  reserved                  |input;|
</sub T_RbInforSetup>


<sub T_PhrConfig>
    validFlag         u8  u8  validFlag         |input;|
    periodPhrTimer    u8  u8  periodPhrTimer    |input;|
    prohibitPhrTimer  u8  u8  prohibitPhrTimer  |input;|
    dlPathLossChang   u8  u8  dlPathLossChang   |input;|
</sub T_PhrConfig>


<sub T_MacMainInfo>
    maxHarqTx              u8               u8               maxHarqTx              |input;|
    periodBsrTimer         u8               u8               periodBsrTimer         |input;|
    retxBsrTimer           u8               u8               retxBsrTimer           |input;|
    ttiBundlingFlag        u8               u8               ttiBundlingFlag        |input;|
    timeAlignTimer         u8               u8               timeAlignTimer         |input;|
    srProhibitTimer        u8               u8               srProhibitTimer        |input;|
    logichSrProhibitTimer  u8               u8               logichSrProhibitTimer  |input;|
    reserved               u8               u8               reserved               |input;|
    drxConfig              struct           T_DrxConfigInfo  
    phrCofig               struct           T_PhrConfig      
</sub T_MacMainInfo>


<0x1242 OP_CMAC_RESET_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1242 OP_CMAC_RESET_REQ>


<sub T_CMAC_RANDOM_ACC_REQ>
    pCmax                           s8                   s8                   pCmax                           |input;|
    serverCellRsrp                  u8                   u8                   serverCellRsrp                  |input;|
    puschMaxNumCEModeA              u8                   u8                   puschMaxNumCEModeA              |input;|
    puschMaxNumCEModeB              u8                   u8                   puschMaxNumCEModeB              |input;|
    pucchNumRepetitionCEMsg4Level0  u8                   u8                   pucchNumRepetitionCEMsg4Level0  |input;|
    pucchNumRepetitionCEMsg4Level1  u8                   u8                   pucchNumRepetitionCEMsg4Level1  |input;|
    pucchNumRepetitionCEMsg4Level2  u8                   u8                   pucchNumRepetitionCEMsg4Level2  |input;|
    pucchNumRepetitionCEMsg4Level3  u8                   u8                   pucchNumRepetitionCEMsg4Level3  |input;|
    msg3Len                         u8                   u8                   msg3Len                         |input;|
    deltaPreambleMsg3               s8                   s8                   deltaPreambleMsg3               |input;|
    resumeFlag                      u8                   u8                   resumeFlag                      |input;|
    reserved                        u8                   u8                   reserved                        |input;|
    msg3Data[12]                    array                u8                   msg3Data                        |multiedit;|
    servCellInfo                    struct               T_CellServLte        
    rachCommInfo                    struct               T_Rach_CommInfo      
    prachInfo                       struct               T_Prach_Config       
    prachInfoR13                    struct               T_Prach_Config_R13   
    validSfn                        struct               T_BLValidSubfBitMap  
    macMainCfg                      struct               T_MacMainInfo        
</sub T_CMAC_RANDOM_ACC_REQ>


<0x1240 OP_CMAC_RANDOM_ACC_REQ>
    signalHeader         struct                 T_MsgHeader            
    CMAC_RANDOM_ACC_REQ  struct                 T_CMAC_RANDOM_ACC_REQ  
</0x1240 OP_CMAC_RANDOM_ACC_REQ>


<sub T_CMAC_HANDOVER_ACC_REQ>
    pCmax                           s8                   s8                   pCmax                           |input;|
    raPreambleIndex                 u8                   u8                   raPreambleIndex                 |input;|
    raPrachMaskIndex                u8                   u8                   raPrachMaskIndex                |input;|
    targetCellRsrp                  u8                   u8                   targetCellRsrp                  |input;|
    puschMaxNumCEModeA              u8                   u8                   puschMaxNumCEModeA              |input;|
    puschMaxNumCEModeB              u8                   u8                   puschMaxNumCEModeB              |input;|
    pucchNumRepetitionCEMsg4Level0  u8                   u8                   pucchNumRepetitionCEMsg4Level0  |input;|
    pucchNumRepetitionCEMsg4Level1  u8                   u8                   pucchNumRepetitionCEMsg4Level1  |input;|
    pucchNumRepetitionCEMsg4Level2  u8                   u8                   pucchNumRepetitionCEMsg4Level2  |input;|
    pucchNumRepetitionCEMsg4Level3  u8                   u8                   pucchNumRepetitionCEMsg4Level3  |input;|
    reserved                        u8                   u8                   reserved                        |input;|
    deltaPreambleMsg3               s8                   s8                   deltaPreambleMsg3               |input;|
    cRnti                           u32                  u32                  cRnti                           |input;|
    targetCellInfo                  struct               T_CellServLte        
    rachCommInfo                    struct               T_Rach_CommInfo      
    prachInfo                       struct               T_Prach_Config       
    prachInfoR13                    struct               T_Prach_Config_R13   
    validSfn                        struct               T_BLValidSubfBitMap  
</sub T_CMAC_HANDOVER_ACC_REQ>


<0x1245 OP_CMAC_HANDOVER_ACC_REQ>
    signalHeader           struct                   T_MsgHeader              
    CMAC_HANDOVER_ACC_REQ  struct                   T_CMAC_HANDOVER_ACC_REQ  
</0x1245 OP_CMAC_HANDOVER_ACC_REQ>


<sub T_CMAC_ACC_STATUS_IND>
    resultFlag  u16    u16    resultFlag  |input;|
    dataLenth   u16    u16    dataLenth   |input;|
    cRnti       u32    u32    cRnti       |input;|
    data[128]   array  u8     data        |multiedit;|
</sub T_CMAC_ACC_STATUS_IND>


<0x1241 OP_CMAC_ACC_STATUS_IND>
    signalHeader         struct                 T_MsgHeader            
    CMAC_ACC_STATUS_IND  struct                 T_CMAC_ACC_STATUS_IND  
</0x1241 OP_CMAC_ACC_STATUS_IND>


<0x1243 OP_CMAC_TA_TIME_OUT_IND>
    signalHeader  struct       T_MsgHeader  
</0x1243 OP_CMAC_TA_TIME_OUT_IND>


<sub T_CMAC_MAC_CONFIG_REQ>
    rbNum                u8               u8               rbNum                |input;|
    ceMode               u8               u8               ceMode               |input;|
    pucchRepformat1      u8               u8               pucchRepformat1      |input;|
    reserved             u8               u8               reserved             |input;|
    servCellInfo         struct           T_CellServLte    
    rbInfoSetupList[16]  array            T_RbInforSetup   rbInfoSetupList      |multiedit;|
    mainInfo             struct           T_MacMainInfo    
    srConfig             struct           T_SrConfigInfo   
    spsConfig            struct           T_SpsConfigInfo  
</sub T_CMAC_MAC_CONFIG_REQ>


<0x1244 OP_CMAC_MAC_CONFIG_REQ>
    signalHeader         struct                 T_MsgHeader            
    CMAC_MAC_CONFIG_REQ  struct                 T_CMAC_MAC_CONFIG_REQ  
</0x1244 OP_CMAC_MAC_CONFIG_REQ>


<sub T_RLC_AM_DATA_REQ_LTE>
    rbIdentity     u8           u8           rbIdentity     |input;|
    reserved3[3]   array        u8           reserved3      |multiedit;|
    pDataPointer   Ptr          T_ComPduLte  
</sub T_RLC_AM_DATA_REQ_LTE>


<sub T_RLC_UM_DATA_REQ_LTE>
    rbIdentity     u8           u8           rbIdentity     |input;|
    reserved3[3]   array        u8           reserved3      |multiedit;|
    pDataPointer   Ptr          T_ComPduLte  
</sub T_RLC_UM_DATA_REQ_LTE>


<sub T_RLC_AM_DATA_IND_LTE>
    rbIdentity    u8             u8             rbIdentity    |input;|
    reestFlag     u8             u8             reestFlag     |input;|
    reserved2[2]  array          u8             reserved2     |multiedit;|
    sdu_list      Ptr            T_ERLC_DL_SDU  
</sub T_RLC_AM_DATA_IND_LTE>


<sub T_RLC_UM_DATA_IND_LTE>
    rbIdentity    u8             u8             rbIdentity    |input;|
    reestFlag     u8             u8             reestFlag     |input;|
    reserved2[2]  array          u8             reserved2     |multiedit;|
    sdu_list      Ptr            T_ERLC_DL_SDU  
</sub T_RLC_UM_DATA_IND_LTE>


<sub T_RLC_AM_DATA_CNF_LTE>
    rbIdentity    u8     u8     rbIdentity    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
    firstCnfSn    u16    u16    firstCnfSn    |input;|
    cnfPduNum     u16    u16    cnfPduNum     |input;|
</sub T_RLC_AM_DATA_CNF_LTE>


<sub T_RLC_STATUS_IND_LTE>
    rbIdentity  u8  u8  rbIdentity  |input;|
</sub T_RLC_STATUS_IND_LTE>


<0x128b OP_RLC_AM_DATA_REQ_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_AM_DATA_REQ_LTE  struct                 T_RLC_AM_DATA_REQ_LTE  
</0x128b OP_RLC_AM_DATA_REQ_LTE>


<0x128c OP_RLC_UM_DATA_REQ_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_UM_DATA_REQ_LTE  struct                 T_RLC_UM_DATA_REQ_LTE  
</0x128c OP_RLC_UM_DATA_REQ_LTE>


<0x1283 OP_RLC_AM_DATA_IND_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_AM_DATA_IND_LTE  struct                 T_RLC_AM_DATA_IND_LTE  
</0x1283 OP_RLC_AM_DATA_IND_LTE>


<0x1284 OP_RLC_UM_DATA_IND_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_UM_DATA_IND_LTE  struct                 T_RLC_UM_DATA_IND_LTE  
</0x1284 OP_RLC_UM_DATA_IND_LTE>


<0x1285 OP_RLC_AM_DATA_CNF_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_AM_DATA_CNF_LTE  struct                 T_RLC_AM_DATA_CNF_LTE  
</0x1285 OP_RLC_AM_DATA_CNF_LTE>


<0x128a OP_RLC_STATUS_IND_LTE>
    signalHeader        struct                T_MsgHeader           
    RLC_STATUS_IND_LTE  struct                T_RLC_STATUS_IND_LTE  
</0x128a OP_RLC_STATUS_IND_LTE>


<sub T_UmParasLte>
    ulSnFieldLength    u8  u8  ulSnFieldLength    |input;|
    dlTimerReordering  u8  u8  dlTimerReordering  |input;|
    dlSnFieldLength    u8  u8  dlSnFieldLength    |input;|
    reserved1          u8  u8  reserved1          |input;|
</sub T_UmParasLte>


<sub T_AmUpParasLte>
    maxRetxThreshold     u8   u8   maxRetxThreshold     |input;|
    timerPollRetransmit  u8   u8   timerPollRetransmit  |input;|
    pollPdu              u8   u8   pollPdu              |input;|
    pollByte             u8   u8   pollByte             |input;|
    pLastEpdcPduPos      u32  u32  pLastEpdcPduPos      |input;|
</sub T_AmUpParasLte>


<sub T_AmDwParasLte>
    timerStatusProhibit  u8     u8     timerStatusProhibit  |input;|
    timerReordering      u8     u8     timerReordering      |input;|
    reserved2[2]         array  u8     reserved2            |multiedit;|
</sub T_AmDwParasLte>


<sub T_CRLC_STATUS_IND_LTE>
    statusCode    u8     u8     statusCode    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_CRLC_STATUS_IND_LTE>


<sub T_CRLC_CONFIG_REQ_LTE>
    rbIdentity     u8              u8              rbIdentity     |input;|
    configCause    u8              u8              configCause    |input;|
    upMode         u8              u8              upMode         |input;|
    dwMode         u8              u8              dwMode         |input;|
    ctrlOrUsr      u8              u8              ctrlOrUsr      |input;|
    suspendResume  u8              u8              suspendResume  |input;|
    reserved2[2]   array           u8              reserved2      |multiedit;|
    umParas        struct          T_UmParasLte    
    amUpParas      struct          T_AmUpParasLte  
    amDwParas      struct          T_AmDwParasLte  
</sub T_CRLC_CONFIG_REQ_LTE>


<sub T_CRLC_DEACT_REQ_LTE>
    rbIdentity    u8     u8     rbIdentity    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_CRLC_DEACT_REQ_LTE>


<0x1286 OP_CRLC_STATUS_IND_LTE>
    signalHeader         struct                 T_MsgHeader            
    CRLC_STATUS_IND_LTE  struct                 T_CRLC_STATUS_IND_LTE  
</0x1286 OP_CRLC_STATUS_IND_LTE>


<0x1280 OP_CRLC_CONFIG_REQ_LTE>
    signalHeader         struct                 T_MsgHeader            
    CRLC_CONFIG_REQ_LTE  struct                 T_CRLC_CONFIG_REQ_LTE  
</0x1280 OP_CRLC_CONFIG_REQ_LTE>


<0x1281 OP_CRLC_DEACT_REQ_LTE>
    signalHeader        struct                T_MsgHeader           
    CRLC_DEACT_REQ_LTE  struct                T_CRLC_DEACT_REQ_LTE  
</0x1281 OP_CRLC_DEACT_REQ_LTE>


<sub T_EquvPlmnList>
    rplmn[MAX_PLMN_LEN]                             array  u8     rplmn                                           |multiedit;|
    equvPlmnList[61]                                array  u8     equvPlmnList                                    |multiedit;|
</sub T_EquvPlmnList>


<sub T_Imsi>
    length                   u8     u8     length                   |input;|
    imsiCon[8]               array  u8     imsiCon                  |multiedit;|
    fillByte                 u8     u8     fillByte                 |input;|
    reserved                 u16    u16    reserved                 |input;|
</sub T_Imsi>


<sub T_NvCarrierFreqNB>
    earfcn       u32    u32    earfcn       |input;|
    offset       s8     s8     offset       |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_NvCarrierFreqNB>


<sub T_EmmT3402Info>
    t3402Value  u32    u32    t3402Value  |input;|
    rejPlmn[3]  array  u8     rejPlmn     |multiedit;|
    reserved    u8     u8     reserved    |input;|
</sub T_EmmT3402Info>


<sub T_NVM_Dynamic_PS>
    imsi                                            struct          T_Imsi          
    mmcequvPlmn                                     struct          T_EquvPlmnList  
    mmcprevUsedLteFreq[MAX_PREV_USED_LTE_FREQ_LEN]  array           u16             mmcprevUsedLteFreq                              |multiedit;|
    ltePrevUsedBand[8]                              array           u8              ltePrevUsedBand                                 |multiedit;|
    emmT3402Info                                    struct          T_EmmT3402Info  
    ltenetpar_NB[MAX_BAINFO_LEN]                    array           u8              ltenetpar_NB                                    |multiedit;|
</sub T_NVM_Dynamic_PS>


<sub T_SecurityCapability>
    lteCipheringAlgorithmCap            u16  u16  lteCipheringAlgorithmCap            |input;|
    lteIntegrityProtectionAlgorithmCap  u16  u16  lteIntegrityProtectionAlgorithmCap  |input;|
</sub T_SecurityCapability>


<sub T_featureGroupIndicator>
    Bit1:1   u32  u32  Bit1:1   |input;|
    Bit2:1   u32  u32  Bit2:1   |input;|
    Bit3:1   u32  u32  Bit3:1   |input;|
    Bit4:1   u32  u32  Bit4:1   |input;|
    Bit5:1   u32  u32  Bit5:1   |input;|
    Bit6:1   u32  u32  Bit6:1   |input;|
    Bit7:1   u32  u32  Bit7:1   |input;|
    Bit8:1   u32  u32  Bit8:1   |input;|
    Bit9:1   u32  u32  Bit9:1   |input;|
    Bit10:1  u32  u32  Bit10:1  |input;|
    Bit11:1  u32  u32  Bit11:1  |input;|
    Bit12:1  u32  u32  Bit12:1  |input;|
    Bit13:1  u32  u32  Bit13:1  |input;|
    Bit14:1  u32  u32  Bit14:1  |input;|
    Bit15:1  u32  u32  Bit15:1  |input;|
    Bit16:1  u32  u32  Bit16:1  |input;|
    Bit17:1  u32  u32  Bit17:1  |input;|
    Bit18:1  u32  u32  Bit18:1  |input;|
    Bit19:1  u32  u32  Bit19:1  |input;|
    Bit20:1  u32  u32  Bit20:1  |input;|
    Bit21:1  u32  u32  Bit21:1  |input;|
    Bit22:1  u32  u32  Bit22:1  |input;|
    Bit23:1  u32  u32  Bit23:1  |input;|
    Bit24:1  u32  u32  Bit24:1  |input;|
    Bit25:1  u32  u32  Bit25:1  |input;|
    Bit26:1  u32  u32  Bit26:1  |input;|
    Bit27:1  u32  u32  Bit27:1  |input;|
    Bit28:1  u32  u32  Bit28:1  |input;|
    Bit29:1  u32  u32  Bit29:1  |input;|
    Bit30:1  u32  u32  Bit30:1  |input;|
    Bit31:1  u32  u32  Bit31:1  |input;|
    Bit32:1  u32  u32  Bit32:1  |input;|
</sub T_featureGroupIndicator>


<sub T_featureGroupIndRel9Add>
    Bit33:1  u32  u32  Bit33:1  |input;|
    Bit34:1  u32  u32  Bit34:1  |input;|
    Bit35:1  u32  u32  Bit35:1  |input;|
    Bit36:1  u32  u32  Bit36:1  |input;|
    Bit37:1  u32  u32  Bit37:1  |input;|
    Bit38:1  u32  u32  Bit38:1  |input;|
    Bit39:1  u32  u32  Bit39:1  |input;|
    Bit40:1  u32  u32  Bit40:1  |input;|
    Bit41:1  u32  u32  Bit41:1  |input;|
    Bit42:1  u32  u32  Bit42:1  |input;|
    Bit43:1  u32  u32  Bit43:1  |input;|
    Bit44:1  u32  u32  Bit44:1  |input;|
    Bit45:1  u32  u32  Bit45:1  |input;|
    Bit46:1  u32  u32  Bit46:1  |input;|
    Bit47:1  u32  u32  Bit47:1  |input;|
    Bit48:1  u32  u32  Bit48:1  |input;|
    Bit49:1  u32  u32  Bit49:1  |input;|
    Bit50:1  u32  u32  Bit50:1  |input;|
    Bit51:1  u32  u32  Bit51:1  |input;|
    Bit52:1  u32  u32  Bit52:1  |input;|
    Bit53:1  u32  u32  Bit53:1  |input;|
    Bit54:1  u32  u32  Bit54:1  |input;|
    Bit55:1  u32  u32  Bit55:1  |input;|
    Bit56:1  u32  u32  Bit56:1  |input;|
    Bit57:1  u32  u32  Bit57:1  |input;|
    Bit58:1  u32  u32  Bit58:1  |input;|
    Bit59:1  u32  u32  Bit59:1  |input;|
    Bit60:1  u32  u32  Bit60:1  |input;|
    Bit61:1  u32  u32  Bit61:1  |input;|
    Bit62:1  u32  u32  Bit62:1  |input;|
    Bit63:1  u32  u32  Bit63:1  |input;|
    Bit64:1  u32  u32  Bit64:1  |input;|
</sub T_featureGroupIndRel9Add>


<sub T_featureGroupIndRel10>
    Bit101:1  u32  u32  Bit101:1  |input;|
    Bit102:1  u32  u32  Bit102:1  |input;|
    Bit103:1  u32  u32  Bit103:1  |input;|
    Bit104:1  u32  u32  Bit104:1  |input;|
    Bit105:1  u32  u32  Bit105:1  |input;|
    Bit106:1  u32  u32  Bit106:1  |input;|
    Bit107:1  u32  u32  Bit107:1  |input;|
    Bit108:1  u32  u32  Bit108:1  |input;|
    Bit109:1  u32  u32  Bit109:1  |input;|
    Bit110:1  u32  u32  Bit110:1  |input;|
    Bit111:1  u32  u32  Bit111:1  |input;|
    Bit112:1  u32  u32  Bit112:1  |input;|
    Bit113:1  u32  u32  Bit113:1  |input;|
    Bit114:1  u32  u32  Bit114:1  |input;|
    Bit115:1  u32  u32  Bit115:1  |input;|
    Bit116:1  u32  u32  Bit116:1  |input;|
    Bit117:1  u32  u32  Bit117:1  |input;|
    Bit118:1  u32  u32  Bit118:1  |input;|
    Bit119:1  u32  u32  Bit119:1  |input;|
    Bit120:1  u32  u32  Bit120:1  |input;|
    Bit121:1  u32  u32  Bit121:1  |input;|
    Bit122:1  u32  u32  Bit122:1  |input;|
    Bit123:1  u32  u32  Bit123:1  |input;|
    Bit124:1  u32  u32  Bit124:1  |input;|
    Bit125:1  u32  u32  Bit125:1  |input;|
    Bit126:1  u32  u32  Bit126:1  |input;|
    Bit127:1  u32  u32  Bit127:1  |input;|
    Bit128:1  u32  u32  Bit128:1  |input;|
    Bit129:1  u32  u32  Bit129:1  |input;|
    Bit130:1  u32  u32  Bit130:1  |input;|
    Bit131:1  u32  u32  Bit131:1  |input;|
    Bit132:1  u32  u32  Bit132:1  |input;|
</sub T_featureGroupIndRel10>


<sub T_RadioAccessCapabilityLte>
    release                          u8                        u8                        release                          |input;|
    ueCategory                       u8                        u8                        ueCategory                       |input;|
    pdcpSupportROHC                  u16                       u16                       pdcpSupportROHC                  |input;|
    pdcpMaxNumROHCSessions           u8                        u8                        pdcpMaxNumROHCSessions           |input;|
    supportBandNum                   u8                        u8                        supportBandNum                   |input;|
    txAntennaSelSupport:1            u16                       u16                       txAntennaSelSupport:1            |input;|
    specificRefSigsSupport:1         u16                       u16                       specificRefSigsSupport:1         |input;|
    enhancedDualLayerFdd:1           u16                       u16                       enhancedDualLayerFdd:1           |input;|
    enhancedDualLayerTdd:1           u16                       u16                       enhancedDualLayerTdd:1           |input;|
    deviceType:1                     u16                       u16                       deviceType:1                     |input;|
    intraFreqSiAcqForHo:1            u16                       u16                       intraFreqSiAcqForHo:1            |input;|
    interFreqSiAcqForHo:1            u16                       u16                       interFreqSiAcqForHo:1            |input;|
    rachReport:1                     u16                       u16                       rachReport:1                     |input;|
    ceModeASupport:1                 u16                       u16                       ceModeASupport:1                 |input;|
    ceModeBSupport:1                 u16                       u16                       ceModeBSupport:1                 |input;|
    intraFreqA3CeModeA:1             u16                       u16                       intraFreqA3CeModeA:1             |input;|
    intraFreqA3CeModeB:1             u16                       u16                       intraFreqA3CeModeB:1             |input;|
    intraFreqHoCeModeA:1             u16                       u16                       intraFreqHoCeModeA:1             |input;|
    intraFreqHoCeModeB:1             u16                       u16                       intraFreqHoCeModeB:1             |input;|
    extendedLongDrx:1                u16                       u16                       extendedLongDrx:1                |input;|
    supportedBandEutra[10]           array                     u8                        supportedBandEutra               |multiedit;|
    halfDuplex                       u16                       u16                       halfDuplex                       |input;|
    measGapForEutra                  u16                       u16                       measGapForEutra                  |input;|
    intraFreqCeNeedForGaps           u16                       u16                       intraFreqCeNeedForGaps           |input;|
    featureGroupIndicator            struct                    T_featureGroupIndicator   
    featureGroupIndRel9Add           struct                    T_featureGroupIndRel9Add  
    featureGroupIndRel10             struct                    T_featureGroupIndRel10    
    logicalChannelSRProhibitTimer:1  u32                       u32                       logicalChannelSRProhibitTimer:1  |input;|
    longDRXCommand:1                 u32                       u32                       longDRXCommand:1                 |input;|
    alternativeTimeToTrigger:1       u32                       u32                       alternativeTimeToTrigger:1       |input;|
    timerT312:1                      u32                       u32                       timerT312:1                      |input;|
    extendedRSRQLowerRange:1         u32                       u32                       extendedRSRQLowerRange:1         |input;|
    rsrqOnAllSymbols:1               u32                       u32                       rsrqOnAllSymbols:1               |input;|
    rsSINRMeas:1                     u32                       u32                       rsSINRMeas:1                     |input;|
    whiteCellList:1                  u32                       u32                       whiteCellList:1                  |input;|
    ulPDCPDelay:1                    u32                       u32                       ulPDCPDelay:1                    |input;|
    extendedMaxObjectId:1            u32                       u32                       extendedMaxObjectId:1            |input;|
    extendedFreqPriorities:1         u32                       u32                       extendedFreqPriorities:1         |input;|
    multiBandInfoReport:1            u32                       u32                       multiBandInfoReport:1            |input;|
    ueCENeedULGaps:1                 u32                       u32                       ueCENeedULGaps:1                 |input;|
    reserv:19                        u32                       u32                       reserv:19                        |input;|
</sub T_RadioAccessCapabilityLte>


<sub T_SupportedBandNB>
    freqBandIndicator         u16  u16  freqBandIndicator         |input;|
    powerClassNB20dbmSupport  u8   u8   powerClassNB20dbmSupport  |input;|
    reserved                  u8   u8   reserved                  |input;|
</sub T_SupportedBandNB>


<sub T_RadioAccessCapabilityLteNB>
    release                 u8                 u8                 release                 |input;|
    ueCategory              u8                 u8                 ueCategory              |input;|
    multiDRBSupport         u8                 u8                 multiDRBSupport         |input;|
    pdcpSupportROHC         u8                 u8                 pdcpSupportROHC         |input;|
    pdcpMaxNumROHCSessions  u8                 u8                 pdcpMaxNumROHCSessions  |input;|
    multiToneSupport        u8                 u8                 multiToneSupport        |input;|
    multiCarrierSupport     u8                 u8                 multiCarrierSupport     |input;|
    supportBandNum          u8                 u8                 supportBandNum          |input;|
    supportedBandEutra[10]  array              T_SupportedBandNB  supportedBandEutra      |multiedit;|
    multiNSPmaxSupport      u8                 u8                 multiNSPmaxSupport      |input;|
    reserved[3]             array              u8                 reserved                |multiedit;|
</sub T_RadioAccessCapabilityLteNB>


<sub T_UeCapabilityRequenstedLte>
    radioAccessCapability     struct                        T_RadioAccessCapabilityLte    
    radioAccessCapability_NB  struct                        T_RadioAccessCapabilityLteNB  
    securityCapbility         struct                        T_SecurityCapability          
</sub T_UeCapabilityRequenstedLte>


<sub T_freqlist_for_poweron_NB>
    freq_num                     u8                 u8                 freq_num                     |input;|
    reserved[3]                  array              u8                 reserved                     |multiedit;|
    freq[MAX_POWER_ON_FREQ_LEN]  array              T_NvCarrierFreqNB  freq                         |multiedit;|
</sub T_freqlist_for_poweron_NB>


<sub T_NVM_Static_PsCap>
    lteEqPout                u8                           u8                           lteEqPout                |input;|
    catmRatSupport           u8                           u8                           catmRatSupport           |input;|
    reserved[2]              array                        u8                           reserved                 |multiedit;|
    eUtranCapability         struct                       T_UeCapabilityRequenstedLte  
    freqlist_for_poweron_NB  struct                       T_freqlist_for_poweron_NB    
</sub T_NVM_Static_PsCap>


<sub T_NVM_Static_Mtc>
    signallingPrioritySupport:1    u32    u32    signallingPrioritySupport:1    |input;|
    attachWithImsiSupport:1        u32    u32    attachWithImsiSupport:1        |input;|
    Timer_T3245_Support:1          u32    u32    Timer_T3245_Support:1          |input;|
    eabSupported:1                 u32    u32    eabSupported:1                 |input;|
    FastFirstHiPriPLMNSearch:1     u32    u32    FastFirstHiPriPLMNSearch:1     |input;|
    cp_ciot_support:1              u32    u32    cp_ciot_support:1              |input;|
    up_ciot_support:1              u32    u32    up_ciot_support:1              |input;|
    emmRegWithoutPdnSupport:1      u32    u32    emmRegWithoutPdnSupport:1      |input;|
    emmRegWithoutPdnSupportOnly:1  u32    u32    emmRegWithoutPdnSupportOnly:1  |input;|
    smsWithoutComAttSupport:1      u32    u32    smsWithoutComAttSupport:1      |input;|
    niddSupport:1                  u32    u32    niddSupport:1                  |input;|
    S1_U_DataTransferSupport:1     u32    u32    S1_U_DataTransferSupport:1     |input;|
    cp_hc_support:1                u32    u32    cp_hc_support:1                |input;|
    cp_up_prefer:2                 u32    u32    cp_up_prefer:2                 |input;|
    ePCObit_support:1              u32    u32    ePCObit_support:1              |input;|
    apnRatControl_support:1        u32    u32    apnRatControl_support:1        |input;|
    reserv:15                      u32    u32    reserv:15                      |input;|
    MinimumPeriodicSearchTimer     u8     u8     MinimumPeriodicSearchTimer     |input;|
    SM_RetryWaitTime               u8     u8     SM_RetryWaitTime               |input;|
    RequiredT3412ExtendValue       u8     u8     RequiredT3412ExtendValue       |input;|
    RequiredT3324Value             u8     u8     RequiredT3324Value             |input;|
    RequiredExtendedDrx            u8     u8     RequiredExtendedDrx            |input;|
    reserved[3]                    array  u8     reserved                       |multiedit;|
</sub T_NVM_Static_Mtc>


<sub T_LteBlindCellListInfo>
    serverCellFreq     u16    u16    serverCellFreq     |input;|
    serverCellId       u16    u16    serverCellId       |input;|
    cellNum            u16    u16    cellNum            |input;|
    reserved           u16    u16    reserved           |input;|
    cellPhyIdList[16]  array  u16    cellPhyIdList      |multiedit;|
</sub T_LteBlindCellListInfo>


<sub T_LteBlindStubInfo>
    cellListNum       u8                      u8                      cellListNum       |input;|
    stubType          u8                      u8                      stubType          |input;|
    reserved[2]       array                   u8                      reserved          |multiedit;|
    cellListInfo[12]  array                   T_LteBlindCellListInfo  cellListInfo      |multiedit;|
</sub T_LteBlindStubInfo>


<sub T_NVM_FlowCtrlPara>
    lteDIFlowCtrlOpen   u8   u8   lteDIFlowCtrlOpen   |input;|
    lteDIFlowCtrlClose  u8   u8   lteDIFlowCtrlClose  |input;|
    reserve             u16  u16  reserve             |input;|
</sub T_NVM_FlowCtrlPara>


<sub T_lteFrequencyBand>
    freqBandNum  u16  u16  freqBandNum  |input;|
    freqBand     u16  u16  freqBand     |input;|
</sub T_lteFrequencyBand>


<sub T_LocFrequencyinfo>
    freqNum  u16    u16    freqNum  |input;|
    freq[9]  array  u16    freq     |multiedit;|
</sub T_LocFrequencyinfo>


<sub T_LocFrequencyinfo_NB>
    freqNum      u8                 u8                 freqNum      |input;|
    reserved[3]  array              u8                 reserved     |multiedit;|
    freq[9]      array              T_NvCarrierFreqNB  freq         |multiedit;|
</sub T_LocFrequencyinfo_NB>


<sub T_TraceConfig>
    traCategoryControl   u32    u32    traCategoryControl   |input;|
    lteTraModuleControl  u32    u32    lteTraModuleControl  |input;|
    ggeTraModuleControl  u32    u32    ggeTraModuleControl  |input;|
    pubTraModuleControl  u32    u32    pubTraModuleControl  |input;|
    phyModuleControl     u32    u32    phyModuleControl     |input;|
    traceFlowControl     u32    u32    traceFlowControl     |input;|
    reserved[2]          array  u32    reserved             |multiedit;|
    phyMsgControl[32]    array  u32    phyMsgControl        |multiedit;|
    lteTraModuleBuff     u32    u32    lteTraModuleBuff     |input;|
    ggeTraModuleBuff     u32    u32    ggeTraModuleBuff     |input;|
    pubTraModuleBuff     u32    u32    pubTraModuleBuff     |input;|
    phyModuleBuff        u32    u32    phyModuleBuff        |input;|
    reserved1[3]         array  u32    reserved1            |multiedit;|
</sub T_TraceConfig>


<sub T_NVM_Static_Eng>
    versionControl      u8                     u8                     versionControl      |input;|
    sleepFlag           u8                     u8                     sleepFlag           |input;|
    comprehensFlag      u8                     u8                     comprehensFlag      |input;|
    securityUsedFlag    u8                     u8                     securityUsedFlag    |input;|
    flowCtrlPara        struct                 T_NVM_FlowCtrlPara     
    lockLteCell         u16                    u16                    lockLteCell         |input;|
    resetFlag           u8                     u8                     resetFlag           |input;|
    tracePort           u8                     u8                     tracePort           |input;|
    lteFrequencyBand    struct                 T_lteFrequencyBand     
    lockLteFreqInfo     struct                 T_LocFrequencyinfo     
    lockLteFreqInfo_NB  struct                 T_LocFrequencyinfo_NB  
    traceConfig         struct                 T_TraceConfig          
    assertSceneBitmap   u32                    u32                    assertSceneBitmap   |input;|
</sub T_NVM_Static_Eng>


<sub T_NVM_Static>
    crcdata         u16                 u16                 crcdata         |input;|
    len             u16                 u16                 len             |input;|
    nvmVersion      u32                 u32                 nvmVersion      |input;|
    nvmStaticPsCap  struct              T_NVM_Static_PsCap  
    nvmStaticMTC    struct              T_NVM_Static_Mtc    
    nvmStaticEng    struct              T_NVM_Static_Eng    
</sub T_NVM_Static>


<sub T_NVM_Dynamic>
    crcdata       u16               u16               crcdata       |input;|
    len           u16               u16               len           |input;|
    nvmDynamicPs  struct            T_NVM_Dynamic_PS  
</sub T_NVM_Dynamic>


<sub T_EpsQos>
    Length                   u8     u8     Length                   |input;|
    EpsQoS[MAX_EPS_QOS_LEN]  array  u8     EpsQoS                   |multiedit;|
</sub T_EpsQos>


<sub T_PdnAddress>
    pdnType                             u8     u8     pdnType                             |input;|
    addressLen                          u8     u8     addressLen                          |input;|
    addressInfor[MAX_ADDRESSINFOR_LEN]  array  u8     addressInfor                        |multiedit;|
</sub T_PdnAddress>


