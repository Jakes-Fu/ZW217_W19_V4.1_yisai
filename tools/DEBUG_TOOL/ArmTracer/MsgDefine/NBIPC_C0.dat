/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 描述：消息数据结构定义文件
// 作者：LaoTan
// 日期：2018-11-14 10:04:04
// 版本：V0.0.1
// 版权：CopyRight(c) By RDA
// 
// 消息定义格
//    <MsgID MsgName>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </MsgID MsgName>
//
// 子结构定义
//    <Sub T_Temp>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </Sub T_Temp>
//
//  一个参数的bit位定义
//    <Bit T_Var>
//         成员名      在参数中的Bit位起始位置         成员长度(Bit数)         成员含义       成员选项
//    </Bit T_Var>
//
//  指针类型参数定义
//     参数名          Ptr           参数基类型         参数含义
//  e.g:
//      u16  *pPdschPointer;             ===> pPdschPointer      Ptr   u16             pPdschPointer 
//      T_PDSCH_MEM  *pPdschMapPointer;  ===> pPdschMapPointer   Ptr   T_PDSCH_MEM     pPdschMapPointer
//
//
// 选项定义：
//    |input;|                       参数值允许输入
//    |nochange;|                    参数值不允许改变
//    |select;值1:含义;值2:含义;|    参数值只能选择
//    |dismember;名称;|              参数bit定义
//    |multiedit;|                   数组输入
//         
//  注意：
//      1. 不支持union类型
//      2. ..:取值范围定义,e.g: 1..5,表示1到5范围
//      3. 空格符作为各列间的分隔符，如内容中有空格符，使用Tab符代替.
//      4. 参数基类型，支持u8、u16、u32，s8，s16，s32，自定义子结构、数组、指针类型(Ptr)
// 
/////////////////////////////////////////////////////////////////////////////////////////////////////////



#define  EAS_MAX_LTE_CELL_NUM  0x60
#define  EAS_MAX_LTE_FREQ_NUM  0x9
#define  EAS_MAX_N1_PUCCH_NUM  0x4
#define  EAS_MAX_IDL_BLACKCELL_NUM  0x10
#define  EAS_MAX_DCH_BLACKCELL_NUM  0x20
#define  EAS_MAX_SI_DATA_LENGTH  0x200
#define  EAS_MAX_ICS_CELL_NUM  0x40
#define  EAS_MAX_SWEEP_POINT  0x2d
#define  EAS_MAX_IDL_UTRA_FREQ_NUM  0x10
#define  EAS_MAX_DCH_UTRA_FREQ_NUM  0xc
#define  EAS_MAX_UTRA_CELL_NUM  0x40
#define  EAS_MAX_GGE_CELL_NUM  0x20
#define  EAS_MAX_PCH_INFO_LENGTH  0x100
#define  EAS_MAX_SI_NUM  0x20
#define  EAS_MAX_BSIC_CELL_NUM  0x8
#define  EAS_MAX_SETUP_RB_NUM  0x10
#define  EAS_MAX_MSG3_LENGTH  0xc
#define  EAS_MAX_CCCH_DATA_LEN  0x64
#define  EAS_MAX_CGI_DATA_LENTH  0x200
#define  EAS_MAX_CELL_NUM_EACH_FREQ  0x20
#define  EAS_MAX_MBSFN_NUM  0x8
#define  EAS_MAX_SCELL_NUM  0x7
#define  LTE_TO_TDS_START  0x1
#define  LTE_TO_GGE_START  0x2
#define  TDS_TO_LTE_FAIL  0x3
#define  GGE_TO_LTE_FAIL  0x4
#define  LTE_TO_TDS_HO_START  0x5
#define  LTE_TO_GGE_HO_START  0x6
#define  LTE_TO_WCDMA_START  0x7
#define  WCDMA_TO_LTE_FAIL  0x8
#define  LTE_TO_WCDMA_HO_START  0x9
#define  PDSCH_CANNOT_DECODE  0x1
#define  LOSS_COVERAGE_LTE  0x2
#define  PCH_CANNOT_DECODE_LTE  0x3
#define  BCH_CANNOT_DECODE_LTE  0x4
#define  PLMN_FINE_PWR_FAILURE  0x5
#define  NO_GAP_FOR_SERVING_CELL  0x6
#define  NORMAL_ABORT  0x0
#define  MMC_ABORT  0x1
#define  SI_CHANGE_ABORT  0x2
#define  ACC_INITIAL_ABORT  0x3
#define  CELL_RES_ABORT  0x4
#define  POWER_OFF_LTE  0x5
#define  ABORT_IRAT_PLMN_SERACH  0x6
#define  IRAT_RES_ABORT  0x7
#define  GSM_ABORT_LTE_PLMN  0x8
#define  GSM_ABORT_LTE_MEAS  0x9
#define  TDS_ABORT_LTE_MEAS  0xa
#define  EL1_RELEASE_RF_SOURCE  0xb
#define  ERRC_POWER_OFF  0x1
#define  ERRC_NAS_MODE_SWITCH  0x2
#define  ERRC_NO_AVAILIABLE_CELL  0x3
#define  ERRC_CCO_HO_SUCCESS  0x4
#define  T310_EXPIRE  0x0
#define  TAT_EXPIRE  0x1
#define  SR_TRANSCOUNTER_TO_MAX  0x2
#define  CELL_SELECT_LTE  0x0
#define  CELL_RESELECT_LTE  0x1
#define  ONLY_MEAS_LTE  0x2
#define  ONLY_RECEIVED_SIB1_LTE  0x3
#define  FINE_PWR_SWEEP  0x4
#define  FINE_PWR_RESULT  0x1
#define  PWR_RESULT  0x2
#define  CELL_SEARCH_FOLLOW_FINE_PWR  0x3
#define  BA_MEAS_FOR_SEL_FREQ  0x4
#define  BA_MEAS_FOR_SEL_CELL  0x5
#define  PLMN_PWR_SWEEP  0x0
#define  PLMN_FINE_PWR_SWEEP  0x1
#define  PLMN_NCELL_SI_GET  0x2
#define  PLMN_READ_SI  0x3
#define  NO_PLMN_TASK  0x4
#define  MAX_SDU_SEGMENT_NUM  0x8
#define  MAX_WINDOW_SIZE_LTE  0x200
#define  MAX_WINDOW_SIZE_LTE_1  0x1ff
#define  MAX_CTRL_SDU_BUFF_NUM  0xa
#define  MAX_USER_PDU_BUFF_LEN_LTE  0x200
#define  MAX_AM_SN_LTE  0x400
#define  MAX_AM_SN_LTE_1  0x3ff
#define  MAX_AM_RESTRICT_WINDOW_SIZE  0x20
#define  MAX_AM_RESTRICT_WINDOW_SIZE  0x200
#define  ERLC_ESTABLISH  0x1
#define  ERLC_RECONFIG  0x2
#define  ERLC_REESTABLISH  0x4
#define  ERLC_RECONFIG_FULLCONFIG  0x8
#define  ERLC_SUSPEND  0x1
#define  ERLC_RESUME  0x2
#define  ERLC_TM_MODE  0x0
#define  ERLC_UM_MODE  0x1
#define  ERLC_AM_MODE  0x2
#define  MAX_FREQUENCY_NUM_LTE  0x9
#define  TMD_PDU_TYPE  0x0
#define  UMD_PDU5_TYPE  0x1
#define  UMD_PDU10_TYPE  0x2
#define  AMD_PDU_TYPE  0x3
#define  AMD_PDU_SEGMENT_TYPE  0x4
#define  STATUS_PDU_TYPE  0x5
#define  MAX_RB_SETUP_LTE  0x10
#define  MAX_RB_SETUP_LTE  0x4
#define  IDL_MODE  0x0
#define  CONNECTED_MODE  0x1
#define  PDCP_HEAD_RESERVED_LEN  0x2
#define  L1DMA_DEST_START_ADDR  0x0
#define  L1DMA_CONFIG_INFO  0x2
#define  L1DMA_LAST_CONFIG_INFO  0x222
#define  LTE_DHI_SIGNAL  0x0
#define  TDS_DHI_SIGNAL  0x1
#define  GGE_DHI_SIGNAL  0x2
#define  GGE_LTE_DHI_TAG  0x3
#define  EMAC_PRACH_INITIAL_ACCESS  0x1
#define  EMAC_PRACH_UL_DATA  0x2
#define  EMAC_PRACH_PDCCH_ORDER  0x3
#define  EMAC_MAX_UL_TB_LEN  0x7d
#define  EMAC_MAX_DL_TB_LEN  0x55
#define  EAS_MAX_BLACKCELL_NUM  0x8
#define  MAX_FREQ_SEARCH_NUM  0x10
#define  MAX_CELL_SEARCH_NUM  0x10
#define  MAX_RSRP_RANGE_NB  0x2
#define  MAX_NPRACH_RESOURCES_NB  0x3
#define  MAX_SI_SCHEDULE_NUM  0x8
#define  MAX_BCCH_DATA_BYTE_LEN  0x55
#define  MAX_PCCH_DATA_BYTE_LEN  0x55
#define  MAX_CELL_ID  0x1f7
#define  maxPLMN  0x6
#define  MAX_BAND_NUM  0x8
#define  MAX_FREQ_SCAN_FREQ_NUM  0x10
#define  MAX_PLMN_SCAN_FREQ_NUM  0x30
#define  EAS_MAX_LTE_FREQ_NUM  0x64
#define  EAS_MAX_LTE_CELL_NUM  0x64
#define  maxCellIntra  0x64
#define  maxCellBlack  0x64
#define  maxFreq  0x64
#define  maxSIB  0x64
#define  EAS_MAX_IDL_BLACKCELL_NUM  0x64
#define  EMAC_MAX_UL_HEADER_LEN  0x7d
#define  DEFAULT_PROHIBIT_TIMER  0x0
#define  DEFAULT_PROHIBIT_TIMER  0x7
#define  SMS_NOT_AVAILABLE  0x0
#define  SMS_AVAILABLE  0x1
#define  EMM_MO_DETACH_POWER_OFF  0x1
#define  EMM_MO_DETACH_AIR_MODE  0x2
#define  EMM_MO_DETACH_EPS_DETACH  0x3
#define  EMM_MO_DETACH_IMSI_DETACH  0x4
#define  EMM_NW_DETACH_TYPE_REATTACH_REQUIRED  0x1
#define  EMM_NW_DETACH_TYPE_REATTACH_NOT_REQ  0x2
#define  EMM_NW_DETACH_TYPE_IMSI_DETACH  0x3
#define  EMM_DETACH_MMI  0x1
#define  EMM_DETACH_NW  0x2
#define  EMM_DETACH_LOCAL  0x3
#define  EMM_INVALID_EPS_NSC  0x0
#define  EMM_SHUT_OFF_COMPLETE  0x1
#define  EMM_ACTIVE_PSM  0x2
#define  EMM_DEACTIVE_PSM  0x4
#define  MMC_POWER_ON  0x0
#define  MMC_LIMITED_SERVICE  0x1
#define  MMC_LOSS_COVERAGE  0x2
#define  MMC_PLMN_SELECTION  0x3
#define  MMC_ILLEGAL_MS  0x4
#define  MMC_DETACHED  0x5
#define  MMC_SHUT_OFF  0x6
#define  MMC_DISABLE_LTE  0x8
#define  MMC_ENABLE_LTE  0x9
#define  MMC_EPS_TAU_PROC  0xa
#define  MMC_READ_USIM_COMPLETED  0xc
#define  AUTH_SUCCESS  0x1
#define  AUTH_TIMEOUT  0x2
#define  AUTH_REJECT  0x3
#define  AUTH_SIMFAIL  0x4
#define  ERAB_NETWORK_REJECT  0x2
#define  ERAB_STATE_IMCOMPATIBLE  0x3
#define  IP_TYPE  0x1
#define  NO_IP_TYPE  0x2
#define  LTE_PS_MODE_1  0x0
#define  LTE_PS_MODE_2  0x1
#define  LTE_CS_PS_MODE_1  0x2
#define  LTE_CS_PS_MODE_2  0x3
#define  TIMER_NOT_RUNNING  0x0
#define  TIMER_RUNNING  0x1
#define  TIMER_EXPIRED  0x2
#define  TIMER_NEED_RESTART  0x3
#define  EMM_ATTACH_REQ  0x41
#define  EMM_ATTACH_ACC  0x42
#define  EMM_ATTACH_COM  0x43
#define  EMM_ATTACH_REJ  0x44
#define  EMM_DETACH_REQ  0x45
#define  EMM_DETACH_ACC  0x46
#define  EMM_TRA_AREA_UPD_REQ  0x48
#define  EMM_TRA_AREA_UPD_ACC  0x49
#define  EMM_TRA_AREA_UPD_COM  0x4a
#define  EMM_TRA_AREA_UPD_REJ  0x4b
#define  EMM_EXT_SERVICE_REQ  0x4c
#define  EMM_CONTROL_PLANE_SERVICE_REQ  0x4d
#define  EMM_SERVICE_REJ  0x4e
#define  EMM_SERVICE_ACCEPT  0x4f
#define  EMM_GUTI_REAL_CMD  0x50
#define  EMM_GUTI_REAL_COM  0x51
#define  EMM_AUTH_REQ  0x52
#define  EMM_AUTH_RSP  0x53
#define  EMM_AUTH_REJ  0x54
#define  EMM_AUTH_FAIL  0x5c
#define  EMM_ID_REQ  0x55
#define  EMM_ID_RSP  0x56
#define  EMM_SEC_MODE_CMD  0x5d
#define  EMM_SEC_MODE_COMP  0x5e
#define  EMM_SEC_MODE_REJ  0x5f
#define  EMM_STATUS  0x60
#define  EMM_INFO  0x61
#define  EMM_DL_NAS_TRANS  0x62
#define  EMM_UL_NAS_TRANS  0x63
#define  EMM_CS_SERVICE_NOTIFI  0x64
#define  EMM_SERVICE_REQUEST  0xfe
#define  ESM_ActDefaultContReq  0xc1
#define  ESM_ActDefaultContAcc  0xc2
#define  ESM_ActDefaultContRej  0xc3
#define  ESM_ActDedicatContReq  0xc5
#define  ESM_ActDedicatContAcc  0xc6
#define  ESM_ActDedicatContRej  0xc7
#define  ESM_ModEpsContReq  0xc9
#define  ESM_ModEpsContAcc  0xca
#define  ESM_ModEpsContRej  0xcb
#define  ESM_DeactEpsContReq  0xcd
#define  ESM_DeactEpsContAcc  0xce
#define  ESM_PdnConnectReq  0xd0
#define  ESM_PdnConnectRej  0xd1
#define  ESM_PdnDisconnectReq  0xd2
#define  ESM_PdnDisconnectRej  0xd3
#define  ESM_BearResourAllocReq  0xd4
#define  ESM_BearResourAllocRej  0xd5
#define  ESM_BearResourModReq  0xd6
#define  ESM_BearResourModRej  0xd7
#define  ESM_EsmInfoReq  0xd9
#define  ESM_EsmInfoResp  0xda
#define  ESM_Notification  0xdb
#define  ESM_EsmDummyMessage  0xdc
#define  ESM_EsmStatus  0xe8
#define  ESM_EsmDataTransport  0xeb
#define  ESM_EPS_CONTEXT_NO_TASK  0x0
#define  ESM_EPS_CONTEXT_ACTIVATE  0x1
#define  ESM_EPS_CONTEXT_DEACTIVATE_MO  0x2
#define  ESM_EPS_CONTEXT_MODIFY_MO  0x4
#define  ESM_EPS_CONTEXT_ALLOCATION  0x5
#define  ESM_EPS_CONTEXT_DEACTIVATE_BY_ESM  0x6
#define  ESM_EPS_CONTEXT_RABM_DATA_TRANS  0x7
#define  GMS_CP_DATA  0x1
#define  GMS_CP_ACK  0x4
#define  GMS_CP_ERROR  0x10
#define  GMS_MS_TO_NETWORK_RP_DATA  0x80
#define  GMS_NETWORK_TO_MS_RP_DATA  0x81
#define  GMS_MS_TO_NETWORK_RP_ACK  0x82
#define  GMS_NETWORK_TO_MS_RP_ACK  0x83
#define  GMS_MS_TO_NETWORK_RP_ERROR  0x84
#define  GMS_NETWORK_TO_MS_RP_ERROR  0x85
#define  GMS_MS_TO_NETWORK_RP_SMMA  0x86
#define  NAS_SECU_HEAD_LEN  0x6
#define  MAX_NAS_UL_MSG_LEN  0xff
#define  MAX_ENCRY_KEY_LEN  0x8
#define  MAX_AUTH_RAND_LEN  0x10
#define  MAX_RES_LEN  0x11
#define  MAX_CELL_ID_LEN  0x4
#define  MAX_LAC_LEN  0x2
#define  MAX_LAI_LEN  0x5
#define  MAX_RAI_LEN  0x6
#define  MAX_TMSI_LEN  0x4
#define  MAX_PTMSI_LEN  0x4
#define  MAX_PTMSI_SIGNATURE_LEN  0x3
#define  MAX_GUTI_LEN  0xc
#define  MAX_TAILIST_LEN  0x10
#define  MAX_TAI_LEN  0x5
#define  MAX_CLI_LEN  0xc
#define  MAX_CSFB_NOTICE_LEN  0xe
#define  CK_LEN  0x10
#define  IK_LEN  0x10
#define  MAX_SEC_KEY_LEN  0x10
#define  MAX_EHPLMN_NUM  0xa
#define  MAX_PLMN_ACT_LEN  0x6
#define  MAX_PLMN_RAT_LEN  0x5
#define  MAX_ESM_MSG_LEN  0x618
#define  MAX_SMS_MSG_LEN  0xfb
#define  MT_GMS  0x0
#define  MO_GMS  0x1
#define  EPS_UPDATED  0x0
#define  EPS_NOT_UPDATED  0x1
#define  EPS_ROAMING_NOT_ALLOWED  0x2
#define  PS_DOMAIN_NAS  0x0
#define  CS_DOMAIN_NAS  0x1
#define  PS_DOMAIN_PRIO_NAS  0x2
#define  CS_DOMAIN_PRIO_NAS  0x3
#define  EPS_DOMAIN_NAS  0x4
#define  CM_SERV_STATUS_NULL  0x0
#define  CM_SERV_STATUS_ESTABLISHING  0x1
#define  CM_SERV_STATUS_CONNECTED  0x2
#define  CM_SERV_STATUS_WAIT_REEST  0x3
#define  CM_SERV_PAGING_FACH_REL  0x4
#define  MAX_LEGACY_PCO_LEN  0xfb
#define  MAX_APN_LEN  0x64
#define  MAX_ADDRESSINFOR_LEN  0x12
#define  MAX_PACKETFILTERLIST_LEN  0xfe
#define  MAX_QOS_LEN  0x10
#define  NON_EPS_ATTACH_PROCESS  0x0
#define  EPS_ATTACH_PROCESS  0x11
#define  INVALID_TI_VALUE  0xff
#define  NOT_ASSIGNED_EBI  0x0
#define  NOT_ASSIGNED_PTI  0x0
#define  RESERVED_PTI  0xff
#define  MAX_PTI_NUM  0xfe
#define  INVALID_NSAPI  0xff
#define  TC_TEST_MODE_A  0x0
#define  TC_TEST_MODE_B  0x1
#define  TC_TEST_MODE_C  0x2
#define  TC_TEST_MODE_D  0x3
#define  TC_TEST_MODE_E  0x4
#define  TC_TEST_MODE_F  0x5
#define  TC_TEST_MODE_G  0x6
#define  TC_TEST_MODE_H  0x7
#define  TC_INVALID_MODE  0xff
#define  CIOT_CP_SOLUTION_ONLY  0x1
#define  CIOT_UP_SOLUTION_ONLY  0x2
#define  CIOT_CP_UP_SOLUTION  0x3
#define  IPV4_TYPE  0x21
#define  IPV6_TYPE  0x57
#define  IPV4V6_TYPE  0x8d
#define  PDN_IPV4_TYPE  0x1
#define  PDN_IPV6_TYPE  0x2
#define  PDN_IPV4V6_TYPE  0x3
#define  PDN_NONIP_TYPE  0x5
#define  PDN_DUMMY_TYPE  0xff
#define  NAS_INVALID_KSI  0x7
#define  SIM_FILE_MAX_PLMN_SEL_LEN  0x3d
#define  SIM_FILE_MAX_FPLMN_LEN  0x3d
#define  SIM_FILE_MAX_EHPLMN_LEN  0x3d
#define  SIM_ACC_0_MASK  0x1
#define  SIM_ACC_1_MASK  0x2
#define  SIM_ACC_2_MASK  0x4
#define  SIM_ACC_3_MASK  0x8
#define  SIM_ACC_4_MASK  0x10
#define  SIM_ACC_5_MASK  0x20
#define  SIM_ACC_6_MASK  0x40
#define  SIM_ACC_7_MASK  0x80
#define  SIM_ACC_8_MASK  0x100
#define  SIM_ACC_9_MASK  0x200
#define  SIM_ACC_10_MASK  0x400
#define  SIM_ACC_11_MASK  0x800
#define  SIM_ACC_12_MASK  0x1000
#define  SIM_ACC_13_MASK  0x2000
#define  SIM_ACC_14_MASK  0x4000
#define  SIM_ACC_15_MASK  0x8000
#define  HPLMN_TIMER_DEF_VALUE  0x24
#define  RELEASE_TDS_RLF  0x1
#define  RELEASE_EPS_NOT_NEED  0x2
#define  RELEASE_EPS_NEED  0x3
#define  CAPI_PLMN_MODE_AUTO  0x0
#define  CAPI_PLMN_MODE_MANUAL  0x1
#define  CAPI_MAX_PLMN_LEN  0x3
#define  ACT_E_UTRAN  0x1
#define  CAPI_NON_AIR_MODE  0x0
#define  CAPI_AIR_MODE  0x1
#define  CAPI_RPT_TYPE_REG_RESULT  0x0
#define  CAPI_RPT_TYPE_SEARCH_RESULT  0x1
#define  CAPI_REG_STATE_NO_CARRIER  0x80
#define  CAPI_REG_STATE_EMERG_IDLE  0x1
#define  CAPI_REG_STATE_IDLE_UPD  0x2
#define  CAPI_REG_STATE_INVALID  0x3
#define  CAPI_REG_STATE_DETACH_IND  0x4
#define  CAPI_REG_STATE_IDLE_UPD_SMS_ONLY  0x5
#define  CAPI_REG_STATE_IDLE_UPD_CSFB_NOT_PREFER  0x6
#define  CAPI_REG_STATE_EMERG_UPD  0x7
#define  CAPI_REG_MAX_AVAIL_PLMN_NUM  0x14
#define  CAPI_REG_NOT_ROAMING  0x0
#define  CAPI_REG_ROAMING  0x1
#define  CAPI_DEREG_TYPE_NORMAL  0x0
#define  CAPI_DEREG_TYPE_POWEROFF  0x1
#define  CAPI_DEREG_TYPE_USIM_REMOVED  0x2
#define  CAPI_DEREG_GPRS_DETACH  0x1
#define  CAPI_DEREG_IMSI_DETACH  0x2
#define  CAPI_DEREG_COM_DETACH  0x3
#define  CAPI_NO_ATTACH_REQ  0x0
#define  CAPI_COMBINE_ATTACH_REQ  0x1
#define  CAPI_ONLY_GPRS_ATTACH_REQ  0x2
#define  CAPI_ONLY_IMSI_ATTACH_REQ  0x3
#define  MT_CALL_ALLEVIATE  0x1
#define  MO_CALL_ALLEVIATE  0x2
#define  MO_SIGNALLING_ALLEVIATE  0x4
#define  MO_CSFB_ALLEVIATE  0x8
#define  ERRC_MMC_NORMAL_SELECTION  0x1
#define  ERRC_MMC_PSM_SELECTION  0x2
#define  ERRC_MMC_OOS_SELECTION  0x3
#define  ERRC_MMC_DEACT_POWER_OFF  0x1
#define  ERRC_MMC_DEACT_PSM  0x2
#define  ERRC_MMC_DEACT_OOS  0x3
#define  ERRC_MMC_DEACT_SIM_INVALID  0x4
#define  ERRC_MMC_DEACT_BG_SEARCH  0x6
#define  EAS_OTHER_TYPE_PLMN_SEARCH  0x1
#define  EAS_HPLMN_SEARCH  0x2
#define  EAS_MANUAL_PLMN_SEARCH  0x3
#define  ASSERT_CONTINUE  0x0
#define  ASSERT_RESET  0x1
#define  MAX_MODE_NUM  0x2
#define  MAX_LTE_CELL_NUM  0x40
#define  MAX_LTE_FREQ_NUM  0x8
#define  MEM_FIX_RESERVERD_LEN  0x4
#define  STRONGEST_NCELL_NUM_ENG_MODE  0x6
#define  MAX_NCELL_NUM_FOR_MAIN_INFO  0x6
#define  TRACE_NCELL_NUM_THREE_MODE  0x50
#define  MAX_IMEISV_LEN  0xa
#define  MAX_IMEI_LEN  0x9
#define  MAX_HNBNAME_LEN  0x30
#define  FUNCTION_NAME_ARRAY_SIZE  0x800
#define  FUNCTION_NAME_LENGTH  0xf
#define  EIA0  0x0
#define  EIA1  0x1
#define  EIA2  0x2
#define  EIA3  0x3
#define  EEA0  0x0
#define  EEA1  0x1
#define  EEA2  0x2
#define  EEA3  0x3
#define  CAPI_NO_CAUSE  0x0
#define  CAPI_SPV_CAUSE  0x10
#define  CAPI_MMI_CAUSE  0x11
#define  CAPI_SAP_CAUSE  0x12
#define  CAPI_SIM_CAUSE  0x13
#define  CAPI_LOCAL_CAUSE  0x40
#define  CAPI_SS_ERR_CAUSE  0x41
#define  CAPI_MM_NET_CAUSE  0x42
#define  CAPI_CC_NET_CAUSE  0x43
#define  CAPI_TP_CAUSE  0x44
#define  CAPI_RP_CAUSE  0x45
#define  CAPI_CP_CAUSE  0x46
#define  CAPI_SM_CAUSE  0x47
#define  CAPI_ESM_CAUSE  0x48
#define  CAPI_MM_NET_CAUSE_EMM  0x49
#define  CAPI_LOCAL_CAUSE_EMM  0x50
#define  CAPI_SS_REJ_GEN_CAUSE  0x80
#define  CAPI_SS_REJ_INV_CAUSE  0x81
#define  CAPI_SS_REJ_RES_CAUSE  0x82
#define  CAPI_SS_REJ_ERR_CAUSE  0x83
#define  SAP_CS_NO_CAUSE  0x0
#define  SAP_CS_ACCESS_UNKNOWN  0x1
#define  SAP_CS_ACCESS_NOT_ALLOWED  0x2
#define  SAP_CS_CHV1_NOT_ALLOWED  0x3
#define  SAP_CS_CHV2_NOT_ALLOWED  0x4
#define  SAP_CS_TIMER_TIMEOUT_ERROR  0x5
#define  SAP_CS_FILE_INDEX_INVALID  0x6
#define  SAP_CS_FILE_LENGTH_ERROR  0x7
#define  SAP_CS_FCP_CONTENT_CHK_ERR  0x8
#define  SAP_CS_PBR_CONTENT_CHK_ERR  0x9
#define  SAP_CS_UST_CONTENT_CHK_ERR  0xa
#define  SAP_CS_ARR_CONTENT_CHK_ERR  0xb
#define  SAP_CS_MFDIR_CONTENT_CHK_ERR  0xc
#define  SAP_CS_MOBI_REQ_WRONG_PARA  0xd
#define  SAP_CS_USIM_IS_CORRUPTED  0xe
#define  SAP_CS_FCP_CONTENT_ABSENT  0xf
#define  SAP_CS_IMG_CONTENT_CHK_ERR  0x10
#define  SAP_CS_DRV_EXCEP_RX_PARITY_ERR  0x11
#define  SAP_CS_DRV_EXCEP_TX_PARITY_ERR  0x12
#define  SAP_CS_DRV_EXCEP_CARD_UNRESPONSE  0x13
#define  SAP_CS_DRV_EXCEP_CARD_IS_OUT  0x14
#define  SAP_CS_DRV_EXCEP_CARD_IS_IN  0x15
#define  SAP_CS_DRV_EXCEP_ATR_FAILED  0x21
#define  SAP_CS_DRV_EXCEP_PTS_FAILED  0x22
#define  SAP_CS_DRV_EXCEP_PROCEDURE_BYTE_ERR  0x23
#define  SAP_CS_DRV_EXCEP_WTO  0x24
#define  SAP_CS_DRV_EXCEP_MUTE  0x25
#define  SAP_CS_DRV_EXCEP_EARLY  0x26
#define  SAP_CS_DRV_EXCEP_SUPL  0x27
#define  SAP_CS_DRV_EXCEP_PROT  0x28
#define  SAP_CS_DRV_EXCEP_OTHER  0x29
#define  SAP_CS_DRV_ATR_USIM_INSERTED_ERR  0x31
#define  SAP_CS_DRV_ATR_INSERTED_NO_USIM  0x32
#define  SAP_CS_AUTH_CONTEXT_NOT_MATCH  0x33
#define  SAP_CS_UPIN_NOT_ALLOWED  0x34
#define  SAP_CS_USIM_IS_RETRIEVED  0x35
#define  CAPI_SS_RTR_UNKNOWN_SUBSCRIBER  0x1
#define  CAPI_SS_RTR_ILLEGAL_SUBSCRIBER  0x9
#define  CAPI_SS_RTR_BEARER_SERVICE_NOT_PROV  0xa
#define  CAPI_SS_RTR_TELESERVICE_NOT_PROV  0xb
#define  CAPI_SS_RTR_ILLEGAL_EQUIPMENT  0xc
#define  CAPI_SS_RTR_CALL_BARRED  0xd
#define  CAPI_SS_RTR_ILLEGAL_SS_OPERATION  0x10
#define  CAPI_SS_RTR_ERROR_STATUS  0x11
#define  CAPI_SS_RTR_NOT_AVAILABLE  0x12
#define  CAPI_SS_RTR_SUBSCRIPTION_VIOLATION  0x13
#define  CAPI_SS_RTR_INCOMPATIBILITY  0x14
#define  CAPI_SS_RTR_FACILITY_NOT_SUPPORTED  0x15
#define  CAPI_SS_RTR_ABSENT_SUBSCRIBER  0x1b
#define  CAPI_SS_RTR_SHORT_TERM_DENIAL  0x1d
#define  CAPI_SS_RTR_LONG_TERM_DENIAL  0x1e
#define  CAPI_SS_RTR_SYST_FAILURE  0x22
#define  CAPI_SS_RTR_DATA_MISSING  0x23
#define  CAPI_SS_RTR_UNEXPECTED_DATA_VALUE  0x24
#define  CAPI_SS_RTR_PASSW_REGIST_FAILURE  0x25
#define  CAPI_SS_RTR_NEG_PASSW_CHECK  0x26
#define  CAPI_SS_RTR_NB_OF_PW_ATTEMPTS_VIOL  0x2b
#define  CAPI_SS_RTR_POS_METHOD_FAILURE  0x36
#define  CAPI_SS_RTR_UNKNOWN_ALPHABET  0x47
#define  CAPI_SS_RTR_USSD_BUSY  0x48
#define  CAPI_SS_RTR_NBR_SB_EXCEEED  0x78
#define  CAPI_SS_RTR_REJECT_BY_USER  0x79
#define  CAPI_SS_RTR_REJECT_BY_NETWORK  0x7a
#define  CAPI_SS_RTR_DEFLECT_TO_SERV_SUBSCRIBER  0x7b
#define  CAPI_SS_RTR_SPECIAL_SERVICE_CODE  0x7c
#define  CAPI_SS_RTR_INVALID_DEFLECTED_TO_NUMBER  0x7d
#define  CAPI_SS_RTR_MAX_NB_OF_MPTY_PART_EXCEED  0x7e
#define  CAPI_SS_RTR_RESOURCES_NOT_AVAILABLE  0x7f
#define  CAPI_SS_GEN_PB_UNRECOGNIZED_COMPONENT  0x0
#define  CAPI_SS_GEN_PB_MISTYPED_COMPONENT  0x1
#define  CAPI_SS_GEN_PB_BADLY_STRUCTURED_COMPONENT  0x2
#define  CAPI_SS_INV_PB_DUPLICATE_INVOKE_ID  0x0
#define  CAPI_SS_INV_PB_UNRECOGNIZED_OPERATION  0x1
#define  CAPI_SS_INV_PB_MISTYPED_PARAMETER  0x2
#define  CAPI_SS_INV_PB_RESOURCE_LIMITATION  0x3
#define  CAPI_SS_INV_PB_INITIATING_RELEASE  0x4
#define  CAPI_SS_INV_PB_UNRECOGNIZED_LINKED_ID  0x5
#define  CAPI_SS_INV_PB_LINKED_RESPONSE_UNEXPECTED  0x6
#define  CAPI_SS_INV_PB_UNEXPECTED_LINKED_OPERATION  0x7
#define  CAPI_SS_RET_RES_UNRECOGNIZED_INVOKE_ID  0x0
#define  CAPI_SS_RET_RES_RETURN_RESULT_UNEXPECTED  0x1
#define  CAPI_SS_RET_RES_MISTYPED_PARAMETER  0x2
#define  CAPI_SS_RET_ERR_UNRECOGNIZED_INVOKE_ID  0x0
#define  CAPI_SS_RET_ERR_RETURN_ERROR_UNEXPECTED  0x1
#define  CAPI_SS_RET_ERR_UNRECOGNIZED_ERROR  0x2
#define  CAPI_SS_RET_ERR_UNEXPECTED_ERROR  0x3
#define  CAPI_SS_RET_ERR_MISTYPED_PARAMETER  0x4
#define  CAPI_CS_MM_UNALLOACTED_TMSI  0x1
#define  CAPI_CS_MM_UNKNOWN_IMSI  0x2
#define  CAPI_CS_MM_ILLEGAL_MS  0x3
#define  CAPI_CS_MM_IMSI_UNKNOWN_IN_VLR  0x4
#define  CAPI_CS_MM_IMEI_NOT_ACCEPTED  0x5
#define  CAPI_CS_MM_ILLEGAL_ME  0x6
#define  CAPI_PS_GMM_GPRS_SER_NOT_ALLOWED  0x7
#define  CAPI_PS_GMM_GPRS_ALLOWED_AND_NON_GPRS_NOT_ALLOWED  0x8
#define  CAPI_PS_GMM_MS_IDENTITY_CAN_NOT_DERIVED_BY_NETWORK  0x9
#define  CAPI_PS_GMM_IMPLICITY_DETACH  0xa
#define  CAPI_CS_MM_PLMN_NOT_ALLOWED  0xb
#define  CAPI_CS_MM_LAI_NOT_ALLOWED  0xc
#define  CAPI_CS_MM_ROAM_NOT_ALLOWED_IN_LA  0xd
#define  CAPI_PS_GMM_GPRS_SER_NOT_ALLOWED_IN_THIS_PLMN  0xe
#define  CAPI_CS_MM_NO_SUITABLE_CELL_IN_LA  0xf
#define  CAPI_PS_GMM_MSC_TEMP_NOT_REACHABLE  0x10
#define  CAPI_CS_MM_NETWORK_FAILURE  0x11
#define  CAPI_CS_MM_MAC_FAILURE  0x14
#define  CAPI_CS_MM_SYNCH_FAILURE  0x15
#define  CAPI_CS_MM_CONGESTION  0x16
#define  CAPI_CS_MM_GSM_AUTH_UNACCEPTABLE  0x17
#define  CAPI_CS_MM_SERVICE_OPTION_NOT_SUPPORTED  0x20
#define  CAPI_CS_MM_REQUEST_SERV_OPTION_NOT_SUBSCRIBED  0x21
#define  CAPI_CS_MM_SERVICE_OPTION_TEMPORARY_OUT_OF_ORD  0x22
#define  CAPI_CS_MM_CALL_NOT_IDENTIFIED  0x26
#define  CAPI_PS_GMM_NO_PDP_CONTEXT_ACTIVATED  0x28
#define  CAPI_CS_MM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_CS_MM_INVALID_MANDATORY_INFORMATION  0x60
#define  CAPI_CS_MM_MESSAGE_TYPE_NON_EXISTANT_OR_NOT_IMPLEMENTED  0x61
#define  CAPI_CS_MM_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x62
#define  CAPI_CS_MM_INFO_ELEM_NON_EXISTENT_OR_NOT_IMPLEMENTED  0x63
#define  CAPI_CS_MM_CONDITIONAL_IEI_ERROR  0x64
#define  CAPI_CS_MM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x65
#define  CAPI_CS_MM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_EPS_EMM_IMSI_UNKNOWN_IN_HSS  0x2
#define  CAPI_EPS_EMM_ILLEGAL_UE  0x3
#define  CAPI_EPS_EMM_IMEI_NOT_ACCEPTED  0x5
#define  CAPI_EPS_EMM_ILLEGAL_ME  0x6
#define  CAPI_EPS_EMM_EPS_SERVICE_NOT_ALLOWED  0x7
#define  CAPI_EPS_EMM_EPS_SERVICE_AND_NON_EPS_SERVICE_NOT_ALLOWED  0x8
#define  CAPI_EPS_EMM_UE_IDENTITY_CAN_NOT_DERIVED_BY_NETWORK  0x9
#define  CAPI_EPS_EMM_IMPLICITY_DETACH  0xa
#define  CAPI_EPS_EMM_PLMN_NOT_ALLOWED  0xb
#define  CAPI_EPS_EMM_TRACKING_AREA_NOT_ALLOWED  0xc
#define  CAPI_EPS_EMM_ROAM_NOT_ALLOWED_IN_TRACKING_AREA  0xd
#define  CAPI_EPS_EMM_EPS_SERVICE_NOT_ALLOWED_IN_THIS_PLMN  0xe
#define  CAPI_EPS_EMM_NO_SUITABLE_CELL_IN_TRACKING_AREA  0xf
#define  CAPI_EPS_EMM_MSC_TEMPORARILY_NOT_REACHABLE  0x10
#define  CAPI_EPS_EMM_NETWORK_FAILURE  0x11
#define  CAPI_EPS_EMM_CS_DOMAIN_NOT_AVAILABLE  0x12
#define  CAPI_EPS_EMM_ESM_FAILURE  0x13
#define  CAPI_EPS_EMM_MAC_FAILURE  0x14
#define  CAPI_EPS_EMM_SYNCH_FAILURE  0x15
#define  CAPI_EPS_EMM_CONGESTION  0x16
#define  CAPI_EPS_EMM_UE_SECURITY_CAPABILITIES_MISMATCH  0x17
#define  CAPI_EPS_EMM_SECURITY_MODE_REJECTED_UNSPECIFIED  0x18
#define  CAPI_EPS_EMM_NOT_AUTHORIZED_FOR_THIS_CSG  0x19
#define  CAPI_EPS_EMM_NON_EPS_AUTHENTICATION_UNACCEPTABLE  0x1a
#define  CAPI_EPS_EMM_REQUESTED_SERVICE_NOT_AHTH_IN_THIS_PLMN  0x23
#define  CAPI_EPS_EMM_CS_DOMAIN_TEMPORARILY_NOT_AVAILABLE  0x27
#define  CAPI_EPS_EMM_NO_EPS_BEARER_CONTEXT_ACTIVATED  0x28
#define  CAPI_EPS_EMM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_EPS_EMM_INVALID_MANDATORY_INFORMATION  0x60
#define  CAPI_EPS_EMM_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENT  0x61
#define  CAPI_EPS_EMM_MESSAGE_TYPE_NON_COMP_WITH_THE_PRO_STATE  0x62
#define  CAPI_EPS_EMM_INFO_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED  0x63
#define  CAPI_EPS_EMM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_EPS_EMM_MESSAGE_NOT_CAMP_WITH_PROTOCOL_STATE  0x65
#define  CAPI_EPS_EMM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_CS_RP_UNALLOC_UNASSIGN_NBR  0x1
#define  CAPI_CS_RP_OPERATOR_DET_BAR  0x8
#define  CAPI_CS_RP_CALL_BARRED  0xa
#define  CAPI_CS_RP_SMS_TRANS_REJECTED  0x15
#define  CAPI_CS_RP_MEMORY_CAPACITY_EXCEEDED  0x16
#define  CAPI_CS_RP_DEST_OUT_OF_SERVICE  0x1b
#define  CAPI_CS_RP_UNIDENT_SUBSCRIBER  0x1c
#define  CAPI_CS_RP_FACILITY_REJECTED  0x1d
#define  CAPI_CS_RP_UNKNOWN_SUBSCRIBER  0x1e
#define  CAPI_CS_RP_NETWORK_OUT_OF_ORDER  0x26
#define  CAPI_CS_RP_TEMPORARY_FAILURE  0x29
#define  CAPI_CS_RP_CONGESTION  0x2a
#define  CAPI_CS_RP_RESOURCES_UNAVAILABLE  0x2f
#define  CAPI_CS_RP_REQ_FACILITY_NOT_SUBSCR  0x32
#define  CAPI_CS_RP_REQ_FACILITY_NOT_IMPL  0x45
#define  CAPI_CS_RP_INVALID_SMS_TRANS_REF_VAL  0x51
#define  CAPI_CS_RP_INVALID_SHORT_MSG  0x5f
#define  CAPI_CS_RP_MANDATORY_IE_MISSING  0x60
#define  CAPI_CS_RP_MSG_TYPE_NONEXISTENT  0x61
#define  CAPI_CS_RP_INCOMPATIBLE_PROT_STATE  0x62
#define  CAPI_CS_RP_IE_NONEXISTENT_NOTIMPL  0x63
#define  CAPI_CS_RP_INVALID_IE_CONTENTS  0x64
#define  CAPI_CS_RP_PROTOCOL_UNSPECIFIED  0x6f
#define  CAPI_CS_RP_IWK_UNSPECIFIED  0x7f
#define  CAPI_CS_CP_NETWORK_FAILURE  0x11
#define  CAPI_CS_CP_CONGESTION  0x16
#define  CAPI_CS_CP_INVALID_TI  0x51
#define  CAPI_CS_CP_INVALID_SHORT_MSG  0x5f
#define  CAPI_CS_CP_MANDATORY_IE_MISSING  0x60
#define  CAPI_CS_CP_MSG_TYPE_NONEXISTENT  0x61
#define  CAPI_CS_CP_INCOMPATIBLE_PROT_STATE  0x62
#define  CAPI_CS_CP_IE_NONEXISTENT_NOTIMPL  0x63
#define  CAPI_CS_CP_PROTOCOL_UNSPECIFIED  0x6f
#define  CAPI_CS_TP_TELEMATIC_INTERWORKING_NOT_SUPPORTED  0x80
#define  CAPI_CS_TP_SHORT_MESSAGE_TYPE_0_NOT_SUPPORTED  0x81
#define  CAPI_CS_TP_CANNOT_REPLACE_SHORT_MESSAGE  0x82
#define  CAPI_CS_TP_UNSPECIFIED_TP_PID_ERROR  0x8f
#define  CAPI_CS_TP_DATA_CODING_SCHEME_ALPHABET_NOT_SUPPORTED  0x90
#define  CAPI_CS_TP_MESSAGE_CLASS_NOT_SUPPORTED  0x91
#define  CAPI_CS_TP_UNSPECIFIED_TP_DCS_ERROR  0x9f
#define  CAPI_CS_TP_COMMAND_CANNOT_BE_ACTIONED  0xa0
#define  CAPI_CS_TP_COMMAND_UNSUPPORTED  0xa1
#define  CAPI_CS_TP_UNSPECIFIED_TP_COMMAND_ERROR  0xaf
#define  CAPI_CS_TP_TPDU_NOT_SUPPORTED  0xb0
#define  CAPI_CS_TP_SC_BUSY  0xc0
#define  CAPI_CS_TP_NO_SC_SUBSCRIPTION  0xc1
#define  CAPI_CS_TP_SC_SYSTEM_FAILURE  0xc2
#define  CAPI_CS_TP_INVALID_SME_ADDRESS  0xc3
#define  CAPI_CS_TP_DESTINATION_SME_BARRED  0xc4
#define  CAPI_CS_TP_SM_REJECTED_DUPLICATE_SM  0xc5
#define  CAPI_CS_TP_TP_VPF_NOT_SUPPORTED  0xc6
#define  CAPI_CS_TP_TP_VP_NOT_SUPPORTED  0xc7
#define  CAPI_CS_TP_D0_SIM_SMS_STORAGE_FULL  0xd0
#define  CAPI_CS_TP_NO_SMS_STORAGE_CAPABILITY_IN_SIM  0xd1
#define  CAPI_CS_TP_ERROR_IN_MS  0xd2
#define  CAPI_CS_TP_MEMORY_CAPACITY_EXCEEDED  0xd3
#define  CAPI_CS_TP_SIM_APPLICATION_TOOLKIT_BUSY  0xd4
#define  CAPI_CS_TP_SIM_DATA_DOWNLOAD_ERROR  0xd5
#define  CAPI_CS_TP_UNSPECIFIED_ERROR_CAUSE  0xff
#define  CAPI_CS_CC_UNASSIGNED_NUMBER  0x1
#define  CAPI_CS_CC_NO_ROUTE_TO_DESTINATION  0x3
#define  CAPI_CS_CC_CHANNEL_UNACCEPTABLE  0x6
#define  CAPI_CS_CC_OPERATOR_DETERMINED_BARRING  0x8
#define  CAPI_CS_CC_NORMAL_RELEASE  0x10
#define  CAPI_CS_CC_UDUB  0x11
#define  CAPI_CS_CC_NO_USER_RESPONDING  0x12
#define  CAPI_CS_CC_NO_ANSWER  0x13
#define  CAPI_CS_CC_CALL_REJECTED  0x15
#define  CAPI_CS_CC_NUMBER_CHANGED  0x16
#define  CAPI_CS_CC_NON_SELECTED_USER_CLEARING  0x1a
#define  CAPI_CS_CC_DESTINATION_OUT_OF_ORDER  0x1b
#define  CAPI_CS_CC_INVALID_NUMBER_FORMAT  0x1c
#define  CAPI_CS_CC_FACILITY_REJECTED  0x1d
#define  CAPI_CS_CC_RESPONSE_TO_STATUS_ENQUIRY  0x1e
#define  CAPI_CS_CC_NORMAL_UNSPECIFIED  0x1f
#define  CAPI_CS_CC_NO_CIRCUIT_CHANNEL_AVAILABLE  0x22
#define  CAPI_CS_CC_NETWORK_OUT_OF_ORDER  0x26
#define  CAPI_CS_CC_TEMPORARY_FAILURE  0x29
#define  CAPI_CS_CC_SWITCHING_EQUIPMENT_CONGESTION  0x2a
#define  CAPI_CS_CC_ACCESS_INFORMATION_DISCARDED  0x2b
#define  CAPI_CS_CC_REQUESTED_CIRCUIT_NOT_AVAILABLE  0x2c
#define  CAPI_CS_CC_RESOURCES_UNAVAILABLE_UNSPECIFIED  0x2f
#define  CAPI_CS_CC_QUALITY_OF_SERVICE_UNAVAILABLE  0x31
#define  CAPI_CS_CC_REQUESTED_FACILITY_NOT_SUBSCRIBED  0x32
#define  CAPI_CS_CC_INCOMING_CALLS_BARRED_WITHIN_THE_CUG  0x37
#define  CAPI_CS_CC_BEARER_CAPABILITY_NOT_AUTHORIZED  0x39
#define  CAPI_CS_CC_BEARER_CAPABILITY_NOT_PRESENTLY_AVAILABLE  0x3a
#define  CAPI_CS_CC_SERVICE_OR_OPTION_NOT_AVAILABLE_UNSPECIFIED  0x3f
#define  CAPI_CS_CC_BEARER_SERVICE_NOT_IMPLEMENTED  0x41
#define  CAPI_CS_CC_ACM_OVER_ACMMAX  0x44
#define  CAPI_CS_CC_REQUESTED_FACILITY_NOT_IMPLEMENTED  0x45
#define  CAPI_CS_CC_ONLY_RESTRICTED_DIGITAL_INFO_BEARER_CAPA_AVAILABLE  0x46
#define  CAPI_CS_CC_SERVICE_OR_OPTION_NOT_IMPLEMENTED_UNSPECIFIED  0x4f
#define  CAPI_CS_CC_INVALID_TRANSACTION_IDENTIFIER_VALUE  0x51
#define  CAPI_CS_CC_USER_NOT_MEMBER_OF_CUG  0x57
#define  CAPI_CS_CC_INCOMPATIBLE_DESTINATION  0x58
#define  CAPI_CS_CC_INVALID_TRANSIT_NETWORK  0x5b
#define  CAPI_CS_CC_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_CS_CC_INVALID_MANDATORY_INFORMATION  0x60
#define  CAPI_CS_CC_MESSAGE_TYPE_NON_EXISTANT_OR_NOT_IMPLEMENTED  0x61
#define  CAPI_CS_CC_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x62
#define  CAPI_CS_CC_INFO_ELEM_NON_EXISTENT_OR_NOT_IMPLEMENTED  0x63
#define  CAPI_CS_CC_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_CS_CC_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x65
#define  CAPI_CS_CC_RECOVERY_ON_TIMER_EXPIRY  0x66
#define  CAPI_CS_CC_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_CS_CC_INTERWORKING_UNSPECIFIED  0x7f
#define  CAPI_PS_SM_OPERATOR_DETERMINTED_BAR  0x8
#define  CAPI_PS_SM_LLC_SNDCP_FAILTURE  0x19
#define  CAPI_PS_SM_INSUFFICIENT_RESOURCES  0x0
#define  CAPI_PS_SM_MISSING_OR_UNKNOWN_APN  0x1b
#define  CAPI_PS_SM_UNKNOWN_PDP_ADDR_OR_TYPE  0x1c
#define  CAPI_PS_SM_USER_AUTHENTICATION_FAILED  0x1d
#define  CAPI_PS_SM_GGSN_REJECT_ACTIVIVATION  0x1e
#define  CAPI_PS_SM_REJECTED_WITH_UNSPECIFIED  0x0
#define  CAPI_PS_SM_SERVICE_NOT_SUPPORTED  0x0
#define  CAPI_PS_SM_SERVICE_NOT_SUBSCRIBED  0x0
#define  CAPI_PS_SM_SERVICE_OUT_OF_ORDER  0x0
#define  CAPI_PS_SM_NSAPI_ALREADY_USED  0x23
#define  CAPI_PS_SM_REGULAR_DEACTIVATION  0x0
#define  CAPI_PS_SM_QOS_NOT_ACCEPTED  0x0
#define  CAPI_PS_SM_NETWORK_FAILURE  0x26
#define  CAPI_PS_SM_REACTIVATION_REQUIRED  0x27
#define  CAPI_PS_SM_FEATURE_NOT_SUPPORTED  0x28
#define  CAPI_PS_SM_SEMANTIC_ERROR_IN_TFT  0x0
#define  CAPI_PS_SM_SYNTACTICAL_ERROR_IN_TFT  0x2a
#define  CAPI_PS_SM_UNKNOWN_PDP_CONTEXT  0x2b
#define  CAPI_PS_SM_SEMANTIC_ERROR_IN_FILTER  0x2c
#define  CAPI_PS_SM_SYNCTACTICAL_ERROR_IN_FILTER  0x0
#define  CAPI_PS_SM_PDP_WITHOUT_TFT_ACTIVATED  0x2e
#define  CAPI_PS_SM_INVALID_TI_VALUE  0x51
#define  CAPI_PS_SM_INCORRECT_MESSAGE_IN_SEMANTIC  0x5f
#define  CAPI_PS_SM_INVALID_MANDATORY_INFORM  0x60
#define  CAPI_PS_SM_MESSAGE_NON_EXIST_IMPLEMENTED  0x61
#define  CAPI_PS_SM_MESSAGE_NON_COMPATIBLE_STATE  0x62
#define  CAPI_PS_SM_IE_NOT_EXIST_OR_IMPLEMENTED  0x63
#define  CAPI_PS_SM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_PS_SM_UNSPECIFIED_PROTOCOL_ERROR  0x0
#define  CAPI_PS_ESM_OPERATOR_DETERMINTED_BAR  0x8
#define  CAPI_PS_ESM_INSUFFICIENT_RESOURCES  0x1a
#define  CAPI_PS_ESM_MISSING_OR_UNKNOWN_APN  0x1b
#define  CAPI_PS_ESM_UNKNOWN_EPS_ADDR_OR_TYPE  0x1c
#define  CAPI_PS_ESM_USER_AUTHENTICATION_FAILED  0x1d
#define  CAPI_PS_ESM_REQUEST_REJECT_BY_SGW_RO_PGW  0x1e
#define  CAPI_PS_ESM_REJECTED_WITH_UNSPECIFIED  0x1f
#define  CAPI_PS_ESM_SERVICE_NOT_SUPPORTED  0x20
#define  CAPI_PS_ESM_SERVICE_NOT_SUBSCRIBED  0x21
#define  CAPI_PS_ESM_SERVICE_OUT_OF_ORDER  0x22
#define  CAPI_PS_ESM_PTI_ALREADY_IN_USE  0x23
#define  CAPI_PS_ESM_REGULAR_DEACTIVATION  0x24
#define  CAPI_PS_ESM_QOS_NOT_ACCEPTED  0x25
#define  CAPI_PS_ESM_NETWORK_FAILURE  0x26
#define  CAPI_PS_ESM_REACTIVATION_REQUESTED  0x27
#define  CAPI_PS_ESM_SEMANTIC_ERROR_IN_TFT  0x29
#define  CAPI_PS_ESM_SYNTACTICAL_ERROR_IN_TFT  0x2a
#define  CAPI_PS_ESM_INVALID_EPS_CONTEXT  0x2b
#define  CAPI_PS_ESM_SEMANTIC_ERROR_IN_FILTER  0x2c
#define  CAPI_PS_ESM_SYNCTACTICAL_ERROR_IN_FILTER  0x2d
#define  CAPI_PS_ESM_EPS_WITHOUT_TFT_ACTIVATED  0x2e
#define  CAPI_PS_ESM_PTI_MISMATCH  0x2f
#define  CAPI_PS_ESM_LAST_PDN_DISCONNECT_NOT_ALLOWED  0x31
#define  CAPI_PS_ESM_IPV4_ONLY_ALLOWED  0x32
#define  CAPI_PS_ESM_IPV6_ONLY_ALLOWED  0x33
#define  CAPI_PS_ESM_SIGNALE_ADDRESS_BEARERS_ONLY_ALLOWE  0x34
#define  CAPI_PS_ESM_ESM_INFO_NOT_RECEIVED  0x35
#define  CAPI_PS_ESM_PDN_CONNECT_NOT_EXIST  0x36
#define  CAPI_PS_ESM_MULT_PDN_FOR_GIVEN_APN_NOT_ALLOWED  0x37
#define  CAPI_PS_ESM_COLLISION_WITH_NET_INITIATED_REQUEST  0x38
#define  CAPI_PS_ESM_IPV4V6_ONLY_ALLOWED  0x39
#define  CAPI_PS_ESM_NONIP_ONLY_ALLOWED  0x3a
#define  CAPI_PS_ESM_UNSUPPORTED_QCI_VALUE  0x3b
#define  CAPI_PS_ESM_BEARER_HANDLING_NOT_SUPPORTED  0x3c
#define  CAPI_PS_ESM_MAX_EPS_BEARER_NUM_REACHED  0x41
#define  CAPI_PS_ESM_REQ_APN_NOT_SUPPORTED_IN_THE_RAT_PLMN  0x42
#define  CAPI_PS_ESM_INVALID_PTI_VALUE  0x51
#define  CAPI_PS_ESM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_PS_ESM_INVALID_MANDATORY_INFORM  0x60
#define  CAPI_PS_ESM_MESSAGE_NON_EXIST_IMPLEMENTED  0x61
#define  CAPI_PS_ESM_MESSAGE_NON_COMPATIBLE_STATE  0x62
#define  CAPI_PS_ESM_IE_NOT_EXIST_OR_IMPLEMENTED  0x63
#define  CAPI_PS_ESM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_PS_ESM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x65
#define  CAPI_PS_ESM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_PS_ESM_APN_INCOMPATIBLE_WITH_ACTIVE_BEARER  0x70
#define  CAPI_CS_LC_STATE_ERROR  0x1
#define  CAPI_CS_LC_NO_CALL_ENTITY  0x2
#define  CAPI_CS_LC_WRONG_TI  0x3
#define  CAPI_CS_LC_NO_SMS_ENTITY  0x4
#define  CAPI_CS_LC_NO_SS_ENTITY  0x5
#define  CAPI_CS_LC_DTMF_BUF_OVERFLOW  0x6
#define  CAPI_CS_LC_CALL_DISCONNECTED  0x7
#define  CAPI_CS_LC_OPERATION_DENIED  0x8
#define  CAPI_CS_LC_NO_CELL_AVAIL  0x11
#define  CAPI_CS_LC_MSG_NOT_COMP_MM_STATE  0x12
#define  CAPI_CS_LC_ABORT_BY_USER  0x13
#define  CAPI_CS_LC_ASN1_DCD_ERROR  0x14
#define  CAPI_CS_LC_GSM_SYNTAX_ERR  0x15
#define  CAPI_CS_LC_SET_PLMN_MODE_REJ  0x16
#define  CAPI_CS_LC_SIM_AUTH_FAILURE  0x17
#define  CAPI_CS_LC_LOCAL_REJECTION  0x20
#define  CAPI_CS_LC_PLMN_NOT_ALLOWED  0x21
#define  CAPI_CS_LC_EMERG_CALL_NOT_POSSIBLE  0x22
#define  CAPI_CS_LC_AUTHENTICATION_REJECTED  0x23
#define  CAPI_CS_LC_NETWORK_REJECTION  0x24
#define  CAPI_CS_LC_LA_NOT_ALLOWED  0x25
#define  CAPI_CS_LC_LOCAL_TIMEOUT  0x26
#define  CAPI_CS_LC_SERV_CONGESTION  0x27
#define  CAPI_CS_LC_LOCAL_DATA_REJECTION  0x28
#define  CAPI_CS_LC_REFRESH_REJECT  0x29
#define  CAPI_CS_LC_NETWORK_FAILURE  0x30
#define  CAPI_CS_LC_MS_DETACHED_FOR_CS  0x31
#define  CAPI_CS_LC_WAITING_CALL_REJECTED  0x32
#define  CAPI_CS_LC_WAITING_CALL_ACCEPTED  0x33
#define  CAPI_CS_LC_NETWORK_TIMEOUT  0x34
#define  CAPI_LC_BACKGROUND_PLMN_SELECT_FAIL  0x35
#define  CAPI_CS_LC_CONFLICT_WITH_OTHERCARD  0x36
#define  CAPI_PS_LC_REL_LOW_LAYER_FAILURE  0x32
#define  CAPI_PS_LC_REL_PLMN_NOT_ALLO  0x33
#define  CAPI_PS_LC_REL_PERFORMING_REG  0x34
#define  CAPI_PS_LC_REL_AUTH_REJ  0x35
#define  CAPI_PS_LC_REL_IMSI_DET  0x36
#define  CAPI_PS_LC_REL_SERV_REJ  0x37
#define  CAPI_PS_LC_REL_NO_NET_RESP  0x38
#define  CAPI_PS_LC_REL_EST_NOT_ALLO  0x39
#define  CAPI_PS_LC_REL_LA_NOT_ALLO  0x3a
#define  CAPI_PS_LC_REL_NORMAL_RELEASE  0x3b
#define  CAPI_PS_LC_REL_NET_ERROR  0x3c
#define  CAPI_PS_LC_REL_TSM_LOCAL_ERROR  0x3d
#define  CAPI_PS_LC_DELETE_SM  0x3e
#define  CAPI_PS_LC_DELETE_ESM  0x3f
#define  CAPI_PS_RECEIVE_GMM_PDP_STATUS_IND  0x40
#define  CAPI_PS_RECEIVE_EMM_EPS_STATUS_IND  0x41
#define  CAPI_PS_LC_REL_IMSI_PAGING  0x50
#define  CAPI_PS_LC_REL_NORMAL_PS_RELEASE  0x51
#define  CAPI_PS_LC_MS_DETACHED_FOR_PS  0x52
#define  CAPI_PS_LC_NET_DETACHED_FOR_PS  0x53
#define  CAPI_PS_LC_EPS_BEARER_NOT_EXIT  0x54
#define  CAPI_PS_LC_ABORT_BY_USER  0x55
#define  CAPI_PS_LC_REPORT_MMC_STATE  0x56
#define  CAPI_PS_LC_PDP_TRIG_PS_ATTACH  0x57
#define  CAPI_PS_LC_LOCAL_REL  0x58
#define  CAPI_PS_LC_SIM_AUTH_FAILURE  0x59
#define  CAPI_PS_LC_REL_ESM_LOCAL_ERROR  0x5a
#define  CAPI_PS_LC_T3492_EXPIRY_FOR_5_TIMES  0x5b
#define  CAPI_PS_LC_EPS_LOCAL_DEACTIVE  0x5c
#define  CAPI_PS_LC_TRANSMISSION_ERROR  0x5d
#define  CAPI_PS_LC_EPS_REQUEST_DETACH  0x5e
#define  CAPI_PS_LC_EPS_LOCAL_DETACH  0x5f
#define  CAPI_PS_LC_PDN_CONN_FAIL_FOR_T3396  0x60
#define  CAPI_PS_LC_TBF_RELEASE_IND  0x71
#define  CAPI_PS_LC_DEACT_NON_EM_PDP_BEARER  0x72
#define  CAPI_PS_LC_EMCBS_COLLISION  0x73
#define  CAPI_PS_LC_CONFLICT_WITH_OTHERCARD  0x74
#define  CAPI_PS_LC_GSM_PLMN_SEARCHING  0x61
#define  CAPI_SS_OP_REGISTER_SS  0xa
#define  CAPI_SS_OP_ERASE_SS  0xb
#define  CAPI_SS_OP_ACTIVATE_SS  0xc
#define  CAPI_SS_OP_DEACTIVATE_SS  0xd
#define  CAPI_SS_OP_INTERROGATE_SS  0xe
#define  CAPI_SS_OP_NOTIFY_SS  0x10
#define  CAPI_SS_OP_REGISTER_PASSWORD  0x11
#define  CAPI_SS_OP_GET_PASSWORD  0x12
#define  CAPI_SS_OP_PROCESS_UNSTRUCTURED_SS_DATA  0x13
#define  CAPI_SS_OP_FORWARD_CHECK_SS_INDICATION  0x26
#define  CAPI_SS_OP_PROCESS_UNSTRUCTURED_SS_REQUEST  0x3b
#define  CAPI_SS_OP_UNSTRUCTURED_SS_REQUEST  0x3c
#define  CAPI_SS_OP_UNSTRUCTURED_SS_NOTIFY  0x3d
#define  CAPI_SS_OP_ERASE_CC_ENTRY  0x4d
#define  CAPI_SS_OP_LCS_MOLR  0x73
#define  CAPI_SS_OP_LCS_NOTIFY  0x74
#define  CAPI_SS_OP_CALL_DEFLECTION  0x75
#define  CAPI_SS_OP_USER_USER_SERVICE  0x76
#define  CAPI_SS_OP_ACCESS_REGISTER_CC_ENTRY  0x77
#define  CAPI_SS_OP_FORWARD_CUG_INFO  0x78
#define  CAPI_SS_OP_SPLIT_MPTY  0x79
#define  CAPI_SS_OP_RETRIEVE_MPTY  0x7a
#define  CAPI_SS_OP_HOLD_MPTY  0x7b
#define  CAPI_SS_OP_BUILD_MPTY  0x7c
#define  CAPI_SS_OP_FORWARD_CHARGE_ADVICE  0x7d
#define  CAPI_SS_OP_EXPLICIT_CT  0x7e
#define  MAX_ROHC_RESTORE_IPHEAD_LEN  0x50
#define  MAX_PDCP_HEADER_LEN  0x3
#define  MAX_FRAME_NUM_LTE  0x2800
#define  MAX_FRAME_NUM_TDS  0x2000
#define  VOLTAGE_CTRL_ADDRESS  0xb3180000
#define  VOLTAGE_CTRL_ADDRESS  0xb3980000
#define  VOLTAGE_CTRL_ADDRESS  0x1b30000
#define  VOLTAGE_CTRL_ADDRESS  0x30000
#define  IP_VALID_LTE  0x0
#define  IP_INVALID_LTE  0x1
#define  TC_CLOSE_UE_TEST_LOOP_LTE  0x80
#define  TC_CLOSE_UE_TEST_LOOP_COMPLETE_LTE  0x81
#define  TC_OPEN_UE_TEST_LOOP_LTE  0x82
#define  TC_OPEN_UE_TEST_LOOP_COMPLETE_LTE  0x83
#define  TC_ACTIVATE_TEST_MODE_LTE  0x84
#define  TC_ACTIVATE_TEST_MODE_COMPLETE_LTE  0x85
#define  TC_DEACTIVATE_TEST_MODE_LTE  0x86
#define  TC_DEACTIVATE_TEST_MODE_COMPLETE_LTE  0x87
#define  INSTANCE_NUM0  0x0
#define  INSTANCE_NUM1  0x1
#define  INSTANCE_NUM2  0x2
#define  INSTANCE_NUM3  0x3
#define  INSTANCE_NUM4  0x4
#define  INSTANCE_NUM5  0x5
#define  INSTANCE_NUM6  0x6
#define  PS_STATIC_NV  0x1
#define  PS_DYNAMIC_NV  0x2
#define  PS_ENG_NV  0x3
#define  MAX_NAS_MSG_LEN  0x200
#define  MAX_NAS_MSG_LEN  0x640
#define  MAX_PLMN_NUM  0x10
#define  MAX_POSSIBLE_PLMNS_NUM  0x10
#define  MAX_STMSI_LEN  0x5
#define  MAX_MME_ID_LEN  0x3
#define  KEY_ENB_LEN  0x20
#define  KEY_ASME_LEN  0x20
#define  MAX_AS_RADIO_ACCESS_CAP_LEN  0x35
#define  MAX_NETWORK_CAPABILITY_LEN  0xa
#define  MAX_SUPPORTED_CODECS  0xa
#define  MAX_FORBIDDEN_LAI_NUM  0x32
#define  MAX_FORBIDDEN_TAI_NUM  0x32
#define  MAX_RAB_ID_NUM  0xff
#define  MAX_CELL_PLMN_NUM  0x6
#define  MAX_TAI_LEN  0x5
#define  MAX_NSAPI_NUM  0x10
#define  MAX_EBI_NUM  0x10
#define  MAX_UE_ACC_CLASS_LEN  0x2
#define  TCC_PD  0x3
#define  TMM_PD  0x5
#define  GMM_PD  0x8
#define  ESM_PD  0x2
#define  EMM_PD  0x7
#define  GMS_PD  0x9
#define  TSM_PD  0xa
#define  TSS_PD  0xb
#define  TRR_PD  0x6
#define  TEST_PD  0xf
#define  MAX_HSDPA_BUFFER_LEN  0x20000
#define  MAX_HSDPA_BUFFER_LEN_1  0x1ffff
#define  INVALID_S8  0xffffff81
#define  INVALID_RN  0xffffff01
#define  INVALID_U8  0xff
#define  INVALID_U16  0xffff
#define  INVALID_U32  0xffffffff
#define  MAX_RB_NUM  0x20
#define  MAX_PDCP_DECOMP_HEADER  0x80
#define  MAX_NPDU_NUM  0x10
#define  MEM_VALID  0x1
#define  MEM_INVALID  0x0
#define  MEM_OK  0x0
#define  MEM_ERROR  0xe
#define  TC_CLOSE_UE_TEST_LOOP  0x40
#define  TC_CLOSE_UE_TEST_LOOP_COMPLETE  0x41
#define  TC_OPEN_UE_TEST_LOOP  0x42
#define  TC_OPEN_UE_TEST_LOOP_COMPLETE  0x43
#define  TC_ACTIVATE_RB_TEST_MODE  0x0
#define  TC_ACTIVATE_RB_TEST_MODE_COMPLETE  0x0
#define  TC_DEACTIVATE_RB_TEST_MODE  0x46
#define  TC_DEACTIVATE_RB_TEST_MODE_COMPLETE  0x47
#define  TC_TEST_MODE3_RLC_COUNTER_REQ  0x49
#define  TC_TEST_MODE3_RLC_COUNTER_RESPONCE  0x4a
#define  TC_NO_ERROR  0x0
#define  TC_NO_RADIO_BEAR  0x1
#define  PS_ONE_CARD  0x1
#define  PS_TWO_CARD  0x2
#define  STOP_PSDATA  0x1
#define  START_PSDATA  0x0
#define  MAX_BA_LIST_NUM_LTE  0x40
#define  MAX_POSSIBLE_CELL_NUM  0xa
#define  MAX_UL_IP_DATA_NUM  0x2e1
#define  CLASSMARK_NO_MODE  0x0
#define  CLASSMARK_TDL_MODE  0x1
#define  CLASSMARK_TDS_MODE  0x2
#define  CLASSMARK_GGE_MODE  0x4
#define  CLASSMARK_LTEFDD_MODE  0x8
#define  CLASSMARK_WCDMA_MODE  0x10
#define  MAX_RB_NUM_LTE  0x4
#define  MAX_RB_NUM_LTE  0x23
#define  MAX_BA_LIST_NUM_INTRA_CELL  0x10
#define  MAX_BA_LIST_NUM_INTER_CELL  0x20
#define  MAX_BA_LIST_NUM  0x20
#define  MAX_BA_FREQ_NUM  0x8
#define  BEGIN_MSG_ID  0x0
#define  DECL_MSG_ID  0x0
#define  L1IF_L1C_CFG_BUF_SIZE  0x200
#define  L1IF_L1C_PUSCH_PAYLOAD_BIT_SIZE  0x3e8
#define  L1IF_L1C_PUSCH_PAYLOAD_BIT_SIZE  0xa28
#define  L1IF_L1C_PUSCH_PAYLOAD_32BIT_SIZE  0x20
#define  L1IF_BASE_ADDRESS1  0x0
#define  L1IF_BASE_ADDRESS2  0x0
#define  L1IF_BASE_ADDRESS1  0xa1b00000
#define  L1IF_BASE_ADDRESS2  0x200
#define  L1IF_OFFSET11  0x8
#define  L1IF_OFFSET12  0x780
#define  L1IF_OFFSET12  0x0
#define  L1IF_UL_HARQ_BUF0_ADDR  0x7f4
#define  L1IF_UL_HARQ_BUF1_ADDR  0x7f8
#define  L1IF_UL_HARQ_BUF_CHKSUM  0x7fc
#define  L1IF_OFFSET21  0x8
#define  L1IF_L1C_MAP_SIZE  0x4
#define  L1IF_DSP_MAP_SIZE  0x4
#define  L1IF_PSS_PEAK_NUM  0x10
#define  L1IF_SSS_PEAK_NUM  0x10
#define  L1IF_PDSCH_PAYLOAD_BUF_NUM  0x55
#define  L1IF_PBCH_PAYLOAD_LEN  0x5
#define  L1IF_DCI_PAYLOAD_LEN  0x7
#define  L1IF_CELL_PARAM_NUM  0x5
#define  L1IF_RSRP_RESULT_NUM  0x5
#define  L1IF_PSS_FREQ_OFFSET_NUM  0x7
#define  L1IF_PSS_COEF_UP_NUM  0x7
#define  L1IF_PSS_COEF_LOW_NUM  0x7
#define  L1IF_CFO_FREQ_OFF_NUM  0x7
#define  L1IF_NC_VALID_RSRP_SF_BM_NUM  0x4
#define  L1IF_DEBUG_MSG_NUM  0xa
#define  L1IF_VITERBI_CB_NUM  0x4
#define  L1IF_VITERBI_RNTI_NUM  0x4
#define  L1IF_VITERBI_CB_PAYLOAD_LEN  0x58



<sub T_L1DMA_BLOCK_INFO>
    sourceAddr1                   Ptr     u8      
    length                        u32     u32     length                        |input;|
    pNext                         Ptr     T_L1DMA_BLOCK_INFO_Tag
</sub T_L1DMA_BLOCK_INFO>


<sub T_RRC_CgiInfo>
    plmnNum                          u8      u8      plmnNum                          |input;|
    tac[2]                           array   u8      tac                              |multiedit;|
    cellIdentity[4]                  array   u8      cellIdentity                     |multiedit;|
    plmnIdentity[MAX_CELL_PLMN_NUM]  array   T_Plmn  plmnIdentity                     |multiedit;|
</sub T_RRC_CgiInfo>


<sub T_sourceCellInfo>
    frequency  u16  u16  frequency  |input;|
    phyCellId  u16  u16  phyCellId  |input;|
</sub T_sourceCellInfo>


<sub T_ueMobilityStateInfo>
    validFlag       u8                u8                validFlag       |input;|
    cellChangeNum   u8                u8                cellChangeNum   |input;|
    reserved2[2]    array             u8                reserved2       |multiedit;|
    crMaxLen        u32               u32               crMaxLen        |input;|
    crMaxRemainLen  u32               u32               crMaxRemainLen  |input;|
    sourceCell1     struct            T_sourceCellInfo  
    sourceCell2     struct            T_sourceCellInfo  
</sub T_ueMobilityStateInfo>


<sub T_ERRC_CgiInfo>
    plmnNum              u8      u8      plmnNum              |input;|
    decodeResult         u8      u8      decodeResult         |input;|
    racValidFlag         u8      u8      racValidFlag         |input;|
    routingAreaCode      u8      u8      routingAreaCode      |input;|
    locationAreaCode[2]  array   u8      locationAreaCode     |multiedit;|
    cellIdentity[4]      array   u8      cellIdentity         |multiedit;|
    cellGlobalPlmnId     struct  T_Plmn  
    plmnIdList[5]        array   T_Plmn  plmnIdList           |multiedit;|
</sub T_ERRC_CgiInfo>


<sub T_DigitList>
    next                  Ptr     T_DigitList_Tag
    value                 u16     u16     value                 |input;|
</sub T_DigitList>


<sub T_ERRC_servCellInfoForTrac>
    errcMode      u8     u8     errcMode      |input;|
    errcSubState  u8     u8     errcSubState  |input;|
    tai[5]        array  u8     tai           |multiedit;|
    reserved1     u8     u8     reserved1     |input;|
    freq          u16    u16    freq          |input;|
    phyId         u16    u16    phyId         |input;|
    measEvent     u32    u32    measEvent     |input;|
    dlBandWidth   u8     u8     dlBandWidth   |input;|
    sfAssignment  u8     u8     sfAssignment  |input;|
    icsResult     u8     u8     icsResult     |input;|
    accResult     u8     u8     accResult     |input;|
</sub T_ERRC_servCellInfoForTrac>


<sub T_ERLC_DlPduInfo>
    rbIdentity                       u8           u8           rbIdentity                       |input;|
    reserved3[3]                     array        u8           reserved3                        |multiedit;|
    pduLen                           u16          u16          pduLen                           |input;|
    pduOffset                        u16          u16          pduOffset                        |input;|
    pPdschPointer                    Ptr          u8           
    pPdschMapPointer                 Ptr          T_PDSCH_MEM  
    pDlPduNext                       Ptr          T_ERLC_DlPduInfo_Tag
</sub T_ERLC_DlPduInfo>


<sub T_EL1_PDCCH_ORDER>
    usPdcchOrderRecvSfn  u16  u16  usPdcchOrderRecvSfn  |input;|
    ucPdcchOrderRecvSf   u8   u8   ucPdcchOrderRecvSf   |input;|
    ucPdcchOrderData     u8   u8   ucPdcchOrderData     |input;|
</sub T_EL1_PDCCH_ORDER>


<sub T_EL1_PRACH_SEND_REQ>
    usPrachType   u16                u16                usPrachType   |input;|
    reserved[2]   array              u8                 reserved      |multiedit;|
    stPdcchOrder  struct             T_EL1_PDCCH_ORDER  
</sub T_EL1_PRACH_SEND_REQ>


<sub T_EL1_RAR_RESULT_IND>
    ucPHR          u8     u8     ucPHR          |input;|
    reserved[3]    array  u8     reserved       |multiedit;|
    usSuccessFlag  u16    u16    usSuccessFlag  |input;|
    usTbSize       u16    u16    usTbSize       |input;|
    ulTempCrnti    u32    u32    ulTempCrnti    |input;|
</sub T_EL1_RAR_RESULT_IND>


<sub T_EL1_SEND_MSG3_REQ>
    ulTempCrnti  u32  u32  ulTempCrnti  |input;|
    ulCRnti      u32  u32  ulCRnti      |input;|
</sub T_EL1_SEND_MSG3_REQ>


<sub T_EL1_PDCCH_ORDER_IND>
    stPdcchOrder  struct             T_EL1_PDCCH_ORDER  
</sub T_EL1_PDCCH_ORDER_IND>


<sub T_EL1_PRACH_CR_IND>
    ucCrResult  struct           E_El1_Cr_Result  
</sub T_EL1_PRACH_CR_IND>


<sub T_EL1_HARQ_INFO_IND>
    ulUlgrantSize  u32  u32  ulUlgrantSize  |input;|
</sub T_EL1_HARQ_INFO_IND>


<sub T_EL1_PDSCH_DLSCH_READ_IND>
    ulPduSize  u32  u32  ulPduSize  |input;|
    pucData    Ptr  u8   
</sub T_EL1_PDSCH_DLSCH_READ_IND>


<sub T_EL1_AJUST_TA_REQ>
    ulTaVaule  u32  u32  ulTaVaule  |input;|
</sub T_EL1_AJUST_TA_REQ>


<sub T_EL1_PP_TIMEOUT_IND>
    ucTimerId  struct              E_Emac_Pp_Timer_Id  
</sub T_EL1_PP_TIMEOUT_IND>


<0x412c OP_EL1_PRACH_SEND_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1_PRACH_SEND_REQ  struct                T_EL1_PRACH_SEND_REQ  
</0x412c OP_EL1_PRACH_SEND_REQ>


<0x412d OP_EL1_RAR_RESULT_IND>
    signalHeader        struct                T_MsgHeader           
    EL1_RAR_RESULT_IND  struct                T_EL1_RAR_RESULT_IND  
</0x412d OP_EL1_RAR_RESULT_IND>


<0x412e OP_EL1_SEND_MSG3_REQ>
    signalHeader       struct               T_MsgHeader          
    EL1_SEND_MSG3_REQ  struct               T_EL1_SEND_MSG3_REQ  
</0x412e OP_EL1_SEND_MSG3_REQ>


<0x412f OP_EL1_PDCCH_ORDER_IND>
    signalHeader         struct                 T_MsgHeader            
    EL1_PDCCH_ORDER_IND  struct                 T_EL1_PDCCH_ORDER_IND  
</0x412f OP_EL1_PDCCH_ORDER_IND>


<0x4130 OP_EL1_PRACH_CR_IND>
    signalHeader      struct              T_MsgHeader         
    EL1_PRACH_CR_IND  struct              T_EL1_PRACH_CR_IND  
</0x4130 OP_EL1_PRACH_CR_IND>


<0x4131 OP_EL1_HARQ_INFO_IND>
    signalHeader       struct               T_MsgHeader          
    EL1_HARQ_INFO_IND  struct               T_EL1_HARQ_INFO_IND  
</0x4131 OP_EL1_HARQ_INFO_IND>


<0x4132 OP_EL1_PDSCH_DLSCH_READ_IND>
    signalHeader              struct                      T_MsgHeader                 
    EL1_PDSCH_DLSCH_READ_IND  struct                      T_EL1_PDSCH_DLSCH_READ_IND  
</0x4132 OP_EL1_PDSCH_DLSCH_READ_IND>


<0x4133 OP_EL1_AJUST_TA_REQ>
    signalHeader      struct              T_MsgHeader         
    EL1_AJUST_TA_REQ  struct              T_EL1_AJUST_TA_REQ  
</0x4133 OP_EL1_AJUST_TA_REQ>


<0x4134 OP_EL1_MAC_RESET_IND>
    signalHeader  struct       T_MsgHeader  
</0x4134 OP_EL1_MAC_RESET_IND>


<0x4135 OP_EL1_TA_TIMEOUT_IND>
    signalHeader  struct       T_MsgHeader  
</0x4135 OP_EL1_TA_TIMEOUT_IND>


<0x4136 OP_EL1_DRX_CMD_IND>
    signalHeader  struct       T_MsgHeader  
</0x4136 OP_EL1_DRX_CMD_IND>


<0x4137 OP_EL1_PP_TIMEOUT_IND>
    signalHeader        struct                T_MsgHeader           
    EL1_PP_TIMEOUT_IND  struct                T_EL1_PP_TIMEOUT_IND  
</0x4137 OP_EL1_PP_TIMEOUT_IND>


<sub T_BackFreqInfo>
    freq                              struct           T_CarrierFreqNB  
    intraCellNum                      u8               u8               intraCellNum                      |input;|
    intraCellId[MAX_CELL_SEARCH_NUM]  array            u16              intraCellId                       |multiedit;|
    band                              u8               u8               band                              |input;|
</sub T_BackFreqInfo>


<sub T_DlBitmapInfo>
    choice            u8     u8     choice            |input;|
    patternBitmap[5]  array  u8     patternBitmap     |multiedit;|
    reserved[2]       array  u8     reserved          |multiedit;|
</sub T_DlBitmapInfo>


<sub T_DlGapCfgInfo>
    dlGapThreshold       u8  u8  dlGapThreshold       |input;|
    dlGapPeriod          u8  u8  dlGapPeriod          |input;|
    dlGapDuriationCoeff  u8  u8  dlGapDuriationCoeff  |input;|
    reserved             u8  u8  reserved             |input;|
</sub T_DlGapCfgInfo>


<sub T_DlBitmapNonAnchorInfo>
    choiceFlag           u8              u8              choiceFlag           |input;|
    reserved[3]          array           u8              reserved             |multiedit;|
    dlExplicitBitmapCfg  struct          T_DlBitmapInfo  
</sub T_DlBitmapNonAnchorInfo>


<sub T_DlGapNonAnchorInfo>
    choiceFlag        u8              u8              choiceFlag        |input;|
    reserved[3]       array           u8              reserved          |multiedit;|
    dlExplicitGapCfg  struct          T_DlGapCfgInfo  
</sub T_DlGapNonAnchorInfo>


<sub T_InBandCarrierInfo>
    samePciInd           u8  u8  samePciInd           |input;|
    indexToMidPRB        u8  u8  indexToMidPRB        |input;|
    eutraNumCrsPorts     u8  u8  eutraNumCrsPorts     |input;|
    eutraControlRegSize  u8  u8  eutraControlRegSize  |input;|
</sub T_InBandCarrierInfo>


<sub T_DlCarrierDedCfgInfo>
    dlCarrierFreqNB               struct                   T_CarrierFreqNB          
    validFlag                     u8                       u8                       validFlag                     |input;|
    reserved[2]                   array                    u8                       reserved                      |multiedit;|
    nrsPowerOffsetNonAnchorV1300  u8                       u8                       nrsPowerOffsetNonAnchorV1300  |input;|
    dlBitmapNonAnchor             struct                   T_DlBitmapNonAnchorInfo  
    dlGapNonAnchor                struct                   T_DlGapNonAnchorInfo     
    inBandCarrierInfo             struct                   T_InBandCarrierInfo      
</sub T_DlCarrierDedCfgInfo>


<sub T_UlCarrierDedCfgInfo>
    ulCarrierFreqValid  u8               u8               ulCarrierFreqValid  |input;|
    reserved[3]         array            u8               reserved            |multiedit;|
    ulCarrierFreqNB     struct           T_CarrierFreqNB  
</sub T_UlCarrierDedCfgInfo>


<sub T_NPdcchDedCfgInfo>
    maxNumRep   u8  u8  maxNumRep   |input;|
    startSfUss  u8  u8  startSfUss  |input;|
    offsetUss   u8  u8  offsetUss   |input;|
    reserved    u8  u8  reserved    |input;|
</sub T_NPdcchDedCfgInfo>


<sub T_NPuschDedCfgInfo>
    ackNackRepFlag           u8  u8  ackNackRepFlag           |input;|
    ackNackRep               u8  u8  ackNackRep               |input;|
    npuschAllSym             u8  u8  npuschAllSym             |input;|
    groupHoppingDisableFlag  u8  u8  groupHoppingDisableFlag  |input;|
</sub T_NPuschDedCfgInfo>


<sub T_NbRachInfo>
    raResponseWz        u8   u8   raResponseWz        |input;|
    macContentionTimer  u8   u8   macContentionTimer  |input;|
    reserved            u16  u16  reserved            |input;|
</sub T_NbRachInfo>


<sub T_RandAccessInfo>
    maxPreambleNum                       u8            u8            maxPreambleNum                       |input;|
    pwRampStep                           u8            u8            pwRampStep                           |input;|
    preamInitRecTargetPw                 u8            u8            preamInitRecTargetPw                 |input;|
    nbRachNum                            u8            u8            nbRachNum                            |input;|
    nbRachInfo[MAX_NPRACH_RESOURCES_NB]  array         T_NbRachInfo  nbRachInfo                           |multiedit;|
</sub T_RandAccessInfo>


<sub T_RachCfgCommonInfo>
    randAccessInfo            struct            T_RandAccessInfo  
    connEstFailOffsetPresent  u8                u8                connEstFailOffsetPresent  |input;|
    connEstFailOffset         u8                u8                connEstFailOffset         |input;|
</sub T_RachCfgCommonInfo>


<sub T_BcchCfgInfo>
    modificationPeriodCoeff  u8     u8     modificationPeriodCoeff  |input;|
    reserved[3]              array  u8     reserved                 |multiedit;|
</sub T_BcchCfgInfo>


<sub T_PcchCfgInfo>
    defaultPagingCycle         u8  u8  defaultPagingCycle         |input;|
    nB                         u8  u8  nB                         |input;|
    nPdcchNumRepetitionPaging  u8  u8  nPdcchNumRepetitionPaging  |input;|
    reserved                   u8  u8  reserved                   |input;|
</sub T_PcchCfgInfo>


<sub T_NPrachParametersNbInfo>
    nprachPeriodicity                 u8     u8     nprachPeriodicity                 |input;|
    nprachStartTime                   u8     u8     nprachStartTime                   |input;|
    nprachSubcarrierOffset            u8     u8     nprachSubcarrierOffset            |input;|
    nprachNumSubCarriers              u8     u8     nprachNumSubCarriers              |input;|
    nprachSubcarrierMSG3RangeStart    u8     u8     nprachSubcarrierMSG3RangeStart    |input;|
    maxNumPreambleAttemptCE           u8     u8     maxNumPreambleAttemptCE           |input;|
    numRepetitionsPerPreambleAttempt  u8     u8     numRepetitionsPerPreambleAttempt  |input;|
    npdcchMaxNumRepetitionRA          u8     u8     npdcchMaxNumRepetitionRA          |input;|
    npdcchStartSfCssRa                u8     u8     npdcchStartSfCssRa                |input;|
    npdcchOffsetRa                    u8     u8     npdcchOffsetRa                    |input;|
    reserved[2]                       array  u8     reserved                          |multiedit;|
</sub T_NPrachParametersNbInfo>


<sub T_NPrachCfgInfo>
    nprachCPLength                           u8                        u8                        nprachCPLength                           |input;|
    rsrpRangeNbNum                           u8                        u8                        rsrpRangeNbNum                           |input;|
    rsrpRangeNb[MAX_RSRP_RANGE_NB]           array                     u16                       rsrpRangeNb                              |multiedit;|
    nPrachParaNum                            u8                        u8                        nPrachParaNum                            |input;|
    reserved                                 u8                        u8                        reserved                                 |input;|
    nPrachParaList[MAX_NPRACH_RESOURCES_NB]  array                     T_NPrachParametersNbInfo  nPrachParaList                           |multiedit;|
</sub T_NPrachCfgInfo>


<sub T_NPdschCfgCommonInfo>
    nrsPower     s8     s8     nrsPower     |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_NPdschCfgCommonInfo>


<sub T_DmrsCfgInfo>
    threeToneBaseSequence   u8     u8     threeToneBaseSequence   |input;|
    threeToneCyclicShift    u8     u8     threeToneCyclicShift    |input;|
    sixToneBaseSequence     u8     u8     sixToneBaseSequence     |input;|
    sixToneCyclicShift      u8     u8     sixToneCyclicShift      |input;|
    twelveToneBaseSequence  u8     u8     twelveToneBaseSequence  |input;|
    reserved[3]             array  u8     reserved                |multiedit;|
</sub T_DmrsCfgInfo>


<sub T_UlReferenceSignalsNB>
    groupHoppingEnabled    u8     u8     groupHoppingEnabled    |input;|
    groupAssignmentNPUSCH  u8     u8     groupAssignmentNPUSCH  |input;|
    reserved[2]            array  u8     reserved               |multiedit;|
</sub T_UlReferenceSignalsNB>


<sub T_NPuschCfgCommonInfo>
    ackNackNum                                          u8                      u8                      ackNackNum                                          |input;|
    ackNackNumRepetitionsMsg4[MAX_NPRACH_RESOURCES_NB]  array                   u8                      ackNackNumRepetitionsMsg4                           |multiedit;|
    srsSubFrameConfigFlag                               u8                      u8                      srsSubFrameConfigFlag                               |input;|
    srsSubFrameConfig                                   u8                      u8                      srsSubFrameConfig                                   |input;|
    dmrsConfigPresent                                   u8                      u8                      dmrsConfigPresent                                   |input;|
    reserved                                            u8                      u8                      reserved                                            |input;|
    dmrsConfig                                          struct                  T_DmrsCfgInfo           
    ulRefSigs                                           struct                  T_UlReferenceSignalsNB  
</sub T_NPuschCfgCommonInfo>


<sub T_UplinkPowerControlCommonInfo>
    p0NominalNPusch    s8  s8  p0NominalNPusch    |input;|
    alpha              u8  u8  alpha              |input;|
    deltaPreambleMsg3  s8  s8  deltaPreambleMsg3  |input;|
    reserved           u8  u8  reserved           |input;|
</sub T_UplinkPowerControlCommonInfo>


<sub T_InbandSamePciNBInfo>
    eutraCrsSequenceInfo  u8     u8     eutraCrsSequenceInfo  |input;|
    reserved[3]           array  u8     reserved              |multiedit;|
</sub T_InbandSamePciNBInfo>


<sub T_InbandDifferentPciNBInfo>
    eutraNumCrsPorts  u8     u8     eutraNumCrsPorts  |input;|
    rasterOffset      u8     u8     rasterOffset      |input;|
    reserved[2]       array  u8     reserved          |multiedit;|
</sub T_InbandDifferentPciNBInfo>


<sub T_GuardbandNBInfo>
    rasterOffset  u8     u8     rasterOffset  |input;|
    reserved[3]   array  u8     reserved      |multiedit;|
</sub T_GuardbandNBInfo>


<sub T_StandaloneNBInfo>
    reserved  u32  u32  reserved  |input;|
</sub T_StandaloneNBInfo>


<union T_OperationModeUnion>
    inbandSamePci       struct                      T_InbandSamePciNBInfo       
    inbandDifferentPci  struct                      T_InbandDifferentPciNBInfo  
    guardband           struct                      T_GuardbandNBInfo           
    standalone          struct                      T_StandaloneNBInfo          
</union T_OperationModeUnion>


<sub T_OperationModeInfo>
    choice       u8                    u8                    choice       |input;|
    reserved[3]  array                 u8                    reserved     |multiedit;|
    opModeUnion  union                 T_OperationModeUnion  
</sub T_OperationModeInfo>


<sub T_IdlMeasFreqResultNB>
    intraCellNum    u8               u8               intraCellNum    |input;|
    resultTypeFlag  u8               u8               resultTypeFlag  |input;|
    reserved        u16              u16              reserved        |input;|
    frequency       struct           T_CarrierFreqNB  
</sub T_IdlMeasFreqResultNB>


<sub T_IdlMeasFreqInfoNB>
    frequency                               struct           T_CarrierFreqNB  
    cellNum                                 u8               u8               cellNum                                 |input;|
    blackCellNum                            u8               u8               blackCellNum                            |input;|
    reserved[2]                             array            u8               reserved                                |multiedit;|
    blackPhyId[EAS_MAX_BLACKCELL_NUM]       array            u16              blackPhyId                              |multiedit;|
    blackPhyIdRange[EAS_MAX_BLACKCELL_NUM]  array            u16              blackPhyIdRange                         |multiedit;|
</sub T_IdlMeasFreqInfoNB>


<sub T_CsResultInfo>
    phyCellId  u16  u16  phyCellId  |input;|
    rsrp       u8   u8   rsrp       |input;|
    rsrq       u8   u8   rsrq       |input;|
</sub T_CsResultInfo>


<sub T_MibRecvStoreInfo>
    antPortNum     u8     u8     antPortNum     |input;|
    operationMode  u8     u8     operationMode  |input;|
    reserved[2]    array  u8     reserved       |multiedit;|
</sub T_MibRecvStoreInfo>


<sub T_SiScheduleInfo>
    siPeriod      u8  u8  siPeriod      |input;|
    nValue        u8  u8  nValue        |input;|
    siRepPattern  u8  u8  siRepPattern  |input;|
    siTBS         u8  u8  siTBS         |input;|
</sub T_SiScheduleInfo>


<sub T_MibNbInfo>
    sysFrameNumMsb       u8                   u8                   sysFrameNumMsb       |input;|
    hyperSfnLsb          u8                   u8                   hyperSfnLsb          |input;|
    schedulingInfoSib1   u8                   u8                   schedulingInfoSib1   |input;|
    systemInfoValueTage  u8                   u8                   systemInfoValueTage  |input;|
    abEnabled            u8                   u8                   abEnabled            |input;|
    reserved[3]          array                u8                   reserved             |multiedit;|
    operationModeInfo    struct               T_OperationModeInfo  
</sub T_MibNbInfo>


<sub T_PlmnIdentityInfoNB>
    plmnIdentity          struct  T_Plmn  
    reservedForOpera      u8      u8      reservedForOpera      |input;|
    attachWithoutPdnConn  u8      u8      attachWithoutPdnConn  |input;|
</sub T_PlmnIdentityInfoNB>


<sub T_CellAcessRelatedInfoNB>
    plmnNum                u8                    u8                    plmnNum                |input;|
    plmnInfoList[maxPLMN]  array                 T_PlmnIdentityInfoNB  plmnInfoList           |multiedit;|
    tac[2]                 array                 u8                    tac                    |multiedit;|
    cellIdentity[4]        array                 u8                    cellIdentity           |multiedit;|
    cellBarred             u8                    u8                    cellBarred             |input;|
    intraFreqReselection   u8                    u8                    intraFreqReselection   |input;|
</sub T_CellAcessRelatedInfoNB>


<sub T_CellSelectionInfoNB>
    qRxLevMin  s16  s16  qRxLevMin  |input;|
    qQualmin   s8   s8   qQualmin   |input;|
</sub T_CellSelectionInfoNB>


<sub T_NsPmaxValueNB>
    additionalPmaxPresent       s8  s8  additionalPmaxPresent       |input;|
    additionalPmax              s8  s8  additionalPmax              |input;|
    additionalSpectrumEmission  u8  u8  additionalSpectrumEmission  |input;|
</sub T_NsPmaxValueNB>


<sub T_NsPmaxListNB>
    num               u8               u8               num               |input;|
    nsPmaxValueNB[4]  array            T_NsPmaxValueNB  nsPmaxValueNB     |multiedit;|
</sub T_NsPmaxListNB>


<sub T_MultiBandInfoNB>
    fbIndPresent       u8              u8              fbIndPresent       |input;|
    freqBandIndicator  u8              u8              freqBandIndicator  |input;|
    fbInfoPresent      u8              u8              fbInfoPresent      |input;|
    freqBandInfo       struct          T_NsPmaxListNB  
</sub T_MultiBandInfoNB>


<sub T_MultiBandInfoListNB>
    num               u8                 u8                 num               |input;|
    multiBandInfo[8]  array              T_MultiBandInfoNB  multiBandInfo     |multiedit;|
</sub T_MultiBandInfoListNB>


<sub T_MultiBandInfoListR13>
    num              u8              u8              num              |input;|
    nsPmaxListNb[8]  array           T_NsPmaxListNB  nsPmaxListNb     |multiedit;|
</sub T_MultiBandInfoListR13>


<sub T_SibMappingInfo>
    sibNum           u8     u8     sibNum           |input;|
    sibType[maxSIB]  array  u8     sibType          |multiedit;|
</sub T_SibMappingInfo>


<sub T_ErrcSiScheduleInfo>
    siPeriod      u8                u8                siPeriod      |input;|
    mappingInfo   struct            T_SibMappingInfo  
    siRepPattern  u8                u8                siRepPattern  |input;|
    siTBS         u8                u8                siTBS         |input;|
</sub T_ErrcSiScheduleInfo>


<sub T_Sib1NbInfo>
    hsfnMSB                                  u8                     u8                     hsfnMSB                                  |input;|
    plmnNum                                  u8                     u8                     plmnNum                                  |input;|
    plmnInfoList[maxPLMN]                    array                  T_PlmnIdentityInfoNB   plmnInfoList                             |multiedit;|
    tac[2]                                   array                  u8                     tac                                      |multiedit;|
    cellIdentity[4]                          array                  u8                     cellIdentity                             |multiedit;|
    cellBarred                               u8                     u8                     cellBarred                               |input;|
    intraFreqReselection                     u8                     u8                     intraFreqReselection                     |input;|
    qRxLevMin                                s16                    s16                    qRxLevMin                                |input;|
    qQualmin                                 s8                     s8                     qQualmin                                 |input;|
    pMax                                     s8                     s8                     pMax                                     |input;|
    freqBandIndicator                        u8                     u8                     freqBandIndicator                        |input;|
    freqBandInfo                             struct                 T_NsPmaxListNB         
    multiBandInfoList                        struct                 T_MultiBandInfoListNB  
    dlBitMapPresent                          u8                     u8                     dlBitMapPresent                          |input;|
    dlBitmap                                 struct                 T_DlBitmapInfo         
    eutraControlRegionSize                   u8                     u8                     eutraControlRegionSize                   |input;|
    nrsCrsPowerOffset                        u8                     u8                     nrsCrsPowerOffset                        |input;|
    siNum                                    u8                     u8                     siNum                                    |input;|
    siScheduleInfoList[MAX_SI_SCHEDULE_NUM]  array                  T_ErrcSiScheduleInfo   siScheduleInfoList                       |multiedit;|
    siValueTag[MAX_SI_SCHEDULE_NUM]          array                  u8                     siValueTag                               |multiedit;|
    siBitmap[MAX_SI_SCHEDULE_NUM]            array                  u8                     siBitmap                                 |multiedit;|
    siWindowLen                              u8                     u8                     siWindowLen                              |input;|
    siRFOffset                               u8                     u8                     siRFOffset                               |input;|
</sub T_Sib1NbInfo>


<sub T_NPrachParaV1330>
    nprachNumCBRAStartSubcarriers  u8     u8     nprachNumCBRAStartSubcarriers  |input;|
    reserved[3]                    array  u8     reserved                       |multiedit;|
</sub T_NPrachParaV1330>


<sub T_NPrachCfgSibNbV1330>
    nprachParaV1330Num                        u8                 u8                 nprachParaV1330Num                        |input;|
    reserved[3]                               array              u8                 reserved                                  |multiedit;|
    nprachParaV1330[MAX_NPRACH_RESOURCES_NB]  array              T_NPrachParaV1330  nprachParaV1330                           |multiedit;|
</sub T_NPrachCfgSibNbV1330>


<sub T_RadioResourceConfigCommonSibNB>
    rachCfg                struct                          T_RachCfgCommonInfo             
    bcchCfg                struct                          T_BcchCfgInfo                   
    pcchCfg                struct                          T_PcchCfgInfo                   
    nprachCfg              struct                          T_NPrachCfgInfo                 
    npdschCfgComm          struct                          T_NPdschCfgCommonInfo           
    npuschCfgComm          struct                          T_NPuschCfgCommonInfo           
    dlGapPresent           u8                              u8                              dlGapPresent           |input;|
    dlGapCfg               struct                          T_DlGapCfgInfo                  
    uplinkPowerCtrlComm    struct                          T_UplinkPowerControlCommonInfo  
    nprachCfgV1330Present  u8                              u8                              nprachCfgV1330Present  |input;|
    nprachCfgV1330         struct                          T_NPrachCfgSibNbV1330           
</sub T_RadioResourceConfigCommonSibNB>


<sub T_UeTimersAndConstantsNB>
    t300  u8  u8  t300  |input;|
    t301  u8  u8  t301  |input;|
    t310  u8  u8  t310  |input;|
    n310  u8  u8  n310  |input;|
    t311  u8  u8  t311  |input;|
    n311  u8  u8  n311  |input;|
</sub T_UeTimersAndConstantsNB>


<sub T_FreqInfoNB>
    ulCarrierFreqPresent        u8               u8               ulCarrierFreqPresent        |input;|
    ulCarrierFreq               struct           T_CarrierFreqNB  
    additionalSpectrumEmission  u8               u8               additionalSpectrumEmission  |input;|
</sub T_FreqInfoNB>


<sub T_Sib2NbInfo>
    radioResourceConfigCommon  struct                            T_RadioResourceConfigCommonSibNB  
    t300                       u8                                u8                                t300                       |input;|
    t301                       u8                                u8                                t301                       |input;|
    t310                       u8                                u8                                t310                       |input;|
    n310                       u8                                u8                                n310                       |input;|
    t311                       u8                                u8                                t311                       |input;|
    n311                       u8                                u8                                n311                       |input;|
    t311_v1350_present         u8                                u8                                t311_v1350_present         |input;|
    t311_v1350                 u8                                u8                                t311_v1350                 |input;|
    freqInfo                   struct                            T_FreqInfoNB                      
    timeAlignmentTimerCommon   u8                                u8                                timeAlignmentTimerCommon   |input;|
    num                        u8                                u8                                num                        |input;|
    multiBandInfo[8]           array                             u8                                multiBandInfo              |multiedit;|
    cpReestabSupport           u8                                u8                                cpReestabSupport           |input;|
</sub T_Sib2NbInfo>


<sub T_Sib3NbInfo>
    qHyst              s8                      s8                      qHyst              |input;|
    sNonIntraSearch    u8                      u8                      sNonIntraSearch    |input;|
    qRxLevMin          s16                     s16                     qRxLevMin          |input;|
    qQualmin           s8                      s8                      qQualmin           |input;|
    pMax               s8                      s8                      pMax               |input;|
    sIntraSearch       u8                      u8                      sIntraSearch       |input;|
    tReselection       u16                     u16                     tReselection       |input;|
    freqBandInfo       struct                  T_NsPmaxListNB          
    multiBandInfoList  struct                  T_MultiBandInfoListR13  
</sub T_Sib3NbInfo>


<sub T_Sib4NbInfo>
    intraCellNum                    u8     u8     intraCellNum                    |input;|
    intraCellPhyId[maxCellIntra]    array  u16    intraCellPhyId                  |multiedit;|
    intraCellQoffset[maxCellIntra]  array  u8     intraCellQoffset                |multiedit;|
    BlackCellNum                    u8     u8     BlackCellNum                    |input;|
    blackCellStartId[maxCellBlack]  array  u16    blackCellStartId                |multiedit;|
    blackCellRange[maxCellBlack]    array  u16    blackCellRange                  |multiedit;|
</sub T_Sib4NbInfo>


<sub T_InterFreqCarrierInfoNB>
    dlCarrierFreq              struct                 T_CarrierFreqNB        
    band                       u8                     u8                     band                       |input;|
    qRexlevMin                 s16                    s16                    qRexlevMin                 |input;|
    qQualmin                   s8                     s8                     qQualmin                   |input;|
    pMax                       s8                     s8                     pMax                       |input;|
    qOffsetFreq                u8                     u8                     qOffsetFreq                |input;|
    intraCellNum               u8                     u8                     intraCellNum               |input;|
    intraCellId[maxCellIntra]  array                  u16                    intraCellId                |multiedit;|
    blackCellNum               u8                     u8                     blackCellNum               |input;|
    blackCellId[maxCellBlack]  array                  u16                    blackCellId                |multiedit;|
    multiBandInfoList          struct                 T_MultiBandInfoListNB  
</sub T_InterFreqCarrierInfoNB>


<sub T_Sib5NbInfo>
    interFreqNum            u8                        u8                        interFreqNum            |input;|
    interFreqList[maxFreq]  array                     T_InterFreqCarrierInfoNB  interFreqList           |multiedit;|
    tReselection            u16                       u16                       tReselection            |input;|
</sub T_Sib5NbInfo>


<sub T_AbConfigNB>
    abCategory                 u8   u8   abCategory                 |input;|
    abBarringBitmap            u16  u16  abBarringBitmap            |input;|
    abBarringForExceptionData  u8   u8   abBarringForExceptionData  |input;|
    abBarringForSpecialAC      u8   u8   abBarringForSpecialAC      |input;|
</sub T_AbConfigNB>


<sub T_AbConfigPerPLMN>
    abConfigPlmnValid  u8            u8            abConfigPlmnValid  |input;|
    abConfigPlmn       struct        T_AbConfigNB  
</sub T_AbConfigPerPLMN>


<sub T_Sib14NbInfo>
    choice                  u8                 u8                 choice                  |input;|
    abCommon                struct             T_AbConfigNB       
    abPerPlmnList[maxPLMN]  array              T_AbConfigPerPLMN  abPerPlmnList           |multiedit;|
</sub T_Sib14NbInfo>


<sub T_Sib16NbInfo>
    timerInfoUtc     structu64  
    dayLightSavTime  u8   u8   dayLightSavTime  |input;|
    leapSec          s16  s16  leapSec          |input;|
    localTimeOffset  s16  s16  localTimeOffset  |input;|
</sub T_Sib16NbInfo>


<sub T_DrxConfigInfo>
    onDurationTimer  u8     u8     onDurationTimer  |input;|
    inactiveTimer    u8     u8     inactiveTimer    |input;|
    reTranTimer      u8     u8     reTranTimer      |input;|
    ulretrantimer    u8     u8     ulretrantimer    |input;|
    drxCycle         u8     u8     drxCycle         |input;|
    drxStartOffset   u8     u8     drxStartOffset   |input;|
    reserved[2]      array  u8     reserved         |multiedit;|
</sub T_DrxConfigInfo>


<sub T_EL1_FREQ_SEARCH_REQ>
    freqNum                        u16              u16              freqNum                        |input;|
    backGroundFlag                 u8               u8               backGroundFlag                 |input;|
    reserved                       u8               u8               reserved                       |input;|
    freqList[MAX_FREQ_SEARCH_NUM]  array            T_CarrierFreqNB  freqList                       |multiedit;|
</sub T_EL1_FREQ_SEARCH_REQ>


<0x4400 OP_EL1_FREQ_SEARCH_REQ>
    signalHeader         struct                 T_MsgHeader            
    EL1_FREQ_SEARCH_REQ  struct                 T_EL1_FREQ_SEARCH_REQ  
</0x4400 OP_EL1_FREQ_SEARCH_REQ>


<sub T_EL1_FREQ_SEARCH_CNF>
    freqNum                        u16              u16              freqNum                        |input;|
    reserved                       u16              u16              reserved                       |input;|
    freqList[MAX_FREQ_SEARCH_NUM]  array            T_CarrierFreqNB  freqList                       |multiedit;|
</sub T_EL1_FREQ_SEARCH_CNF>


<0x4408 OP_EL1_FREQ_SEARCH_CNF>
    signalHeader         struct                 T_MsgHeader            
    EL1_FREQ_SEARCH_CNF  struct                 T_EL1_FREQ_SEARCH_CNF  
</0x4408 OP_EL1_FREQ_SEARCH_CNF>


<sub T_EL1_CELL_SEARCH_REQ_NB>
    searchType                          u8               u8               searchType                          |input;|
    backGroundFlag                      u8               u8               backGroundFlag                      |input;|
    cellNum                             u16              u16              cellNum                             |input;|
    phyCellIdList[MAX_CELL_SEARCH_NUM]  array            u16              phyCellIdList                       |multiedit;|
    freq                                struct           T_CarrierFreqNB  
</sub T_EL1_CELL_SEARCH_REQ_NB>


<0x4401 OP_EL1_CELL_SEARCH_REQ_NB>
    signalHeader         struct                    T_MsgHeader               
    EL1_CELL_SEARCH_REQ  struct                    T_EL1_CELL_SEARCH_REQ_NB  
</0x4401 OP_EL1_CELL_SEARCH_REQ_NB>


<sub T_EL1_CELL_SEARCH_CNF_NB>
    freq                               struct           T_CarrierFreqNB  
    cellNum                            u16              u16              cellNum                            |input;|
    reserved                           u16              u16              reserved                           |input;|
    csResultInfo[MAX_CELL_SEARCH_NUM]  array            T_CsResultInfo   csResultInfo                       |multiedit;|
</sub T_EL1_CELL_SEARCH_CNF_NB>


<0xffff OP_EL1_CELL_SEARCH_CNF_NB>
    signalHeader         struct                    T_MsgHeader               
    EL1_CELL_SEARCH_CNF  struct                    T_EL1_CELL_SEARCH_CNF_NB  
</0xffff OP_EL1_CELL_SEARCH_CNF_NB>


<sub T_EL1_MIB_RECEIVE_REQ>
    cellDesc          struct              T_CellDescNB        
    cause             u16                 u16                 cause             |input;|
    storeInfoFlag     u16                 u16                 storeInfoFlag     |input;|
    mibRecvStoreInfo  struct              T_MibRecvStoreInfo  
</sub T_EL1_MIB_RECEIVE_REQ>


<0x4402 OP_EL1_MIB_RECEIVE_REQ>
    signalHeader         struct                 T_MsgHeader            
    EL1_MIB_RECEIVE_REQ  struct                 T_EL1_MIB_RECEIVE_REQ  
</0x4402 OP_EL1_MIB_RECEIVE_REQ>


<sub T_EL1_SIB1_RECEIVE_REQ>
    cellDesc            struct        T_CellDescNB  
    schedulingInfoSib1  u8            u8            schedulingInfoSib1  |input;|
    backGroundFlag      u8            u8            backGroundFlag      |input;|
    reserved[2]         array         u8            reserved            |multiedit;|
</sub T_EL1_SIB1_RECEIVE_REQ>


<0x4403 OP_EL1_SIB1_RECEIVE_REQ>
    signalHeader          struct                  T_MsgHeader             
    EL1_SIB1_RECEIVE_REQ  struct                  T_EL1_SIB1_RECEIVE_REQ  
</0x4403 OP_EL1_SIB1_RECEIVE_REQ>


<sub T_EL1_SI_RECEIVE_REQ>
    cellDesc                                 struct            T_CellDescNB      
    eutraControlRegionSize                   u8                u8                eutraControlRegionSize                   |input;|
    nrsCrsPowerOffset                        u8                u8                nrsCrsPowerOffset                        |input;|
    reserved[2]                              array             u8                reserved                                 |multiedit;|
    dlBitMapPresent                          u8                u8                dlBitMapPresent                          |input;|
    siWindowLen                              u8                u8                siWindowLen                              |input;|
    siRFOffset                               u8                u8                siRFOffset                               |input;|
    siNum                                    u8                u8                siNum                                    |input;|
    dlBitMap                                 struct            T_DlBitmapInfo    
    siScheduleInfoList[MAX_SI_SCHEDULE_NUM]  array             T_SiScheduleInfo  siScheduleInfoList                       |multiedit;|
</sub T_EL1_SI_RECEIVE_REQ>


<0x4404 OP_EL1_SI_RECEIVE_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1_SI_RECEIVE_REQ  struct                T_EL1_SI_RECEIVE_REQ  
</0x4404 OP_EL1_SI_RECEIVE_REQ>


<sub T_EL1_BCCH_STOP_IND>
    cellDesc  struct        T_CellDescNB  
</sub T_EL1_BCCH_STOP_IND>


<0x4405 OP_EL1_BCCH_STOP_IND>
    signalHeader       struct               T_MsgHeader          
    EL1_BCCH_STOP_IND  struct               T_EL1_BCCH_STOP_IND  
</0x4405 OP_EL1_BCCH_STOP_IND>


<sub T_EL1_BCCH_DATA_IND>
    cellDesc                          struct        T_CellDescNB  
    bcchDataType                      u16           u16           bcchDataType                      |input;|
    result                            u16           u16           result                            |input;|
    antPortNum                        u8            u8            antPortNum                        |input;|
    rsrp                              u8            u8            rsrp                              |input;|
    rsrq                              u8            u8            rsrq                              |input;|
    bcchDataLen                       u8            u8            bcchDataLen                       |input;|
    bcchData[MAX_BCCH_DATA_BYTE_LEN]  array         u8            bcchData                          |multiedit;|
    reserved[3]                       array         u8            reserved                          |multiedit;|
</sub T_EL1_BCCH_DATA_IND>


<0x440a OP_EL1_BCCH_DATA_IND>
    signalHeader       struct               T_MsgHeader          
    EL1_BCCH_DATA_IND  struct               T_EL1_BCCH_DATA_IND  
</0x440a OP_EL1_BCCH_DATA_IND>


<sub T_EL1_HSFN_UPDATE_IND>
    cellDesc     struct        T_CellDescNB  
    hsfnMSB      u8            u8            hsfnMSB      |input;|
    reserved[3]  array         u8            reserved     |multiedit;|
</sub T_EL1_HSFN_UPDATE_IND>


<0x4406 OP_EL1_HSFN_UPDATE_IND>
    signalHeader         struct                 T_MsgHeader            
    EL1_HSFN_UPDATE_IND  struct                 T_EL1_HSFN_UPDATE_IND  
</0x4406 OP_EL1_HSFN_UPDATE_IND>


<sub T_EL1_IDL_CFG_REQ>
    cellDesc                                 struct                          T_CellDescNB                    
    operationModeInfo                        struct                          T_OperationModeInfo             
    schedulingInfoSib1                       u8                              u8                              schedulingInfoSib1                       |input;|
    eutraControlRegionSize                   u8                              u8                              eutraControlRegionSize                   |input;|
    nrsCrsPowerOffset                        u8                              u8                              nrsCrsPowerOffset                        |input;|
    reserved1                                u8                              u8                              reserved1                                |input;|
    ueId                                     u16                             u16                             ueId                                     |input;|
    pMax                                     s8                              s8                              pMax                                     |input;|
    qualMin                                  s8                              s8                              qualMin                                  |input;|
    qRxLevMin                                s16                             s16                             qRxLevMin                                |input;|
    intraSearchP                             u8                              u8                              intraSearchP                             |input;|
    nonIntraSearchP                          u8                              u8                              nonIntraSearchP                          |input;|
    qoffsetTemp                              u8                              u8                              qoffsetTemp                              |input;|
    addPmaxSupportFlag                       u8                              u8                              addPmaxSupportFlag                       |input;|
    pemax1                                   u8                              u8                              pemax1                                   |input;|
    pemax2                                   u8                              u8                              pemax2                                   |input;|
    siWindowLen                              u8                              u8                              siWindowLen                              |input;|
    siRFOffset                               u8                              u8                              siRFOffset                               |input;|
    siNum                                    u8                              u8                              siNum                                    |input;|
    measFreqNum                              u8                              u8                              measFreqNum                              |input;|
    measFreqInfoList[EAS_MAX_LTE_FREQ_NUM]   array                           T_IdlMeasFreqInfoNB             measFreqInfoList                         |multiedit;|
    measCellIdList[EAS_MAX_LTE_CELL_NUM]     array                           u16                             measCellIdList                           |multiedit;|
    siScheduleInfoList[MAX_SI_SCHEDULE_NUM]  array                           T_SiScheduleInfo                siScheduleInfoList                       |multiedit;|
    ulCarrierFreqPresent                     u8                              u8                              ulCarrierFreqPresent                     |input;|
    dlBitMapPresent                          u8                              u8                              dlBitMapPresent                          |input;|
    dlGapCfgPresent                          u8                              u8                              dlGapCfgPresent                          |input;|
    nprachCfgV1330Present                    u8                              u8                              nprachCfgV1330Present                    |input;|
    addSpecEmi                               u8                              u8                              addSpecEmi                               |input;|
    reserved3[3]                             array                           u8                              reserved3                                |multiedit;|
    ulCarrierFreq                            struct                          T_CarrierFreqNB                 
    dlBitMap                                 struct                          T_DlBitmapInfo                  
    bcchCfg                                  struct                          T_BcchCfgInfo                   
    pcchCfg                                  struct                          T_PcchCfgInfo                   
    nprachCfg                                struct                          T_NPrachCfgInfo                 
    nprachCfgV1330                           struct                          T_NPrachCfgSibNbV1330           
    npdschCfgComm                            struct                          T_NPdschCfgCommonInfo           
    npuschCfgComm                            struct                          T_NPuschCfgCommonInfo           
    dlGapCfg                                 struct                          T_DlGapCfgInfo                  
    uplinkPowerCtrlComm                      struct                          T_UplinkPowerControlCommonInfo  
    randAccessInfo                           struct                          T_RandAccessInfo                
</sub T_EL1_IDL_CFG_REQ>


<0x4407 OP_EL1_IDL_CFG_REQ>
    signalHeader     struct             T_MsgHeader        
    EL1_IDL_CFG_REQ  struct             T_EL1_IDL_CFG_REQ  
</0x4407 OP_EL1_IDL_CFG_REQ>


<sub T_EL1_IDL_CFG_CNF>
    result             u8     u8     result             |input;|
    supportBgPlmnFlag  u8     u8     supportBgPlmnFlag  |input;|
    reserved[2]        array  u8     reserved           |multiedit;|
</sub T_EL1_IDL_CFG_CNF>


<0x440b OP_EL1_IDL_CFG_CNF>
    signalHeader     struct             T_MsgHeader        
    EL1_IDL_CFG_CNF  struct             T_EL1_IDL_CFG_CNF  
</0x440b OP_EL1_IDL_CFG_CNF>


<sub T_EL1_PCCH_DATA_IND>
    pcchDataType                      u16    u16    pcchDataType                      |input;|
    pcchDataLen                       u16    u16    pcchDataLen                       |input;|
    pcchData[MAX_PCCH_DATA_BYTE_LEN]  array  u8     pcchData                          |multiedit;|
    reserved[3]                       array  u8     reserved                          |multiedit;|
</sub T_EL1_PCCH_DATA_IND>


<0x440c OP_EL1_PCCH_DATA_IND>
    signalHeader       struct               T_MsgHeader          
    EL1_PCCH_DATA_IND  struct               T_EL1_PCCH_DATA_IND  
</0x440c OP_EL1_PCCH_DATA_IND>


<sub T_EL1_IDLE_MEAS_RESULT_IND>
    freqNum                           u16                    u16                    freqNum                           |input;|
    serveRsrp                         u8                     u8                     serveRsrp                         |input;|
    serveRsrq                         u8                     u8                     serveRsrq                         |input;|
    freqList[EAS_MAX_LTE_FREQ_NUM]    array                  T_IdlMeasFreqResultNB  freqList                          |multiedit;|
    cellIdList[EAS_MAX_LTE_CELL_NUM]  array                  u16                    cellIdList                        |multiedit;|
    rsrpList[EAS_MAX_LTE_CELL_NUM]    array                  u8                     rsrpList                          |multiedit;|
    rsrqList[EAS_MAX_LTE_CELL_NUM]    array                  u8                     rsrqList                          |multiedit;|
</sub T_EL1_IDLE_MEAS_RESULT_IND>


<0x440d OP_EL1_IDLE_MEAS_RESULT_IND>
    signalHeader              struct                      T_MsgHeader                 
    EL1_IDLE_MEAS_RESULT_IND  struct                      T_EL1_IDLE_MEAS_RESULT_IND  
</0x440d OP_EL1_IDLE_MEAS_RESULT_IND>


<sub T_EL1_DRX_CFG_IND>
    edrxCfgType  u16  u16  edrxCfgType  |input;|
    ptw          u8   u8   ptw          |input;|
    edrxValue    u8   u8   edrxValue    |input;|
    ueId_H       u16  u16  ueId_H       |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_EL1_DRX_CFG_IND>


<0x440e OP_EL1_DRX_CFG_IND>
    signalHeader     struct             T_MsgHeader        
    EL1_DRX_CFG_IND  struct             T_EL1_DRX_CFG_IND  
</0x440e OP_EL1_DRX_CFG_IND>


<0x440f OP_EL1_OUT_OF_SERVICE_IND>
    signalHeader  struct       T_MsgHeader  
</0x440f OP_EL1_OUT_OF_SERVICE_IND>


<sub T_EL1_DEACT_REQ>
    deactType  u32  u32  deactType  |input;|
</sub T_EL1_DEACT_REQ>


<0x4410 OP_EL1_DEACT_REQ>
    signalHeader   struct           T_MsgHeader      
    EL1_DEACT_REQ  struct           T_EL1_DEACT_REQ  
</0x4410 OP_EL1_DEACT_REQ>


<0x4411 OP_EL1_DEACT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x4411 OP_EL1_DEACT_CNF>


<sub T_EL1_DCH_CONFIG_REQ>
    cellDesc          struct                 T_CellDescNB           
    n310              u8                     u8                     n310              |input;|
    n311              u8                     u8                     n311              |input;|
    t310              u8                     u8                     t310              |input;|
    validBitmap       u8                     u8                     validBitmap       |input;|
    dlCarrierDedCfg   struct                 T_DlCarrierDedCfgInfo  
    ulCarrierDedCfg   struct                 T_UlCarrierDedCfgInfo  
    npdcchDedCfgInfo  struct                 T_NPdcchDedCfgInfo     
    npuschDedCfgInfo  struct                 T_NPuschDedCfgInfo     
    p0UeNpusch        u8                     u8                     p0UeNpusch        |input;|
    drxFlag           u8                     u8                     drxFlag           |input;|
    reserved[2]       array                  u8                     reserved          |multiedit;|
    nbdrxConfig       struct                 T_DrxConfigInfo        
</sub T_EL1_DCH_CONFIG_REQ>


<0x4412 OP_EL1_DCH_CONFIG_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1_DCH_CONFIG_REQ  struct                T_EL1_DCH_CONFIG_REQ  
</0x4412 OP_EL1_DCH_CONFIG_REQ>


<sub T_EL1_DCH_CONFIG_CNF>
    rslt         u8     u8     rslt         |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_EL1_DCH_CONFIG_CNF>


<0x4413 OP_EL1_DCH_CONFIG_CNF>
    signalHeader        struct                T_MsgHeader           
    EL1_DCH_CONFIG_CNF  struct                T_EL1_DCH_CONFIG_CNF  
</0x4413 OP_EL1_DCH_CONFIG_CNF>


<0x4414 OP_EL1_OUT_OF_SYNC_IND>
    signalHeader  struct       T_MsgHeader  
</0x4414 OP_EL1_OUT_OF_SYNC_IND>


<sub T_EL1_BAND_SEARCH_REQ>
    searchType              u8     u8     searchType              |input;|
    reserved[2]             array  u8     reserved                |multiedit;|
    bandNum                 u8     u8     bandNum                 |input;|
    bandList[MAX_BAND_NUM]  array  u8     bandList                |multiedit;|
</sub T_EL1_BAND_SEARCH_REQ>


<0x4415 OP_EL1_BAND_SEARCH_REQ>
    signalHeader         struct                 T_MsgHeader            
    EL1_BAND_SEARCH_REQ  struct                 T_EL1_BAND_SEARCH_REQ  
</0x4415 OP_EL1_BAND_SEARCH_REQ>


<sub T_EL1_BAND_SEARCH_CNF>
    responseType                      u8               u8               responseType                      |input;|
    reserved[2]                       array            u8               reserved                          |multiedit;|
    freqNum                           u8               u8               freqNum                           |input;|
    freqList[MAX_PLMN_SCAN_FREQ_NUM]  array            T_CarrierFreqNB  freqList                          |multiedit;|
</sub T_EL1_BAND_SEARCH_CNF>


<0x4416 OP_EL1_BAND_SEARCH_CNF>
    signalHeader         struct                 T_MsgHeader            
    EL1_BAND_SEARCH_CNF  struct                 T_EL1_BAND_SEARCH_CNF  
</0x4416 OP_EL1_BAND_SEARCH_CNF>


<sub T_EL1_CANCEL_ONGOING_PROC_REQ>
    procType        u8            u8            procType        |input;|
    backGroundFlag  u8            u8            backGroundFlag  |input;|
    reserved[2]     array         u8            reserved        |multiedit;|
    cellDesc        struct        T_CellDescNB  
</sub T_EL1_CANCEL_ONGOING_PROC_REQ>


<0x4417 OP_EL1_CANCEL_ONGOING_PROC_REQ>
    signalHeader                 struct                         T_MsgHeader                    
    EL1_CANCEL_ONGOING_PROC_REQ  struct                         T_EL1_CANCEL_ONGOING_PROC_REQ  
</0x4417 OP_EL1_CANCEL_ONGOING_PROC_REQ>


<sub T_EL1_CANCEL_ONGOING_PROC_CNF>
    result       u8     u8     result       |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_EL1_CANCEL_ONGOING_PROC_CNF>


<0x4418 OP_EL1_CANCEL_ONGOING_PROC_CNF>
    signalHeader                 struct                         T_MsgHeader                    
    EL1_CANCEL_ONGOING_PROC_CNF  struct                         T_EL1_CANCEL_ONGOING_PROC_CNF  
</0x4418 OP_EL1_CANCEL_ONGOING_PROC_CNF>


<sub T_MAC_DATA_IND_LTE>
    rbIdentity    u8                u8                rbIdentity    |input;|
    reserved3[3]  array             u8                reserved3     |multiedit;|
    pPduPointer   Ptr               T_ERLC_DlPduInfo  
</sub T_MAC_DATA_IND_LTE>


<sub T_ERLC_UL_PDU>
    pduLen                  u16                  u16                  pduLen                  |input;|
    sduLen                  u16                  u16                  sduLen                  |input;|
    head                    Ptr                  T_L1DMA_BLOCK_INFO   
    tail                    Ptr                  T_L1DMA_BLOCK_INFO   
    next                    Ptr                  T_ERLC_UL_PDU_tag    
</sub T_ERLC_UL_PDU>


<sub T_MAC_DATA_REQ_LTE>
    rbIdentity    u8             u8             rbIdentity    |input;|
    reserved3[3]  array          u8             reserved3     |multiedit;|
    pdu           Ptr            T_ERLC_UL_PDU  
</sub T_MAC_DATA_REQ_LTE>


<sub T_L1DMA_BUFF_INFO>
    used_len                      u16    u16    used_len                      |input;|
    total_len                     u16    u16    total_len                     |input;|
    buff[512]                     array  u8     buff                          |multiedit;|
    buff[EMAC_MAX_UL_HEADER_LEN]  array  u8     buff                          |multiedit;|
</sub T_L1DMA_BUFF_INFO>


<sub T_MAC_STATUS_IND_LTE>
    rbIdentity   u8                  u8                  rbIdentity   |input;|
    flagLastPdu  u8                  u8                  flagLastPdu  |input;|
    pduSize      u16                 u16                 pduSize      |input;|
    head_buff    Ptr                 T_L1DMA_BUFF_INFO   
</sub T_MAC_STATUS_IND_LTE>


<0x411f OP_MAC_DATA_IND_LTE>
    signalHeader      struct              T_MsgHeader         
    MAC_DATA_IND_LTE  struct              T_MAC_DATA_IND_LTE  
</0x411f OP_MAC_DATA_IND_LTE>


<0x4121 OP_MAC_DATA_REQ_LTE>
    signalHeader      struct              T_MsgHeader         
    MAC_DATA_REQ_LTE  struct              T_MAC_DATA_REQ_LTE  
</0x4121 OP_MAC_DATA_REQ_LTE>


<0x4120 OP_MAC_STATUS_IND_LTE>
    signalHeader        struct                T_MsgHeader           
    MAC_STATUS_IND_LTE  struct                T_MAC_STATUS_IND_LTE  
</0x4120 OP_MAC_STATUS_IND_LTE>


<sub T_RbInforSetup>
    instId           u8  u8  instId           |input;|
    lcSrProhibit     u8  u8  lcSrProhibit     |input;|
    logicalChID      u8  u8  logicalChID      |input;|
    logicalPriority  u8  u8  logicalPriority  |input;|
</sub T_RbInforSetup>


<sub T_MacMainInfo>
    periodBsrTimer     u8  u8  periodBsrTimer     |input;|
    retxBsrTimer       u8  u8  retxBsrTimer       |input;|
    timeAlignTimer     u8  u8  timeAlignTimer     |input;|
    lcSrProhibitTimer  u8  u8  lcSrProhibitTimer  |input;|
</sub T_MacMainInfo>


<sub T_EMAC_RANDOM_ACC_REQ>
    msg5size                   u16    u16    msg5size                   |input;|
    timeAlignTimer             u8     u8     timeAlignTimer             |input;|
    msg3length                 u8     u8     msg3length                 |input;|
    msg3[EAS_MAX_MSG3_LENGTH]  array  u8     msg3                       |multiedit;|
    cause                      u8     u8     cause                      |input;|
</sub T_EMAC_RANDOM_ACC_REQ>


<sub T_EMAC_ACC_STATUS_IND>
    accessStatus                 u8     u8     accessStatus                 |input;|
    reserved1                    u8     u8     reserved1                    |input;|
    dataLenth                    u16    u16    dataLenth                    |input;|
    cRnti                        u32    u32    cRnti                        |input;|
    mess[EAS_MAX_CCCH_DATA_LEN]  array  u8     mess                         |multiedit;|
</sub T_EMAC_ACC_STATUS_IND>


<sub T_EMAC_DCH_CONFIG_REQ>
    periodBsrTimer                     u8              u8              periodBsrTimer                     |input;|
    retxBsrTimer                       u8              u8              retxBsrTimer                       |input;|
    timeAlignTimer                     u8              u8              timeAlignTimer                     |input;|
    lcSrProhibitTimer                  u8              u8              lcSrProhibitTimer                  |input;|
    rbNum                              u8              u8              rbNum                              |input;|
    reserved[3]                        array           u8              reserved                           |multiedit;|
    rbInfoSetupList[MAX_RB_SETUP_LTE]  array           T_RbInforSetup  rbInfoSetupList                    |multiedit;|
</sub T_EMAC_DCH_CONFIG_REQ>


<sub T_EMAC_RESET_REQ>
    configCause  u8     u8     configCause  |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_EMAC_RESET_REQ>


<0x4138 OP_EMAC_RANDOM_ACC_REQ>
    signalHeader         struct                 T_MsgHeader            
    EMAC_RANDOM_ACC_REQ  struct                 T_EMAC_RANDOM_ACC_REQ  
</0x4138 OP_EMAC_RANDOM_ACC_REQ>


<0x4139 OP_EMAC_ACC_STATUS_IND>
    signalHeader         struct                 T_MsgHeader            
    EMAC_ACC_STATUS_IND  struct                 T_EMAC_ACC_STATUS_IND  
</0x4139 OP_EMAC_ACC_STATUS_IND>


<0x413a OP_EMAC_DCH_CONFIG_REQ>
    signalHeader         struct                 T_MsgHeader            
    EMAC_DCH_CONFIG_REQ  struct                 T_EMAC_DCH_CONFIG_REQ  
</0x413a OP_EMAC_DCH_CONFIG_REQ>


<0x413b OP_EMAC_RESET_REQ>
    signalHeader    struct            T_MsgHeader       
    EMAC_RESET_REQ  struct            T_EMAC_RESET_REQ  
</0x413b OP_EMAC_RESET_REQ>


<sub T_securityAlgorithm>
    integrityAlgorithm  u8     u8     integrityAlgorithm  |input;|
    ciperAlgorithm      u8     u8     ciperAlgorithm      |input;|
    reserved2[2]        array  u8     reserved2           |multiedit;|
</sub T_securityAlgorithm>


<sub T_securityKey>
    keyRrcInt[16]  array  u8     keyRrcInt      |multiedit;|
    keyRrcEnc[16]  array  u8     keyRrcEnc      |multiedit;|
    keyUpEnc[16]   array  u8     keyUpEnc       |multiedit;|
    keyEnb[32]     array  u8     keyEnb         |multiedit;|
</sub T_securityKey>


<sub T_CPDCP_CONFIG_REQ_LTE>
    rbId                 u8                   u8                   rbId                 |input;|
    configCause          u8                   u8                   configCause          |input;|
    discardTimer         u8                   u8                   discardTimer         |input;|
    heaComFlag           u8                   u8                   heaComFlag           |input;|
    drbContinueRohcFlag  u8                   u8                   drbContinueRohcFlag  |input;|
    pCurrentErlcSduPos   u32                  u32                  pCurrentErlcSduPos   |input;|
    headComInfo          struct               T_headComInfo        
    securityAlgorithm    struct               T_securityAlgorithm  
    securityKey          struct               T_securityKey        
</sub T_CPDCP_CONFIG_REQ_LTE>


<sub T_CPDCP_RELEASE_REQ_LTE>
    rbId          u8     u8     rbId          |input;|
    relCause      u8     u8     relCause      |input;|
    reserved2[2]  array  u8     reserved2     |multiedit;|
</sub T_CPDCP_RELEASE_REQ_LTE>


<sub T_CPDCP_INTEGRITY_IND_LTE>
    rbId           u8     u8     rbId           |input;|
    integrityFlag  u8     u8     integrityFlag  |input;|
    mess[5]        array  u8     mess           |multiedit;|
    reserved1      u8     u8     reserved1      |input;|
</sub T_CPDCP_INTEGRITY_IND_LTE>


<sub T_CPDCP_DATA_CNF_LTE>
    stateFlag  u8  u8  stateFlag  |input;|
    cnfNum     u8  u8  cnfNum     |input;|
    nasMsgSn   u8  u8  nasMsgSn   |input;|
    reserved1  u8  u8  reserved1  |input;|
</sub T_CPDCP_DATA_CNF_LTE>


<sub T_CPDCP_DATA_REQ_LTE>
    rbId          u8           u8           rbId          |input;|
    cipherFlag    u8           u8           cipherFlag    |input;|
    reserved2[2]  array        u8           reserved2     |multiedit;|
    pduData       Ptr          T_ComPduLte  
</sub T_CPDCP_DATA_REQ_LTE>


<sub T_CPDCP_DATA_IND_LTE>
    rbId       u8           u8           rbId       |input;|
    reserved1  u8           u8           reserved1  |input;|
    pduLen     u16          u16          pduLen     |input;|
    pduData    Ptr          T_ComSduLte  
    cookie     u32          u32          cookie     |input;|
</sub T_CPDCP_DATA_IND_LTE>


<sub T_CPDCP_CHECK_RESUME_MSG_REQ_LTE>
    securityAlgorithm  struct               T_securityAlgorithm  
    securityKey        struct               T_securityKey        
    pduLen             u16                  u16                  pduLen             |input;|
    reserved2[2]       array                u8                   reserved2          |multiedit;|
    pduData            Ptr                  T_ComSduLte          
    cookie             u32                  u32                  cookie             |input;|
</sub T_CPDCP_CHECK_RESUME_MSG_REQ_LTE>


<sub T_CPDCP_CHECK_RESUME_MSG_CNF_LTE>
    rslt          u8     u8     rslt          |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_CPDCP_CHECK_RESUME_MSG_CNF_LTE>


<sub T_CPDCP_CREATE_INSTANCE_IND_LTE>
    processID     u8     u8     processID     |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_CPDCP_CREATE_INSTANCE_IND_LTE>


<0x4300 OP_CPDCP_CONFIG_REQ_LTE>
    signalHeader          struct                  T_MsgHeader             
    CPDCP_CONFIG_REQ_LTE  struct                  T_CPDCP_CONFIG_REQ_LTE  
</0x4300 OP_CPDCP_CONFIG_REQ_LTE>


<0x4301 OP_CPDCP_RELEASE_REQ_LTE>
    signalHeader           struct                   T_MsgHeader              
    CPDCP_RELEASE_REQ_LTE  struct                   T_CPDCP_RELEASE_REQ_LTE  
</0x4301 OP_CPDCP_RELEASE_REQ_LTE>


<0x4304 OP_CPDCP_INTEGRITY_IND_LTE>
    signalHeader             struct                     T_MsgHeader                
    CPDCP_INTEGRITY_IND_LTE  struct                     T_CPDCP_INTEGRITY_IND_LTE  
</0x4304 OP_CPDCP_INTEGRITY_IND_LTE>


<0x4305 OP_CPDCP_DATA_CNF_LTE>
    signalHeader        struct                T_MsgHeader           
    CPDCP_DATA_CNF_LTE  struct                T_CPDCP_DATA_CNF_LTE  
</0x4305 OP_CPDCP_DATA_CNF_LTE>


<0x4303 OP_CPDCP_DATA_REQ_LTE>
    signalHeader        struct                T_MsgHeader           
    CPDCP_DATA_REQ_LTE  struct                T_CPDCP_DATA_REQ_LTE  
</0x4303 OP_CPDCP_DATA_REQ_LTE>


<0x4306 OP_CPDCP_DATA_IND_LTE>
    signalHeader        struct                T_MsgHeader           
    CPDCP_DATA_IND_LTE  struct                T_CPDCP_DATA_IND_LTE  
</0x4306 OP_CPDCP_DATA_IND_LTE>


<0x4309 OP_CPDCP_CHECK_RESUME_MSG_REQ_LTE>
    signalHeader                    struct                            T_MsgHeader                       
    CPDCP_CHECK_RESUME_MSG_REQ_LTE  struct                            T_CPDCP_CHECK_RESUME_MSG_REQ_LTE  
</0x4309 OP_CPDCP_CHECK_RESUME_MSG_REQ_LTE>


<0x430a OP_CPDCP_CHECK_RESUME_MSG_CNF_LTE>
    signalHeader                    struct                            T_MsgHeader                       
    CPDCP_CHECK_RESUME_MSG_CNF_LTE  struct                            T_CPDCP_CHECK_RESUME_MSG_CNF_LTE  
</0x430a OP_CPDCP_CHECK_RESUME_MSG_CNF_LTE>


<0x430b OP_CPDCP_CREATE_INSTANCE_IND_LTE>
    signalHeader                   struct                           T_MsgHeader                      
    CPDCP_CREATE_INSTANCE_IND_LTE  struct                           T_CPDCP_CREATE_INSTANCE_IND_LTE  
</0x430b OP_CPDCP_CREATE_INSTANCE_IND_LTE>


<0x420b OP_RLC_AM_DATA_REQ_LTE>
</0x420b OP_RLC_AM_DATA_REQ_LTE>


<0x420c OP_RLC_UM_DATA_REQ_LTE>
</0x420c OP_RLC_UM_DATA_REQ_LTE>


<0x4204 OP_RLC_UM_DATA_IND_LTE>
</0x4204 OP_RLC_UM_DATA_IND_LTE>


<0x420a OP_RLC_STATUS_IND_LTE>
</0x420a OP_RLC_STATUS_IND_LTE>


<sub T_RLC_AM_DATA_IND_LTE>
    rbIdentity    u8             u8             rbIdentity    |input;|
    reestFlag     u8             u8             reestFlag     |input;|
    reserved2[2]  array          u8             reserved2     |multiedit;|
    sdu_list      Ptr            T_ERLC_DL_SDU  
</sub T_RLC_AM_DATA_IND_LTE>


<sub T_RLC_AM_DATA_CNF_LTE>
    rbIdentity    u8     u8     rbIdentity    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
    firstCnfSn    u16    u16    firstCnfSn    |input;|
    cnfPduNum     u16    u16    cnfPduNum     |input;|
</sub T_RLC_AM_DATA_CNF_LTE>


<0x4203 OP_RLC_AM_DATA_IND_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_AM_DATA_IND_LTE  struct                 T_RLC_AM_DATA_IND_LTE  
</0x4203 OP_RLC_AM_DATA_IND_LTE>


<0x4205 OP_RLC_AM_DATA_CNF_LTE>
    signalHeader         struct                 T_MsgHeader            
    RLC_AM_DATA_CNF_LTE  struct                 T_RLC_AM_DATA_CNF_LTE  
</0x4205 OP_RLC_AM_DATA_CNF_LTE>


<sub T_AmUpParasLte>
    maxRetxThreshold     u8     u8     maxRetxThreshold     |input;|
    timerPollRetransmit  u8     u8     timerPollRetransmit  |input;|
    reserved2[2]         array  u8     reserved2            |multiedit;|
</sub T_AmUpParasLte>


<sub T_AmDwParasLte>
    bStatusReportSNGap  u8     u8     bStatusReportSNGap  |input;|
    reserved3[3]        array  u8     reserved3           |multiedit;|
</sub T_AmDwParasLte>


<sub T_CRLC_STATUS_IND_LTE>
    statusCode    u8     u8     statusCode    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_CRLC_STATUS_IND_LTE>


<sub T_CRLC_CONFIG_REQ_LTE>
    rbIdentity     u8              u8              rbIdentity     |input;|
    configCause    u8              u8              configCause    |input;|
    suspendResume  u8              u8              suspendResume  |input;|
    reserved1      u8              u8              reserved1      |input;|
    amUpParas      struct          T_AmUpParasLte  
    amDwParas      struct          T_AmDwParasLte  
</sub T_CRLC_CONFIG_REQ_LTE>


<sub T_CRLC_DEACT_REQ_LTE>
    rbIdentity    u8     u8     rbIdentity    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_CRLC_DEACT_REQ_LTE>


<0x4206 OP_CRLC_STATUS_IND_LTE>
    signalHeader         struct                 T_MsgHeader            
    CRLC_STATUS_IND_LTE  struct                 T_CRLC_STATUS_IND_LTE  
</0x4206 OP_CRLC_STATUS_IND_LTE>


<0x4200 OP_CRLC_CONFIG_REQ_LTE>
    signalHeader         struct                 T_MsgHeader            
    CRLC_CONFIG_REQ_LTE  struct                 T_CRLC_CONFIG_REQ_LTE  
</0x4200 OP_CRLC_CONFIG_REQ_LTE>


<0x4201 OP_CRLC_DEACT_REQ_LTE>
    signalHeader        struct                T_MsgHeader           
    CRLC_DEACT_REQ_LTE  struct                T_CRLC_DEACT_REQ_LTE  
</0x4201 OP_CRLC_DEACT_REQ_LTE>


<sub T_EMAC_Statistic_RB>
    ulUlTbSize            u32  u32  ulUlTbSize            |input;|
    usUlTbNum             u16  u16  usUlTbNum             |input;|
    ulUlAssembleSize      u32  u32  ulUlAssembleSize      |input;|
    ulDlTbSize            u32  u32  ulDlTbSize            |input;|
    usDlTbNum             u16  u16  usDlTbNum             |input;|
    ullUlTtlTbSize        structu64  
    ulUlTtlTbNum          u32  u32  ulUlTtlTbNum          |input;|
    ullUlTtlAssembleSize  structu64  
    ullDlTtlTbSize        structu64  
    ulDlTtlTbNum          u32  u32  ulDlTtlTbNum          |input;|
</sub T_EMAC_Statistic_RB>


<sub T_EMAC_Statistic>
    ullTtlUlTbSize                       struct               u64                  
    ulTtlUlTbNum                         u32                  u32                  ulTtlUlTbNum                         |input;|
    ullTtlDlTbSize                       struct               u64                  
    ulTtlDlTbNum                         u32                  u32                  ulTtlDlTbNum                         |input;|
    ullTtlEmptyTbSize                    struct               u64                  
    ulTtlEmptyTbNum                      u32                  u32                  ulTtlEmptyTbNum                      |input;|
    stStatisticRbInfo[MAX_RB_SETUP_LTE]  array                T_EMAC_Statistic_RB  stStatisticRbInfo                    |multiedit;|
</sub T_EMAC_Statistic>


<sub T_EMAC_PrachSendingPara>
    prachSendFlag    u8  u8  prachSendFlag    |input;|
    prachCancelFlag  u8  u8  prachCancelFlag  |input;|
</sub T_EMAC_PrachSendingPara>


<sub T_EMAC_RrcConfig_Para>
    rbInfoSetupList[MAX_RB_SETUP_LTE]  array           T_RbInforSetup  rbInfoSetupList                    |multiedit;|
    macMainInfo                        struct          T_MacMainInfo   
    cRnti                              u32             u32             cRnti                              |input;|
    tempCrnti                          u32             u32             tempCrnti                          |input;|
    msg5size                           u16             u16             msg5size                           |input;|
</sub T_EMAC_RrcConfig_Para>


<sub T_EMAC_Msg3SendPara>
    msg3HarqId  u8  u8  msg3HarqId  |input;|
</sub T_EMAC_Msg3SendPara>


<sub T_EMAC_Msg3Buffer>
    msg3Len   u16  u16  msg3Len   |input;|
    Rserved2  u16  u16  Rserved2  |input;|
    msg3      Ptr  u8   
</sub T_EMAC_Msg3Buffer>


<sub T_EMAC_CcchDataBuffer>
    ccchDatalen                    u16    u16    ccchDatalen                    |input;|
    ccchData[EAS_MAX_MSG3_LENGTH]  array  u8     ccchData                       |multiedit;|
</sub T_EMAC_CcchDataBuffer>


<sub T_EMAC_BsrInfo>
    macBsrCeLen             u8     u8     macBsrCeLen             |input;|
    bsrType                 u8     u8     bsrType                 |input;|
    macBsrCeType            u8     u8     macBsrCeType            |input;|
    reserved1               u8     u8     reserved1               |input;|
    macBS[EMAC_BSR_CE_LEN]  array  u8     macBS                   |multiedit;|
    reserved                u8     u8     reserved                |input;|
</sub T_EMAC_BsrInfo>


<sub T_EMAC_crntiCeInfo>
    assembleFlag  u8   u8   assembleFlag  |input;|
    reserved1     u8   u8   reserved1     |input;|
    crntiCe       u16  u16  crntiCe       |input;|
</sub T_EMAC_crntiCeInfo>


<sub T_EMAC_LogichGroupConfigInfo>
    logichNum                     u8     u8     logichNum                     |input;|
    reserved3[3]                  array  u8     reserved3                     |multiedit;|
    lchPriority[EMAC_LOGICH_NUM]  array  u8     lchPriority                   |multiedit;|
    reserved1                     u8     u8     reserved1                     |input;|
    instId[EMAC_LOGICH_NUM]       array  u8     instId                        |multiedit;|
    reserved                      u8     u8     reserved                      |input;|
</sub T_EMAC_LogichGroupConfigInfo>


<sub T_EMAC_LogichGroupParaForBsr>
    highgestPriority                u8     u8     highgestPriority                |input;|
    lcgTotalDataLen                 u32    u32    lcgTotalDataLen                 |input;|
    logichDatalen[EMAC_LOGICH_NUM]  array  u32    logichDatalen                   |multiedit;|
    reserved2[2]                    array  u8     reserved2                       |multiedit;|
</sub T_EMAC_LogichGroupParaForBsr>


<sub T_EMAC_HighestlogichPara>
    lcgId             u8     u8     lcgId             |input;|
    lchPriorityValue  u8     u8     lchPriorityValue  |input;|
    reserved2[2]      array  u8     reserved2         |multiedit;|
</sub T_EMAC_HighestlogichPara>


<sub T_EMAC_SendingPara>
    logichNum                             u8     u8     logichNum                             |input;|
    lastStatusRlcLen                      u16    u16    lastStatusRlcLen                      |input;|
    statusRlcTotalLen                     u32    u32    statusRlcTotalLen                     |input;|
    pduTotalLenth                         u32    u32    pduTotalLenth                         |input;|
    LCID[MAX_RB_NUM_LTE]                  array  u8     LCID                                  |multiedit;|
    assembledRlcSduLen[MAX_RB_NUM_LTE]    array  u32    assembledRlcSduLen                    |multiedit;|
    rlcInstSduLen[MAX_RB_NUM_LTE]         array  u32    rlcInstSduLen                         |multiedit;|
    index[EMAC_LOGICH_NUM]                array  u8     index                                 |multiedit;|
    ucLcPriorityByInstId[MAX_RB_NUM_LTE]  array  u8     ucLcPriorityByInstId                  |multiedit;|
    logicalPriority[EMAC_LOGICH_NUM]      array  u8     logicalPriority                       |multiedit;|
    instId[EMAC_LOGICH_NUM]               array  u8     instId                                |multiedit;|
    statusRlcLen[EMAC_LOGICH_NUM]         array  u16    statusRlcLen                          |multiedit;|
    needPduLenth[EMAC_LOGICH_NUM]         array  u32    needPduLenth                          |multiedit;|
</sub T_EMAC_SendingPara>


<sub T_EMAC_macSubHeaderInfo>
    LCID          u8     u8     LCID          |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
    macSduSize    u16    u16    macSduSize    |input;|
    macSduOffset  u16    u16    macSduOffset  |input;|
</sub T_EMAC_macSubHeaderInfo>


<sub T_EMAC_ReceiveInfo>
    instId[EMAC_LOGICH_NUM]            array             u8                instId                             |multiedit;|
    reserved1                          u8                u8                reserved1                          |input;|
    *pMacDataIndHead[EMAC_LOGICH_NUM]  array             T_ERLC_DlPduInfo  *pMacDataIndHead                   |multiedit;|
    *writePtr[EMAC_LOGICH_NUM]         array             T_ERLC_DlPduInfo  *writePtr                          |multiedit;|
</sub T_EMAC_ReceiveInfo>


<sub T_EMAC_PduLenInfo>
    macHeaderLen  u16    u16    macHeaderLen  |input;|
    len           u16    u16    len           |input;|
    macSduOffset  u16    u16    macSduOffset  |input;|
    reserved2[2]  array  u8     reserved2     |multiedit;|
</sub T_EMAC_PduLenInfo>


<sub T_EMAC_UlMacPduInfo>
    paddingBsrFlag       u8   u8   paddingBsrFlag       |input;|
    paddingRearmostFlag  u8   u8   paddingRearmostFlag  |input;|
    logichDataFlag       u8   u8   logichDataFlag       |input;|
    lastLCID             u8   u8   lastLCID             |input;|
    lastSubHeaderLi      u8   u8   lastSubHeaderLi      |input;|
    macHeaderLen         u16  u16  macHeaderLen         |input;|
    macSduTotalLen       u16  u16  macSduTotalLen       |input;|
</sub T_EMAC_UlMacPduInfo>


<sub T_EMAC_UlMacPduBSROffsetInfo>
    bsrSubHeaderAddr   Ptr u8  
    bsrCeAddr          Ptr u8  
</sub T_EMAC_UlMacPduBSROffsetInfo>


<sub T_EMAC_PuschMacPduInfo>
    puschHeadMemory   Ptr                 T_L1DMA_BUFF_INFO   
    l1dmaNode         Ptr                 T_L1DMA_BLOCK_INFO  
</sub T_EMAC_PuschMacPduInfo>


<sub T_EMAC_REGULAR_BSR_REQ>
    ucInstId      u8     u8     ucInstId      |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_EMAC_REGULAR_BSR_REQ>


<0x413d OP_EMAC_REGULAR_BSR_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMAC_REGULAR_BSR_REQ  struct                  T_EMAC_REGULAR_BSR_REQ  
</0x413d OP_EMAC_REGULAR_BSR_REQ>


<sub T_EMAC_SrConfig>
    reserved2[2]  array  u8     reserved2     |multiedit;|
</sub T_EMAC_SrConfig>


<sub T_EMAC_UlSpsSendPara>
    spsStartFlag          u8              u8              spsStartFlag          |input;|
    reserved1             u8              u8              reserved1             |input;|
    emptyTransNum         u16             u16             emptyTransNum         |input;|
    spsStartSfn           u16             u16             spsStartSfn           |input;|
    spsNextSpsPuschSfn    u16             u16             spsNextSpsPuschSfn    |input;|
    spsCrntiConflictFlag  u16             u16             spsCrntiConflictFlag  |input;|
    reserved2[2]          array           u8              reserved2             |multiedit;|
    spsNvalue             u32             u32             spsNvalue             |input;|
    spsConfigedUlGrant    struct          T_ResourceInfo  
</sub T_EMAC_UlSpsSendPara>


<sub T_EMAC_UlSpsConfig>
    implicitRelease  u8   u8   implicitRelease  |input;|
    twoIntervalFlag  u8   u8   twoIntervalFlag  |input;|
    ulSpsInterl      u16  u16  ulSpsInterl      |input;|
    spsRnti          u32  u32  spsRnti          |input;|
</sub T_EMAC_UlSpsConfig>


<sub T_EMAC_LteIntraFreqInfo>
    frequency                                      u16    u16    frequency                                      |input;|
    measBandWith                                   u16    u16    measBandWith                                   |input;|
    presenceAntennaPort1                           u16    u16    presenceAntennaPort1                           |input;|
    neighCellConfig                                u16    u16    neighCellConfig                                |input;|
    listedCellNum                                  u16    u16    listedCellNum                                  |input;|
    blackListNum                                   u16    u16    blackListNum                                   |input;|
    freqType                                       u16    u16    freqType                                       |input;|
    blindCellNum                                   u16    u16    blindCellNum                                   |input;|
    blackPhyId[EMAC_MAX_FREQ_BLACK_CELL_NUM]       array  u16    blackPhyId                                     |multiedit;|
    blackPhyIdRange[EMAC_MAX_FREQ_BLACK_CELL_NUM]  array  u16    blackPhyIdRange                                |multiedit;|
    cellList[EMAC_MAX_LTE_FREQ_CELL_NUM]           array  u16    cellList                                       |multiedit;|
    rsrp[EMAC_MAX_LTE_FREQ_CELL_NUM]               array  u8     rsrp                                           |multiedit;|
    rsrq[EMAC_MAX_LTE_FREQ_CELL_NUM]               array  u8     rsrq                                           |multiedit;|
    cpType[EMAC_MAX_LTE_FREQ_CELL_NUM]             array  u8     cpType                                         |multiedit;|
    CellTsOffset[EMAC_MAX_LTE_FREQ_CELL_NUM]       array  u32    CellTsOffset                                   |multiedit;|
</sub T_EMAC_LteIntraFreqInfo>


<sub T_EMAC_LteFreqInfo>
    frequency                                      u16    u16    frequency                                      |input;|
    measBandWith                                   u16    u16    measBandWith                                   |input;|
    presenceAntennaPort1                           u16    u16    presenceAntennaPort1                           |input;|
    neighCellConfig                                u16    u16    neighCellConfig                                |input;|
    listedCellNum                                  u16    u16    listedCellNum                                  |input;|
    blindCellNum                                   u16    u16    blindCellNum                                   |input;|
    measTypeFlag                                   u16    u16    measTypeFlag                                   |input;|
    blackListNum                                   u16    u16    blackListNum                                   |input;|
    blackPhyId[EMAC_MAX_FREQ_BLACK_CELL_NUM]       array  u16    blackPhyId                                     |multiedit;|
    blackPhyIdRange[EMAC_MAX_FREQ_BLACK_CELL_NUM]  array  u16    blackPhyIdRange                                |multiedit;|
    cellList[EMAC_MAX_LTE_FREQ_CELL_NUM]           array  u16    cellList                                       |multiedit;|
    rsrp[EMAC_MAX_LTE_FREQ_CELL_NUM]               array  u8     rsrp                                           |multiedit;|
    rsrq[EMAC_MAX_LTE_FREQ_CELL_NUM]               array  u8     rsrq                                           |multiedit;|
    cpType[EMAC_MAX_LTE_FREQ_CELL_NUM]             array  u8     cpType                                         |multiedit;|
    CellTsOffset[EMAC_MAX_LTE_FREQ_CELL_NUM]       array  u32    CellTsOffset                                   |multiedit;|
    priority                                       u8     u8     priority                                       |input;|
</sub T_EMAC_LteFreqInfo>


<sub T_EMAC_TdsFreqInfo>
    frequency     u16    u16    frequency     |input;|
    cellNum       u16    u16    cellNum       |input;|
    measTypeFlag  u16    u16    measTypeFlag  |input;|
    cellList[8]   array  u16    cellList      |multiedit;|
    rscp[8]       array  u8     rscp          |multiedit;|
</sub T_EMAC_TdsFreqInfo>


<sub T_EMAC_UtraFreqInfo>
    arfcn           u16    u16    arfcn           |input;|
    rssi            u16    u16    rssi            |input;|
    cellNum         u16    u16    cellNum         |input;|
    cellId[32]      array  u16    cellId          |multiedit;|
    syncOffset[32]  array  u32    syncOffset      |multiedit;|
    rscp[32]        array  u16    rscp            |multiedit;|
    ec2no[32]       array  u16    ec2no           |multiedit;|
</sub T_EMAC_UtraFreqInfo>


<sub T_EMAC_WMeasState>
    wTaskType       u8              u8              wTaskType       |input;|
    wPendingBitMap  u16             u16             wPendingBitMap  |input;|
    wTaskState      struct          T_EMAC_W_STATE  
</sub T_EMAC_WMeasState>


<sub T_EMAC_IdlMeasList>
    measId                 u8                  u8                  measId                 |input;|
    isValid                u8                  u8                  isValid                |input;|
    nValue                 u8                  u8                  nValue                 |input;|
    pMax                   s8                  s8                  pMax                   |input;|
    qualMin                s8                  s8                  qualMin                |input;|
    intraSearchP           u8                  u8                  intraSearchP           |input;|
    intraSearchQ           u8                  u8                  intraSearchQ           |input;|
    nonIntraSearchP        u8                  u8                  nonIntraSearchP        |input;|
    nonIntraSearchQ        u8                  u8                  nonIntraSearchQ        |input;|
    qRxLevMin              s16                 s16                 qRxLevMin              |input;|
    sValueOfRsrp           s8                  s8                  sValueOfRsrp           |input;|
    sValueOfRsrq           s8                  s8                  sValueOfRsrq           |input;|
    lastMeasType           u8                  u8                  lastMeasType           |input;|
    measType               u8                  u8                  measType               |input;|
    syncAlgFlag            u8                  u8                  syncAlgFlag            |input;|
    measUpdateType         u8                  u8                  measUpdateType         |input;|
    serverRsrp             u8                  u8                  serverRsrp             |input;|
    serverRsrq             u8                  u8                  serverRsrq             |input;|
    sNegativeCounter       u8                  u8                  sNegativeCounter       |input;|
    serveCell              struct              T_CellDescLte       
    lteHighPriorFreqNum    u8                  u8                  lteHighPriorFreqNum    |input;|
    lteLowPriorFreqNum     u8                  u8                  lteLowPriorFreqNum     |input;|
    lteFreqInfo[9]         array               T_EMAC_LteFreqInfo  lteFreqInfo            |multiedit;|
    lteHighPriorMeasIndex  u8                  u8                  lteHighPriorMeasIndex  |input;|
    lteLowPriorMeasIndex   u8                  u8                  lteLowPriorMeasIndex   |input;|
    lteBlindIndex          u8                  u8                  lteBlindIndex          |input;|
    lteFreqIndex[9]        array               u8                  lteFreqIndex           |multiedit;|
</sub T_EMAC_IdlMeasList>


<sub T_EMAC_DchMeasList>
    measGapPeriod  u16  u16  measGapPeriod  |input;|
    measGapOffset  u16  u16  measGapOffset  |input;|
    measId         u16  u16  measId         |input;|
</sub T_EMAC_DchMeasList>


<sub T_EMAC_IdlMeasControl>
    triggerFlag  u8   u8   triggerFlag  |input;|
    sampleCount  u8   u8   sampleCount  |input;|
    count        u16  u16  count        |input;|
</sub T_EMAC_IdlMeasControl>


<sub T_EMAC_GapInfo>
    gapId     u16  u16  gapId     |input;|
    gapType   u16  u16  gapType   |input;|
    offset    u16  u16  offset    |input;|
    duration  u32  u32  duration  |input;|
    lastGap   u8   u8   lastGap   |input;|
</sub T_EMAC_GapInfo>


<sub T_EMAC_EdhiDelayMsg>
    edhiMsgNum                               u8                                    u8                                    edhiMsgNum                               |input;|
    edhiMsgType[EMAC_EDHI_DELAY_MSG_MAXNUM]  array                                 u8                                    edhiMsgType                              |multiedit;|
    param[EMAC_EDHI_DELAY_MSG_MAXNUM]        array                                 T_param                               param                                    |multiedit;|
</sub T_EMAC_EdhiDelayMsg>


<sub T_param
    param[4]                                 array                                 u16                                   param                                    |multiedit;|
</sub T_param


<sub T_EMAC_HandoverConfig>
    raPrachMaskIndex  u16  u16  raPrachMaskIndex  |input;|
    raPreambleIndex   u16  u16  raPreambleIndex   |input;|
    targetCellRsrp    u16  u16  targetCellRsrp    |input;|
    atennaPortCount   u16  u16  atennaPortCount   |input;|
</sub T_EMAC_HandoverConfig>


<sub T_EMAC_GapInfoLte>
    sfn     u16  u16  sfn     |input;|
    offSet  u16  u16  offSet  |input;|
</sub T_EMAC_GapInfoLte>


<sub T_EMAC_TimestampInfo>
    gsmSfn     u32  u32  gsmSfn     |input;|
    gsmOffSet  u16  u16  gsmOffSet  |input;|
    lteSfn     u16  u16  lteSfn     |input;|
    lteOffSet  u16  u16  lteOffSet  |input;|
</sub T_EMAC_TimestampInfo>


<sub T_EMAC_HisrTaskSfn>
    sfnNum                          u16    u16    sfnNum                          |input;|
    hisrSfn[EMAC_MAX_HISR_SFN_NUM]  array  u16    hisrSfn                         |multiedit;|
</sub T_EMAC_HisrTaskSfn>


<sub T_MAC_DRX_EVENT_IND_LTE>
    cycleChange      u16  u16  cycleChange      |input;|
    drxStatusChange  u16  u16  drxStatusChange  |input;|
</sub T_MAC_DRX_EVENT_IND_LTE>


<0x4126 OP_MAC_DRX_EVENT_IND_LTE>
    signalHeader           struct                   T_MsgHeader              
    MAC_DRX_EVENT_IND_LTE  struct                   T_MAC_DRX_EVENT_IND_LTE  
</0x4126 OP_MAC_DRX_EVENT_IND_LTE>


<sub T_EMAC_ValidFreqBandInfo>
    freqBand      u16  u16  freqBand      |input;|
    freqBandType  u16  u16  freqBandType  |input;|
    startPoint    u16  u16  startPoint    |input;|
    endPoint      u16  u16  endPoint      |input;|
</sub T_EMAC_ValidFreqBandInfo>


<sub T_EMAC_UlHarqControl>
    cellIndex                                 u8                      u8                      cellIndex                                 |input;|
    harqInfo[EMAC_MAX_ULHARQ_NUM]             array                   T_EMAC_HarqInfo         harqInfo                                  |multiedit;|
    tbSizeForHarqInfo[EMAC_MAX_ULHARQ_NUM]    array                   u16                     tbSizeForHarqInfo                         |multiedit;|
    modulateMode[EMAC_MAX_ULHARQ_NUM]         array                   u16                     modulateMode                              |multiedit;|
    lastPuschSfnConfig0[EMAC_MAX_ULHARQ_NUM]  array                   u16                     lastPuschSfnConfig0                       |multiedit;|
    puschMacPduInfo[EMAC_MAX_ULHARQ_NUM]      array                   T_EMAC_PuschMacPduInfo  puschMacPduInfo                           |multiedit;|
</sub T_EMAC_UlHarqControl>


<sub T_EMAC_DlHarqDrxInfo>
    harqRttCounter[15]         array  u8     harqRttCounter             |multiedit;|
    harqDecodeStatus[15]       array  u8     harqDecodeStatus           |multiedit;|
    retransmissionCounter[15]  array  u8     retransmissionCounter      |multiedit;|
    harqProStatus              u32    u32    harqProStatus              |input;|
</sub T_EMAC_DlHarqDrxInfo>


<sub T_EMAC_UlHarqDrxInfo>
    harqRetanFlag  u16  u16  harqRetanFlag  |input;|
    ulHarqAckInfo  u16  u16  ulHarqAckInfo  |input;|
</sub T_EMAC_UlHarqDrxInfo>


<sub T_EMAC_DrxControlInfo>
    inactiveCounter                          u32                   u32                   inactiveCounter                          |input;|
    ShortCycleCounter                        u32                   u32                   ShortCycleCounter                        |input;|
    onDurationCounter                        u32                   u32                   onDurationCounter                        |input;|
    drxControlFlag                           u16                   u16                   drxControlFlag                           |input;|
    onDurationWaitCounter                    u16                   u16                   onDurationWaitCounter                    |input;|
    dlHarqDrxInfo[EDHI_EAS_MAX_SCELL_NUM+1]  array                 T_EMAC_DlHarqDrxInfo  dlHarqDrxInfo                            |multiedit;|
    ulHarqDrxInfo[EDHI_EAS_MAX_SCELL_NUM+1]  array                 T_EMAC_UlHarqDrxInfo  ulHarqDrxInfo                            |multiedit;|
</sub T_EMAC_DrxControlInfo>


<sub T_LTE_TASK_PARA>
    TaskType  u16  u16  TaskType  |input;|
    para1     u16  u16  para1     |input;|
    para2     u16  u16  para2     |input;|
    para3     u16  u16  para3     |input;|
    para4     u16  u16  para4     |input;|
    para5     u16  u16  para5     |input;|
</sub T_LTE_TASK_PARA>


<sub T_LTE_BUFF_TASK_INFO>
    taskStatus  u16              u16              taskStatus  |input;|
    nextTask    struct           T_LTE_TASK_PARA  
    lastTask    struct           T_LTE_TASK_PARA  
</sub T_LTE_BUFF_TASK_INFO>


<union T_EMAC_BUFF_INACTIVE_TASK>
    CMAC_INTER_RAT_REQ_LTE  struct                    T_CMAC_INTER_RAT_REQ_LTE  
    CMAC_DEACT_REQ_LTE      struct                    T_CMAC_DEACT_REQ_LTE      
</union T_EMAC_BUFF_INACTIVE_TASK>


<sub T_EMAC_DCH_INACTIVE_TASK>
    buffTaskType  u16                        u16                        buffTaskType  |input;|
    buffTask      union                      T_EMAC_BUFF_INACTIVE_TASK  
</sub T_EMAC_DCH_INACTIVE_TASK>


<sub T_EMMESM_ESTABLISH_REQ>
    pti                          u8     u8     pti                          |input;|
    ebi                          u8     u8     ebi                          |input;|
    length                       u16    u16    length                       |input;|
    sn                           u16    u16    sn                           |input;|
    exceptionData                u8     u8     exceptionData                |input;|
    esmMessage[MAX_ESM_MSG_LEN]  array  u8     esmMessage                   |multiedit;|
</sub T_EMMESM_ESTABLISH_REQ>


<0x0e40 OP_EMMESM_ESTABLISH_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_ESTABLISH_REQ  struct                  T_EMMESM_ESTABLISH_REQ  
</0x0e40 OP_EMMESM_ESTABLISH_REQ>


<sub T_EMMESM_ESTABLISH_CNF>
    pti      u8  u8  pti      |input;|
    ebi      u8  u8  ebi      |input;|
    release  u8  u8  release  |input;|
</sub T_EMMESM_ESTABLISH_CNF>


<0x0e41 OP_EMMESM_ESTABLISH_CNF>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_ESTABLISH_CNF  struct                  T_EMMESM_ESTABLISH_CNF  
</0x0e41 OP_EMMESM_ESTABLISH_CNF>


<sub T_EMMESM_RELEASE_IND>
    pti    u8  u8  pti    |input;|
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMESM_RELEASE_IND>


<0x0e43 OP_EMMESM_RELEASE_IND>
    signalHeader        struct                T_MsgHeader           
    EMMESM_RELEASE_IND  struct                T_EMMESM_RELEASE_IND  
</0x0e43 OP_EMMESM_RELEASE_IND>


<sub T_EMMESM_EPS_STATUS_IND>
    pti  u8  u8  pti  |input;|
    ebi  u8  u8  ebi  |input;|
</sub T_EMMESM_EPS_STATUS_IND>


<0x0e44 OP_EMMESM_EPS_STATUS_IND>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_EPS_STATUS_IND  struct                   T_EMMESM_EPS_STATUS_IND  
</0x0e44 OP_EMMESM_EPS_STATUS_IND>


<sub T_EMMESM_DATA_REQ>
    length                    u16    u16    length                    |input;|
    sn                        u16    u16    sn                        |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMESM_DATA_REQ>


<0x0e45 OP_EMMESM_DATA_REQ>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_REQ  struct             T_EMMESM_DATA_REQ  
</0x0e45 OP_EMMESM_DATA_REQ>


<sub T_EMMESM_DATA_IND>
    length      u16    u16    length      |input;|
    protFlag    u8     u8     protFlag    |input;|
    reserved1   u8     u8     reserved1   |input;|
    message[0]  array  u8     message     |multiedit;|
</sub T_EMMESM_DATA_IND>


<0x0e46 OP_EMMESM_DATA_IND>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_IND  struct             T_EMMESM_DATA_IND  
</0x0e46 OP_EMMESM_DATA_IND>


<sub T_EMMESM_EPS_DELETE_REQ>
    pti    u8  u8  pti    |input;|
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMESM_EPS_DELETE_REQ>


<0x0e47 OP_EMMESM_EPS_DELETE_REQ>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_EPS_DELETE_REQ  struct                   T_EMMESM_EPS_DELETE_REQ  
</0x0e47 OP_EMMESM_EPS_DELETE_REQ>


<sub T_EMMESM_DATA_CNF>
    esmMsgType  u8   u8   esmMsgType  |input;|
    ebi         u8   u8   ebi         |input;|
    pti         u8   u8   pti         |input;|
    status      u8   u8   status      |input;|
    sn          u16  u16  sn          |input;|
</sub T_EMMESM_DATA_CNF>


<0x0e48 OP_EMMESM_DATA_CNF>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_CNF  struct             T_EMMESM_DATA_CNF  
</0x0e48 OP_EMMESM_DATA_CNF>


<0x0e49 OP_EMMESM_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x0e49 OP_EMMESM_ABORT_REQ>


<sub T_EMMESM_PDN_CON_IND>
    typeInd  u8  u8  typeInd  |input;|
</sub T_EMMESM_PDN_CON_IND>


<0x0e4a OP_EMMESM_PDN_CON_IND>
    signalHeader        struct                T_MsgHeader           
    EMMESM_PDN_CON_IND  struct                T_EMMESM_PDN_CON_IND  
</0x0e4a OP_EMMESM_PDN_CON_IND>


<0x0e4e OP_EMMESM_PDN_CON_FAIL_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e4e OP_EMMESM_PDN_CON_FAIL_IND>


<0x0e4d OP_EMMESM_PLMN_CHANGE_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e4d OP_EMMESM_PLMN_CHANGE_IND>


<sub T_EMMSMS_EST_REQ>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_SMS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMSMS_EST_REQ>


<0x0298 OP_EMMSMS_EST_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_EST_REQ  struct            T_EMMSMS_EST_REQ  
</0x0298 OP_EMMSMS_EST_REQ>


<0x0299 OP_EMMSMS_EST_CNF>
    signalHeader  struct       T_MsgHeader  
</0x0299 OP_EMMSMS_EST_CNF>


<sub T_EMMSMS_ERROR_IND>
    mtOrMo  u8  u8  mtOrMo  |input;|
    cause   u8  u8  cause   |input;|
</sub T_EMMSMS_ERROR_IND>


<0x029a OP_EMMSMS_ERROR_IND>
    signalHeader      struct              T_MsgHeader         
    EMMSMS_ERROR_IND  struct              T_EMMSMS_ERROR_IND  
</0x029a OP_EMMSMS_ERROR_IND>


<sub T_EMMSMS_UNITDATA_REQ>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_SMS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMSMS_UNITDATA_REQ>


<0x029b OP_EMMSMS_UNITDATA_REQ>
    signalHeader         struct                 T_MsgHeader            
    EMMSMS_UNITDATA_REQ  struct                 T_EMMSMS_UNITDATA_REQ  
</0x029b OP_EMMSMS_UNITDATA_REQ>


<sub T_EMMSMS_UNITDATA_IND>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_SMS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMSMS_UNITDATA_IND>


<0x029c OP_EMMSMS_UNITDATA_IND>
    signalHeader         struct                 T_MsgHeader            
    EMMSMS_UNITDATA_IND  struct                 T_EMMSMS_UNITDATA_IND  
</0x029c OP_EMMSMS_UNITDATA_IND>


<sub T_EMMSMS_REL_REQ>
    mtOrMo  u8  u8  mtOrMo  |input;|
</sub T_EMMSMS_REL_REQ>


<0x029d OP_EMMSMS_REL_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_REL_REQ  struct            T_EMMSMS_REL_REQ  
</0x029d OP_EMMSMS_REL_REQ>


<0x029e OP_EMMSMS_REG_STATE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x029e OP_EMMSMS_REG_STATE_REQ>


<sub T_EMMSMS_REG_STATE_CNF>
    smsOverSGs         u8  u8  smsOverSGs         |input;|
    smsOverSGd         u8  u8  smsOverSGd         |input;|
    smsPiggybackAvail  u8  u8  smsPiggybackAvail  |input;|
</sub T_EMMSMS_REG_STATE_CNF>


<0x029f OP_EMMSMS_REG_STATE_CNF>
    signalHeader          struct                  T_MsgHeader             
    EMMSMS_REG_STATE_CNF  struct                  T_EMMSMS_REG_STATE_CNF  
</0x029f OP_EMMSMS_REG_STATE_CNF>


<sub T_cause>
    causeSelect   u8  u8  causeSelect   |input;|
    causeMessage  u8  u8  causeMessage  |input;|
    cause         u8  u8  cause         |input;|
</sub T_cause>


<0x0e6a OP_EMM_IMSI_PAGE_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e6a OP_EMM_IMSI_PAGE_IND>


<0x0e60 OP_EMM_CELL_INFO_REQ>
    signalHeader  struct       T_MsgHeader  
</0x0e60 OP_EMM_CELL_INFO_REQ>


<sub T_EMM_DETACH_REQ>
    detachCause  u8  u8  detachCause  |input;|
</sub T_EMM_DETACH_REQ>


<0x0e61 OP_EMM_DETACH_REQ>
    signalHeader       struct            T_MsgHeader       
    EMM_MO_DETACH_REQ  struct            T_EMM_DETACH_REQ  
</0x0e61 OP_EMM_DETACH_REQ>


<sub T_EMM_DETACH_IND>
    detachSource  u8  u8  detachSource  |input;|
    detachType    u8  u8  detachType    |input;|
    detachCause   u8  u8  detachCause   |input;|
</sub T_EMM_DETACH_IND>


<0x0e68 OP_EMM_DETACH_IND>
    signalHeader    struct            T_MsgHeader       
    EMM_DETACH_IND  struct            T_EMM_DETACH_IND  
</0x0e68 OP_EMM_DETACH_IND>


<0x0e67 OP_EMM_ATTACH_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e67 OP_EMM_ATTACH_IND>


<0x0e66 OP_EMM_TAU_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e66 OP_EMM_TAU_IND>


<0x0e65 OP_EMM_SERV_REJ_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e65 OP_EMM_SERV_REJ_IND>


<sub T_EMM_STATUS_REQ>
    status  u8  u8  status  |input;|
</sub T_EMM_STATUS_REQ>


<0x0e62 OP_EMM_STATUS_REQ>
    signalHeader    struct            T_MsgHeader       
    EMM_STATUS_REQ  struct            T_EMM_STATUS_REQ  
</0x0e62 OP_EMM_STATUS_REQ>


<sub T_EMM_NV_CHANGED_IND>
    changedValue  u8  u8  changedValue  |input;|
</sub T_EMM_NV_CHANGED_IND>


<0x0e72 OP_EMM_NV_CHANGED_IND>
    signalHeader        struct                T_MsgHeader           
    EMM_NV_CHANGED_IND  struct                T_EMM_NV_CHANGED_IND  
</0x0e72 OP_EMM_NV_CHANGED_IND>


<sub T_EMM_AUTH_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_AUTH_IND>


<0x0e64 OP_EMM_AUTH_IND>
    signalHeader  struct          T_MsgHeader     
    EMM_AUTH_IND  struct          T_EMM_AUTH_IND  
</0x0e64 OP_EMM_AUTH_IND>


<0x0e69 OP_EMM_GUTI_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e69 OP_EMM_GUTI_IND>


<sub T_EMM_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_STATUS_IND>


<0x0e6c OP_EMM_STATUS_IND>
    signalHeader    struct            T_MsgHeader       
    EMM_STATUS_IND  struct            T_EMM_STATUS_IND  
</0x0e6c OP_EMM_STATUS_IND>


<0x0e6d OP_EMM_KENB_IND>
    signalHeader  struct       T_MsgHeader  
</0x0e6d OP_EMM_KENB_IND>


<sub T_EMM_BAR_ALLEVIATE_IND>
    barAlleviateType  u8  u8  barAlleviateType  |input;|
</sub T_EMM_BAR_ALLEVIATE_IND>


<0x0e6e OP_EMM_BAR_ALLEVIATE_IND>
    signalHeader           struct                   T_MsgHeader              
    EMM_BAR_ALLEVIATE_IND  struct                   T_EMM_BAR_ALLEVIATE_IND  
</0x0e6e OP_EMM_BAR_ALLEVIATE_IND>


<0x0e6f OP_EMM_SET_STATE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x0e6f OP_EMM_SET_STATE_REQ>


<sub T_EMMRABM_REESTABLISH_REQ>
    exceptionData  u8   u8   exceptionData  |input;|
    reserved1      u8   u8   reserved1      |input;|
    dataStatus     u16  u16  dataStatus     |input;|
</sub T_EMMRABM_REESTABLISH_REQ>


<0x0e81 OP_EMMRABM_REESTABLISH_REQ>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_REESTABLISH_REQ  struct                     T_EMMRABM_REESTABLISH_REQ  
</0x0e81 OP_EMMRABM_REESTABLISH_REQ>


<0x0e80 OP_EMMRABM_REESTABLISH_CNF>
    signalHeader  struct       T_MsgHeader  
</0x0e80 OP_EMMRABM_REESTABLISH_CNF>


<sub T_EMMRABM_REESTABLISH_ERR>
    cause       u8  u8  cause       |input;|
    up2cp_flag  u8  u8  up2cp_flag  |input;|
</sub T_EMMRABM_REESTABLISH_ERR>


<0x0e82 OP_EMMRABM_REESTABLISH_ERR>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_REESTABLISH_ERR  struct                     T_EMMRABM_REESTABLISH_ERR  
</0x0e82 OP_EMMRABM_REESTABLISH_ERR>


<sub T_EMMRABM_STATUS_IND>
    statusInd  u8  u8  statusInd  |input;|
</sub T_EMMRABM_STATUS_IND>


<0x0e83 OP_EMMRABM_STATUS_IND>
    signalHeader        struct                T_MsgHeader           
    EMMRABM_STATUS_IND  struct                T_EMMRABM_STATUS_IND  
</0x0e83 OP_EMMRABM_STATUS_IND>


<sub T_EMMRABM_HCCP_STATUS_IND>
    hccpBitmap  u16  u16  hccpBitmap  |input;|
    reset       u8   u8   reset       |input;|
</sub T_EMMRABM_HCCP_STATUS_IND>


<0x0e84 OP_EMMRABM_HCCP_STATUS_IND>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_HCCP_STATUS_IND  struct                     T_EMMRABM_HCCP_STATUS_IND  
</0x0e84 OP_EMMRABM_HCCP_STATUS_IND>


<sub T_MMCESM_LOOP_TEST_IND>
    command      u8  u8  command      |input;|
    rlcLoopback  u8  u8  rlcLoopback  |input;|
    repetition   u8  u8  repetition   |input;|
    delay        u8  u8  delay        |input;|
</sub T_MMCESM_LOOP_TEST_IND>


<0xffff OP_MMCESM_LOOP_TEST_IND>
    signalHeader   struct                  T_MsgHeader             
    LOOP_TEST_IND  struct                  T_MMCESM_LOOP_TEST_IND  
</0xffff OP_MMCESM_LOOP_TEST_IND>


<sub T_RABMESM_DATA_REQ>
    ebi         u8           u8           ebi         |input;|
    rai         u8           u8           rai         |input;|
    typeOfData  u8           u8           typeOfData  |input;|
    reserved1   u8           u8           reserved1   |input;|
    dataLen     u16          u16          dataLen     |input;|
    sn          u16          u16          sn          |input;|
    data        Ptr          u8           
    freePdu     Ptr          T_ComPduLte  
</sub T_RABMESM_DATA_REQ>


<sub T_RABMESM_DATA_CNF>
    ebi          u8   u8   ebi          |input;|
    transStatus  u8   u8   transStatus  |input;|
    sn           u16  u16  sn           |input;|
</sub T_RABMESM_DATA_CNF>


<sub T_RABMESM_DATA_IND>
    ebi                    u8     u8     ebi                    |input;|
    dataLen                u16    u16    dataLen                |input;|
    data[MAX_ESM_MSG_LEN]  array  u8     data                   |multiedit;|
</sub T_RABMESM_DATA_IND>


<0x0ea6 OP_RABMESM_DATA_REQ>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_REQ  struct              T_RABMESM_DATA_REQ  
</0x0ea6 OP_RABMESM_DATA_REQ>


<0x0ea7 OP_RABMESM_DATA_CNF>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_CNF  struct              T_RABMESM_DATA_CNF  
</0x0ea7 OP_RABMESM_DATA_CNF>


<0x0ea8 OP_RABMESM_DATA_IND>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_IND  struct              T_RABMESM_DATA_IND  
</0x0ea8 OP_RABMESM_DATA_IND>


<sub T_RABMESM_ACTIVATE_IND>
    nsapi         u8   u8   nsapi         |input;|
    ebi           u8   u8   ebi           |input;|
    linkedEbi     u8   u8   linkedEbi     |input;|
    iniProcessId  u8   u8   iniProcessId  |input;|
    ciotOpt       u8   u8   ciotOpt       |input;|
    pdnType       u8   u8   pdnType       |input;|
    hccpEnable    u8   u8   hccpEnable    |input;|
    profile       u8   u8   profile       |input;|
    maxCid        u16  u16  maxCid        |input;|
</sub T_RABMESM_ACTIVATE_IND>


<0x0ea0 OP_RABMESM_ACTIVATE_IND>
    signalHeader          struct                  T_MsgHeader             
    RABMESM_ACTIVATE_IND  struct                  T_RABMESM_ACTIVATE_IND  
</0x0ea0 OP_RABMESM_ACTIVATE_IND>


<sub T_RABMESM_ACTIVATE_RSP>
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_RABMESM_ACTIVATE_RSP>


<0x0ea1 OP_RABMESM_ACTIVATE_RSP>
    signalHeader          struct                  T_MsgHeader             
    RABMESM_ACTIVATE_RSP  struct                  T_RABMESM_ACTIVATE_RSP  
</0x0ea1 OP_RABMESM_ACTIVATE_RSP>


<sub T_RABMESM_DEACTIVATE_IND>
    ebi  u8  u8  ebi  |input;|
</sub T_RABMESM_DEACTIVATE_IND>


<0x0ea2 OP_RABMESM_DEACTIVATE_IND>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_IND  struct                    T_RABMESM_DEACTIVATE_IND  
</0x0ea2 OP_RABMESM_DEACTIVATE_IND>


<sub T_RABMESM_DEACTIVATE_RSP>
    ebi  u8  u8  ebi  |input;|
</sub T_RABMESM_DEACTIVATE_RSP>


<0x0ea3 OP_RABMESM_DEACTIVATE_RSP>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_RSP  struct                    T_RABMESM_DEACTIVATE_RSP  
</0x0ea3 OP_RABMESM_DEACTIVATE_RSP>


<sub T_RABMESM_DEACTIVATE_REQ>
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_RABMESM_DEACTIVATE_REQ>


<0x0ea4 OP_RABMESM_DEACTIVATE_REQ>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_REQ  struct                    T_RABMESM_DEACTIVATE_REQ  
</0x0ea4 OP_RABMESM_DEACTIVATE_REQ>


<sub T_RABMESM_STATUS_REQ>
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_RABMESM_STATUS_REQ>


<0x0ea5 OP_RABMESM_STATUS_REQ>
    signalHeader        struct                T_MsgHeader           
    RABMESM_STATUS_REQ  struct                T_RABMESM_STATUS_REQ  
</0x0ea5 OP_RABMESM_STATUS_REQ>


<sub T_RABMESM_RATE_CONTROL_IND>
    ebi            u8   u8   ebi            |input;|
    apnRateExist   u8   u8   apnRateExist   |input;|
    plmnRateExist  u8   u8   plmnRateExist  |input;|
    reserved1      u8   u8   reserved1      |input;|
    apnAer         u8   u8   apnAer         |input;|
    apnUnit        u8   u8   apnUnit        |input;|
    apnValue       u32  u32  apnValue       |input;|
    plmnValue      u32  u32  plmnValue      |input;|
</sub T_RABMESM_RATE_CONTROL_IND>


<0x0ea9 OP_RABMESM_RATE_CONTROL_IND>
    signalHeader              struct                      T_MsgHeader                 
    RABMESM_RATE_CONTROL_IND  struct                      T_RABMESM_RATE_CONTROL_IND  
</0x0ea9 OP_RABMESM_RATE_CONTROL_IND>


<sub T_PDCP_DATA_REQ_LTE>
    rbIdentity     u8           u8           rbIdentity     |input;|
    reserved3[3]   array        u8           reserved3      |multiedit;|
    pDataPointer   Ptr          T_ComPduLte  
</sub T_PDCP_DATA_REQ_LTE>


<sub T_PDCP_DATA_IND_LTE>
    rbIdentity    u8           u8           rbIdentity    |input;|
    reserved3[3]  array        u8           reserved3     |multiedit;|
    pdata         Ptr          T_ComSduLte  
</sub T_PDCP_DATA_IND_LTE>


<0x4308 OP_PDCP_DATA_REQ_LTE>
    signalHeader       struct               T_MsgHeader          
    PDCP_DATA_REQ_LTE  struct               T_PDCP_DATA_REQ_LTE  
</0x4308 OP_PDCP_DATA_REQ_LTE>


<0x4307 OP_PDCP_DATA_IND_LTE>
    signalHeader       struct               T_MsgHeader          
    PDCP_DATA_IND_LTE  struct               T_PDCP_DATA_IND_LTE  
</0x4307 OP_PDCP_DATA_IND_LTE>


<sub T_PDCP_SEQUENCE_IND>
    rabId       u8   u8   rabId       |input;|
    rbId        u8   u8   rbId        |input;|
    snValid     u8   u8   snValid     |input;|
    nextSentSn  u16  u16  nextSentSn  |input;|
</sub T_PDCP_SEQUENCE_IND>


<0xffff OP_PDCP_SEQUENCE_IND>
    signalHeader       struct               T_MsgHeader          
    PDCP_SEQUENCE_IND  struct               T_PDCP_SEQUENCE_IND  
</0xffff OP_PDCP_SEQUENCE_IND>


<sub T_PDCP_SEQUENCE_RSP>
    rbId           u8   u8   rbId           |input;|
    snValid        u8   u8   snValid        |input;|
    nextReceiveSn  u16  u16  nextReceiveSn  |input;|
</sub T_PDCP_SEQUENCE_RSP>


<0xffff OP_PDCP_SEQUENCE_RSP>
    signalHeader       struct               T_MsgHeader          
    PDCP_SEQUENCE_RSP  struct               T_PDCP_SEQUENCE_RSP  
</0xffff OP_PDCP_SEQUENCE_RSP>


<sub T_EMMAS_ESTABLISH_REQ>
    establishCause                               u8     u8     establishCause                               |input;|
    callType                                     u8     u8     callType                                     |input;|
    length                                       u16    u16    length                                       |input;|
    registFlag                                   u8     u8     registFlag                                   |input;|
    limitAccFlag                                 u8     u8     limitAccFlag                                 |input;|
    gummeidType                                  u8     u8     gummeidType                                  |input;|
    nasMsgSn                                     u8     u8     nasMsgSn                                     |input;|
    nasMessage[MAX_NAS_MSG_LEN]                  array  u8     nasMessage                                   |multiedit;|
    attachWithoutPdn                             u8     u8     attachWithoutPdn                             |input;|
    upCiot                                       u8     u8     upCiot                                       |input;|
    resumeFallbackedlength                       u16    u16    resumeFallbackedlength                       |input;|
    nasMessageResumeFallbacked[MAX_NAS_MSG_LEN]  array  u8     nasMessageResumeFallbacked                   |multiedit;|
</sub T_EMMAS_ESTABLISH_REQ>


<sub T_EMMAS_ESTABLISH_CNF>
    resumeFallbackedFlag  u8     u8     resumeFallbackedFlag  |input;|
    reserved3[3]          array  u8     reserved3             |multiedit;|
</sub T_EMMAS_ESTABLISH_CNF>


<sub T_EMMAS_RELEASE_REQ>
    cause         u8     u8     cause         |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_EMMAS_RELEASE_REQ>


<sub T_EMMAS_RELEASE_IND>
    releaseCause      u8   u8   releaseCause      |input;|
    suspendFlag       u8   u8   suspendFlag       |input;|
    extendedWaitTime  u16  u16  extendedWaitTime  |input;|
</sub T_EMMAS_RELEASE_IND>


<sub T_EMMAS_PAGE_IND>
    ueIdType      u8     u8     ueIdType      |input;|
    pagingCause   u8     u8     pagingCause   |input;|
    reserved2[2]  array  u8     reserved2     |multiedit;|
</sub T_EMMAS_PAGE_IND>


<sub T_EMMAS_SYNC_IND>
    syncCause     u8     u8     syncCause     |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_EMMAS_SYNC_IND>


<sub T_EMMAS_DATA_REQ>
    length                       u16    u16    length                       |input;|
    reserved1                    u8     u8     reserved1                    |input;|
    nasMsgSn                     u8     u8     nasMsgSn                     |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMMAS_DATA_REQ>


<sub T_EMMAS_DATA_IND>
    length         u16    u16    length         |input;|
    reserved2[2]   array  u8     reserved2      |multiedit;|
    nasMessage[0]  array  u8     nasMessage     |multiedit;|
</sub T_EMMAS_DATA_IND>


<sub T_EMMAS_DATA_CNF>
    stateFlag  u8  u8  stateFlag  |input;|
    cnfNum     u8  u8  cnfNum     |input;|
    nasMsgSn   u8  u8  nasMsgSn   |input;|
    reserved1  u8  u8  reserved1  |input;|
</sub T_EMMAS_DATA_CNF>


<sub T_EMMAS_CP_REESTAB_REQ>
    cellIdentity[4]  array  u8     cellIdentity     |multiedit;|
</sub T_EMMAS_CP_REESTAB_REQ>


<sub T_EMMAS_CP_REESTAB_CNF>
    result        u8     u8     result        |input;|
    ulNASCount    u8     u8     ulNASCount    |input;|
    reserved2[2]  array  u8     reserved2     |multiedit;|
    ulNASMAC[2]   array  u8     ulNASMAC      |multiedit;|
    xDlNASMAC[2]  array  u8     xDlNASMAC     |multiedit;|
</sub T_EMMAS_CP_REESTAB_CNF>


<0x4026 OP_EMMAS_ESTABLISH_REQ>
    signalHeader         struct                 T_MsgHeader            
    EMMAS_ESTABLISH_REQ  struct                 T_EMMAS_ESTABLISH_REQ  
</0x4026 OP_EMMAS_ESTABLISH_REQ>


<0x4025 OP_EMMAS_ESTABLISH_CNF>
    signalHeader         struct                 T_MsgHeader            
    EMMAS_ESTABLISH_CNF  struct                 T_EMMAS_ESTABLISH_CNF  
</0x4025 OP_EMMAS_ESTABLISH_CNF>


<0x4027 OP_EMMAS_RELEASE_REQ>
    signalHeader       struct               T_MsgHeader          
    EMMAS_RELEASE_REQ  struct               T_EMMAS_RELEASE_REQ  
</0x4027 OP_EMMAS_RELEASE_REQ>


<0x4020 OP_EMMAS_RELEASE_IND>
    signalHeader       struct               T_MsgHeader          
    EMMAS_RELEASE_IND  struct               T_EMMAS_RELEASE_IND  
</0x4020 OP_EMMAS_RELEASE_IND>


<0x4024 OP_EMMAS_PAGE_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_PAGE_IND  struct            T_EMMAS_PAGE_IND  
</0x4024 OP_EMMAS_PAGE_IND>


<0x4021 OP_EMMAS_SYNC_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_SYNC_IND  struct            T_EMMAS_SYNC_IND  
</0x4021 OP_EMMAS_SYNC_IND>


<0x4028 OP_EMMAS_DATA_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_REQ  struct            T_EMMAS_DATA_REQ  
</0x4028 OP_EMMAS_DATA_REQ>


<0x4022 OP_EMMAS_DATA_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_IND  struct            T_EMMAS_DATA_IND  
</0x4022 OP_EMMAS_DATA_IND>


<0x4023 OP_EMMAS_DATA_CNF>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_CNF  struct            T_EMMAS_DATA_CNF  
</0x4023 OP_EMMAS_DATA_CNF>


<0x403d OP_EMMAS_CP_REESTAB_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMMAS_CP_REESTAB_REQ  struct                  T_EMMAS_CP_REESTAB_REQ  
</0x403d OP_EMMAS_CP_REESTAB_REQ>


<0x403e OP_EMMAS_CP_REESTAB_CNF>
    signalHeader          struct                  T_MsgHeader             
    EMMAS_CP_REESTAB_CNF  struct                  T_EMMAS_CP_REESTAB_CNF  
</0x403e OP_EMMAS_CP_REESTAB_CNF>


<0x0e70 OP_EMMAS_PS_SIGNALLING_START_REQ>
</0x0e70 OP_EMMAS_PS_SIGNALLING_START_REQ>


<0x0e71 OP_EMMAS_PS_SIGNALLING_END_REQ>
</0x0e71 OP_EMMAS_PS_SIGNALLING_END_REQ>


<sub T_RABMAS_ESTABLISH_IND>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_RABMAS_ESTABLISH_IND>


<sub T_RABMAS_ESTABLISH_RSP>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_RABMAS_ESTABLISH_RSP>


<sub T_RABMAS_ESTABLISH_REJ>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_RABMAS_ESTABLISH_REJ>


<sub T_RABMAS_RELEASE_IND>
    rabNum                u8              u8              rabNum                |input;|
    rabList[maxRABsetup]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_RABMAS_RELEASE_IND>


<sub T_RABMAS_STATUS_IND>
    cause  u8  u8  cause  |input;|
</sub T_RABMAS_STATUS_IND>


<0xffff OP_RABMAS_ESTABLISH_IND>
    signalHeader          struct                  T_MsgHeader             
    RABMAS_ESTABLISH_IND  struct                  T_RABMAS_ESTABLISH_IND  
</0xffff OP_RABMAS_ESTABLISH_IND>


<0xffff OP_RABMAS_ESTABLISH_RSP>
    signalHeader          struct                  T_MsgHeader             
    RABMAS_ESTABLISH_RSP  struct                  T_RABMAS_ESTABLISH_RSP  
</0xffff OP_RABMAS_ESTABLISH_RSP>


<0xffff OP_RABMAS_ESTABLISH_REJ>
    signalHeader          struct                  T_MsgHeader             
    RABMAS_ESTABLISH_REJ  struct                  T_RABMAS_ESTABLISH_REJ  
</0xffff OP_RABMAS_ESTABLISH_REJ>


<0xffff OP_RABMAS_RELEASE_IND>
    signalHeader        struct                T_MsgHeader           
    RABMAS_RELEASE_IND  struct                T_RABMAS_RELEASE_IND  
</0xffff OP_RABMAS_RELEASE_IND>


<0xffff OP_RABMAS_STATUS_IND>
    signalHeader       struct               T_MsgHeader          
    RABMAS_STATUS_IND  struct               T_RABMAS_STATUS_IND  
</0xffff OP_RABMAS_STATUS_IND>


<0xffff OP_RABMAS_RELEASE_RSP>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_RABMAS_RELEASE_RSP>


<0x413c OP_EMAC_ERRC_DATA_INACTIVE_IND>
    signalHeader  struct       T_MsgHeader  
</0x413c OP_EMAC_ERRC_DATA_INACTIVE_IND>


<0x440f OP_EL1_OUT_OF_SERVICE_IND>
    signalHeader  struct       T_MsgHeader  
</0x440f OP_EL1_OUT_OF_SERVICE_IND>


<0x4137 OP_EL1_PP_TIMEOUT_IND>
    ucTimerId  struct              E_Emac_Pp_Timer_Id  
</0x4137 OP_EL1_PP_TIMEOUT_IND>


<sub T_MobiErr>
    indexId      u16  u16  indexId      |input;|
    causeSelect  u8   u8   causeSelect  |input;|
    sw1          u8   u8   sw1          |input;|
    sw2          u8   u8   sw2          |input;|
</sub T_MobiErr>


<0xffff OP_MobiErr>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0xffff OP_MobiErr>


<sub T_MOBI_SAP_INIT_REQ>
    startUpInfo  u8  u8  startUpInfo  |input;|
</sub T_MOBI_SAP_INIT_REQ>


<0xffff OP_MOBI_SAP_INIT_REQ>
    signalHeader       struct               T_MsgHeader          
    MOBI_SAP_INIT_REQ  struct               T_MOBI_SAP_INIT_REQ  
</0xffff OP_MOBI_SAP_INIT_REQ>


<sub T_MOBI_SAP_SIM_CARD_IN_IND>
    uPinInfo  u8  u8  uPinInfo  |input;|
</sub T_MOBI_SAP_SIM_CARD_IN_IND>


<0xffff OP_MOBI_SAP_SIM_CARD_IN_IND>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_SIM_CARD_IN_IND  struct                      T_MOBI_SAP_SIM_CARD_IN_IND  
</0xffff OP_MOBI_SAP_SIM_CARD_IN_IND>


<sub T_MOBI_SAP_SIM_CARD_OUT_IND>
    causeSelect  u8  u8  causeSelect  |input;|
    cause        u8  u8  cause        |input;|
</sub T_MOBI_SAP_SIM_CARD_OUT_IND>


<0xffff OP_MOBI_SAP_SIM_CARD_OUT_IND>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_SIM_CARD_OUT_IND  struct                       T_MOBI_SAP_SIM_CARD_OUT_IND  
</0xffff OP_MOBI_SAP_SIM_CARD_OUT_IND>


<sub T_MOBI_SAP_ERROR_IND>
    causeSelect  u8  u8  causeSelect  |input;|
    cause        u8  u8  cause        |input;|
</sub T_MOBI_SAP_ERROR_IND>


<0xffff OP_MOBI_SAP_ERROR_IND>
    signalHeader        struct                T_MsgHeader           
    MOBI_SAP_ERROR_IND  struct                T_MOBI_SAP_ERROR_IND  
</0xffff OP_MOBI_SAP_ERROR_IND>


<0xffff OP_MOBI_SAP_DEACTIVATE_CARD_REQ>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_DEACTIVATE_CARD_REQ>


<0xffff OP_MOBI_SAP_DEACTIVATE_CARD_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_DEACTIVATE_CARD_CNF>


<sub T_MOBI_SAP_PIN_VERIFY_REQ>
    pinId                   u8     u8     pinId                   |input;|
    pinCode[SIM_LEN_CHV+1]  array  ascii  pinCode                 |multiedit;|
</sub T_MOBI_SAP_PIN_VERIFY_REQ>


<0xffff OP_MOBI_SAP_PIN_VERIFY_REQ>
    signalHeader             struct                     T_MsgHeader                
    MOBI_SAP_PIN_VERIFY_REQ  struct                     T_MOBI_SAP_PIN_VERIFY_REQ  
</0xffff OP_MOBI_SAP_PIN_VERIFY_REQ>


<0xffff OP_MOBI_SAP_PIN_VERIFY_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_PIN_VERIFY_CNF>


<sub T_MOBI_SAP_PIN_UNBLOCK_REQ>
    pukId                   u8     u8     pukId                   |input;|
    pukCode[SIM_LEN_CHV+1]  array  ascii  pukCode                 |multiedit;|
    pinCode[SIM_LEN_CHV+1]  array  ascii  pinCode                 |multiedit;|
</sub T_MOBI_SAP_PIN_UNBLOCK_REQ>


<0xffff OP_MOBI_SAP_PIN_UNBLOCK_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_PIN_UNBLOCK_REQ  struct                      T_MOBI_SAP_PIN_UNBLOCK_REQ  
</0xffff OP_MOBI_SAP_PIN_UNBLOCK_REQ>


<0xffff OP_MOBI_SAP_PIN_UNBLOCK_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_PIN_UNBLOCK_CNF>


<sub T_MOBI_SAP_PIN_CHANGE_REQ>
    pinId                      u8     u8     pinId                      |input;|
    pinCode[SIM_LEN_CHV+1]     array  ascii  pinCode                    |multiedit;|
    newPinCode[SIM_LEN_CHV+1]  array  ascii  newPinCode                 |multiedit;|
</sub T_MOBI_SAP_PIN_CHANGE_REQ>


<0xffff OP_MOBI_SAP_PIN_CHANGE_REQ>
    signalHeader             struct                     T_MsgHeader                
    MOBI_SAP_PIN_CHANGE_REQ  struct                     T_MOBI_SAP_PIN_CHANGE_REQ  
</0xffff OP_MOBI_SAP_PIN_CHANGE_REQ>


<0xffff OP_MOBI_SAP_PIN_CHANGE_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_PIN_CHANGE_CNF>


<sub T_MOBI_SAP_PIN_ENABLE_REQ>
    pinId                   u8     u8     pinId                   |input;|
    pinCode[SIM_LEN_CHV+1]  array  ascii  pinCode                 |multiedit;|
</sub T_MOBI_SAP_PIN_ENABLE_REQ>


<0xffff OP_MOBI_SAP_PIN_ENABLE_REQ>
    signalHeader             struct                     T_MsgHeader                
    MOBI_SAP_PIN_ENABLE_REQ  struct                     T_MOBI_SAP_PIN_ENABLE_REQ  
</0xffff OP_MOBI_SAP_PIN_ENABLE_REQ>


<0xffff OP_MOBI_SAP_PIN_ENABLE_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_PIN_ENABLE_CNF>


<sub T_MOBI_SAP_PIN_DISABLE_REQ>
    pinId                   u8     u8     pinId                   |input;|
    pinCode[SIM_LEN_CHV+1]  array  ascii  pinCode                 |multiedit;|
</sub T_MOBI_SAP_PIN_DISABLE_REQ>


<0xffff OP_MOBI_SAP_PIN_DISABLE_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_PIN_DISABLE_REQ  struct                      T_MOBI_SAP_PIN_DISABLE_REQ  
</0xffff OP_MOBI_SAP_PIN_DISABLE_REQ>


<0xffff OP_MOBI_SAP_PIN_DISABLE_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_PIN_DISABLE_CNF>


<sub T_MOBI_SAP_PIN_REPLACE_REQ>
    pinCode[SIM_LEN_CHV+1]  array  ascii  pinCode                 |multiedit;|
</sub T_MOBI_SAP_PIN_REPLACE_REQ>


<0xffff OP_MOBI_SAP_PIN_REPLACE_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_PIN_REPLACE_REQ  struct                      T_MOBI_SAP_PIN_REPLACE_REQ  
</0xffff OP_MOBI_SAP_PIN_REPLACE_REQ>


<0xffff OP_MOBI_SAP_PIN_REPLACE_CNF>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_MOBI_SAP_PIN_REPLACE_CNF>


<sub T_MOBI_SAP_AUTHENTICATE_REQ>
    authContextId                         u8     u8     authContextId                         |input;|
    length                                u8     u8     length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_REQ_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_REQ>


<0x1717 OP_MOBI_SAP_AUTHENTICATE_REQ>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_AUTHENTICATE_REQ  struct                       T_MOBI_SAP_AUTHENTICATE_REQ  
</0x1717 OP_MOBI_SAP_AUTHENTICATE_REQ>


<sub T_MOBI_SAP_AUTHENTICATE_CNF>
    length                                u16    u16    length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_RSP_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_CNF>


<0x1718 OP_MOBI_SAP_AUTHENTICATE_CNF>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_AUTHENTICATE_CNF  struct                       T_MOBI_SAP_AUTHENTICATE_CNF  
</0x1718 OP_MOBI_SAP_AUTHENTICATE_CNF>


<sub T_MOBI_SAP_ODD_AUTHENTICATE_REQ>
    authContextId                         u8     u8     authContextId                         |input;|
    lastSegmentId                         u8     u8     lastSegmentId                         |input;|
    length                                u8     u8     length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_REQ_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_ODD_AUTHENTICATE_REQ>


<0xffff OP_MOBI_SAP_ODD_AUTHENTICATE_REQ>
    signalHeader                   struct                           T_MsgHeader                      
    MOBI_SAP_ODD_AUTHENTICATE_REQ  struct                           T_MOBI_SAP_ODD_AUTHENTICATE_REQ  
</0xffff OP_MOBI_SAP_ODD_AUTHENTICATE_REQ>


<sub T_MOBI_SAP_ODD_AUTHENTICATE_CNF>
    authRspFlag                           u8     u8     authRspFlag                           |input;|
    lastSegmentId                         u8     u8     lastSegmentId                         |input;|
    length                                u16    u16    length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_RSP_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_ODD_AUTHENTICATE_CNF>


<0xffff OP_MOBI_SAP_ODD_AUTHENTICATE_CNF>
    signalHeader                   struct                           T_MsgHeader                      
    MOBI_SAP_ODD_AUTHENTICATE_CNF  struct                           T_MOBI_SAP_ODD_AUTHENTICATE_CNF  
</0xffff OP_MOBI_SAP_ODD_AUTHENTICATE_CNF>


<sub T_MOBI_SAP_FILE_ENQUIRE_REQ>
    indexId                                  u16    u16    indexId                                  |input;|
    offsetVal                                u8     u8     offsetVal                                |input;|
    lengthPattern                            u8     u8     lengthPattern                            |input;|
    seekPattern[SIM_MAX_LEN_SEARCH_PATTERN]  array  u8     seekPattern                              |multiedit;|
</sub T_MOBI_SAP_FILE_ENQUIRE_REQ>


<0xffff OP_MOBI_SAP_FILE_ENQUIRE_REQ>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_FILE_ENQUIRE_REQ  struct                       T_MOBI_SAP_FILE_ENQUIRE_REQ  
</0xffff OP_MOBI_SAP_FILE_ENQUIRE_REQ>


<sub T_MOBI_SAP_FILE_ENQUIRE_CNF>
    indexId                             u16    u16    indexId                             |input;|
    lengthInfo                          u8     u8     lengthInfo                          |input;|
    fileInfo[SIM_MAX_LEN_STATUS]        array  u8     fileInfo                            |multiedit;|
    seekNumber                          u8     u8     seekNumber                          |input;|
    seekInfo[MAX_SIZE_SEEK_RECORD_NUM]  array  u8     seekInfo                            |multiedit;|
</sub T_MOBI_SAP_FILE_ENQUIRE_CNF>


<0xffff OP_MOBI_SAP_FILE_ENQUIRE_CNF>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_FILE_ENQUIRE_CNF  struct                       T_MOBI_SAP_FILE_ENQUIRE_CNF  
</0xffff OP_MOBI_SAP_FILE_ENQUIRE_CNF>


<sub T_MOBI_SAP_FILL_SST_REQ>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILL_SST_REQ>


<0xffff OP_MOBI_SAP_FILL_SST_REQ>
    signalHeader           struct                   T_MsgHeader              
    MOBI_SAP_FILL_SST_REQ  struct                   T_MOBI_SAP_FILL_SST_REQ  
</0xffff OP_MOBI_SAP_FILL_SST_REQ>


<sub T_MOBI_SAP_FILL_SST_CNF>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILL_SST_CNF>


<0xffff OP_MOBI_SAP_FILL_SST_CNF>
    signalHeader           struct                   T_MsgHeader              
    MOBI_SAP_FILL_SST_CNF  struct                   T_MOBI_SAP_FILL_SST_CNF  
</0xffff OP_MOBI_SAP_FILL_SST_CNF>


<sub T_MOBI_SAP_FILES_STATUS_REQ>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILES_STATUS_REQ>


<0x1726 OP_MOBI_SAP_FILES_STATUS_REQ>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_FILES_STATUS_REQ  struct                       T_MOBI_SAP_FILES_STATUS_REQ  
</0x1726 OP_MOBI_SAP_FILES_STATUS_REQ>


<sub T_MOBI_SAP_FILES_STATUS_CNF>
    indexId      u16    u16    indexId      |input;|
    fileExist    u8     u8     fileExist    |input;|
    status[256]  array  u8     status       |multiedit;|
</sub T_MOBI_SAP_FILES_STATUS_CNF>


<0x1727 OP_MOBI_SAP_FILES_STATUS_CNF>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_FILES_STATUS_CNF  struct                       T_MOBI_SAP_FILES_STATUS_CNF  
</0x1727 OP_MOBI_SAP_FILES_STATUS_CNF>


<sub T_MOBI_SAP_RECORD_READ_REQ>
    indexId       u16  u16  indexId       |input;|
    recordNumber  u8   u8   recordNumber  |input;|
    expLen        u8   u8   expLen        |input;|
</sub T_MOBI_SAP_RECORD_READ_REQ>


<0x1728 OP_MOBI_SAP_RECORD_READ_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_RECORD_READ_REQ  struct                      T_MOBI_SAP_RECORD_READ_REQ  
</0x1728 OP_MOBI_SAP_RECORD_READ_REQ>


<sub T_MOBI_SAP_RECORD_READ_CNF>
    indexId                               u16    u16    indexId                               |input;|
    recordNumber                          u8     u8     recordNumber                          |input;|
    lengthOfRecord                        u8     u8     lengthOfRecord                        |input;|
    recordData[SIM_MAX_SIZE_RECORD_DATA]  array  u8     recordData                            |multiedit;|
</sub T_MOBI_SAP_RECORD_READ_CNF>


<0x1729 OP_MOBI_SAP_RECORD_READ_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_RECORD_READ_CNF  struct                      T_MOBI_SAP_RECORD_READ_CNF  
</0x1729 OP_MOBI_SAP_RECORD_READ_CNF>


<sub T_MOBI_SAP_RECORD_UPDATE_REQ>
    indexId                               u16    u16    indexId                               |input;|
    recordNumber                          u8     u8     recordNumber                          |input;|
    lengthOfRecord                        u8     u8     lengthOfRecord                        |input;|
    recordData[SIM_MAX_SIZE_RECORD_DATA]  array  u8     recordData                            |multiedit;|
</sub T_MOBI_SAP_RECORD_UPDATE_REQ>


<0x172b OP_MOBI_SAP_RECORD_UPDATE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RECORD_UPDATE_REQ  struct                        T_MOBI_SAP_RECORD_UPDATE_REQ  
</0x172b OP_MOBI_SAP_RECORD_UPDATE_REQ>


<sub T_MOBI_SAP_RECORD_UPDATE_CNF>
    indexId       u16  u16  indexId       |input;|
    recordNumber  u8   u8   recordNumber  |input;|
</sub T_MOBI_SAP_RECORD_UPDATE_CNF>


<0x172c OP_MOBI_SAP_RECORD_UPDATE_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RECORD_UPDATE_CNF  struct                        T_MOBI_SAP_RECORD_UPDATE_CNF  
</0x172c OP_MOBI_SAP_RECORD_UPDATE_CNF>


<sub T_MOBI_SAP_RECORD_INCREASE_REQ>
    indexId                              u16    u16    indexId                              |input;|
    length                               u8     u8     length                               |input;|
    valueAdd[MAX_SIZE_VALUE_ADD_RECORD]  array  u8     valueAdd                             |multiedit;|
</sub T_MOBI_SAP_RECORD_INCREASE_REQ>


<0xffff OP_MOBI_SAP_RECORD_INCREASE_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    MOBI_SAP_RECORD_INCREASE_REQ  struct                          T_MOBI_SAP_RECORD_INCREASE_REQ  
</0xffff OP_MOBI_SAP_RECORD_INCREASE_REQ>


<sub T_MOBI_SAP_RECORD_INCREASE_CNF>
    indexId                                     u16    u16    indexId                                     |input;|
    length                                      u8     u8     length                                      |input;|
    valueAdd[MAX_SIZE_VALUE_ADD_RECORD]         array  u8     valueAdd                                    |multiedit;|
    lengthOfRecord                              u8     u8     lengthOfRecord                              |input;|
    recordIncreased[MAX_SIZE_INCREASED_RECORD]  array  u8     recordIncreased                             |multiedit;|
</sub T_MOBI_SAP_RECORD_INCREASE_CNF>


<0xffff OP_MOBI_SAP_RECORD_INCREASE_CNF>
    signalHeader                  struct                          T_MsgHeader                     
    MOBI_SAP_RECORD_INCREASE_CNF  struct                          T_MOBI_SAP_RECORD_INCREASE_CNF  
</0xffff OP_MOBI_SAP_RECORD_INCREASE_CNF>


<sub T_MOBI_SAP_BINARY_READ_REQ>
    indexId      u16  u16  indexId      |input;|
    offsetVal    u16  u16  offsetVal    |input;|
    excpDataLen  u8   u8   excpDataLen  |input;|
</sub T_MOBI_SAP_BINARY_READ_REQ>


<0x1731 OP_MOBI_SAP_BINARY_READ_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_BINARY_READ_REQ  struct                      T_MOBI_SAP_BINARY_READ_REQ  
</0x1731 OP_MOBI_SAP_BINARY_READ_REQ>


<sub T_MOBI_SAP_BINARY_READ_CNF>
    indexId                                 u16    u16    indexId                                 |input;|
    binaryData[SIM_MAX_SIZE_BIN_DATA_READ]  array  u8     binaryData                              |multiedit;|
</sub T_MOBI_SAP_BINARY_READ_CNF>


<0x1732 OP_MOBI_SAP_BINARY_READ_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_BINARY_READ_CNF  struct                      T_MOBI_SAP_BINARY_READ_CNF  
</0x1732 OP_MOBI_SAP_BINARY_READ_CNF>


<sub T_MOBI_SAP_BINARY_UPDATE_REQ>
    indexId                                   u16    u16    indexId                                   |input;|
    offsetVal                                 u16    u16    offsetVal                                 |input;|
    lengthData                                u8     u8     lengthData                                |input;|
    binaryData[SIM_MAX_SIZE_BIN_DATA_UPDATE]  array  u8     binaryData                                |multiedit;|
</sub T_MOBI_SAP_BINARY_UPDATE_REQ>


<0x1734 OP_MOBI_SAP_BINARY_UPDATE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_BINARY_UPDATE_REQ  struct                        T_MOBI_SAP_BINARY_UPDATE_REQ  
</0x1734 OP_MOBI_SAP_BINARY_UPDATE_REQ>


<sub T_MOBI_SAP_BINARY_UPDATE_CNF>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_BINARY_UPDATE_CNF>


<0x1735 OP_MOBI_SAP_BINARY_UPDATE_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_BINARY_UPDATE_CNF  struct                        T_MOBI_SAP_BINARY_UPDATE_CNF  
</0x1735 OP_MOBI_SAP_BINARY_UPDATE_CNF>


<sub T_MOBI_SAP_SIM_SESSION_REQ>
    sessionType  u8  u8  sessionType  |input;|
</sub T_MOBI_SAP_SIM_SESSION_REQ>


<0xffff OP_MOBI_SAP_SIM_SESSION_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_SIM_SESSION_REQ  struct                      T_MOBI_SAP_SIM_SESSION_REQ  
</0xffff OP_MOBI_SAP_SIM_SESSION_REQ>


<sub T_MOBI_SAP_PRESENCE_DETE_REQ>
    detectiveStatus  u8  u8  detectiveStatus  |input;|
</sub T_MOBI_SAP_PRESENCE_DETE_REQ>


<0xffff OP_MOBI_SAP_PRESENCE_DETE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_PRESENCE_DETE_REQ  struct                        T_MOBI_SAP_PRESENCE_DETE_REQ  
</0xffff OP_MOBI_SAP_PRESENCE_DETE_REQ>


<sub T_MOBI_SAP_PROACTIVE_POLLING_REQ>
    timeInTicks  u32  u32  timeInTicks  |input;|
</sub T_MOBI_SAP_PROACTIVE_POLLING_REQ>


<0xffff OP_MOBI_SAP_PROACTIVE_POLLING_REQ>
    signalHeader                    struct                            T_MsgHeader                       
    MOBI_SAP_PROACTIVE_POLLING_REQ  struct                            T_MOBI_SAP_PROACTIVE_POLLING_REQ  
</0xffff OP_MOBI_SAP_PROACTIVE_POLLING_REQ>


<sub T_MOBI_SAP_OPEN_CHANNEL_REQ>
    length                   u8     u8     length                   |input;|
    dfName[SAP_MAX_AID_LEN]  array  u8     dfName                   |multiedit;|
</sub T_MOBI_SAP_OPEN_CHANNEL_REQ>


<0xffff OP_MOBI_SAP_OPEN_CHANNEL_REQ>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_OPEN_CHANNEL_REQ  struct                       T_MOBI_SAP_OPEN_CHANNEL_REQ  
</0xffff OP_MOBI_SAP_OPEN_CHANNEL_REQ>


<sub T_MOBI_SAP_OPEN_CHANNEL_CNF>
    sessionId  u8  u8  sessionId  |input;|
</sub T_MOBI_SAP_OPEN_CHANNEL_CNF>


<0xffff OP_MOBI_SAP_OPEN_CHANNEL_CNF>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_OPEN_CHANNEL_CNF  struct                       T_MOBI_SAP_OPEN_CHANNEL_CNF  
</0xffff OP_MOBI_SAP_OPEN_CHANNEL_CNF>


<sub T_MOBI_SAP_CLOSE_CHANNEL_REQ>
    sessionId  u8  u8  sessionId  |input;|
</sub T_MOBI_SAP_CLOSE_CHANNEL_REQ>


<0xffff OP_MOBI_SAP_CLOSE_CHANNEL_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_CLOSE_CHANNEL_REQ  struct                        T_MOBI_SAP_CLOSE_CHANNEL_REQ  
</0xffff OP_MOBI_SAP_CLOSE_CHANNEL_REQ>


<sub T_MOBI_SAP_CLOSE_CHANNEL_CNF>
    sessionId  u8  u8  sessionId  |input;|
</sub T_MOBI_SAP_CLOSE_CHANNEL_CNF>


<0xffff OP_MOBI_SAP_CLOSE_CHANNEL_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_CLOSE_CHANNEL_CNF  struct                        T_MOBI_SAP_CLOSE_CHANNEL_CNF  
</0xffff OP_MOBI_SAP_CLOSE_CHANNEL_CNF>


<sub T_MOBI_SAP_RETRIEVE_DATA_REQ>
    indexId                             u16    u16    indexId                             |input;|
    expcDataLen                         u8     u8     expcDataLen                         |input;|
    tag[SAP_MAX_DATA_ORIENTED_TAG_LEN]  array  u8     tag                                 |multiedit;|
</sub T_MOBI_SAP_RETRIEVE_DATA_REQ>


<0xffff OP_MOBI_SAP_RETRIEVE_DATA_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RETRIEVE_DATA_REQ  struct                        T_MOBI_SAP_RETRIEVE_DATA_REQ  
</0xffff OP_MOBI_SAP_RETRIEVE_DATA_REQ>


<sub T_MOBI_SAP_RETRIEVE_DATA_CNF>
    indexId                                   u16    u16    indexId                                   |input;|
    lastBlockId                               u8     u8     lastBlockId                               |input;|
    lengthData                                u16    u16    lengthData                                |input;|
    retrieveData[SIM_MAX_SIZE_DATA_RETRIEVE]  array  u8     retrieveData                              |multiedit;|
</sub T_MOBI_SAP_RETRIEVE_DATA_CNF>


<0xffff OP_MOBI_SAP_RETRIEVE_DATA_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RETRIEVE_DATA_CNF  struct                        T_MOBI_SAP_RETRIEVE_DATA_CNF  
</0xffff OP_MOBI_SAP_RETRIEVE_DATA_CNF>


<sub T_MOBI_SAP_SET_DATA_REQ>
    indexId                         u16    u16    indexId                         |input;|
    firstBlockFlag                  u8     u8     firstBlockFlag                  |input;|
    lengthData                      u8     u8     lengthData                      |input;|
    setData[SIM_MAX_SIZE_DATA_SET]  array  u8     setData                         |multiedit;|
</sub T_MOBI_SAP_SET_DATA_REQ>


<0xffff OP_MOBI_SAP_SET_DATA_REQ>
    signalHeader           struct                   T_MsgHeader              
    MOBI_SAP_SET_DATA_REQ  struct                   T_MOBI_SAP_SET_DATA_REQ  
</0xffff OP_MOBI_SAP_SET_DATA_REQ>


<sub T_MOBI_SAP_SET_DATA_CNF>
    indexId      u16  u16  indexId      |input;|
    lastBlockId  u8   u8   lastBlockId  |input;|
</sub T_MOBI_SAP_SET_DATA_CNF>


<0xffff OP_MOBI_SAP_SET_DATA_CNF>
    signalHeader           struct                   T_MsgHeader              
    MOBI_SAP_SET_DATA_CNF  struct                   T_MOBI_SAP_SET_DATA_CNF  
</0xffff OP_MOBI_SAP_SET_DATA_CNF>


<sub T_MOBI_SAP_SEND_USIM_CMD_REQ>
    sessionId                               u8     u8     sessionId                               |input;|
    command                                 u8     u8     command                                 |input;|
    fileId                                  u16    u16    fileId                                  |input;|
    p1                                      u8     u8     p1                                      |input;|
    p2                                      u8     u8     p2                                      |input;|
    p3                                      u8     u8     p3                                      |input;|
    dataLength                              u8     u8     dataLength                              |input;|
    sendData[SIM_MAX_SIZE_SEND_DATA_ATCMD]  array  u8     sendData                                |multiedit;|
    pathLength                              u8     u8     pathLength                              |input;|
    pathId[SIM_MAX_PATH_DATA_LEN]           array  u8     pathId                                  |multiedit;|
</sub T_MOBI_SAP_SEND_USIM_CMD_REQ>


<0xffff OP_MOBI_SAP_SEND_USIM_CMD_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_SEND_USIM_CMD_REQ  struct                        T_MOBI_SAP_SEND_USIM_CMD_REQ  
</0xffff OP_MOBI_SAP_SEND_USIM_CMD_REQ>


<sub T_MOBI_SAP_SEND_USIM_CMD_CNF>
    causeSelect                               u8     u8     causeSelect                               |input;|
    sw1                                       u8     u8     sw1                                       |input;|
    sw2                                       u8     u8     sw2                                       |input;|
    dataLength                                u16    u16    dataLength                                |input;|
    rspData[SIM_MAX_SIZE_RECEIVE_DATA_ATCMD]  array  u8     rspData                                   |multiedit;|
</sub T_MOBI_SAP_SEND_USIM_CMD_CNF>


<0xffff OP_MOBI_SAP_SEND_USIM_CMD_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_SEND_USIM_CMD_CNF  struct                        T_MOBI_SAP_SEND_USIM_CMD_CNF  
</0xffff OP_MOBI_SAP_SEND_USIM_CMD_CNF>


<sub T_MOBI_SAP_ENTRANS_CMD_REQ>
    sessionId                                 u8     u8     sessionId                                 |input;|
    cmdLength                                 u16    u16    cmdLength                                 |input;|
    sendData[SIM_MAX_SIZE_SEND_DATA_ATCMD+5]  array  u8     sendData                                  |multiedit;|
</sub T_MOBI_SAP_ENTRANS_CMD_REQ>


<0xffff OP_MOBI_SAP_ENTRANS_CMD_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_ENTRANS_CMD_REQ  struct                      T_MOBI_SAP_ENTRANS_CMD_REQ  
</0xffff OP_MOBI_SAP_ENTRANS_CMD_REQ>


<sub T_MOBI_SAP_ENTRANS_CMD_CNF>
    causeSelect                                 u8     u8     causeSelect                                 |input;|
    rspLength                                   u16    u16    rspLength                                   |input;|
    rspData[SIM_MAX_SIZE_RECEIVE_DATA_ATCMD+2]  array  u8     rspData                                     |multiedit;|
</sub T_MOBI_SAP_ENTRANS_CMD_CNF>


<0xffff OP_MOBI_SAP_ENTRANS_CMD_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_ENTRANS_CMD_CNF  struct                      T_MOBI_SAP_ENTRANS_CMD_CNF  
</0xffff OP_MOBI_SAP_ENTRANS_CMD_CNF>


<sub T_MOBI_SAP_FILE_INVALIDATE_REQ>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILE_INVALIDATE_REQ>


<0xffff OP_MOBI_SAP_FILE_INVALIDATE_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    MOBI_SAP_FILE_INVALIDATE_REQ  struct                          T_MOBI_SAP_FILE_INVALIDATE_REQ  
</0xffff OP_MOBI_SAP_FILE_INVALIDATE_REQ>


<sub T_MOBI_SAP_FILE_INVALIDATE_CNF>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILE_INVALIDATE_CNF>


<0xffff OP_MOBI_SAP_FILE_INVALIDATE_CNF>
    signalHeader                  struct                          T_MsgHeader                     
    MOBI_SAP_FILE_INVALIDATE_CNF  struct                          T_MOBI_SAP_FILE_INVALIDATE_CNF  
</0xffff OP_MOBI_SAP_FILE_INVALIDATE_CNF>


<sub T_MOBI_SAP_FILE_REHABILITATE_REQ>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILE_REHABILITATE_REQ>


<0xffff OP_MOBI_SAP_FILE_REHABILITATE_REQ>
    signalHeader                    struct                            T_MsgHeader                       
    MOBI_SAP_FILE_REHABILITATE_REQ  struct                            T_MOBI_SAP_FILE_REHABILITATE_REQ  
</0xffff OP_MOBI_SAP_FILE_REHABILITATE_REQ>


<sub T_MOBI_SAP_FILE_REHABILITATE_CNF>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_FILE_REHABILITATE_CNF>


<0xffff OP_MOBI_SAP_FILE_REHABILITATE_CNF>
    signalHeader                    struct                            T_MsgHeader                       
    MOBI_SAP_FILE_REHABILITATE_CNF  struct                            T_MOBI_SAP_FILE_REHABILITATE_CNF  
</0xffff OP_MOBI_SAP_FILE_REHABILITATE_CNF>


<sub T_MOBI_SAP_ENVELOPE_REQ>
    lengthData                        u8     u8     lengthData                        |input;|
    envParam[MAX_SIZE_ENV_PARAM_STK]  array  u8     envParam                          |multiedit;|
    receiveRsp                        u8     u8     receiveRsp                        |input;|
</sub T_MOBI_SAP_ENVELOPE_REQ>


<0xffff OP_MOBI_SAP_ENVELOPE_REQ>
    signalHeader           struct                   T_MsgHeader              
    MOBI_SAP_ENVELOPE_REQ  struct                   T_MOBI_SAP_ENVELOPE_REQ  
</0xffff OP_MOBI_SAP_ENVELOPE_REQ>


<sub T_MOBI_SAP_ENVELOPE_CNF>
    sw1                             u8     u8     sw1                             |input;|
    sw2                             u8     u8     sw2                             |input;|
    lengthData                      u16    u16    lengthData                      |input;|
    ackData[MAX_SIZE_ACK_DATA_STK]  array  u8     ackData                         |multiedit;|
</sub T_MOBI_SAP_ENVELOPE_CNF>


<0xffff OP_MOBI_SAP_ENVELOPE_CNF>
    signalHeader           struct                   T_MsgHeader              
    MOBI_SAP_ENVELOPE_CNF  struct                   T_MOBI_SAP_ENVELOPE_CNF  
</0xffff OP_MOBI_SAP_ENVELOPE_CNF>


<sub T_MOBI_SAP_TERMINAL_PROFILE_REQ>
    lengthData                               u8     u8     lengthData                               |input;|
    terminalProfile[MAX_SIZE_TERM_PROF_STK]  array  u8     terminalProfile                          |multiedit;|
</sub T_MOBI_SAP_TERMINAL_PROFILE_REQ>


<0xffff OP_MOBI_SAP_TERMINAL_PROFILE_REQ>
    signalHeader                   struct                           T_MsgHeader                      
    MOBI_SAP_TERMINAL_PROFILE_REQ  struct                           T_MOBI_SAP_TERMINAL_PROFILE_REQ  
</0xffff OP_MOBI_SAP_TERMINAL_PROFILE_REQ>


<sub T_MOBI_SAP_TERMINAL_PROFILE_CNF>
    proactiveSession  u8  u8  proactiveSession  |input;|
</sub T_MOBI_SAP_TERMINAL_PROFILE_CNF>


<0xffff OP_MOBI_SAP_TERMINAL_PROFILE_CNF>
    signalHeader                   struct                           T_MsgHeader                      
    MOBI_SAP_TERMINAL_PROFILE_CNF  struct                           T_MOBI_SAP_TERMINAL_PROFILE_CNF  
</0xffff OP_MOBI_SAP_TERMINAL_PROFILE_CNF>


<sub T_MOBI_SAP_TERMINAL_RESPONSE_REQ>
    lengthData                                u8     u8     lengthData                                |input;|
    terminalResponse[MAX_SIZE_TERM_RESP_STK]  array  u8     terminalResponse                          |multiedit;|
</sub T_MOBI_SAP_TERMINAL_RESPONSE_REQ>


<0xffff OP_MOBI_SAP_TERMINAL_RESPONSE_REQ>
    signalHeader                    struct                            T_MsgHeader                       
    MOBI_SAP_TERMINAL_RESPONSE_REQ  struct                            T_MOBI_SAP_TERMINAL_RESPONSE_REQ  
</0xffff OP_MOBI_SAP_TERMINAL_RESPONSE_REQ>


<sub T_MOBI_SAP_TERMINAL_RESPONSE_CNF>
    proactiveSession  u8  u8  proactiveSession  |input;|
</sub T_MOBI_SAP_TERMINAL_RESPONSE_CNF>


<0xffff OP_MOBI_SAP_TERMINAL_RESPONSE_CNF>
    signalHeader                    struct                            T_MsgHeader                       
    MOBI_SAP_TERMINAL_RESPONSE_CNF  struct                            T_MOBI_SAP_TERMINAL_RESPONSE_CNF  
</0xffff OP_MOBI_SAP_TERMINAL_RESPONSE_CNF>


<sub T_MOBI_SAP_SIM_TOOLKIT_IND>
    lengthData                          u16    u16    lengthData                          |input;|
    toolkitCmd[MAX_SIZE_POACT_CMD_STK]  array  u8     toolkitCmd                          |multiedit;|
</sub T_MOBI_SAP_SIM_TOOLKIT_IND>


<0xffff OP_MOBI_SAP_SIM_TOOLKIT_IND>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_SIM_TOOLKIT_IND  struct                      T_MOBI_SAP_SIM_TOOLKIT_IND  
</0xffff OP_MOBI_SAP_SIM_TOOLKIT_IND>


<sub T_SMREG_EPS_ACTIVATE_REQ>
    nsapi                u8            u8            nsapi                |input;|
    smIndex              u8            u8            smIndex              |input;|
    cid                  u8            u8            cid                  |input;|
    ebi                  u8            u8            ebi                  |input;|
    linkedEbi            u8            u8            linkedEbi            |input;|
    nSlpi                u8            u8            nSlpi                |input;|
    epsQosLen            u8            u8            epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array         u8            epsQos               |multiedit;|
    apnLen               u8            u8            apnLen               |input;|
    apn[MAX_APN_LEN]     array         u8            apn                  |multiedit;|
    pcoLen               u16           u16           pcoLen               |input;|
    pco[MAX_PCO_LEN]     array         u8            pco                  |multiedit;|
    inAttachProcflag     u8            u8            inAttachProcflag     |input;|
    pdnAddress           struct        T_PdnAddress  
</sub T_SMREG_EPS_ACTIVATE_REQ>


<0x1800 OP_SMREG_EPS_ACTIVATE_REQ>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_REQ  struct                    T_SMREG_EPS_ACTIVATE_REQ  
</0x1800 OP_SMREG_EPS_ACTIVATE_REQ>


<sub T_SMREG_EPS_ACTIVATE_CNF>
    smIndex              u8            u8            smIndex              |input;|
    ebi                  u8            u8            ebi                  |input;|
    linkedEbi            u8            u8            linkedEbi            |input;|
    epsQosLen            u8            u8            epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array         u8            epsQos               |multiedit;|
    apnLen               u8            u8            apnLen               |input;|
    apn[MAX_APN_LEN]     array         u8            apn                  |multiedit;|
    pcoLen               u16           u16           pcoLen               |input;|
    pco[MAX_PCO_LEN]     array         u8            pco                  |multiedit;|
    pdnAddress           struct        T_PdnAddress  
    apnrcAer             u8            u8            apnrcAer             |input;|
    apnrcUnit            u8            u8            apnrcUnit            |input;|
    apnrcRate            u32           u32           apnrcRate            |input;|
</sub T_SMREG_EPS_ACTIVATE_CNF>


<0x1801 OP_SMREG_EPS_ACTIVATE_CNF>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_CNF  struct                    T_SMREG_EPS_ACTIVATE_CNF  
</0x1801 OP_SMREG_EPS_ACTIVATE_CNF>


<sub T_SMREG_EPS_ACTIVATE_ERR>
    smIndex           u8     u8     smIndex           |input;|
    causeSelect       u8     u8     causeSelect       |input;|
    cause             u8     u8     cause             |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_ACTIVATE_ERR>


<0x1802 OP_SMREG_EPS_ACTIVATE_ERR>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_ERR  struct                    T_SMREG_EPS_ACTIVATE_ERR  
</0x1802 OP_SMREG_EPS_ACTIVATE_ERR>


<sub T_SMREG_EPS_ACTIVATE_IND>
    smIndex              u8     u8     smIndex              |input;|
    ebi                  u8     u8     ebi                  |input;|
    linkedEbi            u8     u8     linkedEbi            |input;|
    actType              u8     u8     actType              |input;|
    epsQosLen            u8     u8     epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array  u8     epsQos               |multiedit;|
    tft                  struct T_Tft  
    pcoLen               u16    u16    pcoLen               |input;|
    pco[MAX_PCO_LEN]     array  u8     pco                  |multiedit;|
    apnrcAer             u8     u8     apnrcAer             |input;|
    apnrcUnit            u8     u8     apnrcUnit            |input;|
    apnrcRate            u32    u32    apnrcRate            |input;|
</sub T_SMREG_EPS_ACTIVATE_IND>


<0x1803 OP_SMREG_EPS_ACTIVATE_IND>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_IND  struct                    T_SMREG_EPS_ACTIVATE_IND  
</0x1803 OP_SMREG_EPS_ACTIVATE_IND>


<sub T_SMREG_EPS_ACTIVATE_RSP>
    smIndex           u8     u8     smIndex           |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_ACTIVATE_RSP>


<0x1804 OP_SMREG_EPS_ACTIVATE_RSP>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_RSP  struct                    T_SMREG_EPS_ACTIVATE_RSP  
</0x1804 OP_SMREG_EPS_ACTIVATE_RSP>


<sub T_SMREG_EPS_ACTIVATE_REJ>
    smIndex           u8     u8     smIndex           |input;|
    cause             u8     u8     cause             |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_ACTIVATE_REJ>


<0x1805 OP_SMREG_EPS_ACTIVATE_REJ>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_REJ  struct                    T_SMREG_EPS_ACTIVATE_REJ  
</0x1805 OP_SMREG_EPS_ACTIVATE_REJ>


<sub T_SMREG_EPS_ALLOCATION_REQ>
    smIndex              u8     u8     smIndex              |input;|
    linkedEbi            u8     u8     linkedEbi            |input;|
    tft                  struct T_Tft  
    epsQosLen            u8     u8     epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array  u8     epsQos               |multiedit;|
    pcoLen               u16    u16    pcoLen               |input;|
    pco[MAX_PCO_LEN]     array  u8     pco                  |multiedit;|
</sub T_SMREG_EPS_ALLOCATION_REQ>


<0x1810 OP_SMREG_EPS_ALLOCATION_REQ>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_REQ  struct                      T_SMREG_EPS_ALLOCATION_REQ  
</0x1810 OP_SMREG_EPS_ALLOCATION_REQ>


<sub T_SMREG_EPS_ALLOCATION_CNF>
    smIndex   u8  u8  smIndex   |input;|
    respType  u8  u8  respType  |input;|
</sub T_SMREG_EPS_ALLOCATION_CNF>


<0x1811 OP_SMREG_EPS_ALLOCATION_CNF>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_CNF  struct                      T_SMREG_EPS_ALLOCATION_CNF  
</0x1811 OP_SMREG_EPS_ALLOCATION_CNF>


<sub T_SMREG_EPS_ALLOCATION_ERR>
    smIndex  u8  u8  smIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ALLOCATION_ERR>


<0x1812 OP_SMREG_EPS_ALLOCATION_ERR>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_ERR  struct                      T_SMREG_EPS_ALLOCATION_ERR  
</0x1812 OP_SMREG_EPS_ALLOCATION_ERR>


<sub T_SMREG_EPS_DEACTIVATE_REQ>
    smIndex           u8     u8     smIndex           |input;|
    ebi               u8     u8     ebi               |input;|
    linkedEbi         u8     u8     linkedEbi         |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
    cause             u8     u8     cause             |input;|
    tfa               struct T_Tft  
</sub T_SMREG_EPS_DEACTIVATE_REQ>


<0x1806 OP_SMREG_EPS_DEACTIVATE_REQ>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_REQ  struct                      T_SMREG_EPS_DEACTIVATE_REQ  
</0x1806 OP_SMREG_EPS_DEACTIVATE_REQ>


<sub T_SMREG_EPS_DEACTIVATE_CNF>
    smIndex    u8  u8  smIndex    |input;|
    ebi        u8  u8  ebi        |input;|
    linkedEbi  u8  u8  linkedEbi  |input;|
</sub T_SMREG_EPS_DEACTIVATE_CNF>


<0x1807 OP_SMREG_EPS_DEACTIVATE_CNF>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_CNF  struct                      T_SMREG_EPS_DEACTIVATE_CNF  
</0x1807 OP_SMREG_EPS_DEACTIVATE_CNF>


<sub T_SMREG_EPS_DEACTIVATE_IND>
    smIndex  u8  u8  smIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_DEACTIVATE_IND>


<0x1808 OP_SMREG_EPS_DEACTIVATE_IND>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_IND  struct                      T_SMREG_EPS_DEACTIVATE_IND  
</0x1808 OP_SMREG_EPS_DEACTIVATE_IND>


<sub T_SMREG_EPS_MODIFY_IND>
    smIndex              u8     u8     smIndex              |input;|
    ebi                  u8     u8     ebi                  |input;|
    epsQosLen            u8     u8     epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array  u8     epsQos               |multiedit;|
    pcoLen               u16    u16    pcoLen               |input;|
    pco[MAX_PCO_LEN]     array  u8     pco                  |multiedit;|
    tftFlag              u8     u8     tftFlag              |input;|
    tft                  struct T_Tft  
    apnrcAer             u8     u8     apnrcAer             |input;|
    apnrcUnit            u8     u8     apnrcUnit            |input;|
    apnrcRate            u32    u32    apnrcRate            |input;|
</sub T_SMREG_EPS_MODIFY_IND>


<0x1809 OP_SMREG_EPS_MODIFY_IND>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_IND  struct                  T_SMREG_EPS_MODIFY_IND  
</0x1809 OP_SMREG_EPS_MODIFY_IND>


<sub T_SMREG_EPS_MODIFY_RSP>
    smIndex           u8     u8     smIndex           |input;|
    ebi               u8     u8     ebi               |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_MODIFY_RSP>


<0x180d OP_SMREG_EPS_MODIFY_RSP>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_RSP  struct                  T_SMREG_EPS_MODIFY_RSP  
</0x180d OP_SMREG_EPS_MODIFY_RSP>


<sub T_SMREG_EPS_MODIFY_REJ>
    smIndex           u8     u8     smIndex           |input;|
    ebi               u8     u8     ebi               |input;|
    cause             u8     u8     cause             |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_MODIFY_REJ>


<0x180e OP_SMREG_EPS_MODIFY_REJ>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_REJ  struct                  T_SMREG_EPS_MODIFY_REJ  
</0x180e OP_SMREG_EPS_MODIFY_REJ>


<sub T_SMREG_EPS_MODIFY_REQ>
    smIndex              u8     u8     smIndex              |input;|
    ebi                  u8     u8     ebi                  |input;|
    ebiForPF             u8     u8     ebiForPF             |input;|
    tfa                  struct T_Tft  
    epsQosLen            u8     u8     epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array  u8     epsQos               |multiedit;|
    causeFlag            u8     u8     causeFlag            |input;|
    cause                u8     u8     cause                |input;|
    pcoLen               u16    u16    pcoLen               |input;|
    pco[MAX_PCO_LEN]     array  u8     pco                  |multiedit;|
</sub T_SMREG_EPS_MODIFY_REQ>


<0x180a OP_SMREG_EPS_MODIFY_REQ>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_REQ  struct                  T_SMREG_EPS_MODIFY_REQ  
</0x180a OP_SMREG_EPS_MODIFY_REQ>


<sub T_SMREG_EPS_MODIFY_CNF>
    smIndex              u8     u8     smIndex              |input;|
    ebi                  u8     u8     ebi                  |input;|
    linkedEbi            u8     u8     linkedEbi            |input;|
    epsQosLen            u8     u8     epsQosLen            |input;|
    epsQos[MAX_QOS_LEN]  array  u8     epsQos               |multiedit;|
</sub T_SMREG_EPS_MODIFY_CNF>


<0x180b OP_SMREG_EPS_MODIFY_CNF>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_CNF  struct                  T_SMREG_EPS_MODIFY_CNF  
</0x180b OP_SMREG_EPS_MODIFY_CNF>


<sub T_SMREG_EPS_MODIFY_ERR>
    smIndex           u8     u8     smIndex           |input;|
    ebi               u8     u8     ebi               |input;|
    causeSelect       u8     u8     causeSelect       |input;|
    cause             u8     u8     cause             |input;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_MODIFY_ERR>


<0x180c OP_SMREG_EPS_MODIFY_ERR>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_ERR  struct                  T_SMREG_EPS_MODIFY_ERR  
</0x180c OP_SMREG_EPS_MODIFY_ERR>


<sub T_SMREG_EPS_PDN_CON_IND>
    flagIsEm  u8  u8  flagIsEm  |input;|
</sub T_SMREG_EPS_PDN_CON_IND>


<0x180f OP_SMREG_EPS_PDN_CON_IND>
    signalHeader           struct                   T_MsgHeader              
    SMREG_EPS_PDN_CON_IND  struct                   T_SMREG_EPS_PDN_CON_IND  
</0x180f OP_SMREG_EPS_PDN_CON_IND>


<sub T_SMREG_EPS_DEFAULT_PDN_CONFIG_REQ>
    pdnType           u8     u8     pdnType           |input;|
    apnLen            u8     u8     apnLen            |input;|
    apn[MAX_APN_LEN]  array  u8     apn               |multiedit;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_DEFAULT_PDN_CONFIG_REQ>


<0x1814 OP_SMREG_EPS_DEFAULT_PDN_CONFIG_REQ>
    signalHeader                      struct                              T_MsgHeader                         
    SMREG_EPS_DEFAULT_PDN_CONFIG_REQ  struct                              T_SMREG_EPS_DEFAULT_PDN_CONFIG_REQ  
</0x1814 OP_SMREG_EPS_DEFAULT_PDN_CONFIG_REQ>


<sub T_SMREG_EPS_SMINDEX_IND>
    smIndex  u8  u8  smIndex  |input;|
    nsapi    u8  u8  nsapi    |input;|
    cid      u8  u8  cid      |input;|
</sub T_SMREG_EPS_SMINDEX_IND>


<0x1813 OP_SMREG_EPS_SMINDEX_IND>
    signalHeader           struct                   T_MsgHeader              
    SMREG_EPS_SMINDEX_IND  struct                   T_SMREG_EPS_SMINDEX_IND  
</0x1813 OP_SMREG_EPS_SMINDEX_IND>


<0xffff OP_CAPI_REG_NW_SELMODE_REQ>
</0xffff OP_CAPI_REG_NW_SELMODE_REQ>


<sub T_CAPI_NV_CHANGE_IND>
    changedValue  u8  u8  changedValue  |input;|
</sub T_CAPI_NV_CHANGE_IND>


<0x161f OP_CAPI_NV_CHANGE_IND>
    signalHeader        struct                T_MsgHeader           
    CAPI_NV_CHANGE_IND  struct                T_CAPI_NV_CHANGE_IND  
</0x161f OP_CAPI_NV_CHANGE_IND>


<sub T_CAPI_REG_REGISTRATION_REQ>
    plmnMode    u8  u8  plmnMode    |input;|
    ariMode     u8  u8  ariMode     |input;|
    onlyAttach  u8  u8  onlyAttach  |input;|
    simValid    u8  u8  simValid    |input;|
</sub T_CAPI_REG_REGISTRATION_REQ>


<0x1601 OP_CAPI_REG_REGISTRATION_REQ>
    signalHeader               struct                       T_MsgHeader                  
    CAPI_REG_REGISTRATION_REQ  struct                       T_CAPI_REG_REGISTRATION_REQ  
</0x1601 OP_CAPI_REG_REGISTRATION_REQ>


<sub T_CAPI_REG_REGISTRATION_CNF>
    causeSelect                      u8     u8     causeSelect                      |input;|
    cause                            u8     u8     cause                            |input;|
    reportType                       u8     u8     reportType                       |input;|
    csRegState                       u8     u8     csRegState                       |input;|
    psRegState                       u8     u8     psRegState                       |input;|
    activeTime                       u8     u8     activeTime                       |input;|
    periodicTau                      u8     u8     periodicTau                      |input;|
    edrxEnable                       u8     u8     edrxEnable                       |input;|
    edrxPtw                          u8     u8     edrxPtw                          |input;|
    edrxValue                        u8     u8     edrxValue                        |input;|
    nwSupportedCiot                  u8     u8     nwSupportedCiot                  |input;|
    cellIdentity[4]                  array  u8     cellIdentity                     |multiedit;|
    tac[2]                           array  u8     tac                              |multiedit;|
    selectedPlmn[CAPI_MAX_PLMN_LEN]  array  u8     selectedPlmn                     |multiedit;|
    roaming                          u8     u8     roaming                          |input;|
</sub T_CAPI_REG_REGISTRATION_CNF>


<0x1602 OP_CAPI_REG_REGISTRATION_CNF>
    signalHeader               struct                       T_MsgHeader                  
    CAPI_REG_REGISTRATION_CNF  struct                       T_CAPI_REG_REGISTRATION_CNF  
</0x1602 OP_CAPI_REG_REGISTRATION_CNF>


<sub T_CAPI_REG_DEREGISTRATION_REQ>
    deregType  u8  u8  deregType  |input;|
</sub T_CAPI_REG_DEREGISTRATION_REQ>


<0x1603 OP_CAPI_REG_DEREGISTRATION_REQ>
    signalHeader                 struct                         T_MsgHeader                    
    CAPI_REG_DEREGISTRATION_REQ  struct                         T_CAPI_REG_DEREGISTRATION_REQ  
</0x1603 OP_CAPI_REG_DEREGISTRATION_REQ>


<0x1604 OP_CAPI_REG_DEREGISTRATION_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1604 OP_CAPI_REG_DEREGISTRATION_CNF>


<0x1609 OP_CAPI_REG_AVAIL_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1609 OP_CAPI_REG_AVAIL_PLMN_REQ>


<sub T_CAPI_REG_AVAIL_PLMN_CNF>
    plmnNum                                             u8     u8     plmnNum                                             |input;|
    plmnList[MAX_PLMN_LEN*CAPI_REG_MAX_AVAIL_PLMN_NUM]  array  u8     plmnList                                            |multiedit;|
    plmnListStatus[CAPI_REG_MAX_AVAIL_PLMN_NUM]         array  u8     plmnListStatus                                      |multiedit;|
</sub T_CAPI_REG_AVAIL_PLMN_CNF>


<0x160a OP_CAPI_REG_AVAIL_PLMN_CNF>
    signalHeader             struct                     T_MsgHeader                
    CAPI_REG_AVAIL_PLMN_CNF  struct                     T_CAPI_REG_AVAIL_PLMN_CNF  
</0x160a OP_CAPI_REG_AVAIL_PLMN_CNF>


<sub T_CAPI_REG_AVAIL_PLMN_REJ>
    cause  u8  u8  cause  |input;|
</sub T_CAPI_REG_AVAIL_PLMN_REJ>


<0x161e OP_CAPI_REG_AVAIL_PLMN_REJ>
    signalHeader             struct                     T_MsgHeader                
    CAPI_REG_AVAIL_PLMN_REJ  struct                     T_CAPI_REG_AVAIL_PLMN_REJ  
</0x161e OP_CAPI_REG_AVAIL_PLMN_REJ>


<0xffff OP_CAPI_REG_ABORT_AVAIL_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_CAPI_REG_ABORT_AVAIL_PLMN_REQ>


<sub T_CAPI_REG_SET_PLMN_REQ>
    plmnMode  u8     u8     plmnMode  |input;|
    plmn[5]   array  u8     plmn      |multiedit;|
</sub T_CAPI_REG_SET_PLMN_REQ>


<0x160b OP_CAPI_REG_SET_PLMN_REQ>
    signalHeader           struct                   T_MsgHeader              
    CAPI_REG_SET_PLMN_REQ  struct                   T_CAPI_REG_SET_PLMN_REQ  
</0x160b OP_CAPI_REG_SET_PLMN_REQ>


<0x160c OP_CAPI_REG_SET_PLMN_CNF>
    signalHeader           struct                   T_MsgHeader              
    CAPI_REG_SET_PLMN_CNF  struct                   T_CAPI_REG_SET_PLMN_CNF  
</0x160c OP_CAPI_REG_SET_PLMN_CNF>


<0x160f OP_CAPI_REG_STATE_IND>
    signalHeader        struct                T_MsgHeader           
    CAPI_REG_STATE_IND  struct                T_CAPI_REG_STATE_IND  
</0x160f OP_CAPI_REG_STATE_IND>


<sub T_CAPI_REG_SIM_ERROR_IND>
    index[2]     array  u8     index        |multiedit;|
    causeSelect  u8     u8     causeSelect  |input;|
    sw1          u8     u8     sw1          |input;|
    sw2          u8     u8     sw2          |input;|
</sub T_CAPI_REG_SIM_ERROR_IND>


<0x1610 OP_CAPI_REG_SIM_ERROR_IND>
    signalHeader            struct                    T_MsgHeader               
    CAPI_REG_SIM_ERROR_IND  struct                    T_CAPI_REG_SIM_ERROR_IND  
</0x1610 OP_CAPI_REG_SIM_ERROR_IND>


<sub T_CAPI_REG_EMM_INFO_IND>
    fullNameForNetwork[115]   array  u8     fullNameForNetwork        |multiedit;|
    shortNameForNetwork[115]  array  u8     shortNameForNetwork       |multiedit;|
    localTimeZone[2]          array  u8     localTimeZone             |multiedit;|
    univTimeLocalTimeZone[8]  array  u8     univTimeLocalTimeZone     |multiedit;|
    lsaIdentity[4]            array  u8     lsaIdentity               |multiedit;|
    netDaylightSavingTime[2]  array  u8     netDaylightSavingTime     |multiedit;|
</sub T_CAPI_REG_EMM_INFO_IND>


<0xffff OP_CAPI_REG_EMM_INFO_IND>
    signalHeader           struct                   T_MsgHeader              
    CAPI_REG_EMM_INFO_IND  struct                   T_CAPI_REG_EMM_INFO_IND  
</0xffff OP_CAPI_REG_EMM_INFO_IND>


<sub T_CAPI_REG_ERRC_CONN_STATUS_IND>
    connMode  u8  u8  connMode  |input;|
</sub T_CAPI_REG_ERRC_CONN_STATUS_IND>


<0x161d OP_CAPI_REG_ERRC_CONN_STATUS_IND>
    signalHeader                   struct                           T_MsgHeader                      
    CAPI_REG_ERRC_CONN_STATUS_IND  struct                           T_CAPI_REG_ERRC_CONN_STATUS_IND  
</0x161d OP_CAPI_REG_ERRC_CONN_STATUS_IND>


<sub T_EPossPlmn>
    cellInfo                         struct         T_CellDescLte  
    tac[2]                           array          u8             tac                              |multiedit;|
    rsrpValue                        u8             u8             rsrpValue                        |input;|
    plmnNum                          u8             u8             plmnNum                          |input;|
    possiblePlmn[MAX_CELL_PLMN_NUM]  array          T_Plmn         possiblePlmn                     |multiedit;|
</sub T_EPossPlmn>


<sub T_rbParaLte>
    rbId     u8   u8   rbId     |input;|
    sduSize  u16  u16  sduSize  |input;|
</sub T_rbParaLte>


<sub T_ERR_ACT_REQ>
    imsi                                      struct         T_Imsi         
    plmnSelected                              struct         T_Plmn         
    nCellNum                                  u8             u8             nCellNum                                  |input;|
    selectionType                             u8             u8             selectionType                             |input;|
    neighbourCell[MAX_BA_LIST_NUM_LTE]        array          T_CellDescLte  neighbourCell                             |multiedit;|
    accessControlClass[MAX_UE_ACC_CLASS_LEN]  array          u8             accessControlClass                        |multiedit;|
</sub T_ERR_ACT_REQ>


<sub T_ERR_ACT_IND>
    servCellPlmnNum                      u8             u8             servCellPlmnNum                      |input;|
    intraNcellNum                        u8             u8             intraNcellNum                        |input;|
    interNcellNum                        u8             u8             interNcellNum                        |input;|
    tac[2]                               array          u8             tac                                  |multiedit;|
    cellIdentity[4]                      array          u8             cellIdentity                         |multiedit;|
    reserved3[3]                         array          u8             reserved3                            |multiedit;|
    attachWithoutPDN[MAX_CELL_PLMN_NUM]  array          u8             attachWithoutPDN                     |multiedit;|
    reserved2[2]                         array          u8             reserved2                            |multiedit;|
    plmn                                 struct         T_Plmn         
    servCellPlmn[MAX_CELL_PLMN_NUM]      array          T_Plmn         servCellPlmn                         |multiedit;|
    interNeighbourCell[maxCellIntra<<1]  array          T_CellDescLte  interNeighbourCell                   |multiedit;|
    intraNeighbourCell[maxCellIntra]     array          T_CellDescLte  intraNeighbourCell                   |multiedit;|
</sub T_ERR_ACT_IND>


<sub T_ERR_ACT_ERR>
    cellNum                          u8           u8           cellNum                          |input;|
    reserved3[3]                     array        u8           reserved3                        |multiedit;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array        T_EPossPlmn  cellInfo                         |multiedit;|
</sub T_ERR_ACT_ERR>


<sub T_ERR_DEACT_REQ>
    deactCause    u8     u8     deactCause    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_ERR_DEACT_REQ>


<sub T_ERR_GET_PLMN_REQ>
    activeMode    u8     u8     activeMode    |input;|
    hplmnFlag     u8     u8     hplmnFlag     |input;|
    reserved2[2]  array  u8     reserved2     |multiedit;|
</sub T_ERR_GET_PLMN_REQ>


<sub T_ERR_GET_PLMN_CNF>
    cellNum                          u8           u8           cellNum                          |input;|
    reserved3[3]                     array        u8           reserved3                        |multiedit;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array        T_EPossPlmn  cellInfo                         |multiedit;|
</sub T_ERR_GET_PLMN_CNF>


<sub T_ERR_NEW_PARAM_REQ>
    stmsiValid             u8      u8      stmsiValid             |input;|
    lteKeyValid            u8      u8      lteKeyValid            |input;|
    regTai[MAX_TAI_LEN]    array   u8      regTai                 |multiedit;|
    mmeid[MAX_MME_ID_LEN]  array   u8      mmeid                  |multiedit;|
    stmsi[MAX_STMSI_LEN]   array   u8      stmsi                  |multiedit;|
    selectedPlmn           struct  T_Plmn  
    kEnb[KEY_ENB_LEN]      array   u8      kEnb                   |multiedit;|
    kAsme[KEY_ASME_LEN]    array   u8      kAsme                  |multiedit;|
    eDrxEnable             u8      u8      eDrxEnable             |input;|
    pagingTimeWin          u8      u8      pagingTimeWin          |input;|
    eDrxValue              u8      u8      eDrxValue              |input;|
</sub T_ERR_NEW_PARAM_REQ>


<sub T_ERR_SET_STATE_REQ>
    stateFlag     u8      u8      stateFlag     |input;|
    reserved3[3]  array   u8      reserved3     |multiedit;|
    plmnSelected  struct  T_Plmn  
</sub T_ERR_SET_STATE_REQ>


<sub T_ERR_LOOP_TEST_REQ>
    command                 u8           u8           command                 |input;|
    rbNum                   u8           u8           rbNum                   |input;|
    reserved2[2]            array        u8           reserved2               |multiedit;|
    rbList[MAX_RB_NUM_LTE]  array        T_rbParaLte  rbList                  |multiedit;|
</sub T_ERR_LOOP_TEST_REQ>


<sub T_ERR_LOOP_TEST_CNF>
    command  u8  u8  command  |input;|
    cause    u8  u8  cause    |input;|
</sub T_ERR_LOOP_TEST_CNF>


<0x402f OP_ERR_ACT_REQ>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_REQ   struct         T_ERR_ACT_REQ  
</0x402f OP_ERR_ACT_REQ>


<0x402a OP_ERR_ACT_IND>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_IND   struct         T_ERR_ACT_IND  
</0x402a OP_ERR_ACT_IND>


<0x402b OP_ERR_ACT_ERR>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_ERR   struct         T_ERR_ACT_ERR  
</0x402b OP_ERR_ACT_ERR>


<0x4035 OP_ERR_DEACT_REQ>
    signalHeader   struct           T_MsgHeader      
    ERR_DEACT_REQ  struct           T_ERR_DEACT_REQ  
</0x4035 OP_ERR_DEACT_REQ>


<0x4049 OP_ERR_DEACT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x4049 OP_ERR_DEACT_CNF>


<0x4030 OP_ERR_GET_PLMN_REQ>
    signalHeader      struct              T_MsgHeader         
    ERR_GET_PLMN_REQ  struct              T_ERR_GET_PLMN_REQ  
</0x4030 OP_ERR_GET_PLMN_REQ>


<0x402e OP_ERR_GET_PLMN_CNF>
    signalHeader      struct              T_MsgHeader         
    ERR_GET_PLMN_CNF  struct              T_ERR_GET_PLMN_CNF  
</0x402e OP_ERR_GET_PLMN_CNF>


<0x403c OP_ERR_GET_PLMN_REJ>
    signalHeader  struct       T_MsgHeader  
</0x403c OP_ERR_GET_PLMN_REJ>


<0x4036 OP_ERR_ABORT_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4036 OP_ERR_ABORT_PLMN_REQ>


<0x403b OP_ERR_ABORT_PLMN_CNF>
    signalHeader  struct       T_MsgHeader  
</0x403b OP_ERR_ABORT_PLMN_CNF>


<0x4034 OP_ERR_NEW_PARAM_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_NEW_PARAM_REQ  struct               T_ERR_NEW_PARAM_REQ  
</0x4034 OP_ERR_NEW_PARAM_REQ>


<0x4033 OP_ERR_SET_STATE_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_SET_STATE_REQ  struct               T_ERR_SET_STATE_REQ  
</0x4033 OP_ERR_SET_STATE_REQ>


<0x4032 OP_ERR_LOOP_TEST_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_LOOP_TEST_REQ  struct               T_ERR_LOOP_TEST_REQ  
</0x4032 OP_ERR_LOOP_TEST_REQ>


<0x402c OP_ERR_LOOP_TEST_CNF>
    signalHeader       struct               T_MsgHeader          
    ERR_LOOP_TEST_CNF  struct               T_ERR_LOOP_TEST_CNF  
</0x402c OP_ERR_LOOP_TEST_CNF>


<0x4029 OP_ERR_BAR_ALLEVIATE_IND>
</0x4029 OP_ERR_BAR_ALLEVIATE_IND>


<0x403f OP_ERR_IRAT_CLASSMARK_REQ>
</0x403f OP_ERR_IRAT_CLASSMARK_REQ>


<0xffff OP_ERR_EDRX_IND>
</0xffff OP_ERR_EDRX_IND>


<0xffff OP_EDRX_PARA_REQ>
</0xffff OP_EDRX_PARA_REQ>


<sub T_TC_CTRL_IND>
    LoopTestCmd  u8  u8  LoopTestCmd  |input;|
</sub T_TC_CTRL_IND>


<0xffff OP_TC_CTRL_IND>
    signalHeader  struct         T_MsgHeader    
    body          struct         T_TC_CTRL_IND  
</0xffff OP_TC_CTRL_IND>


<0x165a OP_GMS_TC_DATA_CNF>
    signalHeader  struct       T_MsgHeader  
</0x165a OP_GMS_TC_DATA_CNF>


<sub T_RABM_TC_DATA_REQ>
    ebi        u8           u8           ebi        |input;|
    pPduData   Ptr          T_ComPduLte  
</sub T_RABM_TC_DATA_REQ>


<0x165c OP_RABM_TC_DATA_REQ>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_DATA_REQ  
</0x165c OP_RABM_TC_DATA_REQ>


<sub T_RABM_TC_DATA_IND>
    ebi        u8           u8           ebi        |input;|
    drbId      u8           u8           drbId      |input;|
    pSduData   Ptr          T_ComSduLte  
</sub T_RABM_TC_DATA_IND>


<0x165b OP_RABM_TC_DATA_IND>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_DATA_IND  
</0x165b OP_RABM_TC_DATA_IND>


<sub T_EMM_TC_STAT_IND>
    RrcReleased  u8  u8  RrcReleased  |input;|
    PsDetached   u8  u8  PsDetached   |input;|
</sub T_EMM_TC_STAT_IND>


<0x1415 OP_EMM_TC_STAT_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_STAT_IND  
</0x1415 OP_EMM_TC_STAT_IND>


<sub T_EMM_TC_DATA_REQ>
    DataLen                u16    u16    DataLen                |input;|
    Dummy                  u16    u16    Dummy                  |input;|
    Data[MAX_NAS_MSG_LEN]  array  u8     Data                   |multiedit;|
</sub T_EMM_TC_DATA_REQ>


<0x1413 OP_EMM_TC_DATA_REQ>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_DATA_REQ  
</0x1413 OP_EMM_TC_DATA_REQ>


<sub T_EMM_TC_DATA_IND>
    DataLen                u16    u16    DataLen                |input;|
    Dummy                  u16    u16    Dummy                  |input;|
    Data[MAX_NAS_MSG_LEN]  array  u8     Data                   |multiedit;|
</sub T_EMM_TC_DATA_IND>


<0x1414 OP_EMM_TC_DATA_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_DATA_IND  
</0x1414 OP_EMM_TC_DATA_IND>


<sub T_MsgHeader>
    len          u16    u16    len          |input;|
    txName       u8     u8     txName       |input;|
    txIns        u8     u8     txIns        |input;|
    rxName       u8     u8     rxName       |input;|
    rxIns        u8     u8     rxIns        |input;|
    opType       u16    u16    opType       |input;|
    simFlag      u8     u8     simFlag      |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_MsgHeader>


<sub Prim_Hdr_Type>
    lPrimId   U32  U32  lPrimId   |input;|
    lPrimLen  U32  U32  lPrimLen  |input;|
    dummy     U32  U32  dummy     |input;|
</sub Prim_Hdr_Type>


<union T_MsgHdr_U>
    hdr           struct         Prim_Hdr_Type  
    signalHeader  struct         T_MsgHeader    
</union T_MsgHdr_U>


<sub T_HeaderInfo>
    subFrameNum    u16  u16  subFrameNum    |input;|
    workMode       u16  u16  workMode       |input;|
    stateFlag      u16  u16  stateFlag      |input;|
    primitiveFlag  u16  u16  primitiveFlag  |input;|
    spareLen       u16  u16  spareLen       |input;|
    length         u16  u16  length         |input;|
</sub T_HeaderInfo>


<sub T_Plmn>
    mcc[2]  array  u8     mcc     |multiedit;|
    mnc     u8     u8     mnc     |input;|
</sub T_Plmn>


<sub T_CommonPdu>
    pduLen         u16  u16  pduLen         |input;|
    pdcpHeaderLen  u16  u16  pdcpHeaderLen  |input;|
    pduData        Ptr  u8   
</sub T_CommonPdu>


<sub T_RohcRestoreInfo>
    ipHeaderLen                                u16    u16    ipHeaderLen                                |input;|
    rohcHeaderLen                              u16    u16    rohcHeaderLen                              |input;|
    ipHeaderData[MAX_ROHC_RESTORE_IPHEAD_LEN]  array  u8     ipHeaderData                               |multiedit;|
</sub T_RohcRestoreInfo>


<sub T_ComPduLte>
    ebi                    u16                u16                ebi                    |input;|
    pdcpSn                 u16                u16                pdcpSn                 |input;|
    pduType                u16                u16                pduType                |input;|
    appSn                  u32                u32                appSn                  |input;|
    maxExpireCnt           u32                u32                maxExpireCnt           |input;|
    count                  u32                u32                count                  |input;|
    sduOffset              u16                u16                sduOffset              |input;|
    li                     u16                u16                li                     |input;|
    pduLen                 u16                u16                pduLen                 |input;|
    rohcRestoreInfo        struct             T_RohcRestoreInfo  
    pdcpHeaderLen          u16                u16                pdcpHeaderLen          |input;|
    rai                    u16                u16                rai                    |input;|
    type_of_user_data      u16                u16                type_of_user_data      |input;|
    pPduData               Ptr                u8                 
    pFreeQE                Ptr                void               
    pNext                  Ptr                T_ComPduLte_Tag    
</sub T_ComPduLte>


<sub T_ComSduLte>
    pdcpSn                 u16     u16     pdcpSn                 |input;|
    diacardFlag            u16     u16     diacardFlag            |input;|
    sduLen                 u16     u16     sduLen                 |input;|
    pdcpHeaderLen          u16     u16     pdcpHeaderLen          |input;|
    dhcpFlag               u32     u32     dhcpFlag               |input;|
    pSduData               Ptr     u8      
    pSduDataFree           Ptr     void    
    pNext                  Ptr     T_ComSduLte_Tag
</sub T_ComSduLte>


<sub T_headComInfo>
    maxCid    u16  u16  maxCid    |input;|
    profiles  u16  u16  profiles  |input;|
</sub T_headComInfo>


<sub T_CellDesc>
    frequency  u16  u16  frequency  |input;|
</sub T_CellDesc>


<sub T_CarrierFreqNB>
    earfcn       u32    u32    earfcn       |input;|
    offset       s8     s8     offset       |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_CarrierFreqNB>


<sub T_CellDescNB>
    carrierFreqNB  struct           T_CarrierFreqNB  
    phyCellId      u16              u16              phyCellId      |input;|
    reserved       u16              u16              reserved       |input;|
</sub T_CellDescNB>


<sub T_EPDC_DATA>
    times     u8   u8   times     |input;|
    ul_bytes  u32  u32  ul_bytes  |input;|
    dl_bytes  u32  u32  dl_bytes  |input;|
    ul_bps    u32  u32  ul_bps    |input;|
    dl_bps    u32  u32  dl_bps    |input;|
</sub T_EPDC_DATA>


<sub T_UBIT_DMA_INFO>
    sourceAddr  u32  u32  sourceAddr  |input;|
    length      u32  u32  length      |input;|
</sub T_UBIT_DMA_INFO>


<sub T_CellMesResult_MultiMode>
    freq             u16  u16  freq             |input;|
    cellParameterId  u16  u16  cellParameterId  |input;|
    rscp             u8   u8   rscp             |input;|
    rsrq             u8   u8   rsrq             |input;|
    sfType           u8   u8   sfType           |input;|
    sfPattern        u8   u8   sfPattern        |input;|
</sub T_CellMesResult_MultiMode>


<sub T_CellInfo_MultiMode>
    servCell                                        struct                     T_CellMesResult_MultiMode  
    lteNum                                          u16                        u16                        lteNum                                          |input;|
    lteNeighbourCell[STRONGEST_NCELL_NUM_ENG_MODE]  array                      T_CellMesResult_MultiMode  lteNeighbourCell                                |multiedit;|
</sub T_CellInfo_MultiMode>


<sub T_NcellInfoForTrace>
    tdNum                                  u8     u8     tdNum                                  |input;|
    gsmNum                                 u8     u8     gsmNum                                 |input;|
    lteNum                                 u8     u8     lteNum                                 |input;|
    reserved                               u8     u8     reserved                               |input;|
    frequency[TRACE_NCELL_NUM_THREE_MODE]  array  u16    frequency                              |multiedit;|
    cellId[TRACE_NCELL_NUM_THREE_MODE]     array  u16    cellId                                 |multiedit;|
    rscpLevel[TRACE_NCELL_NUM_THREE_MODE]  array  u8     rscpLevel                              |multiedit;|
    rssiLevel[TRACE_NCELL_NUM_THREE_MODE]  array  u8     rssiLevel                              |multiedit;|
    s[TRACE_NCELL_NUM_THREE_MODE]          array  s8     s                                      |multiedit;|
    r[TRACE_NCELL_NUM_THREE_MODE]          array  s16    r                                      |multiedit;|
</sub T_NcellInfoForTrace>


<sub T_scellInfoForTrace>
    rrcMode       u8     u8     rrcMode       |input;|
    rrcSubState   u8     u8     rrcSubState   |input;|
    freq          u16    u16    freq          |input;|
    sync          u8     u8     sync          |input;|
    midamble      u8     u8     midamble      |input;|
    icsResult     u8     u8     icsResult     |input;|
    fpachResult   u8     u8     fpachResult   |input;|
    cellId        u32    u32    cellId        |input;|
    workFreq      u16    u16    workFreq      |input;|
    fpachFreq     u16    u16    fpachFreq     |input;|
    measEvent     u32    u32    measEvent     |input;|
    dlTsNum       u8     u8     dlTsNum       |input;|
    reserved      u8     u8     reserved      |input;|
    rai[6]        array  u8     rai           |multiedit;|
    iscplevel[6]  array  u8     iscplevel     |multiedit;|
    sir[6]        array  u8     sir           |multiedit;|
</sub T_scellInfoForTrace>


<sub T_SpecialProcessForTest>
    processFlag       u16  u16  processFlag       |input;|
    targetCellFreq    u16  u16  targetCellFreq    |input;|
    targetCellParaId  u16  u16  targetCellParaId  |input;|
</sub T_SpecialProcessForTest>


<sub T_CellMainInfo>
    type    u16  u16  type    |input;|
    mcc     u16  u16  mcc     |input;|
    mnc     u16  u16  mnc     |input;|
    lac     u16  u16  lac     |input;|
    cellId  u32  u32  cellId  |input;|
    arfcn   u16  u16  arfcn   |input;|
    cpi     u8   u8   cpi     |input;|
    rxlev   u8   u8   rxlev   |input;|
</sub T_CellMainInfo>


<sub T_NcellInfo>
    ncellNum                                u32             u32             ncellNum                                |input;|
    ncellList[MAX_NCELL_NUM_FOR_MAIN_INFO]  array           T_CellMainInfo  ncellList                               |multiedit;|
</sub T_NcellInfo>


<sub T_RbPduInfo>
    rbIdentity   u8     u8     rbIdentity   |input;|
    pduNum       u8     u8     pduNum       |input;|
    reserved1    u8     u8     reserved1    |input;|
    snNum        u8     u8     snNum        |input;|
    rbPduSn[64]  array  u16    rbPduSn      |multiedit;|
</sub T_RbPduInfo>


<sub T_PDSCH_MEM>
    remain_len  u16  u16  remain_len  |input;|
    pdsch_data  Ptr  u8   
</sub T_PDSCH_MEM>


<sub T_ERLC_SDU_SEG>
    fi                       u8            u8            fi                       |input;|
    len                      u16           u16           len                      |input;|
    data                     Ptr           u8            
    pdsch_mem                Ptr           T_PDSCH_MEM   
    next                     Ptr           T_ERLC_SDU_SEG_tag
</sub T_ERLC_SDU_SEG>


<sub T_ERLC_DL_SDU>
    count                   u32              u32              count                   |input;|
    len                     u16              u16              len                     |input;|
    reserved2[2]            array            u8               reserved2               |multiedit;|
    seg                     Ptr              T_ERLC_SDU_SEG   
    next                    Ptr              T_ERLC_DL_SDU_tag
</sub T_ERLC_DL_SDU>


<sub T_RabAndRbInfo>
    rabId       u8  u8  rabId       |input;|
    instanceId  u8  u8  instanceId  |input;|
</sub T_RabAndRbInfo>


<sub T_CsServiceClass>
    ti            u8  u8  ti            |input;|
    rabId         u8  u8  rabId         |input;|
    serviceClass  u8  u8  serviceClass  |input;|
</sub T_CsServiceClass>


<sub L1IF_DSP_CTRL_CFG_S>
    ucMainCtrl  u8     u8     ucMainCtrl  |input;|
    aucRes[3]   array  u8     aucRes      |multiedit;|
</sub L1IF_DSP_CTRL_CFG_S>


<sub L1IF_DSP_CTRL_RSP_S>
    ucResult       u8     u8     ucResult       |input;|
    aucVersion[3]  array  u8     aucVersion     |multiedit;|
</sub L1IF_DSP_CTRL_RSP_S>


<sub L1IF_DSP_MODE_CFG_S>
    ucMode     u8     u8     ucMode     |input;|
    aucRes[3]  array  u8     aucRes     |multiedit;|
</sub L1IF_DSP_MODE_CFG_S>


<sub L1IF_RSSI_CFG_S>
    ucRssiEnable  u16  u16  ucRssiEnable  |input;|
    usRssiType    u16  u16  usRssiType    |input;|
</sub L1IF_RSSI_CFG_S>


<sub L1IF_RSSI_RSP_S>
    usRssiVal  u16    u16    usRssiVal  |input;|
    aucRes[2]  array  u8     aucRes     |multiedit;|
</sub L1IF_RSSI_RSP_S>


<sub L1IF_CS_COM_CFG_S>
    ulCarrFreq                               u32    u32    ulCarrFreq                               |input;|
    ucDriftCompEnable                        u8     u8     ucDriftCompEnable                        |input;|
    ucPssDecayFact                           u8     u8     ucPssDecayFact                           |input;|
    ucPssFreqOffNum                          u8     u8     ucPssFreqOffNum                          |input;|
    aucPssFreqOff[L1IF_PSS_FREQ_OFFSET_NUM]  array  u8     aucPssFreqOff                            |multiedit;|
    acPssCoefUp[L1IF_PSS_COEF_UP_NUM]        array  s8     acPssCoefUp                              |multiedit;|
    acPssCoefLow[L1IF_PSS_COEF_LOW_NUM]      array  s8     acPssCoefLow                             |multiedit;|
    ucCfoMode                                u8     u8     ucCfoMode                                |input;|
    ucCfoFreqOffNum                          u8     u8     ucCfoFreqOffNum                          |input;|
    aucCfoFreqOff[L1IF_CFO_FREQ_OFF_NUM]     array  u8     aucCfoFreqOff                            |multiedit;|
    ucCfoDecayFact                           u8     u8     ucCfoDecayFact                           |input;|
    aucRes[2]                                array  u8     aucRes                                   |multiedit;|
</sub L1IF_CS_COM_CFG_S>


<sub L1IF_PSS_CFG_S>
    ucPssEnable    u8     u8     ucPssEnable    |input;|
    ucPssMode      u8     u8     ucPssMode      |input;|
    usSearchStart  u16    u16    usSearchStart  |input;|
    usSearchLen    u16    u16    usSearchLen    |input;|
    usSicPeakPos   u16    u16    usSicPeakPos   |input;|
    sCFO1stCell    s16    s16    sCFO1stCell    |input;|
    usSicAlpha     u16    u16    usSicAlpha     |input;|
    usSicBeta      u16    u16    usSicBeta      |input;|
    aucRes[2]      array  u8     aucRes         |multiedit;|
</sub L1IF_PSS_CFG_S>


<sub L1IF_PSS_RSP_S>
    ausPssPosPeak[L1IF_PSS_PEAK_NUM]   array  u16    ausPssPosPeak                      |multiedit;|
    aulPssCorrPeak[L1IF_PSS_PEAK_NUM]  array  u32    aulPssCorrPeak                     |multiedit;|
    usPssDoneFlg                       u16    u16    usPssDoneFlg                       |input;|
    aucRes                             u8     u8     aucRes                             |input;|
    ucBitShift                         u8     u8     ucBitShift                         |input;|
</sub L1IF_PSS_RSP_S>


<sub L1IF_CFO_CFG_S>
    ucCfoEnable    u8     u8     ucCfoEnable    |input;|
    ucCfoAccReset  u8     u8     ucCfoAccReset  |input;|
    usPssPosition  u16    u16    usPssPosition  |input;|
    sCfoFrac       s16    s16    sCfoFrac       |input;|
    usSicPeakPos   u16    u16    usSicPeakPos   |input;|
    sCFO1stCell    s16    s16    sCFO1stCell    |input;|
    aucRes[2]      array  u8     aucRes         |multiedit;|
</sub L1IF_CFO_CFG_S>


<sub L1IF_CFO_RSP_S>
    usPssPosition   u16  u16  usPssPosition   |input;|
    sCfoFrac        s16  s16  sCfoFrac        |input;|
    sCfoInt         s16  s16  sCfoInt         |input;|
    sCfoFineTiming  s16  s16  sCfoFineTiming  |input;|
    ulCfoCorrPeak   u32  u32  ulCfoCorrPeak   |input;|
</sub L1IF_CFO_RSP_S>


<sub L1IF_SSS_CFG_S>
    ucSssEnable       u8   u8   ucSssEnable       |input;|
    ucSssAccReset     u8   u8   ucSssAccReset     |input;|
    usPssPosition     u16  u16  usPssPosition     |input;|
    sCfoFineTiming    s16  s16  sCfoFineTiming    |input;|
    sCfoFinal         s16  s16  sCfoFinal         |input;|
    usCellIdHypo      u16  u16  usCellIdHypo      |input;|
    ucRadioFrameHypo  u8   u8   ucRadioFrameHypo  |input;|
    ucRes             u8   u8   ucRes             |input;|
</sub L1IF_SSS_CFG_S>


<sub L1IF_SSS_RSP_S>
    usPssPosition                  u16    u16    usPssPosition                  |input;|
    sCfoFineTiming                 s16    s16    sCfoFineTiming                 |input;|
    sCfoFinal                      s16    s16    sCfoFinal                      |input;|
    sSssDrift                      s16    s16    sSssDrift                      |input;|
    usSssTotal                     u16    u16    usSssTotal                     |input;|
    usAccNum                       u16    u16    usAccNum                       |input;|
    usGlToSssRfOffset              u16    u16    usGlToSssRfOffset              |input;|
    ucGlToSssSfn                   u8     u8     ucGlToSssSfn                   |input;|
    ucEquivalentAccNum             u8     u8     ucEquivalentAccNum             |input;|
    aulSssPeak[L1IF_SSS_PEAK_NUM]  array  u32    aulSssPeak                     |multiedit;|
</sub L1IF_SSS_RSP_S>


<sub L1IF_DL_TM_ADJ_CFG_S>
    ucAdjMode         u8   u8   ucAdjMode         |input;|
    ucRes             u8   u8   ucRes             |input;|
    sDeltaTimeOffset  s16  s16  sDeltaTimeOffset  |input;|
</sub L1IF_DL_TM_ADJ_CFG_S>


<sub L1IF_DL_RECEPTION_CTRL_S>
    usTargetSfnSf      u16  u16  usTargetSfnSf      |input;|
    ucDlReceptionCtrl  u8   u8   ucDlReceptionCtrl  |input;|
    ucBufferIndex      u8   u8   ucBufferIndex      |input;|
</sub L1IF_DL_RECEPTION_CTRL_S>


<sub L1IF_RS_SF_CFG_S>
    usCurrValidRsSfBm  u16    u16    usCurrValidRsSfBm  |input;|
    usNextValidRsSfBm  u16    u16    usNextValidRsSfBm  |input;|
    ucPssValidRfBm     u8     u8     ucPssValidRfBm     |input;|
    ucSssValidRfBm     u8     u8     ucSssValidRfBm     |input;|
    aucRes[2]          array  u8     aucRes             |multiedit;|
</sub L1IF_RS_SF_CFG_S>


<sub L1IF_PBCH_CFG_S>
    ucPbchEnable     u8  u8  ucPbchEnable     |input;|
    ucSfnHypoEnable  u8  u8  ucSfnHypoEnable  |input;|
    ucCombMode       u8  u8  ucCombMode       |input;|
    ucHsfnMod4       u8  u8  ucHsfnMod4       |input;|
</sub L1IF_PBCH_CFG_S>


<sub L1IF_PBCH_RSP_S>
    usRxSfnSf  u16    u16    usRxSfnSf  |input;|
    aucRes[2]  array  u8     aucRes     |multiedit;|
</sub L1IF_PBCH_RSP_S>


<sub L1IF_SFN_CFG_S>
    usSfn      u16    u16    usSfn      |input;|
    aucRes[2]  array  u8     aucRes     |multiedit;|
</sub L1IF_SFN_CFG_S>


<sub L1IF_DL_COM_CFG_S>
    usCellId             u16  u16  usCellId             |input;|
    ucAntPortNum         u8   u8   ucAntPortNum         |input;|
    ucInbandCrsValid     u8   u8   ucInbandCrsValid     |input;|
    usCrsPowOffset       u16  u16  usCrsPowOffset       |input;|
    ucCrsPortNum         u8   u8   ucCrsPortNum         |input;|
    ucCFI                u8   u8   ucCFI                |input;|
    scOffsetToLteMidPrb  s8   s8   scOffsetToLteMidPrb  |input;|
    ucLtePrbNumOddEven   u8   u8   ucLtePrbNumOddEven   |input;|
    ucRAN88ScrChgEn      u8   u8   ucRAN88ScrChgEn      |input;|
    usRes                u8   u8   usRes                |input;|
</sub L1IF_DL_COM_CFG_S>


<sub L1IF_PDCCH_CFG_S>
    usTargetSfnSf     u16  u16  usTargetSfnSf     |input;|
    ucPdcchEnable     u8   u8   ucPdcchEnable     |input;|
    ucSearchSpace     u8   u8   ucSearchSpace     |input;|
    usMaxRepeatNum    u16  u16  usMaxRepeatNum    |input;|
    usSubframeOffset  u16  u16  usSubframeOffset  |input;|
    ucSubframeIndex   u8   u8   ucSubframeIndex   |input;|
    ucRntiNum         u8   u8   ucRntiNum         |input;|
    ucDciSize         u8   u8   ucDciSize         |input;|
    ucSymRotEn        u8   u8   ucSymRotEn        |input;|
    usRntiVal1        u16  u16  usRntiVal1        |input;|
    usRntiVal2        u16  u16  usRntiVal2        |input;|
</sub L1IF_PDCCH_CFG_S>


<sub L1IF_PDCCH_RSP_S>
    usRxSfnSf  u16    u16    usRxSfnSf  |input;|
    aucRes[2]  array  u8     aucRes     |multiedit;|
</sub L1IF_PDCCH_RSP_S>


<sub L1IF_PDSCH_CFG_S>
    usTargetSfnSf  u16    u16    usTargetSfnSf  |input;|
    ucPdschEnable  u8     u8     ucPdschEnable  |input;|
    ucPdschType    u8     u8     ucPdschType    |input;|
    ucBufferIndex  u8     u8     ucBufferIndex  |input;|
    ucSymRotEn     u8     u8     ucSymRotEn     |input;|
    aucRes[2]      array  u8     aucRes         |multiedit;|
    usRepeatNum    u16    u16    usRepeatNum    |input;|
    ucTtiLen       u8     u8     ucTtiLen       |input;|
    ucNewDataInd   u8     u8     ucNewDataInd   |input;|
    usTbSize       u16    u16    usTbSize       |input;|
    usRntiVal      u16    u16    usRntiVal      |input;|
</sub L1IF_PDSCH_CFG_S>


<sub L1IF_PDSCH_RSP_S>
    usRxSfnSf      u16  u16  usRxSfnSf      |input;|
    ucBufferIndex  u8   u8   ucBufferIndex  |input;|
    ucRes          u8   u8   ucRes          |input;|
</sub L1IF_PDSCH_RSP_S>


<sub L1IF_PRACH_CFG_S>
    usTargetSfnSf     u16    u16    usTargetSfnSf     |input;|
    usRepeatNum       u16    u16    usRepeatNum       |input;|
    usCellId          u16    u16    usCellId          |input;|
    usSubframeOffset  u16    u16    usSubframeOffset  |input;|
    ssBeta            s16    s16    ssBeta            |input;|
    ucPrachCfgType    u8     u8     ucPrachCfgType    |input;|
    ucPreambleFormat  u8     u8     ucPreambleFormat  |input;|
    ucNInit           u8     u8     ucNInit           |input;|
    ucNStart          u8     u8     ucNStart          |input;|
    aucRes[2]         array  u8     aucRes            |multiedit;|
</sub L1IF_PRACH_CFG_S>


<sub L1IF_PUSCH_CFG_S>
    usTargetSfnSf         u16  u16  usTargetSfnSf         |input;|
    ucPuschEnable         u8   u8   ucPuschEnable         |input;|
    ucPuschFormat         u8   u8   ucPuschFormat         |input;|
    usCellId              u16  u16  usCellId              |input;|
    usSrsSubframeConfig   U16  U16  usSrsSubframeConfig   |input;|
    usRntiVal             u16  u16  usRntiVal             |input;|
    usTransLen            u16  u16  usTransLen            |input;|
    ucRuNum               u8   u8   ucRuNum               |input;|
    ucRepeatNum           u8   u8   ucRepeatNum           |input;|
    ucSubcarrierSpacing   u8   u8   ucSubcarrierSpacing   |input;|
    ucSubcarrierAllocIdx  u8   u8   ucSubcarrierAllocIdx  |input;|
    ucSubcarrierNum       u8   u8   ucSubcarrierNum       |input;|
    ucNewDataInd          u8   u8   ucNewDataInd          |input;|
    ucRV                  u8   u8   ucRV                  |input;|
    ucModulation          u8   u8   ucModulation          |input;|
    usTbSize              u16  u16  usTbSize              |input;|
    ucAckNack             u8   u8   ucAckNack             |input;|
    ucGroupHopEnable      u8   u8   ucGroupHopEnable      |input;|
    ucGroupAssign         u8   u8   ucGroupAssign         |input;|
    ucDmrsBaseSeqIndex    u8   u8   ucDmrsBaseSeqIndex    |input;|
    ucCyclicShift         u8   u8   ucCyclicShift         |input;|
    ucSlotNum             u8   u8   ucSlotNum             |input;|
    ssBelta               s16  s16  ssBelta               |input;|
    ucTxConvMode          u8   u8   ucTxConvMode          |input;|
    aucRes                u8   u8   aucRes                |input;|
</sub L1IF_PUSCH_CFG_S>


<sub L1IF_UL_TA_CFG_S>
    usTargetSfnSf  u16  u16  usTargetSfnSf  |input;|
    ssNTa          s16  s16  ssNTa          |input;|
</sub L1IF_UL_TA_CFG_S>


<sub L1IF_MEAS_COM_CFG_S>
    ucConRsrpIirFactA                                 u8     u8     ucConRsrpIirFactA                                 |input;|
    ucConRsrpIirFactB                                 u8     u8     ucConRsrpIirFactB                                 |input;|
    ucNcRsrpIirFactA                                  u8     u8     ucNcRsrpIirFactA                                  |input;|
    ucNcRsrpIirFactB                                  u8     u8     ucNcRsrpIirFactB                                  |input;|
    ausNcValidRsrpSfBm[L1IF_NC_VALID_RSRP_SF_BM_NUM]  array  u16    ausNcValidRsrpSfBm                                |multiedit;|
</sub L1IF_MEAS_COM_CFG_S>


<sub L1IF_MEAS_SPECIAL_COM_CFG_S>
    ucfuncEnable       u8     u8     ucfuncEnable       |input;|
    ucSssGenEn         u8     u8     ucSssGenEn         |input;|
    ucMibGenEn         u8     u8     ucMibGenEn         |input;|
    aucPbchPayload[5]  array  u8     aucPbchPayload     |multiedit;|
</sub L1IF_MEAS_SPECIAL_COM_CFG_S>


<sub L1IF_NC_RSRP_CFG_S>
    ucRsrpEnable                       u8     u8     ucRsrpEnable                       |input;|
    ucCellNumber                       u8     u8     ucCellNumber                       |input;|
    ucAgcCompDisEnb                    u8     u8     ucAgcCompDisEnb                    |input;|
    ucRes                              u8     u8     ucRes                              |input;|
    aulCellParam[L1IF_CELL_PARAM_NUM]  array  u32    aulCellParam                       |multiedit;|
</sub L1IF_NC_RSRP_CFG_S>


<sub L1IF_NC_RSRP_RSP_S>
    aulResult[L1IF_RSRP_RESULT_NUM]   array  u32    aulResult                         |multiedit;|
    asSnrVal[L1IF_CELL_PARAM_NUM]     array  s16    asSnrVal                          |multiedit;|
    asSignalPow[L1IF_CELL_PARAM_NUM]  array  s16    asSignalPow                       |multiedit;|
    asNoisePow[L1IF_CELL_PARAM_NUM]   array  s16    asNoisePow                        |multiedit;|
    auRes[2]                          array  u8     auRes                             |multiedit;|
</sub L1IF_NC_RSRP_RSP_S>


<sub L1IF_CON_RSRP_CFG_S>
    ucRsrpEnable  u8     u8     ucRsrpEnable  |input;|
    aucRes[3]     array  u8     aucRes        |multiedit;|
</sub L1IF_CON_RSRP_CFG_S>


<sub L1IF_CON_RSRP_RSP_S>
    usRsrpResult  u16    u16    usRsrpResult  |input;|
    aucRes[2]     array  u8     aucRes        |multiedit;|
</sub L1IF_CON_RSRP_RSP_S>


<sub L1IF_AFC_CAL_CFG_S>
    ucAfcEnable     u8  u8  ucAfcEnable     |input;|
    ucAfcType       u8  u8  ucAfcType       |input;|
    ucAfcFastRspEn  u8  u8  ucAfcFastRspEn  |input;|
    ucAfcCalDur     u8  u8  ucAfcCalDur     |input;|
</sub L1IF_AFC_CAL_CFG_S>


<sub L1IF_AFC_CAL_RSP_S>
    ssAfcVal         s16  s16  ssAfcVal         |input;|
    ucAfcFastRspInd  u8   u8   ucAfcFastRspInd  |input;|
    ucAfcRspDur      u8   u8   ucAfcRspDur      |input;|
</sub L1IF_AFC_CAL_RSP_S>


<sub L1IF_AFC_ADJ_IND_S>
    usTargetSfnSf  u16  u16  usTargetSfnSf  |input;|
    ssAfcAdjVal    s16  s16  ssAfcAdjVal    |input;|
</sub L1IF_AFC_ADJ_IND_S>


<sub L1IF_AGC_CAL_CFG_S>
    ucAgcEnable  u8     u8     ucAgcEnable  |input;|
    ucAgcType    u8     u8     ucAgcType    |input;|
    aucRes[2]    array  u8     aucRes       |multiedit;|
</sub L1IF_AGC_CAL_CFG_S>


<sub L1IF_AGC_CAL_RSP_S>
    ssAgcVal    s16  s16  ssAgcVal    |input;|
    ssDcOffset  s16  s16  ssDcOffset  |input;|
</sub L1IF_AGC_CAL_RSP_S>


<sub L1IF_AGC_ADJ_IND_S>
    usTargetSfnSf  u16  u16  usTargetSfnSf  |input;|
    ssAgcAdjVal    s16  s16  ssAgcAdjVal    |input;|
</sub L1IF_AGC_ADJ_IND_S>


<sub L1IF_DOPP_CFG_S>
    ucDoppEnable  u8  u8  ucDoppEnable  |input;|
    ucDoppType    u8  u8  ucDoppType    |input;|
    ucDoppAccLen  u8  u8  ucDoppAccLen  |input;|
    ucRes         u8  u8  ucRes         |input;|
</sub L1IF_DOPP_CFG_S>


<sub L1IF_DOPP_RSP_S>
    ucDoppIdx  u8     u8     ucDoppIdx  |input;|
    aucRes[3]  array  u8     aucRes     |multiedit;|
</sub L1IF_DOPP_RSP_S>


<sub L1IF_SNR_CFG_S>
    ucSnrEnable  u8   u8   ucSnrEnable  |input;|
    ucSnrType    u8   u8   ucSnrType    |input;|
    ucSnrCalDur  u16  u16  ucSnrCalDur  |input;|
</sub L1IF_SNR_CFG_S>


<sub L1IF_SNR_RSP_S>
    ssSnrVal           s16  s16  ssSnrVal           |input;|
    ssSignalPow        s16  s16  ssSignalPow        |input;|
    ssNoisePow         s16  s16  ssNoisePow         |input;|
    ssFreqCorrelation  s16  s16  ssFreqCorrelation  |input;|
</sub L1IF_SNR_RSP_S>


<sub L1IF_FINE_TM_CFG_S>
    ucFineTmEnable  u8   u8   ucFineTmEnable  |input;|
    ucFineTmType    u8   u8   ucFineTmType    |input;|
    usFineCalDur    u16  u16  usFineCalDur    |input;|
</sub L1IF_FINE_TM_CFG_S>


<sub L1IF_FINE_TM_RSP_S>
    ssTmErr    s16    s16    ssTmErr    |input;|
    aucRes[2]  array  u8     aucRes     |multiedit;|
</sub L1IF_FINE_TM_RSP_S>


<sub L1IF_L1C_CFG_BITMAP_RSP_S>
    u32L1cBitmap  u32  u32  u32L1cBitmap  |input;|
</sub L1IF_L1C_CFG_BITMAP_RSP_S>


<sub L1IF_DEBUG_RSP_S>
    au32DebugMsg[L1IF_DEBUG_MSG_NUM]  array  u32    au32DebugMsg                      |multiedit;|
</sub L1IF_DEBUG_RSP_S>


<sub L1IF_CH_EST_CFG_S>
    ucChEstEnable  u8  u8  ucChEstEnable  |input;|
    ucChEstType    u8  u8  ucChEstType    |input;|
    ucChEstMode    u8  u8  ucChEstMode    |input;|
    ucRes          u8  u8  ucRes          |input;|
</sub L1IF_CH_EST_CFG_S>


<sub L1IF_PRS_CFG_S>
    ucPrsEn         u8     u8     ucPrsEn         |input;|
    ucPrsAccReset   u8     u8     ucPrsAccReset   |input;|
    ucPrsWindow1    u8     u8     ucPrsWindow1    |input;|
    ucPrsWindow2    u8     u8     ucPrsWindow2    |input;|
    ucPrsLockReset  u8     u8     ucPrsLockReset  |input;|
    ucPrsLockMax    u8     u8     ucPrsLockMax    |input;|
    ucPrsLockThres  u8     u8     ucPrsLockThres  |input;|
    ucPrsLastRf     u8     u8     ucPrsLastRf     |input;|
    usPrsSleepTime  u16    u16    usPrsSleepTime  |input;|
    aucRes[2]       array  u8     aucRes          |multiedit;|
</sub L1IF_PRS_CFG_S>


<sub L1IF_PRS_RSP_S>
    usPrsCoarseTime1       u16  u16  usPrsCoarseTime1       |input;|
    usPrsCoarseTime2       u16  u16  usPrsCoarseTime2       |input;|
    ucPrsFineTime          u8   u8   ucPrsFineTime          |input;|
    ucPrsLockCounter       u8   u8   ucPrsLockCounter       |input;|
    ssPrsFinalTime         s16  s16  ssPrsFinalTime         |input;|
    ssPrsAdjustTimeOffset  s16  s16  ssPrsAdjustTimeOffset  |input;|
    ucPrsFineAccNum        u8   u8   ucPrsFineAccNum        |input;|
    ucRes                  u8   u8   ucRes                  |input;|
</sub L1IF_PRS_RSP_S>


