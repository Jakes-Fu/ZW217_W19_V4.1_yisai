/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 描述：消息数据结构定义文件
// 作者：LaoTan
// 日期：2020-03-06 13:53:48
// 版本：V0.0.1
// 版权：CopyRight(c) By RDA
// 
// 消息定义格
//    <MsgID MsgName>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </MsgID MsgName>
//
// 子结构定义
//    <Sub T_Temp>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </Sub T_Temp>
//
//  一个参数的bit位定义
//    <Bit T_Var>
//         成员名      在参数中的Bit位起始位置         成员长度(Bit数)         成员含义       成员选项
//    </Bit T_Var>
//
//  指针类型参数定义
//     参数名          Ptr           参数基类型         参数含义
//  e.g:
//      u16  *pPdschPointer;             ===> pPdschPointer      Ptr   u16             pPdschPointer 
//      T_PDSCH_MEM  *pPdschMapPointer;  ===> pPdschMapPointer   Ptr   T_PDSCH_MEM     pPdschMapPointer
//
//
// 选项定义：
//    |input;|                       参数值允许输入
//    |nochange;|                    参数值不允许改变
//    |select;值1:含义;值2:含义;|    参数值只能选择
//    |dismember;名称;|              参数bit定义
//    |multiedit;|                   数组输入
//         
//  注意：
//      1. 不支持union类型
//      2. ..:取值范围定义,e.g: 1..5,表示1到5范围
//      3. 空格符作为各列间的分隔符，如内容中有空格符，使用Tab符代替.
//      4. 参数基类型，支持u8、u16、u32，s8，s16，s32，自定义子结构、数组、指针类型(Ptr)
// 
/////////////////////////////////////////////////////////////////////////////////////////////////////////



#define  MAX_OTDOA_NCELL_NUM  0x18
#define  MAX_OTDOA_FREQ_LAYER  0x3
#define  MAX_ECID_MEAS_CELL_NUM  0x8
#define  MAX_LTE_FREQ_NUM  0x8
#define  MEM_FIX_RESERVERD_LEN  0x4
#define  STRONGEST_NCELL_NUM_ENG_MODE  0x6
#define  MAX_NCELL_NUM_FOR_MAIN_INFO  0x6
#define  TRACE_NCELL_NUM  0x28
#define  MAX_PLMN_RAT_LEN  0x5
#define  MAX_IMEISV_LEN  0xa
#define  MAX_IMEI_LEN  0x9
#define  MAX_HNBNAME_LEN  0x30
#define  FUNCTION_NAME_ARRAY_SIZE  0x800
#define  FUNCTION_NAME_LENGTH  0xf
#define  CAPI_NO_CAUSE  0x0
#define  CAPI_SPV_CAUSE  0x10
#define  CAPI_MMI_CAUSE  0x11
#define  CAPI_SAP_CAUSE  0x12
#define  CAPI_SIM_CAUSE  0x13
#define  CAPI_LOCAL_CAUSE  0x40
#define  CAPI_SS_ERR_CAUSE  0x41
#define  CAPI_MM_NET_CAUSE  0x42
#define  CAPI_CC_NET_CAUSE  0x43
#define  CAPI_TP_CAUSE  0x44
#define  CAPI_RP_CAUSE  0x45
#define  CAPI_CP_CAUSE  0x46
#define  CAPI_SM_CAUSE  0x47
#define  CAPI_ESM_CAUSE  0x48
#define  CAPI_MM_NET_CAUSE_EMM  0x49
#define  CAPI_LOCAL_CAUSE_EMM  0x50
#define  CAPI_SS_REJ_GEN_CAUSE  0x80
#define  CAPI_SS_REJ_INV_CAUSE  0x81
#define  CAPI_SS_REJ_RES_CAUSE  0x82
#define  CAPI_SS_REJ_ERR_CAUSE  0x83
#define  SAP_CS_NO_CAUSE  0x0
#define  SAP_CS_ACCESS_UNKNOWN  0x1
#define  SAP_CS_ACCESS_NOT_ALLOWED  0x2
#define  SAP_CS_CHV1_NOT_ALLOWED  0x3
#define  SAP_CS_CHV2_NOT_ALLOWED  0x4
#define  SAP_CS_TIMER_TIMEOUT_ERROR  0x5
#define  SAP_CS_FILE_INDEX_INVALID  0x6
#define  SAP_CS_FILE_LENGTH_ERROR  0x7
#define  SAP_CS_FCP_CONTENT_CHK_ERR  0x8
#define  SAP_CS_PBR_CONTENT_CHK_ERR  0x9
#define  SAP_CS_UST_CONTENT_CHK_ERR  0xa
#define  SAP_CS_ARR_CONTENT_CHK_ERR  0xb
#define  SAP_CS_MFDIR_CONTENT_CHK_ERR  0xc
#define  SAP_CS_MOBI_REQ_WRONG_PARA  0xd
#define  SAP_CS_USIM_IS_CORRUPTED  0xe
#define  SAP_CS_FCP_CONTENT_ABSENT  0xf
#define  SAP_CS_IMG_CONTENT_CHK_ERR  0x10
#define  SAP_CS_DRV_EXCEP_RX_PARITY_ERR  0x11
#define  SAP_CS_DRV_EXCEP_TX_PARITY_ERR  0x12
#define  SAP_CS_DRV_EXCEP_CARD_UNRESPONSE  0x13
#define  SAP_CS_DRV_EXCEP_CARD_IS_OUT  0x14
#define  SAP_CS_DRV_EXCEP_CARD_IS_IN  0x15
#define  SAP_CS_DRV_EXCEP_ATR_FAILED  0x21
#define  SAP_CS_DRV_EXCEP_PTS_FAILED  0x22
#define  SAP_CS_DRV_EXCEP_PROCEDURE_BYTE_ERR  0x23
#define  SAP_CS_DRV_EXCEP_WTO  0x24
#define  SAP_CS_DRV_EXCEP_MUTE  0x25
#define  SAP_CS_DRV_EXCEP_EARLY  0x26
#define  SAP_CS_DRV_EXCEP_SUPL  0x27
#define  SAP_CS_DRV_EXCEP_PROT  0x28
#define  SAP_CS_DRV_EXCEP_OTHER  0x29
#define  SAP_CS_DRV_ATR_USIM_INSERTED_ERR  0x31
#define  SAP_CS_DRV_ATR_INSERTED_NO_USIM  0x32
#define  SAP_CS_AUTH_CONTEXT_NOT_MATCH  0x33
#define  SAP_CS_UPIN_NOT_ALLOWED  0x34
#define  SAP_CS_USIM_IS_RETRIEVED  0x35
#define  CAPI_CS_MM_UNALLOACTED_TMSI  0x1
#define  CAPI_CS_MM_UNKNOWN_IMSI  0x2
#define  CAPI_CS_MM_ILLEGAL_MS  0x3
#define  CAPI_CS_MM_IMSI_UNKNOWN_IN_VLR  0x4
#define  CAPI_CS_MM_IMEI_NOT_ACCEPTED  0x5
#define  CAPI_CS_MM_ILLEGAL_ME  0x6
#define  CAPI_PS_GMM_GPRS_SER_NOT_ALLOWED  0x7
#define  CAPI_PS_GMM_GPRS_ALLOWED_AND_NON_GPRS_NOT_ALLOWED  0x8
#define  CAPI_PS_GMM_MS_IDENTITY_CAN_NOT_DERIVED_BY_NETWORK  0x9
#define  CAPI_PS_GMM_IMPLICITY_DETACH  0xa
#define  CAPI_CS_MM_PLMN_NOT_ALLOWED  0xb
#define  CAPI_CS_MM_LAI_NOT_ALLOWED  0xc
#define  CAPI_CS_MM_ROAM_NOT_ALLOWED_IN_LA  0xd
#define  CAPI_PS_GMM_GPRS_SER_NOT_ALLOWED_IN_THIS_PLMN  0xe
#define  CAPI_CS_MM_NO_SUITABLE_CELL_IN_LA  0xf
#define  CAPI_PS_GMM_MSC_TEMP_NOT_REACHABLE  0x10
#define  CAPI_CS_MM_NETWORK_FAILURE  0x11
#define  CAPI_CS_MM_MAC_FAILURE  0x14
#define  CAPI_CS_MM_SYNCH_FAILURE  0x15
#define  CAPI_CS_MM_CONGESTION  0x16
#define  CAPI_CS_MM_GSM_AUTH_UNACCEPTABLE  0x17
#define  CAPI_CS_MM_SERVICE_OPTION_NOT_SUPPORTED  0x20
#define  CAPI_CS_MM_REQUEST_SERV_OPTION_NOT_SUBSCRIBED  0x21
#define  CAPI_CS_MM_SERVICE_OPTION_TEMPORARY_OUT_OF_ORD  0x22
#define  CAPI_CS_MM_CALL_NOT_IDENTIFIED  0x26
#define  CAPI_PS_GMM_NO_PDP_CONTEXT_ACTIVATED  0x28
#define  CAPI_CS_MM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_CS_MM_INVALID_MANDATORY_INFORMATION  0x60
#define  CAPI_CS_MM_MESSAGE_TYPE_NON_EXISTANT_OR_NOT_IMPLEMENTED  0x61
#define  CAPI_CS_MM_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x62
#define  CAPI_CS_MM_INFO_ELEM_NON_EXISTENT_OR_NOT_IMPLEMENTED  0x63
#define  CAPI_CS_MM_CONDITIONAL_IEI_ERROR  0x64
#define  CAPI_CS_MM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x65
#define  CAPI_CS_MM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_EPS_EMM_IMSI_UNKNOWN_IN_HSS  0x2
#define  CAPI_EPS_EMM_ILLEGAL_UE  0x3
#define  CAPI_EPS_EMM_IMEI_NOT_ACCEPTED  0x5
#define  CAPI_EPS_EMM_ILLEGAL_ME  0x6
#define  CAPI_EPS_EMM_EPS_SERVICE_NOT_ALLOWED  0x7
#define  CAPI_EPS_EMM_EPS_SERVICE_AND_NON_EPS_SERVICE_NOT_ALLOWED  0x8
#define  CAPI_EPS_EMM_UE_IDENTITY_CAN_NOT_DERIVED_BY_NETWORK  0x9
#define  CAPI_EPS_EMM_IMPLICITY_DETACH  0xa
#define  CAPI_EPS_EMM_PLMN_NOT_ALLOWED  0xb
#define  CAPI_EPS_EMM_TRACKING_AREA_NOT_ALLOWED  0xc
#define  CAPI_EPS_EMM_ROAM_NOT_ALLOWED_IN_TRACKING_AREA  0xd
#define  CAPI_EPS_EMM_EPS_SERVICE_NOT_ALLOWED_IN_THIS_PLMN  0xe
#define  CAPI_EPS_EMM_NO_SUITABLE_CELL_IN_TRACKING_AREA  0xf
#define  CAPI_EPS_EMM_MSC_TEMPORARILY_NOT_REACHABLE  0x10
#define  CAPI_EPS_EMM_NETWORK_FAILURE  0x11
#define  CAPI_EPS_EMM_CS_DOMAIN_NOT_AVAILABLE  0x12
#define  CAPI_EPS_EMM_ESM_FAILURE  0x13
#define  CAPI_EPS_EMM_MAC_FAILURE  0x14
#define  CAPI_EPS_EMM_SYNCH_FAILURE  0x15
#define  CAPI_EPS_EMM_CONGESTION  0x16
#define  CAPI_EPS_EMM_UE_SECURITY_CAPABILITIES_MISMATCH  0x17
#define  CAPI_EPS_EMM_SECURITY_MODE_REJECTED_UNSPECIFIED  0x18
#define  CAPI_EPS_EMM_NOT_AUTHORIZED_FOR_THIS_CSG  0x19
#define  CAPI_EPS_EMM_NON_EPS_AUTHENTICATION_UNACCEPTABLE  0x1a
#define  CAPI_EPS_EMM_REQUESTED_SERVICE_NOT_AHTH_IN_THIS_PLMN  0x23
#define  CAPI_EPS_EMM_CS_DOMAIN_TEMPORARILY_NOT_AVAILABLE  0x27
#define  CAPI_EPS_EMM_NO_EPS_BEARER_CONTEXT_ACTIVATED  0x28
#define  CAPI_EPS_EMM_SERVICE_NETWORK_FAILURE  0x2a
#define  CAPI_EPS_EMM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_EPS_EMM_INVALID_MANDATORY_INFORMATION  0x60
#define  CAPI_EPS_EMM_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENT  0x61
#define  CAPI_EPS_EMM_MESSAGE_TYPE_NON_COMP_WITH_THE_PRO_STATE  0x62
#define  CAPI_EPS_EMM_INFO_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED  0x63
#define  CAPI_EPS_EMM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_EPS_EMM_MESSAGE_NOT_CAMP_WITH_PROTOCOL_STATE  0x65
#define  CAPI_EPS_EMM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_CS_RP_UNALLOC_UNASSIGN_NBR  0x1
#define  CAPI_CS_RP_OPERATOR_DET_BAR  0x8
#define  CAPI_CS_RP_CALL_BARRED  0xa
#define  CAPI_CS_RP_SMS_TRANS_REJECTED  0x15
#define  CAPI_CS_RP_MEMORY_CAPACITY_EXCEEDED  0x16
#define  CAPI_CS_RP_DEST_OUT_OF_SERVICE  0x1b
#define  CAPI_CS_RP_UNIDENT_SUBSCRIBER  0x1c
#define  CAPI_CS_RP_FACILITY_REJECTED  0x1d
#define  CAPI_CS_RP_UNKNOWN_SUBSCRIBER  0x1e
#define  CAPI_CS_RP_NETWORK_OUT_OF_ORDER  0x26
#define  CAPI_CS_RP_TEMPORARY_FAILURE  0x29
#define  CAPI_CS_RP_CONGESTION  0x2a
#define  CAPI_CS_RP_RESOURCES_UNAVAILABLE  0x2f
#define  CAPI_CS_RP_REQ_FACILITY_NOT_SUBSCR  0x32
#define  CAPI_CS_RP_REQ_FACILITY_NOT_IMPL  0x45
#define  CAPI_CS_RP_INVALID_SMS_TRANS_REF_VAL  0x51
#define  CAPI_CS_RP_INVALID_SHORT_MSG  0x5f
#define  CAPI_CS_RP_MANDATORY_IE_MISSING  0x60
#define  CAPI_CS_RP_MSG_TYPE_NONEXISTENT  0x61
#define  CAPI_CS_RP_INCOMPATIBLE_PROT_STATE  0x62
#define  CAPI_CS_RP_IE_NONEXISTENT_NOTIMPL  0x63
#define  CAPI_CS_RP_INVALID_IE_CONTENTS  0x64
#define  CAPI_CS_RP_PROTOCOL_UNSPECIFIED  0x6f
#define  CAPI_CS_RP_IWK_UNSPECIFIED  0x7f
#define  CAPI_CS_CP_NETWORK_FAILURE  0x11
#define  CAPI_CS_CP_CONGESTION  0x16
#define  CAPI_CS_CP_INVALID_TI  0x51
#define  CAPI_CS_CP_INVALID_SHORT_MSG  0x5f
#define  CAPI_CS_CP_MANDATORY_IE_MISSING  0x60
#define  CAPI_CS_CP_MSG_TYPE_NONEXISTENT  0x61
#define  CAPI_CS_CP_INCOMPATIBLE_PROT_STATE  0x62
#define  CAPI_CS_CP_IE_NONEXISTENT_NOTIMPL  0x63
#define  CAPI_CS_CP_PROTOCOL_UNSPECIFIED  0x6f
#define  CAPI_CS_TP_TELEMATIC_INTERWORKING_NOT_SUPPORTED  0x80
#define  CAPI_CS_TP_SHORT_MESSAGE_TYPE_0_NOT_SUPPORTED  0x81
#define  CAPI_CS_TP_CANNOT_REPLACE_SHORT_MESSAGE  0x82
#define  CAPI_CS_TP_UNSPECIFIED_TP_PID_ERROR  0x8f
#define  CAPI_CS_TP_DATA_CODING_SCHEME_ALPHABET_NOT_SUPPORTED  0x90
#define  CAPI_CS_TP_MESSAGE_CLASS_NOT_SUPPORTED  0x91
#define  CAPI_CS_TP_UNSPECIFIED_TP_DCS_ERROR  0x9f
#define  CAPI_CS_TP_COMMAND_CANNOT_BE_ACTIONED  0xa0
#define  CAPI_CS_TP_COMMAND_UNSUPPORTED  0xa1
#define  CAPI_CS_TP_UNSPECIFIED_TP_COMMAND_ERROR  0xaf
#define  CAPI_CS_TP_TPDU_NOT_SUPPORTED  0xb0
#define  CAPI_CS_TP_SC_BUSY  0xc0
#define  CAPI_CS_TP_NO_SC_SUBSCRIPTION  0xc1
#define  CAPI_CS_TP_SC_SYSTEM_FAILURE  0xc2
#define  CAPI_CS_TP_INVALID_SME_ADDRESS  0xc3
#define  CAPI_CS_TP_DESTINATION_SME_BARRED  0xc4
#define  CAPI_CS_TP_SM_REJECTED_DUPLICATE_SM  0xc5
#define  CAPI_CS_TP_TP_VPF_NOT_SUPPORTED  0xc6
#define  CAPI_CS_TP_TP_VP_NOT_SUPPORTED  0xc7
#define  CAPI_CS_TP_D0_SIM_SMS_STORAGE_FULL  0xd0
#define  CAPI_CS_TP_NO_SMS_STORAGE_CAPABILITY_IN_SIM  0xd1
#define  CAPI_CS_TP_ERROR_IN_MS  0xd2
#define  CAPI_CS_TP_MEMORY_CAPACITY_EXCEEDED  0xd3
#define  CAPI_CS_TP_SIM_APPLICATION_TOOLKIT_BUSY  0xd4
#define  CAPI_CS_TP_SIM_DATA_DOWNLOAD_ERROR  0xd5
#define  CAPI_CS_TP_UNSPECIFIED_ERROR_CAUSE  0xff
#define  CAPI_PS_ESM_OPERATOR_DETERMINTED_BAR  0x8
#define  CAPI_PS_ESM_INSUFFICIENT_RESOURCES  0x1a
#define  CAPI_PS_ESM_MISSING_OR_UNKNOWN_APN  0x1b
#define  CAPI_PS_ESM_UNKNOWN_EPS_ADDR_OR_TYPE  0x1c
#define  CAPI_PS_ESM_USER_AUTHENTICATION_FAILED  0x1d
#define  CAPI_PS_ESM_REQUEST_REJECT_BY_SGW_RO_PGW  0x1e
#define  CAPI_PS_ESM_REJECTED_WITH_UNSPECIFIED  0x1f
#define  CAPI_PS_ESM_SERVICE_NOT_SUPPORTED  0x20
#define  CAPI_PS_ESM_SERVICE_NOT_SUBSCRIBED  0x21
#define  CAPI_PS_ESM_SERVICE_OUT_OF_ORDER  0x22
#define  CAPI_PS_ESM_PTI_ALREADY_IN_USE  0x23
#define  CAPI_PS_ESM_REGULAR_DEACTIVATION  0x24
#define  CAPI_PS_ESM_QOS_NOT_ACCEPTED  0x25
#define  CAPI_PS_ESM_NETWORK_FAILURE  0x26
#define  CAPI_PS_ESM_REACTIVATION_REQUESTED  0x27
#define  CAPI_PS_ESM_SEMANTIC_ERROR_IN_TFT  0x29
#define  CAPI_PS_ESM_SYNTACTICAL_ERROR_IN_TFT  0x2a
#define  CAPI_PS_ESM_INVALID_EBI  0x2b
#define  CAPI_PS_ESM_SEMANTIC_ERROR_IN_FILTER  0x2c
#define  CAPI_PS_ESM_SYNCTACTICAL_ERROR_IN_FILTER  0x2d
#define  CAPI_PS_ESM_EPS_WITHOUT_TFT_ACTIVATED  0x2e
#define  CAPI_PS_ESM_PTI_MISMATCH  0x2f
#define  CAPI_PS_ESM_LAST_PDN_DISCONNECT_NOT_ALLOWED  0x31
#define  CAPI_PS_ESM_IPV4_ONLY_ALLOWED  0x32
#define  CAPI_PS_ESM_IPV6_ONLY_ALLOWED  0x33
#define  CAPI_PS_ESM_SIGNALE_ADDRESS_BEARERS_ONLY_ALLOWE  0x34
#define  CAPI_PS_ESM_ESM_INFO_NOT_RECEIVED  0x35
#define  CAPI_PS_ESM_PDN_CONNECT_NOT_EXIST  0x36
#define  CAPI_PS_ESM_MULT_PDN_FOR_GIVEN_APN_NOT_ALLOWED  0x37
#define  CAPI_PS_ESM_COLLISION_WITH_NET_INITIATED_REQUEST  0x38
#define  CAPI_PS_ESM_UNSUPPORTED_QCI_VALUE  0x3b
#define  CAPI_PS_ESM_BEARER_HANDLING_NOT_SUPPORTED  0x3c
#define  CAPI_PS_ESM_MAX_EPS_BEARER_NUM_REACHED  0x41
#define  CAPI_PS_ESM_REQ_APN_NOT_SUPPORTED_IN_THE_RAT_PLMN  0x42
#define  CAPI_PS_ESM_INVALID_PTI_VALUE  0x51
#define  CAPI_PS_ESM_SEMANTICALLY_INCORRECT_MESSAGE  0x5f
#define  CAPI_PS_ESM_INVALID_MANDATORY_INFORM  0x60
#define  CAPI_PS_ESM_MESSAGE_NON_EXIST_IMPLEMENTED  0x61
#define  CAPI_PS_ESM_MESSAGE_NON_COMPATIBLE_STATE  0x62
#define  CAPI_PS_ESM_IE_NOT_EXIST_OR_IMPLEMENTED  0x63
#define  CAPI_PS_ESM_CONDITIONAL_IE_ERROR  0x64
#define  CAPI_PS_ESM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE  0x65
#define  CAPI_PS_ESM_PROTOCOL_ERROR_UNSPECIFIED  0x6f
#define  CAPI_PS_ESM_APN_INCOMPATIBLE_WITH_ACTIVE_BEARER  0x70
#define  CAPI_PS_ESM_MULTI_ACCESS_TO_A_PDN_NOT_ALLOWED  0x71
#define  CAPI_PS_ESM_REACTIVATION_REQUIRE_FOR_IMS  0xfe
#define  CAPI_CS_LC_STATE_ERROR  0x1
#define  CAPI_CS_LC_NO_CALL_ENTITY  0x2
#define  CAPI_CS_LC_WRONG_TI  0x3
#define  CAPI_CS_LC_NO_SMS_ENTITY  0x4
#define  CAPI_CS_LC_NO_SS_ENTITY  0x5
#define  CAPI_CS_LC_DTMF_BUF_OVERFLOW  0x6
#define  CAPI_CS_LC_CALL_DISCONNECTED  0x7
#define  CAPI_CS_LC_OPERATION_DENIED  0x8
#define  CAPI_CS_LC_NO_CELL_AVAIL  0x11
#define  CAPI_CS_LC_MSG_NOT_COMP_MM_STATE  0x12
#define  CAPI_CS_LC_ABORT_BY_USER  0x13
#define  CAPI_CS_LC_ASN1_DCD_ERROR  0x14
#define  CAPI_CS_LC_GSM_SYNTAX_ERR  0x15
#define  CAPI_CS_LC_SET_PLMN_MODE_REJ  0x16
#define  CAPI_CS_LC_SIM_AUTH_FAILURE  0x17
#define  CAPI_CS_LC_LOCAL_REJECTION  0x20
#define  CAPI_CS_LC_PLMN_NOT_ALLOWED  0x21
#define  CAPI_CS_LC_EMERG_CALL_NOT_POSSIBLE  0x22
#define  CAPI_CS_LC_AUTHENTICATION_REJECTED  0x23
#define  CAPI_CS_LC_NETWORK_REJECTION  0x24
#define  CAPI_CS_LC_LA_NOT_ALLOWED  0x25
#define  CAPI_CS_LC_LOCAL_TIMEOUT  0x26
#define  CAPI_CS_LC_SERV_CONGESTION  0x27
#define  CAPI_CS_LC_LOCAL_DATA_REJECTION  0x28
#define  CAPI_CS_LC_REFRESH_REJECT  0x29
#define  CAPI_CS_LC_NETWORK_FAILURE  0x30
#define  CAPI_CS_LC_MS_DETACHED_FOR_CS  0x31
#define  CAPI_CS_LC_WAITING_CALL_REJECTED  0x32
#define  CAPI_CS_LC_WAITING_CALL_ACCEPTED  0x33
#define  CAPI_CS_LC_NETWORK_TIMEOUT  0x34
#define  CAPI_LC_BACKGROUND_PLMN_SELECT_FAIL  0x35
#define  CAPI_CS_LC_CONFLICT_WITH_OTHERCARD  0x36
#define  CAPI_PS_LC_REL_LOW_LAYER_FAILURE  0x32
#define  CAPI_PS_LC_REL_PLMN_NOT_ALLO  0x33
#define  CAPI_PS_LC_REL_PERFORMING_REG  0x34
#define  CAPI_PS_LC_REL_AUTH_REJ  0x35
#define  CAPI_PS_LC_REL_IMSI_DET  0x36
#define  CAPI_PS_LC_REL_SERV_REJ  0x37
#define  CAPI_PS_LC_REL_NO_NET_RESP  0x38
#define  CAPI_PS_LC_REL_EST_NOT_ALLO  0x39
#define  CAPI_PS_LC_REL_LA_NOT_ALLO  0x3a
#define  CAPI_PS_LC_REL_NORMAL_RELEASE  0x3b
#define  CAPI_PS_LC_REL_NET_ERROR  0x3c
#define  CAPI_PS_LC_REL_TSM_LOCAL_ERROR  0x3d
#define  CAPI_PS_LC_DELETE_SM  0x3e
#define  CAPI_PS_RECEIVE_GMM_PDP_STATUS_IND  0x3f
#define  CAPI_PS_RECEIVE_EMM_EPS_STATUS_IND  0x40
#define  CAPI_PS_LC_REL_EST_NOT_ALLO_FOR_T3346  0x41
#define  CAPI_PS_LC_REL_AUTH_FAIL_DEL_NON_EMC_BS  0x42
#define  CAPI_PS_LC_REL_EMM_RLS_LOCAL_DETACH  0x43
#define  CAPI_PS_LC_CELL_CHANGE_IN_RIN  0x44
#define  CAPI_PS_LC_RESTART_EMC_ATTACH  0x45
#define  CAPI_PS_LC_REL_IMSI_PAGING  0x50
#define  CAPI_PS_LC_REL_NORMAL_PS_RELEASE  0x51
#define  CAPI_PS_LC_MS_DETACHED_FOR_PS  0x52
#define  CAPI_PS_LC_NET_DETACHED_FOR_PS  0x53
#define  CAPI_PS_LC_EPS_BEARER_NOT_EXIT  0x54
#define  CAPI_PS_LC_ABORT_BY_USER  0x55
#define  CAPI_PS_LC_REPORT_MMC_STATE  0x56
#define  CAPI_PS_LC_PDP_TRIG_PS_ATTACH  0x57
#define  CAPI_PS_LC_LOCAL_REL  0x58
#define  CAPI_PS_LC_SIM_AUTH_FAILURE  0x59
#define  CAPI_PS_LC_REL_ESM_LOCAL_ERROR  0x5a
#define  CAPI_PS_LC_T3492_EXPIRY_FOR_5_TIMES  0x5b
#define  CAPI_PS_LC_EPS_LOCAL_DEACTIVE  0x5c
#define  CAPI_PS_LC_TRANSMISSION_ERROR  0x5d
#define  CAPI_PS_LC_EPS_REQUEST_DETACH  0x5e
#define  CAPI_PS_LC_EPS_LOCAL_DETACH  0x5f
#define  CAPI_PS_LC_TBF_RELEASE_IND  0x71
#define  CAPI_PS_LC_DEACT_NON_EM_PDP_BEARER  0x72
#define  CAPI_PS_LC_EMCBS_COLLISION  0x73
#define  CAPI_PS_LC_CONFLICT_WITH_OTHERCARD  0x74
#define  CAPI_PS_LC_GSM_PLMN_SEARCHING  0x61
#define  DBA_RESERVED_PDCP_HEADER_LEN  0x2
#define  DBA_RESERVED_UL_EXTRA_LEN  0x8
#define  DBA_IP_HEAD_LEN  0x3c
#define  DBA_RESERVED_EXT_LEN  0x10
#define  DBA_RESERVED_UL_OFFSET  0x18
#define  DBA_RESERVED_DL_OFFSET  0x4c
#define  DBA_RESERVED_UL_LEN  0x56
#define  DBA_RESERVED_DL_LEN  0x4c
#define  ROHC_RESERVED_UL_LEN  0x12
#define  ROHC_RESERVED_DL_LEN  0x80
#define  PS_UL_BUFF_RESERVED_LEN  0x14
#define  PS_DL_BUFF_RESERVED_LEN  0x80
#define  EAS_WB_MAX_LTE_FREQ_NUM  0x9
#define  EAS_WB_MAX_LTE_CELL_NUM  0x10
#define  EAS_WB_MAX_DCH_BLACKCELL_NUM  0x20
#define  EAS_WB_MAX_PCH_INFO_LENGTH  0x100
#define  EAS_WB_MAX_SI_DATA_LENGTH  0x200
#define  EAS_WB_MAX_SI_NUM  0x20
#define  EAS_WB_MAX_BLACKCELL_NUM  0x10
#define  EAS_WB_MAX_N1_PUCCH_NUM  0x4
#define  EAS_WB_MAX_IDL_BLACKCELL_NUM  0x10
#define  EAS_WB_MAX_FREQBAND  0x14
#define  EAS_WB_MAX_CELL_SEARCH_NUM  0x3
#define  EAS_WB_MAX_FREQ_MEAS_NUM  0x12
#define  EAS_WB_MAX_CSI_RS_ZP_NUM  0x4
#define  EAS_WB_MAX_NEIGH_CELLS_CRS_INFO_NUM  0x8
#define  EAS_WB_MAX_MBSFN_NUM  0x8
#define  EAS_MAX_GGE_CELL_NUM  0x20
#define  MAX_UL_GRANT_RES_NUM  0x2
#define  MAX_UL_ACK_NACK_NUM  0x2
#define  MAX_RECV_RAR_BUFF  0x508
#define  UE_ERRC_MSG_RPT__MAX_LENTH  0x6a4
#define  NORMAL_DATA  0x0
#define  VOLTE_DATA  0x1
#define  TC_DATA  0x2
#define  EMAC_STATISTICS_RETX_TYPE_NUM  0x9
#define  INVALID_BAND  0xffff
#define  MAX_NETINFO_LTE_NCELL_NUM  0x9
#define  MAX_NETINFO_GSM_NCELL_NUM  0x5
#define  EL1C_MAX_IDL_CELL_NUM  0x90
#define  EL1C_MAX_IDL_BLIND_CELL_NUM  0x48
#define  EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM  0x10
#define  EL1C_DCH_FREQ_SUPPORT_BLIND_CELL_NUM  0x6
#define  EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM  0x10
#define  EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM  0x6
#define  EL1C_MAX_DCH_MEAS_CELL_NUM  0x6
#define  EL1C_MAX_ABIS_CELL_NUM  0x2
#define  EL1C_MAX_INTRA_MEAS_CELL_NUM  0x20
#define  EL1C_MAX_IDM_BLOCK_MAX_SUBF_NUM  0x3
#define  EL1C_MAX_IDM_MAX_BLOCK_NUM  0x2
#define  INSTANCE_NUM0  0x0
#define  INSTANCE_NUM1  0x1
#define  INSTANCE_NUM2  0x2
#define  INSTANCE_NUM3  0x3
#define  INSTANCE_NUM4  0x4
#define  INSTANCE_NUM5  0x5
#define  INSTANCE_NUM6  0x6
#define  EIA0  0x0
#define  EIA1  0x1
#define  EIA2  0x2
#define  EIA3  0x3
#define  EEA0  0x0
#define  EEA1  0x1
#define  EEA2  0x2
#define  EEA3  0x3
#define  PS_STATIC_NV  0x1
#define  PS_DYNAMIC_NV  0x2
#define  PS_ENG_NV  0x3
#define  SIM_FILE_MAX_PLMN_SEL_LEN  0xfd
#define  SIM_FILE_MAX_FPLMN_LEN  0x13
#define  TRAF_HANDLE_PRIORITY_SUBSCRIBED  0x0
#define  TRAF_HANDLE_PRIORITY_LEVEL1  0x1
#define  TRAF_HANDLE_PRIORITY_LEVEL2  0x2
#define  TRAF_HANDLE_PRIORITY_LEVEL3  0x3
#define  SOURCE_STATISTICS_UNKNOWN  0x0
#define  SOURCE_STATISTICS_SPEECH  0x1
#define  SIGNAL_IND_NOT_OPTIMISED  0x0
#define  SIGNAL_IND_OPTIMISED  0x1
#define  EXTEND_FLAG_FALSE  0x0
#define  EXTEND_FLAG_TRUE  0x1
#define  CAPI_PLMN_MODE_AUTO  0x0
#define  CAPI_PLMN_MODE_MANUAL  0x1
#define  CAPI_DEREG_GPRS_DETACH  0x1
#define  CAPI_DEREG_IMSI_DETACH  0x2
#define  CAPI_DEREG_COM_DETACH  0x3
#define  CAPI_NO_ATTACH_REQ  0x0
#define  CAPI_COMBINE_ATTACH_REQ  0x1
#define  CAPI_ONLY_GPRS_ATTACH_REQ  0x2
#define  CAPI_ONLY_IMSI_ATTACH_REQ  0x3
#define  CAPI_REG_STATE_NO_CARRIER  0x0
#define  CAPI_REG_STATE_EMERG_IDLE  0x1
#define  CAPI_REG_STATE_IDLE_UPD  0x2
#define  CAPI_REG_STATE_INVALID  0x3
#define  CAPI_REG_STATE_DETACH_IND  0x4
#define  CAPI_REG_STATE_IDLE_UPD_SMS_ONLY  0x5
#define  CAPI_REG_STATE_IDLE_UPD_CSFB_NOT_PREFER  0x6
#define  CAPI_REG_STATE_EMERG_UPD  0x7
#define  CAPI_REG_STATE_LOOP_TEST  0x8
#define  ASSERT_CONTINUE  0x0
#define  ASSERT_RESET  0x1
#define  CK_LEN  0x10
#define  IK_LEN  0x10
#define  MAX_NAS_MSG_LEN  0x640
#define  MAX_TMSI_LEN  0x4
#define  MAX_PTMSI_LEN  0x4
#define  MAX_LAC_LEN  0x2
#define  MAX_LAI_LEN  0x5
#define  MAX_RAI_LEN  0x6
#define  MAX_PLMN_NUM  0x10
#define  MAX_POSSIBLE_PLMNS_NUM  0x10
#define  MAX_STMSI_LEN  0x5
#define  MAX_MME_ID_LEN  0x3
#define  KEY_ENB_LEN  0x20
#define  KEY_ASME_LEN  0x20
#define  MAX_AS_RADIO_ACCESS_CAP_LEN  0x35
#define  MAX_NETWORK_CAPABILITY_LEN  0xa
#define  MAX_SUPPORTED_CODECS  0xa
#define  MAX_FORBIDDEN_LAI_NUM  0x32
#define  MAX_FORBIDDEN_TAI_NUM  0x5
#define  MAX_RAB_ID_NUM  0xff
#define  MAX_CELL_PLMN_NUM  0x6
#define  MAX_UE_ACC_CLASS_LEN  0x2
#define  TCC_PD  0x3
#define  TMM_PD  0x5
#define  GMM_PD  0x8
#define  ESM_PD  0x2
#define  EMM_PD  0x7
#define  GMS_PD  0x9
#define  TSM_PD  0xa
#define  TSS_PD  0xb
#define  TRR_PD  0x6
#define  TEST_PD  0xf
#define  MAX_HSDPA_BUFFER_LEN  0x20000
#define  MAX_HSDPA_BUFFER_LEN_1  0x1ffff
#define  INVALID_U8  0xff
#define  INVALID_U16  0xffff
#define  INVALID_U32  0xffffffff
#define  INVALID_S8  0xffffff81
#define  INVALID_RN  0xffffff01
#define  MAX_PDCP_DECOMP_HEADER  0x80
#define  MAX_NPDU_NUM  0x10
#define  MEM_VALID  0x1
#define  MEM_INVALID  0x0
#define  MEM_OK  0x0
#define  MEM_ERROR  0xe
#define  TC_CLOSE_UE_TEST_LOOP  0x40
#define  TC_CLOSE_UE_TEST_LOOP_COMPLETE  0x41
#define  TC_OPEN_UE_TEST_LOOP  0x42
#define  TC_OPEN_UE_TEST_LOOP_COMPLETE  0x43
#define  TC_ACTIVATE_RB_TEST_MODE  0x0
#define  TC_ACTIVATE_RB_TEST_MODE_COMPLETE  0x0
#define  TC_DEACTIVATE_RB_TEST_MODE  0x46
#define  TC_DEACTIVATE_RB_TEST_MODE_COMPLETE  0x47
#define  TC_TEST_MODE3_RLC_COUNTER_REQ  0x49
#define  TC_TEST_MODE3_RLC_COUNTER_RESPONCE  0x4a
#define  TC_NO_ERROR  0x0
#define  TC_NO_RADIO_BEAR  0x1
#define  PS_ONE_CARD  0x1
#define  PS_TWO_CARD  0x2
#define  STOP_PSDATA  0x1
#define  START_PSDATA  0x0
#define  MAX_BA_LIST_NUM_LTE  0x40
#define  MAX_POSSIBLE_CELL_NUM  0x14
#define  MAX_UL_IP_DATA_NUM  0x2e1
#define  CLASSMARK_NO_MODE  0x0
#define  CLASSMARK_TDL_MODE  0x1
#define  CLASSMARK_TDS_MODE  0x2
#define  CLASSMARK_GGE_MODE  0x4
#define  CLASSMARK_LTEFDD_MODE  0x8
#define  CLASSMARK_WCDMA_MODE  0x10
#define  MAX_RB_NUM_LTE  0x4
#define  EAS_WB_MAX_RB_NUM_LTE  0xb
#define  MAX_FREQ_NUM  0x9
#define  MAX_DRB_NUM  0xb
#define  MAX_GSM_FREQ_NUM  0x20
#define  MAX_GSM_LOCK_FREQ_NUM  0x20
#define  PS_SHUTDOWN_THRESHOLD  0x493e0
#define  LTE_RAT_WB_S1  0x1
#define  LTE_RAT_NB_S1  0x2
#define  RCO_SIM__OTHER_TAG  0x0
#define  RCO_SIM__OTHER_TAG  0x0
#define  RCO_MOD__GET_TAG  0x0
#define  RCO_SIM__GET_TAG  0x0
#define  RCO_WORD__SET_BIT  0x0
#define  RCO_WORD__CLR_BIT  0x0
#define  RCO_WORD__GET_BIT  0x0
#define  RCO_SIM_TAG  0x0
#define  RCO_GET_MSG_POINTER  0x0
#define  RCO_APPLY_MEMORY  0x0
#define  RCO_FILL_SIGNAL_HEADER  0x0
#define  RCO_SEND_SIGNAL_TO_GGE  0x0
#define  RCO_SEND_SIGNAL  0x0
#define  RCO_SEND_SIGNAL  0x0
#define  MASTER_FILE  0x3f00
#define  DIR_MF_TELECOM  0x7f10
#define  DIR_MF_GSM  0x7f20
#define  APPLICATION_DF  0x7fff
#define  DIR_GSM_DF_IRIDIUM  0x5f30
#define  DIR_GSM_DF_GLOBST  0x5f31
#define  DIR_GSM_DF_ICO  0x5f32
#define  DIR_GSM_DF_ACES  0x5f33
#define  DIR_GSM_DF_EIATIA  0x5f40
#define  DIR_GSM_DF_CTS  0x5f60
#define  DIR_GSM_DF_SOLSA  0x5f70
#define  DIR_GSM_DF_MEXE  0x5f3c
#define  DIR_TEL_DF_GRAPHICS  0x5f50
#define  DIR_TEL_DF_PHONE  0x5f3a
#define  DIR_TEL_DF_MULTIMEDIA  0x5f3b
#define  DIR_ADF_PHONEBOOK  0x5f3a
#define  DIR_ADF_GSMACCESS  0x5f3b
#define  DIR_ADF_MEXE  0x5f3c
#define  DIR_ADF_SOLSA  0x5f70
#define  DIR_ADF_WLAN  0x5f40
#define  DIR_RFU  0xffff
#define  EF_RFU  0xffff
#define  FILE_MF_DIR  0x2f00
#define  FILE_MF_PL  0x2f05
#define  FILE_MF_ARR  0x2f06
#define  FILE_MF_ICCID  0x2fe2
#define  FILE_GSM_LP  0x6f05
#define  FILE_GSM_IMSI  0x6f07
#define  FILE_GSM_KC  0x6f20
#define  FILE_GSM_DCK  0x6f2c
#define  FILE_GSM_PLMNSEL  0x6f30
#define  FILE_GSM_HPLMN  0x6f31
#define  FILE_GSM_CNL  0x6f32
#define  FILE_GSM_ACMMAX  0x6f37
#define  FILE_GSM_SST  0x6f38
#define  FILE_GSM_ACM  0x6f39
#define  FILE_GSM_GID1  0x6f3e
#define  FILE_GSM_GID2  0x6f3f
#define  FILE_GSM_PUCT  0x6f41
#define  FILE_GSM_CBMI  0x6f45
#define  FILE_GSM_SPN  0x6f46
#define  FILE_GSM_CBMID  0x6f48
#define  FILE_GSM_BCCH  0x6f74
#define  FILE_GSM_ACC  0x6f78
#define  FILE_GSM_FPLMN  0x6f7b
#define  FILE_GSM_LOCI  0x6f7e
#define  FILE_GSM_AD  0x6fad
#define  FILE_GSM_PHASE  0x6fae
#define  FILE_GSM_VGCS  0x6fb1
#define  FILE_GSM_VGCSS  0x6fb2
#define  FILE_GSM_VBS  0x6fb3
#define  FILE_GSM_VBSS  0x6fb4
#define  FILE_GSM_EMLPP  0x6fb5
#define  FILE_GSM_AAEM  0x6fb6
#define  FILE_GSM_ECC  0x6fb7
#define  FILE_GSM_CBMIR  0x6f50
#define  FILE_GSM_NIA  0x6f51
#define  FILE_GSM_KCGPRS  0x6f52
#define  FILE_GSM_LOCIGPRS  0x6f53
#define  FILE_GSM_SUME  0x6f54
#define  FILE_GSM_PLMNWACT  0x6f60
#define  FILE_GSM_OPLMNWACT  0x6f61
#define  FILE_GSM_HPLMNACT  0x6f62
#define  FILE_GSM_CPBCCH  0x6f63
#define  FILE_GSM_INVSCAN  0x6f64
#define  FILE_GSM_PNN  0x6fc5
#define  FILE_GSM_OPL  0x6fc6
#define  FILE_GSM_MBDN  0x6fc7
#define  FILE_GSM_EXT6  0x6fc8
#define  FILE_GSM_MBI  0x6fc9
#define  FILE_GSM_MWIS  0x6fca
#define  FILE_GSM_CFIS  0x6fcb
#define  FILE_GSM_EXT7  0x6fcc
#define  FILE_GSM_SPDI  0x6fcd
#define  FILE_GSM_MMSN  0x6fce
#define  FILE_GSM_EXT8  0x6fcf
#define  FILE_GSM_MMSICP  0x6fd0
#define  FILE_GSM_MMSUP  0x6fd1
#define  FILE_GSM_MMSUCP  0x6fd2
#define  FILE_GSM_SOLSA_SAL  0x4f30
#define  FILE_GSM_SOLSA_SLL  0x4f31
#define  FILE_GSM_MEXE_MEXEST  0x4f40
#define  FILE_GSM_MEXE_ORPK  0x4f41
#define  FILE_GSM_MEXE_ARPK  0x4f42
#define  FILE_GSM_MEXE_TPRPK  0x4f43
#define  FILE_ADF_WLAN_PSEUDO  0x4f41
#define  FILE_ADF_WLAN_UPLMNWL  0x4f42
#define  FILE_ADF_WLAN_OPLMNWL  0x4f43
#define  FILE_ADF_WLAN_USSIDL  0x4f44
#define  FILE_ADF_WLAN_OSSIDL  0x4f45
#define  FILE_ADF_WLAN_WRI  0x4f46
#define  FILE_ADF_ACSGL  0x4f81
#define  FILE_ADF_OCSGL  0x4f84
#define  FILE_ADF_LI  0x6f05
#define  FILE_ADF_ARR  0x6f06
#define  FILE_ADF_IMSI  0x6f07
#define  FILE_ADF_KEYS  0x6f08
#define  FILE_ADF_KEYSPS  0x6f09
#define  FILE_ADF_DCK  0x6f2c
#define  FILE_ADF_HPLMN  0x6f31
#define  FILE_ADF_CNL  0x6f32
#define  FILE_ADF_ACMMAX  0x6f37
#define  FILE_ADF_UST  0x6f38
#define  FILE_ADF_ACM  0x6f39
#define  FILE_ADF_FDN  0x6f3b
#define  FILE_ADF_SMS  0x6f3c
#define  FILE_ADF_GID1  0x6f3e
#define  FILE_ADF_GID2  0x6f3f
#define  FILE_ADF_MSISDN  0x6f40
#define  FILE_ADF_PUCT  0x6f41
#define  FILE_ADF_SMSP  0x6f42
#define  FILE_ADF_SMSS  0x6f43
#define  FILE_ADF_CBMI  0x6f45
#define  FILE_ADF_SPN  0x6f46
#define  FILE_ADF_SMSR  0x6f47
#define  FILE_ADF_CBMID  0x6f48
#define  FILE_ADF_SDN  0x6f49
#define  FILE_ADF_EXT2  0x6f4b
#define  FILE_ADF_EXT3  0x6f4c
#define  FILE_ADF_BDN  0x6f4d
#define  FILE_ADF_EXT5  0x6f4e
#define  FILE_ADF_CCP2  0x6f4f
#define  FILE_ADF_CBMIR  0x6f50
#define  FILE_ADF_EXT4  0x6f55
#define  FILE_ADF_EST  0x6f56
#define  FILE_ADF_ACL  0x6f57
#define  FILE_ADF_CMI  0x6f58
#define  FILE_ADF_STARTHFN  0x6f5b
#define  FILE_ADF_THRESHOLD  0x6f5c
#define  FILE_ADF_PLMNWACT  0x6f60
#define  FILE_ADF_OPLMNWACT  0x6f61
#define  FILE_ADF_HPLMNWACT  0x6f62
#define  FILE_ADF_PSLOCI  0x6f73
#define  FILE_ADF_ACC  0x6f78
#define  FILE_ADF_FPLMN  0x6f7b
#define  FILE_ADF_LOCI  0x6f7e
#define  FILE_ADF_ICI  0x6f80
#define  FILE_ADF_OCI  0x6f81
#define  FILE_ADF_ICT  0x6f82
#define  FILE_ADF_OCT  0x6f83
#define  FILE_ADF_AD  0x6fad
#define  FILE_ADF_EMLPP  0x6fb5
#define  FILE_ADF_AAEM  0x6fb6
#define  FILE_ADF_ECC  0x6fb7
#define  FILE_ADF_HIDDENKEY  0x6fc3
#define  FILE_ADF_NETPAR  0x6fc4
#define  FILE_ADF_PNN  0x6fc5
#define  FILE_ADF_OPL  0x6fc6
#define  FILE_ADF_MBDN  0x6fc7
#define  FILE_ADF_EXT6  0x6fc8
#define  FILE_ADF_MBI  0x6fc9
#define  FILE_ADF_MWIS  0x6fca
#define  FILE_ADF_CFIS  0x6fcb
#define  FILE_ADF_EXT7  0x6fcc
#define  FILE_ADF_SPDI  0x6fcd
#define  FILE_ADF_MMSN  0x6fce
#define  FILE_ADF_EXT8  0x6fcf
#define  FILE_ADF_MMSICP  0x6fd0
#define  FILE_ADF_MMSUP  0x6fd1
#define  FILE_ADF_MMSUCP  0x6fd2
#define  FILE_ADF_NIA  0x6fd3
#define  FILE_ADF_VGCS  0x6fb1
#define  FILE_ADF_VGCSS  0x6fb2
#define  FILE_ADF_VBS  0x6fb3
#define  FILE_ADF_VBSS  0x6fb4
#define  FILE_ADF_VGCSCA  0x6fd4
#define  FILE_ADF_VBSCA  0x6fd5
#define  FILE_ADF_GBABP  0x6fd6
#define  FILE_ADF_MSK  0x6fd7
#define  FILE_ADF_MUK  0x6fd8
#define  FILE_ADF_GBANL  0x6fda
#define  FILE_ADF_EHPLMN  0x6fd9
#define  FILE_ADF_EPSLOCI  0x6fe3
#define  FILE_ADF_EPSNSC  0x6fe4
#define  FILE_ADF_NASCONFIG  0x6fe8
#define  FILE_ADF_QOSP  0xd1
#define  FILE_ADF_SML  0xd2
#define  FILE_ADF_KC  0x4f20
#define  FILE_ADF_KCGPRS  0x4f52
#define  FILE_ADF_CPBCCH  0x4f63
#define  FILE_ADF_INVSCAN  0x4f64
#define  FILE_ADF_SOLSA_SAL  0x4f30
#define  FILE_ADF_SOLSA_SLL  0x4f31
#define  FILE_ADF_MEXEST  0x4f40
#define  FILE_ADF_ORPK  0x4f41
#define  FILE_ADF_ARPK  0x4f42
#define  FILE_ADF_TPRK  0x4f43
#define  FILE_ADF_TKCDF  0xffff
#define  FILE_ADF_PBR  0x4f30
#define  FILE_ADF_PSC  0x4f22
#define  FILE_ADF_CC  0x4f23
#define  FILE_ADF_PUID  0x4f24
#define  FILE_TEL_ARR  0x6f06
#define  FILE_TEL_ADN  0x6f3a
#define  FILE_TEL_FDN  0x6f3b
#define  FILE_TEL_SMS  0x6f3c
#define  FILE_TEL_CCP  0x6f3d
#define  FILE_TEL_ECCP  0x6f4f
#define  FILE_TEL_MSISDN  0x6f40
#define  FILE_TEL_SMSP  0x6f42
#define  FILE_TEL_SMSS  0x6f43
#define  FILE_TEL_LND  0x6f44
#define  FILE_TEL_SMSR  0x6f47
#define  FILE_TEL_SDN  0x6f49
#define  FILE_TEL_EXT1  0x6f4a
#define  FILE_TEL_EXT2  0x6f4b
#define  FILE_TEL_EXT3  0x6f4c
#define  FILE_TEL_BDN  0x6f4d
#define  FILE_TEL_EXT4  0x6f4e
#define  FILE_TEL_CMI  0x6f58
#define  FILE_TEL_SUME  0x6f54
#define  FILE_TEL_V4KEY  0x6fe0
#define  FILE_TEL_IMG  0x4f20
#define  FILE_TEL_MML  0x4f47
#define  FILE_TEL_MMDF  0x4f48
#define  FILE_TEL_PBR  0x4f30
#define  FILE_TEL_PSC  0x4f22
#define  FILE_TEL_CC  0x4f23
#define  FILE_TEL_PUID  0x4f24
#define  SIM_MAX_FILES_IN_LIST  0x32
#define  SIM_LEN_CHV  0x8
#define  SIM_MAX_LEN_SEARCH_PATTERN  0x10
#define  SIM_MAX_LEN_STATUS  0x64
#define  MAX_SIZE_VALUE_ADD_RECORD  0x3
#define  MAX_SIZE_INCREASED_RECORD  0x3
#define  MAX_SIZE_ENV_PARAM_STK  0xff
#define  MAX_SIZE_ACK_DATA_STK  0x100
#define  MAX_SIZE_TERM_PROF_STK  0x1d
#define  MAX_SIZE_TERM_RESP_STK  0xff
#define  MAX_SIZE_POACT_CMD_STK  0x100
#define  MAX_SIZE_SEEK_RECORD_NUM  0xfe
#define  SIM_MAX_SIZE_AUTH_REQ_DATA  0xff
#define  SIM_MAX_SIZE_AUTH_RSP_DATA  0x100
#define  SIM_MAX_SIZE_RECORD_DATA  0xff
#define  SIM_MAX_SIZE_BIN_DATA_READ  0x100
#define  SIM_MAX_SIZE_BIN_DATA_UPDATE  0xff
#define  SIM_MAX_SIZE_SEND_DATA_ATCMD  0xff
#define  SIM_MAX_SIZE_RECEIVE_DATA_ATCMD  0x100
#define  SIM_MAX_SIZE_DATA_RETRIEVE  0x100
#define  SIM_MAX_SIZE_DATA_SET  0xff
#define  SIM_MAX_PATH_DATA_LEN  0x10
#define  SAP_MAX_AID_LEN  0x10
#define  NO_MORE_INFO  0x0
#define  FILE_OF_BINARY  0x1
#define  FILE_OF_RECORD  0x2
#define  FILE_OF_BERTLV  0x3
#define  FILE_ERROR_AND_NO_MORE_INFO  0xe0
#define  FILE_OF_BINARY_ERROR  0xe1
#define  FILE_OF_RECORD_ERROR  0xe2
#define  FILE_OF_BERTLV_ERROR  0xe3
#define  SAP_EF_NO_INFO  0x0
#define  SAP_EF_TRANSPARENT  0x1
#define  SAP_EF_LINEAR  0x2
#define  SAP_EF_CYCLIC  0x6
#define  SAP_EF_BERTLV  0x39
#define  ADOPMODE_NORMAL  0x0
#define  ADOPMODE_APPROVAL  0x80
#define  ADOPMODE_NORM_SPECIFIC  0x1
#define  ADOPMODE_APPROVAL_SPECIFIC  0x81
#define  ADOPMODE_MAINTENANCE  0x2
#define  ADOPMODE_CELL_TEST  0x4
#define  ADOPMODE_UNKNOWN  0xff
#define  SIM_AUTH_CONTEXT_GSM  0x0
#define  SIM_AUTH_CONTEXT_3G  0x1
#define  SIM_AUTH_CONTEXT_VGCS_VBS  0x2
#define  SIM_AUTH_CONTEXT_GBA  0x4
#define  SIM_AUTH_CONTEXT_MBMS  0x5
#define  SIM_AUTH_CONTEXT_LOCAL_KEY  0x6
#define  SAP_MAX_DATA_ORIENTED_TAG_LEN  0x3
#define  MAX_LTE_BLACK_CELL_NUM  0x10
#define  MAX_PRI_NUM  0x20
#define  MAX_RES_LTE_CELL_NUM  0x10
#define  MAX_GSM_CELL_NUM  0x20
#define  MAX_BLACK_PCID_GROUP_NUM  0x3
#define  IRAT_RESEL_REJ_WRONG_PLMN  0x0
#define  IRAT_RESEL_REJ_FORBIDDEN_LAI  0x1
#define  IRAT_RESEL_REJ_BARRED  0x2
#define  IRAT_RESEL_REJ_DEFAULT  0x3
#define  IRAT_RESEL_ABORT_EST_REQ  0x4
#define  IRAT_RESEL_ABORT_ACT_REQ  0x5
#define  IRAT_DIRECT_PCID_BITMASK  0x1
#define  IRAT_SIXBITMAP_PCID_BITMASK  0x2
#define  IRAT_BITMAP_PCID_BITMASK  0x4
#define  RR_FREQ_NOT_IMPLEMENTED  0x0
#define  IR_RR_NO_RESP_ON_TARGET_CELL  0x1
#define  IR_RR_REJECT_ON_TARGET_CELL  0x2
#define  IR_RESEL_CAUSE_BETTER_CELL  0x0
#define  IR_RESEL_CAUSE_OOS  0x1
#define  MAX_L3_MSG_2G_LEN  0xfa
#define  IR_BAND_INDICATOR__DCS1800  0x0
#define  IR_BAND_INDICATOR__PCS1900  0x1
#define  AS_WB_MAX_SMC_MSG_LEN  0x5
#define  AS_WB_MAX_INT_KEY_LEN  0x10
#define  AS_WB_MAX_RRC_ENC_KEY_LEN  0x10
#define  AS_WB_MAX_UP_ENC_KEY_LEN  0x10
#define  AS_WB_MAX_ENB_KEY_LEN  0x20
#define  MAX_AXIDMA_BUFF_FOR_CAT1  0x400
#define  MAX_AXIDMA_BUFF_FOR_CATM  0x80
#define  MAX_MSG3_LEN  0xc
#define  MAX_MBSFN_NUM  0x8
#define  MAX_CE_LEVEL  0x4
#define  MAX_ACC_STATUS_IND_BUFF  0x508
#define  L1_IRAT_GGE_INVALID_BSIC  0xffff
#define  L1_IRAT_GGE_BSIC_STATUS_SB_SUCCESS  0x0
#define  L1_IRAT_GGE_BSIC_STATUS_SB_FAIL  0x1
#define  L1_IRAT_GGE_BSIC_STATUS_FCB_SUCCESS  0x2
#define  L1_IRAT_GGE_BSIC_STATUS_FCB_FAIL  0x3
#define  EAS_WB_MAX_BSIC_CELL_NUM  0x8
#define  ERRC_WB_NO_AVAILIABLE_CELL  0x0
#define  ERRC_WB_POWER_OFF  0x1
#define  ERRC_WB_PSM_DEACT  0x2
#define  ERRC_WB_EDRX_DEACT  0x3
#define  ERRC_WB_IRAT_GGE  0x4
#define  TEST_COMPLETE  0xef
#define  ERLC_WB_ESTABLISH  0x1
#define  ERLC_WB_RECONFIG  0x2
#define  ERLC_WB_REESTABLISH  0x4
#define  ERLC_WB_UM_MODE  0x1
#define  ERLC_WB_AM_MODE  0x2
#define  ERLC_EPDC_WB_NORMAL_DATA  0x0
#define  ERLC_EPDC_WB_REEST_DATA  0x1
#define  ERLC_EPDC_WB_REEST_COMPLETE  0x2
#define  RL1C_WB_OOS_CAUSE__S_LOWER_THAN_ZERO  0x0
#define  RL1C_WB_OOS_CAUSE__CELL_SYNC_FAIL  0x1
#define  RL1C_WB_OOS_CAUSE__CS_OVER  0x2
#define  RL1C_WB_OOS_CAUSE__IDM_RESET  0x3
#define  RL1C_WB_OOS_CAUSE__IDM_RESET_BLK_CELL  0x4
#define  L2_SRB1_INSTID  0x1
#define  L2_MIN_DRB_INSTID  0x3
#define  L2_WB_MAX_DRB_NUM  0x8
#define  L2_MAX_INST_NUM  0xb
#define  L2_WB_DATA_PDU  0x4
#define  EL2_MAX_SLEEP_COUNTER  0x58000
#define  L2_WB_MAX_SUBFRAME_NUM  0x2800
#define  L2_WB_PDSCH_NODE_RESERVED_NUM  0x14
#define  L2_WB_PDSCH_NODE_RESERVED_THRESHOLD  0x64
#define  EAS_PS_SIGNALLING_TYPE__OTHER  0x0
#define  EAS_PS_SIGNALLING_TYPE__DATA  0x1
#define  EAS_MACI_LEN  0x4
#define  EAS_SIM_NUM  0x2
#define  EMAC_MAX_UL_TRANS_BYTES_CATM  0x175
#define  EMAC_MAX_UL_TRANS_BYTES_CATM  0x7d
#define  EMAC_MAX_UL_TRANS_BYTES_CAT1  0x285
#define  EMAC_MAX_UL_TRANS_BYTES_IP  0x508
#define  MAX_PLMN_LEN  0x3
#define  MAX_IMSI_LEN  0x9
#define  MAX_EQU_PLMNS_NUM  0x14
#define  MAX_PREV_USED_LTE_FREQ_LEN  0xa
#define  MAX_PREV_USED_LTE_BAND_NUM  0x5
#define  MAX_PREV_USED_NB_FREQ_NUM  0xa
#define  MAX_PREV_USED_GSM_BA_NUM  0x21
#define  MAX_BAINFO_LEN  0x12c
#define  MAX_POWER_ON_FREQ_LEN  0xa
#define  MAX_EPS_QOS_LEN  0xd
#define  MAX_APN_LEN  0x64
#define  MAX_PCO_LEN  0x200
#define  MAX_ADDRESSINFOR_LEN  0x14
#define  MAX_PACKETFILTERLIST_LEN  0xfe
#define  MAX_PLMN_NOT_ALLOWED_GPRS_LEN  0xd
#define  MAX_LAI_NOT_ALLOWED_LEN  0x1a
#define  MAX_ROAMING_NOT_ALLOWED_LEN  0x1a
#define  MAX_PLMN_NUM_MULTIMODE  0x20
#define  MAX_PLMN_NUM_MULTIMODE  0x10
#define  MAX_TAILIST_LEN  0x10
#define  MAX_SEC_KEY_LEN  0x10
#define  MAX_TAI_LEN  0x5
#define  MAX_NSAPI_NUM  0x10
#define  MAX_EBI_NUM  0x10
#define  MAX_LOCK_BAND_NUM  0x5
#define  EUTRAN_MAX_SUPPORT_BAND  0x14
#define  MAX_BACK_UP_SI_NUM  0x5
#define  MAX_BACK_UP_SI_DATA_LENGTH  0x118
#define  MAX_BACKUP_APN_LEN  0x20
#define  MAX_T3396_BACKUP_NUM  0x4
#define  MAX_AT_BAKUP_LEN  0x140
#define  MAX_CSW_BAKUP_LEN  0x200
#define  MAX_STORED_PLMN_NUM  0x6
#define  MAX_STORED_EARFCN_NUM  0x1e
#define  IDL_OPTIMIZED_FEATURE_BIT__BETTER_SINR_THRESHOLD_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__EMERGENCY_STATE_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__AMEND_MEAS_RESULT_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__SINR_CTR_MEAS_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__FREQ_PRI_ABNORMAL_DETECT_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__DEFAULT_Q_QUALMIN_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__USING_EQUAL_CRI_FOR_LOWER_ENABLE  0x0
#define  IDL_OPTIMIZED_FEATURE_BIT__HIGH_FREQ_SINR_THRESHOLD_ENABLE  0x0
#define  ERRC_AS_CONFIG_DATA_LEN  0x1388
#define  OP_IDL_STATE_IND  0x2f
#define  IPC_PHY_MSG_POINT  0x0
#define  IPC_PHY_MSG_POINT  0x0
#define  IPC_FREE_MEM  0x0
#define  IPC_FREE_MEM  0x0
#define  IPC_ALLOC_PS_REQ_BUF  0x0
#define  IPC_ALLOC_PS_REQ_BUF  0x0
#define  IPC_SEND_PS_REQ  0x0
#define  IPC_SEND_PS_REQ  0x0
#define  IPC_RECV_PS_REQ  0x0
#define  IPC_ALLOC_PS_CNF_BUF  0x0
#define  IPC_ALLOC_PS_CNF_BUF  0x0
#define  IPC_SEND_PS_CNF  0x0
#define  IPC_SEND_PS_CNF  0x0
#define  IPC_RECV_PS_CNF  0x0
#define  IPC_ALLOC_HARQ_BUF  0x0
#define  IPC_ALLOC_HARQ_BUF  0x0
#define  IPC_SEND_HARQ  0x0
#define  IPC_SEND_HARQ  0x0
#define  IPC_RECV_HARQ  0x0
#define  IPC_ALLOC_PUSCH_BUF  0x0
#define  IPC_ALLOC_PUSCH_BUF  0x0
#define  IPC_SEND_PUSCH  0x0
#define  IPC_SEND_PUSCH  0x0
#define  IPC_RECV_PUSCH  0x0
#define  IPC_RECV_PUSCH  0x0
#define  IPC_FREE_PUSCH_BUF  0x0
#define  IPC_FREE_PUSCH_BUF  0x0
#define  IPC_GET_LAST_PUSCH  0x0
#define  IPC_GET_LAST_PUSCH  0x0
#define  IPC_DROP_LAST_PUSCH  0x0
#define  IPC_DROP_LAST_PUSCH  0x0
#define  IPC_ALLOC_PDSCH_BUF  0x0
#define  IPC_ALLOC_PDSCH_BUF  0x0
#define  IPC_SEND_PDSCH  0x0
#define  IPC_SEND_PDSCH  0x0
#define  IPC_RECV_PDSCH  0x0
#define  IPC_ALLOC_MEAS_A2Z_BUF  0x0
#define  IPC_ALLOC_MEAS_A2Z_BUF  0x0
#define  IPC_SEND_MEAS_A2Z  0x0
#define  IPC_SEND_MEAS_A2Z  0x0
#define  IPC_RECV_MEAS_A2Z  0x0
#define  IPC_ALLOC_MEAS_Z2A_BUF  0x0
#define  IPC_ALLOC_MEAS_Z2A_BUF  0x0
#define  IPC_SEND_MEAS_Z2A  0x0
#define  IPC_SEND_MEAS_Z2A  0x0
#define  IPC_RECV_MEAS_Z2A  0x0
#define  IPC_GET_AVAIL_PDSCH_PTR  0x0
#define  IPC_GET_AVAIL_PDSCH_PTR  0x0
#define  IPC_CLEAN_PDSCH_PTR  0x0
#define  IPC_CLEAN_PDSCH_PTR  0x0
#define  IPC_UPDATE_PHR  0x0
#define  IPC_UPDATE_PHR  0x0
#define  IPC_GET_PHR  0x0
#define  IPC_GET_PHR  0x0
#define  IPC_RESET_DHI  0x0
#define  IPC_RESET_DHI  0x0
#define  IPC_HANDLE_FRAME_TICK  0x0
#define  IPC_HANDLE_FRAME_TICK  0x0
#define  IPC_GET_PDSCH_DATA  0x0
#define  IPC_GET_PDSCH_DATA  0x0
#define  IPC_GET_SERACH_INFO_ADDR  0x0
#define  IPC_GET_SERACH_INFO_ADDR  0x0
#define  IPC_GET_BAND_SWEEP_RSSI_RESULT_ADDR  0x0
#define  IPC_GET_BAND_SWEEP_RSSI_RESULT_ADDR  0x0
#define  IPC_SEND_LPS_ACK  0x0
#define  IPC_SEND_LPS_CMD  0x0
#define  IPC_SEND_LPS_CMD  0x0
#define  IPC_GET_CONFIG_BUF_ADDR  0x0
#define  IPC_GET_CONFIG_BUF_ADDR  0x0
#define  IPC_PHY_WRITE_CSI  0x0
#define  IPC_PHY_WRITE_CSI  0x0
#define  IPC_PHY_READ_CSI  0x0
#define  IPC_PHY_READ_CSI  0x0
#define  IPC_PS_READ_CSI  0x0
#define  IPC_PS_READ_CSI  0x0
#define  IPC_CLEAR_CSI_CHECK  0x0
#define  IPC_CLEAR_CSI_CHECK  0x0
#define  IPC_PHY_READ_CSI_SEND  0x0
#define  IPC_PHY_READ_CSI_SEND  0x0
#define  IPC_PHY_CLEAR_CSI_Send  0x0
#define  IPC_PHY_CLEAR_CSI_Send  0x0
#define  IPC_PS_WRITE_CSI_SEND  0x0
#define  IPC_PS_WRITE_CSI_SEND  0x0
#define  IPC_PHY_WRITE_SRS  0x0
#define  IPC_PHY_WRITE_SRS  0x0
#define  IPC_PHY_READ_SRS  0x0
#define  IPC_PHY_READ_SRS  0x0
#define  IPC_PS_READ_SRS  0x0
#define  IPC_PS_READ_SRS  0x0
#define  IPC_CLEAR_SRS_CHECK  0x0
#define  IPC_CLEAR_SRS_CHECK  0x0
#define  IPC_PHY_READ_SRS_SEND  0x0
#define  IPC_PHY_READ_SRS_SEND  0x0
#define  IPC_PHY_CLEAR_SRS_Send  0x0
#define  IPC_PHY_CLEAR_SRS_Send  0x0
#define  IPC_PS_WRITE_SRS_SEND  0x0
#define  IPC_PS_WRITE_SRS_SEND  0x0
#define  IPC_CHECK_TESTSIM  0x0
#define  IPC_CHECK_TESTSIM  0x0
#define  IPC_CHECK_SIM_EXIST  0x0
#define  IPC_CHECK_SIM_EXIST  0x0
#define  IPC_GET_HALFDUPLEX  0x0
#define  IPC_GET_HALFDUPLEX  0x0
#define  IPC_GET_EARFCN_BAND  0x0
#define  IPC_GET_EARFCN_BAND  0x0
#define  IPC_LTE_NV_REQ  0x0
#define  IPC_LTE_NV_REQ  0x0
#define  IPC_GET_BANDINFO  0x0
#define  IPC_GET_BANDINFO  0xffffffff
#define  IPC_GET_RF_TEMPERATURE  0x0
#define  IPC_GET_RF_TEMPERATURE  0x0
#define  IPC_CORRECT_C0_AFTER_POWER_ON  0x0
#define  IPC_CORRECT_C0_AFTER_POWER_ON  0x0
#define  IPC_CORRECT_C0_ALLOWED  0x0
#define  IPC_CORRECT_C0_ALLOWED  0x0
#define  IPC_CORRECT_C0_PARAM  0x0
#define  IPC_CORRECT_C0_PARAM  0x0
#define  IPC_DIFF_SPECIAL_SF_PATTERN  0x0
#define  IPC_DIFF_SPECIAL_SF_PATTERN  0x0
#define  IPC_CHECK_MOBILITY_STATE  0x0
#define  IPC_CHECK_MOBILITY_STATE  0x0
#define  IPC_HIGH_SPEED_FLAG  0x0
#define  IPC_HIGH_SPEED_FLAG  0x0
#define  IPC_REPETITIVE_PBCH_RX  0x0
#define  IPC_REPETITIVE_PBCH_RX  0x0
#define  IPC_IS_OPTIMIZED_FREQ_MEAS  0x0
#define  IPC_IS_OPTIMIZED_FREQ_MEAS  0x0
#define  IPC_GET_LOCK_FREQ_NUM  0x0
#define  IPC_GET_LOCK_FREQ_NUM  0x0
#define  IPC_GET_LOCK_BAND_NUM  0x0
#define  IPC_GET_LOCK_BAND_NUM  0x0
#define  MAX_IRAT_MEAS_LTE_CELL_NUM  0x20
#define  MAX_IRAT_MEAS_GGE_CELL_NUM  0x20
#define  MAX_IRAT_MEAS_LTE_FREQ_NUM  0x8
#define  APPLY_CAUSE__CELL_SEARCH  0x0
#define  APPLY_CAUSE__INTRA_RAT_RESEL_OOS  0x1
#define  APPLY_CAUSE__INTRA_RAT_RESEL_BETTER  0x2
#define  APPLY_CAUSE__SYSTEM_INFO_UPDATE  0x3
#define  APPLY_CAUSE__INTER_RAT_RESEL_TO_3G4G  0x4
#define  APPLY_CAUSE__INTER_RAT_RESEL_TO_2G  0x5
#define  APPLY_CAUSE__ACCESS_FOR_PS_DATA  0x6
#define  APPLY_CAUSE__ACCESS_FOR_NON_PS_DATA  0x7
#define  APPLY_CAUSE__CELL_SCAN  0x8
#define  APPLY_CAUSE__CSFB_2G_CELL_SEARCH  0x9
#define  APPLY_CAUSE__INVALID  0xa
#define  APPLY_CAUSE__RELEASE_ALL  0xff
#define  SIM1_RR_MODE  0x0
#define  SIM1_ERR_MODE  0x1
#define  SIM2_RR_MODE  0x80
#define  SIM2_ERR_MODE  0x81
#define  CFWADPCSM_TRACE_CSM_INPUT_MSG  0x0
#define  CFWADPCSM_TRACE_CSM_OUTPUT_MSG  0x0
#define  OP_CSM_OUTPUT_MSG_ID  0xabcd
#define  CSM_OUTPUT_INVALID_ID  0xffffffff
#define  CSM_EVENT_STRING_SZ  0x80
#define  CSM_EVENT_LONG_STRING_SZ  0x1ff
#define  CSM_EVENT_MAX_CALL_LIST_SIZE  0x6
#define  CSM_AUDIO_CODER_NUM  0x2
#define  CSM_VIDEO_CODER_NUM  0x2
#define  CSM_CODER_NUM  0x4
#define  CSM_CODER_STRING_SZ  0x1f
#define  CSM_CODER_DESCRIPTION_STRING_SZ  0xff
#define  CSM_PROFILE_DESCRIPTION_STRING_SZ  0xff
#define  CSM_NUMBER_STRING_SZ  0x50
#define  CSM_UNMATCHED_NUM_COUNT  0x1
#define  CSM_ALPHA_STRING_SZ  0x80
#define  CSM_SMS_STRING_SZ  0x200
#define  CSM_SMS_SMSC_NUM_SZ  0xc
#define  CSM_SMS_CALL_ID_SZ  0x100
#define  CSM_FQDN_STRING_SZ  0xff
#define  CSM_SUPSRV_PARAM_STRING_SZ  0x10
#define  CSM_CGI_STRING_SZ  0x40
#define  CSM_LOCATION_STRING_SZ  0x14
#define  CSM_PLMN_STRING_SZ  0x6
#define  CSM_LAC_STRING_SZ  0x4
#define  CSM_TAC_STRING_SZ  0x4
#define  CSM_CI_STRING_SZ  0x4
#define  CSM_UMTS_CID_STRING_SZ  0x7
#define  CSM_ECI_STRING_SZ  0x7
#define  CSM_URI_STRING_SZ  0x80
#define  CSM_USSD_STRING_SZ  0x400
#define  CSM_USSD_ERROR_CODE_SZ  0x8
#define  CSM_USSD_LANGUAGE_SZ  0x20
#define  CSM_AKA_RAND_STRING_SZ  0x10
#define  CSM_AKA_AUTN_STRING_SZ  0x10
#define  CSM_AKA_RESP_STRING_SZ  0x10
#define  CSM_AKA_IK_STRING_SZ  0x10
#define  CSM_AKA_CK_STRING_SZ  0x10
#define  CSM_AKA_AUTS_STRING_SZ  0xe
#define  CSM_MAX_MEDIA_NUM  0x2
#define  CSM_MAX_IP_FLOW_NUM  0x2
#define  CSM_IP_ADDRESS_STRING_SZ  0x80
#define  CSM_HISTORY_INDEX_STRING_SZ  0x8
#define  CSM_HISTORY_MAX_LIST_SIZE  0x3
#define  CSM_INSTANCE_STRING_SZ  0x40
#define  CSM_ERROR_CODE_SIP_START  0x12c
#define  CSM_ERROR_CODE_SIP_UNAUTH  0x191
#define  CSM_ERROR_CODE_SIP_SERVICE_UNAVAILABLE  0x1f7
#define  CSM_ERROR_CODE_SIP_END  0x2bb
#define  CSM_SUPSRV_MAX_QUERY_RESULT  0x5
#define  CSM_SUPSRV_MEDIA_TYPE_NUM  0x2
#define  CSM_INPUT_EVENT_QUEUE_NAME  0x0
#define  CSM_OUTPUT_EVENT_QUEUE_NAME  0x0
#define  CSM_OUTPUT_ISIM_EVENT_QUEUE_NAME  0x0
#define  CSM_INPUT_EVENT_QUEUE_NAME  0x0
#define  CSM_OUTPUT_EVENT_QUEUE_NAME  0x0
#define  CSM_OUTPUT_ISIM_EVENT_QUEUE_NAME  0x0
#define  CSM_INPUT_EVENT_MSGQ_LEN  0x10
#define  CSM_OUTPUT_EVENT_MSGQ_LEN  0x8
#define  CSM_OUTPUT_ISIM_EVENT_MSGQ_LEN  0x8
#define  IR92_DEBUG_TAG  0x0
#define  MAX_CHANNEL_NUM  0x28
#define  MAX_AGC_NUM  0x7d
#define  MAX_APC_NUM  0x7d
#define  MAX_APC_TOTAL_NUM  0x7d0
#define  MAX_AGC_TOTAL_NUM  0x7d0
#define  LTE_TDD_CHANNEL_START  0x8ca0
#define  LTE_FDD_CHANNEL_U2D  0x0
#define  LTE_NST_ARFCN_NUM  0x14
#define  LTE_NST_TX_NUM  0x14
#define  CALIBTEST_DL_RX_TYPE_AGC_CALIB  0x0
#define  CALIBTEST_DL_RX_TYPE_BLER_TEST  0x1
#define  HVY_API_GENERAL_IN  0x0
#define  HVY_API_GENERAL_OUT  0x80
#define  HVY_API_NW_IN  0x100
#define  HVY_API_NW_OUT  0x180
#define  HVY_API_CC_IN  0x200
#define  HVY_API_CC_OUT  0x280
#define  HVY_API_SS_IN  0x300
#define  HVY_API_SS_OUT  0x380
#define  HVY_API_PDP_IN  0x400
#define  HVY_API_PDP_OUT  0x480
#define  HVY_API_PSD_IN  0x500
#define  HVY_API_PSD_OUT  0x580
#define  HVY_API_SIM_IN  0x600
#define  HVY_API_SIM_OUT  0x680
#define  HVY_API_SMSPP_IN  0x700
#define  HVY_API_SMSPP_OUT  0x780
#define  HVY_API_SMSCB_IN  0x800
#define  HVY_API_SMSCB_OUT  0x880
#define  HVY_API_CSD_IN  0x900
#define  HVY_API_CSD_OUT  0x980
#define  HVY_API_CTR_IN  0xa00
#define  HVY_API_CTR_OUT  0xa80
#define  HVY_API_DUMMY_IN  0xb00
#define  HVY_API_IDM_IN  0xc00
#define  HVY_API_IDM_OUT  0xc80
#define  HVY_API_RESERVED  0xff00
#define  API_START_REQ  0x0
#define  API_STOP_REQ  0x1
#define  API_IMEI_REQ  0x2
#define  API_QUAL_REPORT_REQ  0x3
#define  API_NWKINFO_IND  0x4
#define  API_DBGINFO_CMD  0x5
#define  API_CURCELL_INFO_REQ  0x6
#define  API_ADJCELL_INFO_REQ  0x7
#define  API_SYNC_INFO_REQ  0x8
#define  API_PSM_CONFIG_REQ  0x21
#define  API_SET_EPS_MODE_REQ  0x22
#define  API_EDRX_CONFIG_REQ  0x23
#define  API_SET_USAGE_REQ  0x24
#define  API_SET_VOICECFG_REQ  0x25
#define  API_SET_SRVCC_REQ  0x26
#define  API_IMS_STATUS_REQ  0x27
#define  API_IMS_SRV_STATUS_REQ  0x28
#define  API_IMS_NW_REQ_REQ  0x29
#define  API_RUN_UMTS_ALGO_REQ  0x30
#define  API_IMS_SET_VALUE_REQ  0x31
#define  API_IMS_HANDSHAKE_REQ  0x32
#define  API_XCAP_ENABLE_REQ  0x33
#define  API_XCAP_DISABLE_REQ  0x34
#define  API_BLACK_CELL_LIST_SET_REQ  0x40
#define  API_GET_NET_INFO_REQ  0x41
#define  API_GET_CELL_INFO_START_REQ  0x42
#define  API_GET_CELL_INFO_STOP_REQ  0x43
#define  API_IMEI_IND  0x80
#define  API_QUAL_REPORT_CNF  0x81
#define  API_STOP_CNF  0x82
#define  API_DBGINFO_IND  0x83
#define  API_CURCELL_INFO_IND  0x84
#define  API_ADJCELL_INFO_IND  0x85
#define  API_POWERLIST_IND  0x86
#define  API_SYNC_INFO_IND  0x87
#define  API_CELL_LIST_INFO_IND  0x88
#define  API_CELL_LIST_ABORT_IND  0x89
#define  API_IMS_SRV_PREF_IND  0x8a
#define  API_IMS_NW_STATE_IND  0x8b
#define  API_RUN_UMTS_ALGO_CNF  0x8c
#define  API_IMS_SRVCC_START_IND  0x8d
#define  API_IMS_SRVCC_END_IND  0x8e
#define  API_IMS_SRVCC_CANCEL_IND  0x8f
#define  API_EMC_NUM_LIST_IND  0x90
#define  API_IMS_HANDSHAKE_CNF  0x91
#define  API_START_STACK_ERR  0x94
#define  API_GET_NET_INFO_CNF  0x95
#define  API_GET_CELL_INFO_STOP_CNF  0x96
#define  API_GET_CELL_INFO_END_IND  0x97
#define  API_NW_SELMODE_REQ  0x100
#define  API_NW_LIST_REQ  0x101
#define  API_NW_LISTABORT_REQ  0x102
#define  API_NW_SEL_REQ  0x104
#define  API_NW_RESEL_REQ  0x105
#define  API_NW_PSATTACH_REQ  0x106
#define  API_NW_PSDETACH_REQ  0x107
#define  API_POWER_SCAN_REQ  0x108
#define  API_DETECT_MBS_REQ  0x109
#define  API_CELL_LIST_REQ  0x10a
#define  API_NW_CSREGSTATUS_IND  0x180
#define  API_NW_PSREGSTATUS_IND  0x181
#define  API_NW_LIST_IND  0x182
#define  API_NW_STORELIST_IND  0x183
#define  API_POWER_SCAN_RSP  0x184
#define  API_NW_LISTABORT_IND  0x185
#define  API_NW_ERRC_CONNSTATUS_IND  0x186
#define  API_CC_SETUP_REQ  0x200
#define  API_CC_CALLCONF_REQ  0x201
#define  API_CC_ALERT_REQ  0x202
#define  API_CC_CONNECT_REQ  0x203
#define  API_CC_DISC_REQ  0x204
#define  API_CC_RELEASE_REQ  0x205
#define  API_CC_RELEASECMPLT_REQ  0x206
#define  API_CC_STARTDTMF_REQ  0x207
#define  API_CC_STOPDTMF_REQ  0x208
#define  API_CC_CALLHOLD_REQ  0x209
#define  API_CC_CALLRETRIEVE_REQ  0x20a
#define  API_CC_MODIFY_REQ  0x20b
#define  API_CC_MODIFYCMPLT_REQ  0x20c
#define  API_CC_MODIFYREJ_REQ  0x20d
#define  API_CC_NOTIFY_REQ  0x20e
#define  API_CC_FACILITY_REQ  0x20f
#define  API_CC_USER_INFO_REQ  0x210
#define  API_CC_SRVCC_SETUP_REQ  0x211
#define  API_CC_TI_IND  0x280
#define  API_CC_SETUP_IND  0x281
#define  API_CC_CALLPROC_IND  0x282
#define  API_CC_PROGRESS_IND  0x283
#define  API_CC_ALERT_IND  0x284
#define  API_CC_CONNECT_IND  0x285
#define  API_CC_CONNECTACK_IND  0x286
#define  API_CC_DISC_IND  0x287
#define  API_CC_RELEASE_IND  0x288
#define  API_CC_RELEASECMPLT_IND  0x289
#define  API_CC_ERROR_IND  0x28a
#define  API_CC_CALLHOLD_CNF  0x28b
#define  API_CC_CALLRETRIEVE_CNF  0x28c
#define  API_CC_MODIFY_IND  0x28d
#define  API_CC_MODIFYCMPLT_IND  0x28e
#define  API_CC_MODIFYREJ_IND  0x28f
#define  API_CC_NOTIFY_IND  0x290
#define  API_CC_AUDIOON_IND  0x291
#define  API_CC_FACILITY_IND  0x292
#define  API_CC_USER_INFO_IND  0x293
#define  API_CC_CONG_CTRL_IND  0x294
#define  API_CC_AOC_CCM_IND  0x295
#define  API_CC_CHANMODE_IND  0x296
#define  API_CC_REESTAB_BEGIN_IND  0x297
#define  API_CC_REESTAB_CNF_IND  0x298
#define  API_SS_ACTION_REQ  0x300
#define  API_SS_ACTION_CNF  0x380
#define  API_SS_TI_IND  0x381
#define  API_SS_ERROR_IND  0x382
#define  API_SS_ACTION_IND  0x383
#define  API_PDP_CTXACTIVATE_REQ  0x400
#define  API_PDP_CTXMODIFY_REQ  0x401
#define  API_PDP_CTXMODIFY_ACC  0x402
#define  API_PDP_CTXDEACTIVATE_REQ  0x403
#define  API_PDP_SETMINQOS_REQ  0x404
#define  API_PDP_CTXCONFIG_REQ  0x405
#define  API_DEFAULT_PDN_CTXCONFIG_REQ  0x405
#define  API_EPS_CTXACTIVATE_RSP  0x406
#define  API_EPS_CTXACTIVATE_REJ  0x407
#define  API_EPS_CTXALLOCATE_REQ  0x408
#define  API_EPS_CTXMODIFY_REJ  0x409
#define  API_EPS_CTXIMODIFY_REJ  0x409
#define  API_PDP_CTXMODIFY_RSP  0x40b
#define  API_PDP_CTXACTIVATE_CNF  0x480
#define  API_PDP_CTXSMINDEX_IND  0x481
#define  API_PDP_CTXACTIVATE_REJ  0x482
#define  API_PDP_CTXACTIVATE_IND  0x483
#define  API_PDP_CTXMODIFY_CNF  0x484
#define  API_PDP_CTXMODIFY_REJ  0x485
#define  API_PDP_CTXMODIFY_IND  0x486
#define  API_PDP_CTXDEACTIVATE_IND  0x487
#define  API_PDP_CTXDEACTIVATE_CNF  0x488
#define  API_EPS_CTXACTIVATE_IND  0x489
#define  API_EPS_CTXALLOCATE_CNF  0x48a
#define  API_EPS_CTXALLOCATE_REJ  0x48b
#define  API_PSDATA_REQ  0x500
#define  API_PSDATA_REQ_LTE  0x501
#define  API_TFTUPD_REQ_LTE  0x502
#define  API_IPC_PSDATA_REQ  0x503
#define  API_PS_QUEUEDATA_REQ  0x504
#define  API_PSDATA_IND  0x580
#define  API_PS_QUEUECREATE_IND  0x581
#define  API_PS_ULCONGEST_IND  0x582
#define  API_PSDATA_IND_LTE  0x583
#define  API_PS_SUSPEND_IND  0x584
#define  API_PS_RESUME_IND  0x585
#define  API_PS_DATA_FIRST_ID  0x580
#define  API_PS_DATA_LAST_ID  0x583
#define  API_PS_DATA_LAST_ID  0x582
#define  API_SIM_RESET_REQ  0x600
#define  API_SIM_READBINARY_REQ  0x601
#define  API_SIM_UPDATEBINARY_REQ  0x602
#define  API_SIM_READRECORD_REQ  0x603
#define  API_SIM_UPDATERECORD_REQ  0x604
#define  API_SIM_INVALIDATE_REQ  0x605
#define  API_SIM_REHABILITATE_REQ  0x606
#define  API_SIM_SEEK_REQ  0x607
#define  API_SIM_INCREASE_REQ  0x608
#define  API_SIM_VERIFYCHV_REQ  0x609
#define  API_SIM_CHANGECHV_REQ  0x60a
#define  API_SIM_DISABLECHV_REQ  0x60b
#define  API_SIM_ENABLECHV_REQ  0x60c
#define  API_SIM_UNBLOCKCHV_REQ  0x60d
#define  API_SIM_ELEMFILESTATUS_REQ  0x60e
#define  API_SIM_DEDICFILESTATUS_REQ  0x60f
#define  API_SIM_TERMINALPROFILE_REQ  0x610
#define  API_SIM_TERMINALENVELOPE_REQ  0x611
#define  API_SIM_TERMINALRESPONSE_REQ  0x612
#define  API_SIM_STKACTIVATE_REQ  0x613
#define  API_SIM_OPEN_IND  0x614
#define  API_SIM_CLOSE_IND  0x615
#define  API_SIM_POLL_REQ  0x616
#define  API_SIM_POLLOFF_REQ  0x617
#define  API_SIM_SELECTAPPLICATION_REQ  0x618
#define  API_SIM_SETUSIMPBK_REQ  0x619
#define  API_SIM_RETRY_REQ  0x61a
#define  API_SIM_SEEK_ALL_REQ  0x61b
#define  API_SIM_SAVE_FILE_REQ  0x61c
#define  API_SIM_SEND_CMD_REQ  0x61d
#define  API_SIM_MANAGE_CHANNEL_REQ  0x61e
#define  API_SIM_RESET_CNF  0x680
#define  API_SIM_STATUSERROR_IND  0x681
#define  API_SIM_READBINARY_CNF  0x682
#define  API_SIM_UPDATEBINARY_CNF  0x683
#define  API_SIM_READRECORD_CNF  0x684
#define  API_SIM_UPDATERECORD_CNF  0x685
#define  API_SIM_INVALIDATE_CNF  0x686
#define  API_SIM_REHABILITATE_CNF  0x687
#define  API_SIM_SEEK_CNF  0x688
#define  API_SIM_INCREASE_CNF  0x689
#define  API_SIM_VERIFYCHV_CNF  0x68a
#define  API_SIM_CHANGECHV_CNF  0x68b
#define  API_SIM_DISABLECHV_CNF  0x68c
#define  API_SIM_ENABLECHV_CNF  0x68d
#define  API_SIM_UNBLOCKCHV_CNF  0x68e
#define  API_SIM_ELEMFILESTATUS_CNF  0x68f
#define  API_SIM_DEDICFILESTATUS_CNF  0x690
#define  API_SIM_TERMINALPROFILE_CNF  0x691
#define  API_SIM_TERMINALENVELOPE_CNF  0x692
#define  API_SIM_TERMINALRESPONSE_CNF  0x693
#define  API_SIM_FETCH_IND  0x694
#define  API_SIM_SELECTAPPLICATION_CNF  0x695
#define  API_SIM_SETUSIMPBK_CNF  0x696
#define  API_SIM_CLOSE_CNF  0x697
#define  API_SIM_SEEK_ALL_CNF  0x698
#define  API_SIM_RE_POWER_ON_IND  0x699
#define  API_SIM_SAVE_FILE_CNF  0x69a
#define  ISR_SIM_NOTIFYSIMSLOT_IND  0x699
#define  API_SIM_SEND_CMD_CNF  0x69b
#define  API_SIM_MANAGE_CHANNEL_CNF  0x69c
#define  API_SMSPP_SEND_REQ  0x700
#define  API_SMSPP_SENDMMA_REQ  0x701
#define  API_SMSPP_ACK_REQ  0x702
#define  API_SMSPP_ERROR_REQ  0x703
#define  API_SMSPP_ABORTMMA_REQ  0x704
#define  API_SMSPP_ABORT_REQ  0x705
#define  API_SMSPP_ACK_IND  0x780
#define  API_SMSPP_ERROR_IND  0x781
#define  API_SMSPP_RECEIVE_IND  0x782
#define  API_SMSCB_ACTIVATE_REQ  0x800
#define  API_SMSCB_DEACTIVATE_REQ  0x801
#define  API_SMSCB_RECEIVE_IND  0x880
#define  API_SMSCB_PAGE_IND  0x881
#define  API_CSD_DATA_REQ  0x900
#define  API_CSD_CRLPSET_REQ  0x901
#define  API_CSD_CRLPRD_REQ  0x902
#define  API_CSD_DATA_IND  0x980
#define  API_CSD_CRLPRD_IND  0x981
#define  API_SYS_CTR_IND  0xa80
#define  API_TEST_SPLTEDUMMYPARA_REQ  0xb00
#define  API_TEST_RRTMPARAM_REQ  0xb01
#define  API_TEST_GRRLTEFREQ_REQ  0xb02
#define  API_TEST_RRDMPARAM_REQ  0xb03
#define  API_TEST_SPCLEANINFO_REQ  0xb04
#define  API_TEST_L1PARAM_REQ  0xb05
#define  API_ENAS_MESSAGE  0xaaff
#define  API_TJMGB_PARAM_GET_REQ  0xc00
#define  API_TJMGB_5G_PARAM_SET_REQ  0xc01
#define  API_TJMGB_5G_PARAM_GET_REQ  0xc02
#define  API_TJMGB_NODE_SET_REQ  0xc03
#define  API_TJMGB_NODE_GET_REQ  0xc04
#define  API_TJMGB_5G_FRAME_SET_REQ  0xc05
#define  API_TJMGB_OLPC_SET_REQ  0xc06
#define  API_TJMGB_SWITCH_SET_REQ  0xc07
#define  API_TJMGB_PLL_SET_REQ  0xc08
#define  API_TJMGB_RESET_REQ  0xc09
#define  API_TJVERSION_GET_REQ  0xc0a
#define  API_TJMGB_UPINPOW_SET_REQ  0xc0b
#define  API_TJMGB_RUPARAM_SET_REQ  0xc0c
#define  API_TJFREQ_SET_REQ  0xc0d
#define  API_TJPOW_SET_REQ  0xc0e
#define  API_TJMGB_SWITCH_CFG_SET_REQ  0xc0f
#define  API_TJMGB_SWITCH_CFG_GET_REQ  0xc10
#define  API_TJMGB_PARAM_GET_CNF  0xc80
#define  API_TJMGB_5G_PARAM_GET_CNF  0xc81
#define  API_TJMGB_NODE_GET_CNF  0xc82
#define  API_TJVERSION_GET_CNF  0xc83
#define  API_TJMGB_5G_PARAM_SET_CNF  0xc84
#define  API_TJMGB_OLPC_SET_CNF  0xc85
#define  API_TJMGB_SWITCH_SET_CNF  0xc86
#define  API_TJMGB_PLL_SET_CNF  0xc87
#define  API_TJMGB_SWITCH_CFG_GET_CNF  0xc88
#define  API_PSEL_AUTO  0x0
#define  API_PSEL_MANU  0x1
#define  API_A52  0x0
#define  API_A53  0x0
#define  API_A54  0x0
#define  API_A55  0x0
#define  API_A56  0x0
#define  API_A57  0x0
#define  API_GEA1  0x0
#define  API_GEA2  0x0
#define  API_GEA3  0x0
#define  API_GEA4  0x0
#define  API_GEA5  0x0
#define  API_GEA6  0x0
#define  API_GEA7  0x0
#define  API_SIG_ONLY  0x0
#define  API_SPEECH_V1  0x0
#define  API_SPEECH_V2  0x0
#define  API_SPEECH_V3  0x0
#define  API_43_14_KBS  0x0
#define  API_29_14_KBS  0x0
#define  API_43_29_KBS  0x0
#define  API_14_43_KBS  0x0
#define  API_14_29_KBS  0x0
#define  API_29_43_KBS  0x0
#define  API_43_KBS  0x0
#define  API_32_KBS  0x0
#define  API_29_KBS  0x0
#define  API_14_KBS  0x0
#define  API_12_KBS  0x0
#define  API_6_KBS  0x0
#define  API_3_KBS  0x0
#define  API_INVALID_CHAN_MODE  0xffffffff
#define  API_SS_AOC  0x0
#define  API_SS_CALLHOLD  0x0
#define  API_SS_MPTY  0x0
#define  STK_MAX_SIM  0x2
#define  NORMAL_START_TYPE_REQ  0x0
#define  DINGQIAO_SCAN_FREQ_REQ  0x1
#define  API_GACCMETH_ONE_PHASE  0x1
#define  API_GACCMETH_TWO_PHASES  0x2
#define  MAX_LOCK_FREQ_NUM  0x9
#define  LOCK_FREQ_TYPE_FREQ  0x0
#define  LOCK_FREQ_TYPE_CELL  0x1
#define  LOCK_FREQ_TYPE_NOLOCK  0xff
#define  API_MAX_STORE_COUNT  0x21
#define  GSM_CGCLAS_B  0x0
#define  GSM_CGCLAS_C_GPRS  0x1
#define  API_RAT_AUTO  0x0
#define  API_RAT_GSM  0x0
#define  API_RAT_LTE  0x0
#define  API_RAT_CAMP_NO  0x0
#define  API_RAT_CAMP_IRAT  0x0
#define  API_RAT_CAMP_GSM  0x0
#define  API_RAT_CAMP_LTE  0x0
#define  API_LTE_CATM  0x0
#define  API_LTE_NBIOT  0x0
#define  API_LTE_CAT1BIS  0x0
#define  API_IS_LTE_RAT  0x0
#define  API_IS_GSM_RAT  0x0
#define  API_GSM_450  0x0
#define  API_GSM_480  0x0
#define  API_GSM_900P  0x0
#define  API_GSM_900E  0x0
#define  API_GSM_900R  0x0
#define  API_GSM_850  0x0
#define  API_DCS_1800  0x0
#define  API_PCS_1900  0x0
#define  API_EUTRAN_BAND1  0x0
#define  API_EUTRAN_BAND2  0x0
#define  API_EUTRAN_BAND3  0x0
#define  API_EUTRAN_BAND4  0x0
#define  API_EUTRAN_BAND5  0x0
#define  API_EUTRAN_BAND6  0x0
#define  API_EUTRAN_BAND7  0x0
#define  API_EUTRAN_BAND8  0x0
#define  API_EUTRAN_BAND9  0x0
#define  API_EUTRAN_BAND10  0x0
#define  API_EUTRAN_BAND11  0x0
#define  API_EUTRAN_BAND12  0x0
#define  API_EUTRAN_BAND13  0x0
#define  API_EUTRAN_BAND14  0x0
#define  API_EUTRAN_BAND15  0x0
#define  API_EUTRAN_BAND16  0x0
#define  API_EUTRAN_BAND17  0x0
#define  API_EUTRAN_BAND18  0x0
#define  API_EUTRAN_BAND19  0x0
#define  API_EUTRAN_BAND20  0x0
#define  API_EUTRAN_BAND21  0x0
#define  API_EUTRAN_BAND22  0x0
#define  API_EUTRAN_BAND23  0x0
#define  API_EUTRAN_BAND24  0x0
#define  API_EUTRAN_BAND25  0x0
#define  API_EUTRAN_BAND26  0x0
#define  API_EUTRAN_BAND27  0x0
#define  API_EUTRAN_BAND28  0x0
#define  API_EUTRAN_BAND29  0x0
#define  API_EUTRAN_BAND30  0x0
#define  API_EUTRAN_BAND31  0x0
#define  API_EUTRAN_BAND32  0x0
#define  API_EUTRAN_BAND33  0x0
#define  API_EUTRAN_BAND34  0x0
#define  API_EUTRAN_BAND35  0x0
#define  API_EUTRAN_BAND36  0x0
#define  API_EUTRAN_BAND37  0x0
#define  API_EUTRAN_BAND38  0x0
#define  API_EUTRAN_BAND39  0x0
#define  API_EUTRAN_BAND40  0x0
#define  API_EUTRAN_BAND41  0x0
#define  API_EUTRAN_BAND42  0x0
#define  API_EUTRAN_BAND43  0x0
#define  API_EUTRAN_BAND44  0x0
#define  API_EUTRAN_BAND45  0x0
#define  API_EUTRAN_BAND46  0x0
#define  API_EUTRAN_BAND59  0x0
#define  API_EUTRAN_BAND61  0x0
#define  API_EUTRAN_BAND62  0x0
#define  API_EUTRAN_BAND65  0x0
#define  API_EUTRAN_BAND66  0x0
#define  API_EUTRAN_BAND67  0x0
#define  API_EUTRAN_BAND68  0x0
#define  STOP_TYPE_NORMAL  0x0
#define  STOP_TYPE_CLOSE_SIM  0x1
#define  STOP_TYPE_AIRMODE  0x2
#define  STOP_TYPE_RAT_CHANGE  0x3
#define  API_IMEI_SIZE  0xe
#define  API_SV_SIZE  0x2
#define  API_NW_AUTOMATIC_MODE  0x0
#define  API_NW_MANUAL_MODE  0x1
#define  API_NW_LIST_MODE_QSCAN  0x1
#define  API_PS_ATTACH_DEFAULT  0x0
#define  API_PS_ATTACH_GPRS  0x1
#define  API_PS_ATTACH_IMSI  0x2
#define  API_PS_ATTACH_COMB  0x3
#define  API_PS_ATTACH_TYPE_LAST  0x3
#define  API_PS_ATTACH_TYPE_MASK  0x7
#define  API_PS_ATTACH_FOR  0x0
#define  API_PS_DETACH_DEFAULT  0x0
#define  API_PS_DETACH_GPRS  0x1
#define  API_PS_DETACH_IMSI  0x2
#define  API_PS_DETACH_COMB  0x3
#define  API_NW_NO_SVCE  0x0
#define  API_NW_FULL_SVCE  0x1
#define  API_NW_LTD_SVCE  0x2
#define  API_NW_NO_OUTGO  0x3
#define  API_NW_REG_PENDING  0x4
#define  API_NW_SMS_ONLY  0x5
#define  API_NW_EMER_SVCE_ONLY  0x6
#define  API_NW_CSFB_NOT_PREFER  0x7
#define  API_NW_GPRS  0x1
#define  API_NW_EDGE  0x2
#define  API_NW_UMTS  0x3
#define  API_NW_NBIOT  0x4
#define  API_NW_EPS_CatM  0x5
#define  API_NW_EPS_Cat1Bis  0x6
#define  API_RAT_TYPE_3GPP_GERAN  0x1
#define  API_RAT_TYPE_3GPP_UTRAN_FDD  0x2
#define  API_RAT_TYPE_3GPP_UTRAN_TDD  0x3
#define  API_RAT_TYPE_3GPP_E_UTRAN_FDD  0x4
#define  API_RAT_TYPE_3GPP_E_UTRAN_TDD  0x5
#define  API_P_USER_DETACH  0x9
#define  API_P_ILLEGAL_USR  0xc
#define  API_P_SRVC_NOT_ALLOWD  0xd
#define  API_P_FBD_PLMN  0xe
#define  API_P_NO_ROAM_LA  0xf
#define  API_P_FBD_LA  0x10
#define  API_P_NO_CELL_IN_LA  0x11
#define  API_P_SRVC_NOT_ALLOWD_INPLMN  0x12
#define  API_P_NWK_DET  0x13
#define  API_P_CS_NOT_FULL_SVC  0x14
#define  API_P_INVALID_CAUSE  0xff
#define  NW_MM_CONNECTION_NONE  0x0
#define  NW_MM_CONNECTION_CS  0x1
#define  NW_MM_CONNECTION_PSSign_CONN  0x2
#define  NW_MM_CONNECTION_PSData_CONN  0x3
#define  API_PLMN_OK  0x0
#define  API_PLMN_FBD  0x1
#define  API_MAX_AVAIL_PLMN  0x14
#define  API_NORMAL_LIST_ABORT  0x0
#define  API_ABORM_LIST_ABORT  0x1
#define  API_SS_ALL_TELESERVICES  0x0
#define  API_SS_ALL_SPEECH_TELESERVICES  0x10
#define  API_SS_TELEPHONY  0x11
#define  API_SS_EMERGENCY_CALLS  0x12
#define  API_SS_ALL_SMS  0x20
#define  API_SS_SM_MT_PP  0x21
#define  API_SS_SM_MO_PP  0x22
#define  API_SS_ALL_FAX_SERVICES  0x60
#define  API_SS_FAX_GROUP3_ALTER_SPEECH  0x61
#define  API_SS_AUTO_FAX_GROUP3  0x62
#define  API_SS_FAX_GROUP4  0x63
#define  API_SS_ALL_DATA_TELESERVICES  0x70
#define  API_SS_ALL_TELESERVICES_XCPT_SMS  0x80
#define  API_SS_ALL_VOICE_GRP_CALL_SERVICES  0x90
#define  API_SS_VOICE_GROUP_CALL  0x91
#define  API_SS_VOICE_BROADCAST_CALL  0x92
#define  API_SS_allPLMN_specificTS  0xd0
#define  API_SS_plmn_specificTS_1  0xd1
#define  API_SS_plmn_specificTS_2  0xd2
#define  API_SS_plmn_specificTS_3  0xd3
#define  API_SS_plmn_specificTS_4  0xd4
#define  API_SS_plmn_specificTS_5  0xd5
#define  API_SS_plmn_specificTS_6  0xd6
#define  API_SS_plmn_specificTS_7  0xd7
#define  API_SS_plmn_specificTS_8  0xd8
#define  API_SS_plmn_specificTS_9  0xd9
#define  API_SS_plmn_specificTS_A  0xda
#define  API_SS_plmn_specificTS_B  0xdb
#define  API_SS_plmn_specificTS_C  0xdc
#define  API_SS_plmn_specificTS_D  0xdd
#define  API_SS_plmn_specificTS_E  0xde
#define  API_SS_plmn_specificTS_F  0xdf
#define  API_SS_AllBearerServices  0x0
#define  API_SS_AllDataCDAServices  0x10
#define  API_SS_DataCDA_300bps  0x11
#define  API_SS_DataCDA_1200bps  0x12
#define  API_SS_DataCDA_1200_75bps  0x13
#define  API_SS_DataCDA_2400bps  0x14
#define  API_SS_DataCDA_4800bps  0x15
#define  API_SS_DataCDA_9600bps  0x16
#define  API_SS_general_dataCDA  0x17
#define  API_SS_AllDataCDSServices  0x18
#define  API_SS_DataCDS_1200bps  0x1a
#define  API_SS_DataCDS_2400bps  0x1c
#define  API_SS_DataCDS_4800bps  0x1d
#define  API_SS_DataCDS_9600bps  0x1e
#define  API_SS_general_dataCDS  0x1f
#define  API_SS_AllPadAccessCAServices  0x20
#define  API_SS_PadAccessCA_300bps  0x21
#define  API_SS_PadAccessCA_1200bps  0x22
#define  API_SS_PadAccessCA_1200_75bps  0x23
#define  API_SS_PadAccessCA_2400bps  0x24
#define  API_SS_PadAccessCA_4800bps  0x25
#define  API_SS_PadAccessCA_9600bps  0x26
#define  API_SS_general_padAccessCA  0x27
#define  API_SS_ALLDataPDSServices  0x28
#define  API_SS_DataPDS_2400bps  0x2c
#define  API_SS_DataPDS_4800bps  0x2d
#define  API_SS_DataPDS_9600bps  0x2e
#define  API_SS_general_dataPDS  0x2f
#define  API_SS_allAlternateSpeech_DataCDA  0x30
#define  API_SS_allAlternateSpeech_DataCDS  0x38
#define  API_SS_allSpeechFollowedByDataCDA  0x40
#define  API_SS_allSpeechFollowedByDataCDS  0x48
#define  API_SS_allDataCircuitAsynchronous  0x50
#define  API_SS_allAsynchronousServices  0x60
#define  API_SS_allDataCircuitSynchronous  0x58
#define  API_SS_allSynchronousServices  0x68
#define  API_SS_allPLMN_specificBS  0xd0
#define  API_SS_plmn_specificBS_1  0xd1
#define  API_SS_plmn_specificBS_2  0xd2
#define  API_SS_plmn_specificBS_3  0xd3
#define  API_SS_plmn_specificBS_4  0xd4
#define  API_SS_plmn_specificBS_5  0xd5
#define  API_SS_plmn_specificBS_6  0xd6
#define  API_SS_plmn_specificBS_7  0xd7
#define  API_SS_plmn_specificBS_8  0xd8
#define  API_SS_plmn_specificBS_9  0xd9
#define  API_SS_plmn_specificBS_A  0xda
#define  API_SS_plmn_specificBS_B  0xdb
#define  API_SS_plmn_specificBS_C  0xdc
#define  API_SS_plmn_specificBS_D  0xdd
#define  API_SS_plmn_specificBS_E  0xde
#define  API_SS_plmn_specificBS_F  0xdf
#define  API_SS_RETURN_ERROR  0xa3
#define  API_SS_REJECT_COMPONENT  0xa4
#define  API_SS_CAUSE_IE  0xa5
#define  API_SS_UNKNOWN_SUBSCRIBER  0x1
#define  API_SS_ILLEGAL_SUBSCRIBER  0x9
#define  API_SS_BEARER_SERVICE_NOT_PROVISIONED  0xa
#define  API_SS_TELE_SERVICE_NOT_PROVISIONED  0xb
#define  API_SS_ILLEGAL_EQUIPMENT  0xc
#define  API_SS_CALL_BARRED  0xd
#define  API_SS_ILLEGAL_SS_OPERATION  0x10
#define  API_SS_ERROR_STATUS  0x11
#define  API_SS_SS_NOT_AVAILABLE  0x12
#define  API_SS_SUBSCRIPTION_VIOLATION  0x13
#define  API_SS_INCOMPATIBILITY  0x14
#define  API_SS_FACILITY_NOT_SUPPORTED  0x15
#define  API_SS_ABSENT_SUBSCRIBER  0x1b
#define  API_SS_SHORT_TERMINAL_DENIAL  0x1d
#define  API_SS_LONG_TERM_DENIAL  0x1e
#define  API_SS_SYSTEM_FAILURE  0x22
#define  API_SS_DATA_MISSING  0x23
#define  API_SS_UNEXPECTED_DATA_VALUE  0x24
#define  API_SS_PW_REGISTRATION_FAILURE  0x25
#define  API_SS_NEGATIVE_PW_CHECK  0x26
#define  API_SS_NUMBER_OF_PW_ATTEMTS_VIOLATION  0x2b
#define  API_SS_POSITION_METHOD_FAILURE  0x36
#define  API_SS_UNKNOWN_ALPHABET  0x47
#define  API_SS_USSD_BUSY  0x48
#define  API_SS_NBR_SB_EXCEEDED  0x78
#define  API_SS_REJECTED_BY_USER  0x79
#define  API_SS_REJECTED_BY_NETWORK  0x7a
#define  API_SS_DEFLECTION_TO_SERVED_SUBSCRIBER  0x7b
#define  API_SS_SPECIAL_SERVICE_CODE  0x7c
#define  API_SS_INVALID_DEFLECTED_TO_NUMBER  0x7d
#define  API_SS_MAX_NUMER_OF_MPTY_PARTICIPANTS_EXCEEDED  0x7e
#define  API_SS_RESOURCES_NOT_AVAILABLE  0x7f
#define  API_SS_NOT_IMPLEMENTED  0xa
#define  API_SS_OP_INVALID  0xb
#define  API_SS_SSCODE_INVALID  0xc
#define  API_SS_TI_ALLOC_FAILURE  0xd
#define  API_SS_CTX_MEM_ALLOC_FAILURE  0xd
#define  API_SS_PARAM_INVALID  0xf
#define  API_SS_NO_PSWD_ERR  0x10
#define  API_SS_NO_NEW_PSWD_ERR  0x11
#define  API_SS_NO_NEW_PSWD_AGAIN_ERR  0x12
#define  API_SS_NEW_PSWD_MATCH_ERR  0x13
#define  API_SS_ESTAB_ERR  0x14
#define  API_SS_TRANSACTION_TIMEOUT  0x15
#define  API_SS_CONNECTION_LOST  0x16
#define  API_SS_UNKNOWN_COMP_RECEIVED  0x17
#define  API_SS_INVALID_USSD_MSG_TYPE  0x18
#define  API_SS_INVALID_USSD_COMPONENT  0x19
#define  API_SS_USSD_ARG_LEN_TOO_LONG  0x1a
#define  API_SS_USSD_IA5_STRING_TOO_LONG  0x1b
#define  API_SS_USSD_INVALID_TI  0x1c
#define  API_SS_USSD_INVALID_PROB_CODE_TAG  0x1d
#define  API_SS_USSD_INVALID_ERR_CODE  0x1e
#define  API_SS_USSD_INVALID_STATE  0x1f
#define  API_SS_INVALID_USSD_OPERATION  0x20
#define  API_SS_INVALID_USSD_CODE  0x21
#define  API_SS_GENERAL_PROBLEM_TAG  0x80
#define  API_SS_INVOKE_PROBLEM_TAG  0x81
#define  API_SS_RETURN_RESULT_PROBLEM_TAG  0x82
#define  API_SS_RETURN_ERROR_PROBLEM_TAG  0x83
#define  API_SS_GP_UNRECOGNIZED_COMPONENT  0x0
#define  API_SS_GP_MISTYPED_COMPONENT  0x1
#define  API_SS_GP_BADLY_STRUCTURED_COMPONENT  0x2
#define  API_SS_IP_DUPLICATE_INVOKE_ID  0x0
#define  API_SS_IP_UNRECOGNIZED_OPERATION  0x1
#define  API_SS_IP_MISTYPED_PARAMETER  0x2
#define  API_SS_IP_RESOURCE_LIMITATION  0x3
#define  API_SS_IP_INITIATING_RELEASE  0x4
#define  API_SS_IP_UNRECOGNIZED_LINKED_ID  0x5
#define  API_SS_IP_LINKED_RESPONSE_UNEXPECTED  0x6
#define  API_SS_IP_UNEXPECTED_LINKED_OPERATION  0x7
#define  API_SS_RR_UNRECOGNIZED_INVOKE_ID  0x0
#define  API_SS_RR_RETURN_RESULT_UNEXPECTED  0x1
#define  API_SS_RR_MISTYPED_PARAMETER  0x2
#define  API_SS_RE_UNRECOGNIZED_INVOKE_ID  0x0
#define  API_SS_RE_RETURN_ERROR_UNEXPECTED  0x1
#define  API_SS_RE_UNRECOGNIZED_ERROR  0x2
#define  API_SS_RE_UNEXPECTED_ERROR  0x3
#define  API_SS_RE_MISTYPED_PARAMETER  0x4
#define  API_SS_NO_CODE  0x0
#define  API_SS_RELEASE_COMPLETE_MESSAGE_TYPE  0x2a
#define  API_SS_FACILITY_MESSAGE_TYPE  0x3a
#define  API_SS_REGISTER_MESSAGE_TYPE  0x3b
#define  MAX_FWD_TO_NUM_LEN  0x14
#define  MAX_FWD_TO_SUBADDR_LEN  0x15
#define  SS_NUM_PSWD_ELEMS  0x4
#define  SS_USSD_USER_DATA_IA5_STRING_MAX_LEN  0xc8
#define  SS_USSD_ARG_STRING_MAX_LEN  0xa0
#define  API_SS_ITU_T_REC_Q_931  0x0
#define  API_SS_RESERVED_INTERNATIONAL_STANDARD  0x1
#define  API_SS_NATIONAL_STANDARD  0x2
#define  API_SS_GSM_PLMNS  0x3
#define  API_SS_User  0x0
#define  API_SS_PRIVATE_NETWORK_SERVING_LOCAL_USER  0x1
#define  API_SS_PUBLIC_NETWORK_SERVING_LOCAL_USER  0x2
#define  API_SS_TRANSIT_NETWORK  0x3
#define  API_SS_PUBLIC_NETWORK_SERVING_REMOTE_USER  0x4
#define  API_SS_PRIVATE_NETWORK_SERVING_REMOTE_USER  0x5
#define  API_SS_INTERNATIONAL_NETWORK  0x7
#define  API_SS_NETWORK_BEYOND_INTERNETWORKING_POINT  0xa
#define  API_SS_CAUSE_IE_INTERNETWORKING_UNSPECIFIED  0x7f
#define  API_SS_CAUSE_IE_FACILITY_REJECTED  0x9d
#define  API_CRSS_E_NOT_VALID  0xffff
#define  API_CRSS_NO_STATUS  0x0
#define  API_CRSS_MOCALL_HAS_BEEN_FORWARDED  0x0
#define  API_CRSS_MTCALL_HAS_BEEN_FORWARDED  0x0
#define  API_CRSS_MTCALL_IS_FORWARDED_CALL  0x0
#define  API_CRSS_CALL_ON_HOLD  0x5
#define  API_CRSS_CALL_RETRIEVED  0x6
#define  API_CRSS_CALL_IS_WAITING  0x7
#define  API_CRSS_CLIR_SUP_REJECTED  0x8
#define  API_CRSS_STATUS_ACTIVE_OPERATIVE  0x9
#define  API_CRSS_MPTY_INDICATION  0xa
#define  API_CRSS_RETURN_RESULT  0xb
#define  API_CRSS_ERROR_IND  0xc
#define  API_CC_REGULAR_CALL  0x1
#define  API_CC_EMERGENCY_CALL  0x2
#define  API_SIGNAL_INVALID  0xff
#define  API_ALERT_INVALID  0xff
#define  API_CAUSEOFNOCLI_UNAVAILABLE  0x0
#define  API_CAUSEOFNOCLI_REJECTBYUSER  0x1
#define  API_CAUSEOFNOCLI_INTERACTSERV  0x2
#define  API_CAUSEOFNOCLI_PAYPHONE  0x3
#define  API_CAUSEOFNOCLI_INVALID  0x80
#define  API_PROGIND_INVALID  0x0
#define  API_NWKCCCAP_INVALID  0xff
#define  API_NORMAL_RELEASE  0x0
#define  API_LOW_LAYER_FAIL  0x1
#define  API_REQUEST_IMPOSSIBLE  0x2
#define  API_INCOMING_CALL_BARRED  0x3
#define  API_OUTGOING_CALL_BARRED  0x4
#define  API_CALL_HOLD_REJECTED  0x5
#define  API_CALL_RTRV_REJECTED  0x6
#define  API_CC_TIMER_EXPIRY  0x7
#define  API_CC_PROTOCOL_ERROR  0x8
#define  API_AOC_EXPIRY  0x9
#define  API_CC_DTMF_BUFFER_FULL  0xa
#define  API_QOS_LEN_R98  0x3
#define  API_QOS_LEN_R99  0xb
#define  API_QOS_LEN_MAX  0x10
#define  API_ADDR_LEN_MAX  0x16
#define  API_APN_LEN_MAX  0x64
#define  API_PCO_LEN_MAX  0x200
#define  API_PDP_ADD_LEN_MAX  0x16
#define  API_TFT_LEN_MAX  0xff
#define  API_EPS_QOS_LEN  0xd
#define  API_SM_NETWORK_ORIGINATED_TI  0x80
#define  API_PDPCTX_ACTIVE_REQ_SMINDEX_INVALID  0x7f
#define  API_PDP_ACK  0x0
#define  API_PDP_UNACK  0x1
#define  API_PSDATA_OFFSET  0x0
#define  API_PSDATA_LEN  0x0
#define  API_PSDATA_REQ_SIZE  0x0
#define  API_PSALLOC_DATAREQ  0x0
#define  API_PS_ULCONG_OFF  0x0
#define  API_PS_ULCONG_ON  0x1
#define  API_SIM_EF_ADN  0x0
#define  API_SIM_EF_FDN  0x1
#define  API_SIM_EF_SMS  0x2
#define  API_SIM_EF_CCP  0x3
#define  API_SIM_EF_MSISDN  0x4
#define  API_SIM_EF_SMSP  0x5
#define  API_SIM_EF_SMSS  0x6
#define  API_SIM_EF_LND  0x7
#define  API_SIM_EF_SMSR  0x8
#define  API_SIM_EF_SDN  0x9
#define  API_SIM_EF_EXT1  0xa
#define  API_SIM_EF_EXT2  0xb
#define  API_SIM_EF_EXT3  0xc
#define  API_SIM_EF_BDN  0xd
#define  API_SIM_EF_EXT4  0xe
#define  API_SIM_EF_LP  0xf
#define  API_SIM_EF_IMSI  0x10
#define  API_SIM_EF_KC  0x11
#define  API_SIM_EF_PLMNSEL  0x12
#define  API_SIM_EF_HPLMN  0x13
#define  API_SIM_EF_ACMMAX  0x14
#define  API_SIM_EF_SST  0x15
#define  API_SIM_EF_ACM  0x16
#define  API_SIM_EF_GID1  0x17
#define  API_SIM_EF_GID2  0x18
#define  API_SIM_EF_PUCT  0x19
#define  API_SIM_EF_CBMI  0x1a
#define  API_SIM_EF_SPN  0x1b
#define  API_SIM_EF_CBMID  0x1c
#define  API_SIM_EF_BCCH  0x1d
#define  API_SIM_EF_ACC  0x1e
#define  API_SIM_EF_FPLMN  0x1f
#define  API_SIM_EF_LOCI  0x20
#define  API_SIM_EF_AD  0x21
#define  API_SIM_EF_PHASE  0x22
#define  API_SIM_EF_VGCS  0x23
#define  API_SIM_EF_VGCSS  0x24
#define  API_SIM_EF_VBS  0x25
#define  API_SIM_EF_VBSS  0x26
#define  API_SIM_EF_EMLPP  0x27
#define  API_SIM_EF_AAEM  0x28
#define  API_SIM_EF_ECC  0x29
#define  API_SIM_EF_CBMIR  0x2a
#define  API_SIM_EF_NIA  0x2b
#define  API_SIM_EF_KCGPRS  0x2c
#define  API_SIM_EF_LOCIGPRS  0x2d
#define  API_SIM_EF_SUME  0x2e
#define  API_SIM_EF_PLMNWACT  0x2f
#define  API_SIM_EF_OPLMNWACT  0x30
#define  API_SIM_EF_HPLMNACT  0x31
#define  API_SIM_EF_CPBCCH  0x32
#define  API_SIM_EF_INVSCAN  0x33
#define  API_SIM_EF_RPLMNAC  0x34
#define  API_SIM_EF_ICCID  0x35
#define  API_SIM_EF_ELP  0x36
#define  API_SIM_EF_IMG  0x37
#define  API_SIM_EF_MBDN  0x38
#define  API_USIM_EF_LI  0x39
#define  API_USIM_EF_ARR  0x3a
#define  API_USIM_EF_IMSI  0x3b
#define  API_USIM_EF_KEYS  0x3c
#define  API_USIM_EF_KEYS_PS  0x3d
#define  API_USIM_EF_DCK  0x3e
#define  API_USIM_EF_HPLMN  0x3f
#define  API_USIM_EF_CNL  0x40
#define  API_USIM_EF_ACM_MAX  0x41
#define  API_USIM_EF_UST  0x42
#define  API_USIM_EF_ACM  0x43
#define  API_USIM_EF_FDN  0x44
#define  API_USIM_EF_SMS  0x45
#define  API_USIM_EF_GID1  0x46
#define  API_USIM_EF_GID2  0x47
#define  API_USIM_EF_MSISDN  0x48
#define  API_USIM_EF_PUCT  0x49
#define  API_USIM_EF_SMSP  0x4a
#define  API_USIM_EF_SMSS  0x4b
#define  API_USIM_EF_CBMI  0x4c
#define  API_USIM_EF_SPN  0x4d
#define  API_USIM_EF_SMSR  0x4e
#define  API_USIM_EF_CBMID  0x4f
#define  API_USIM_EF_SDN  0x50
#define  API_USIM_EF_EXT2  0x51
#define  API_USIM_EF_EXT3  0x52
#define  API_USIM_EF_BDN  0x53
#define  API_USIM_EF_EXT5  0x54
#define  API_USIM_EF_CBMIR  0x55
#define  API_USIM_EF_EXT4  0x56
#define  API_USIM_EF_EST  0x57
#define  API_USIM_EF_ACL  0x58
#define  API_USIM_EF_CMI  0x59
#define  API_USIM_EF_START_HFN  0x5a
#define  API_USIM_EF_THRESHOLD  0x5b
#define  API_USIM_EF_PLMNWACT  0x5c
#define  API_USIM_EF_OPLMNWACT  0x5d
#define  API_USIM_EF_HPLMNWACT  0x5e
#define  API_USIM_EF_EHPLMN  0x5f
#define  API_USIM_EF_PS_LOCI  0x60
#define  API_USIM_EF_ACC  0x61
#define  API_USIM_EF_FPLMN  0x62
#define  API_USIM_EF_LOCI  0x63
#define  API_USIM_EF_ICI  0x64
#define  API_USIM_EF_OCI  0x65
#define  API_USIM_EF_ICT  0x66
#define  API_USIM_EF_OCT  0x67
#define  API_USIM_EF_AD  0x68
#define  API_USIM_EF_EMLPP  0x69
#define  API_USIM_EF_AAEM  0x6a
#define  API_USIM_EF_ECC  0x6b
#define  API_USIM_EF_HIDDENKEY  0x6c
#define  API_USIM_EF_NETPAR  0x6d
#define  API_USIM_EF_PNN  0x6e
#define  API_USIM_EF_OPL  0x6f
#define  API_USIM_EF_MBDN  0x70
#define  API_USIM_EF_EXT6  0x71
#define  API_USIM_EF_MBI  0x72
#define  API_USIM_EF_MWIS  0x73
#define  API_USIM_EF_CFIS  0x74
#define  API_USIM_EF_EXT7  0x75
#define  API_USIM_EF_SPDI  0x76
#define  API_USIM_EF_MMSN  0x77
#define  API_USIM_EF_EXT8  0x78
#define  API_USIM_EF_MMSICP  0x79
#define  API_USIM_EF_MMSUP  0x7a
#define  API_USIM_EF_MMSUCP  0x7b
#define  API_USIM_EF_NIA  0x7c
#define  API_USIM_EF_VGCS  0x7d
#define  API_USIM_EF_VGCSS  0x7e
#define  API_USIM_EF_VBS  0x7f
#define  API_USIM_EF_VBSS  0x80
#define  API_USIM_EF_VGCSCA  0x81
#define  API_USIM_EF_VBSCA  0x82
#define  API_USIM_EF_GBAP  0x83
#define  API_USIM_EF_MSK  0x84
#define  API_USIM_EF_MUK  0x85
#define  API_USIM_EF_GBANL  0x86
#define  API_USIM_EF_EHPLMNPI  0x87
#define  API_USIM_EF_LRPLMNSI  0x88
#define  API_USIM_EF_NAFKCA  0x89
#define  API_USIM_EF_MEXE_ST  0x8a
#define  API_USIM_EF_ARPK  0x8b
#define  API_USIM_EF_TPRK  0x8c
#define  API_USIM_EF_ORPK  0x8d
#define  API_USIM_EF_KC  0x8e
#define  API_USIM_EF_KC_GPRS  0x8f
#define  API_USIM_EF_CPBCCH  0x90
#define  API_USIM_EF_INVSCAN  0x91
#define  API_USIM_EF_DIR  0x92
#define  API_USIM_EF_ARR_MF  0x93
#define  API_USIM_EF_GB_PBR  0x94
#define  API_USIM_EF_GB_IAP  0x95
#define  API_USIM_EF_GB_IAP1  0x96
#define  API_USIM_EF_GB_ADN  0x97
#define  API_USIM_EF_GB_ADN1  0x98
#define  API_USIM_EF_GB_EXT1  0x99
#define  API_USIM_EF_GB_PBC  0x9a
#define  API_USIM_EF_GB_PBC1  0x9b
#define  API_USIM_EF_GB_GRP  0x9c
#define  API_USIM_EF_GB_GRP1  0x9d
#define  API_USIM_EF_GB_AAS  0x9e
#define  API_USIM_EF_GB_GAS  0x9f
#define  API_USIM_EF_GB_ANRA  0xa0
#define  API_USIM_EF_GB_ANRB  0xa1
#define  API_USIM_EF_GB_ANRC  0xa2
#define  API_USIM_EF_GB_ANRA1  0xa3
#define  API_USIM_EF_GB_ANRB1  0xa4
#define  API_USIM_EF_GB_ANRC1  0xa5
#define  API_USIM_EF_GB_SNE  0xa6
#define  API_USIM_EF_GB_SNE1  0xa7
#define  API_USIM_EF_GB_CCP1  0xa8
#define  API_USIM_EF_GB_UID  0xa9
#define  API_USIM_EF_GB_UID1  0xaa
#define  API_USIM_EF_GB_PSC  0xab
#define  API_USIM_EF_GB_CC  0xac
#define  API_USIM_EF_GB_PUID  0xad
#define  API_USIM_EF_GB_EMAIL  0xae
#define  API_USIM_EF_GB_EMAIL1  0xaf
#define  API_USIM_EF_PBR  0xb0
#define  API_USIM_EF_IAP  0xb1
#define  API_USIM_EF_IAP1  0xb2
#define  API_USIM_EF_ADN  0xb3
#define  API_USIM_EF_ADN1  0xb4
#define  API_USIM_EF_EXT1  0xb5
#define  API_USIM_EF_PBC  0xb6
#define  API_USIM_EF_PBC1  0xb7
#define  API_USIM_EF_GRP  0xb8
#define  API_USIM_EF_GRP1  0xb9
#define  API_USIM_EF_AAS  0xba
#define  API_USIM_EF_GAS  0xbb
#define  API_USIM_EF_ANRA  0xbc
#define  API_USIM_EF_ANRB  0xbd
#define  API_USIM_EF_ANRC  0xbe
#define  API_USIM_EF_ANRA1  0xbf
#define  API_USIM_EF_ANRB1  0xc0
#define  API_USIM_EF_ANRC1  0xc1
#define  API_USIM_EF_SNE  0xc2
#define  API_USIM_EF_SNE1  0xc3
#define  API_USIM_EF_CCP1  0xc4
#define  API_USIM_EF_UID  0xc5
#define  API_USIM_EF_UID1  0xc6
#define  API_USIM_EF_PSC  0xc7
#define  API_USIM_EF_CC  0xc8
#define  API_USIM_EF_PUID  0xc9
#define  API_USIM_EF_EMAIL  0xca
#define  API_USIM_EF_EMAIL1  0xcb
#define  API_SIM_EF_EID  0xcc
#define  API_USIM_EF_SPNI  0xcd
#define  API_USIM_EF_PNNI  0xce
#define  API_USIM_EF_NCPIP  0xcf
#define  API_USIM_EF_EPSLOCI  0xd0
#define  API_USIM_EF_EPSNSC  0xd1
#define  API_USIM_EF_UFC  0xd2
#define  API_USIM_EF_UICCIARI  0xd3
#define  API_USIM_EF_NASCONFIG  0xd4
#define  API_USIM_EF_IMPI  0xd5
#define  API_USIM_EF_IMPU  0xd6
#define  API_USIM_EF_DOMAIN  0xd7
#define  API_USIM_EF_LP  0xf
#define  API_SIM_NEXT_RECORD  0x2
#define  API_SIM_PREV_RECORD  0x3
#define  API_SIM_ABS_CUR_MODE  0x4
#define  API_SIM_TYPE_NO_OUT  0x0
#define  API_SIM_TYPE_REC_NB_OUT  0x0
#define  API_SIM_MODE_BEG_FWD  0x0
#define  API_SIM_MODE_END_RWD  0x1
#define  API_SIM_MODE_NEXT_LOC_FWD  0x2
#define  API_SIM_MODE_PREV_LOC_RWD  0x3
#define  API_DF_GSM  0x0
#define  API_DF_TELECOM  0x1
#define  API_SIM_NO_RESP  0x0
#define  API_SIM_BAD_RESP  0x1
#define  API_SIM_RESET_FIRST_ATT  0x2
#define  API_SIM_RESET_MULT_ATT  0x3
#define  API_SIM_RESET_OK_FILE_FAIL  0x4
#define  API_SIM_RESET_OK_SOFTSIM  0x5
#define  API_GSIM  0x0
#define  API_USIM  0x1
#define  API_SMS_PATH_GSM  0x0
#define  API_SMS_PATH_GPRS  0x1
#define  API_SMS_PATH_LTE  0x2
#define  API_SMS_LOCAL_ERR  0x0
#define  API_SMS_PEER_SMR_ERR  0x1
#define  API_SMS_PEER_SMC_ERR  0x2
#define  API_SMS_MAX_RP_RETRANS  0x0
#define  API_SMS_MAX_CP_RETRANS  0x1
#define  API_SMSCB_MID_LEN  0x14
#define  API_SMSCB_DCS_LEN  0x11
#define  API_CB_TYPE_GSM  0x1
#define  API_CB_TYPE_LTE_CMAS  0x2
#define  API_CB_TYPE_LTE_ETWS  0x4
#define  API_CB_TYPE_ALL  0x7
#define  API_SMSCB_ITF_MSG  0x0
#define  API_SMSCB_ITF_PAGE  0x1
#define  API_CSD_MBX  0x0
#define  API_CSD_QUEUE  0x0
#define  API_CSD_RESERVED_LEN  0x0
#define  API_CSDATA_OFFSET  0x0
#define  API_CSDATA_LEN  0x0
#define  API_CSDATA_REQ_SIZE  0x0
#define  API_RLP_USRPAR_KIM  0x0
#define  API_RLP_USRPAR_KMI  0x0
#define  API_RLP_USRPAR_T1  0x0
#define  API_RLP_USRPAR_N2  0x0
#define  API_RLP_USRPAR_VERS  0x0
#define  API_RLP_USRPAR_T4  0x0
#define  API_RLP_USRPAR_T2  0x0
#define  API_RLP_NB_PAR  0x7
#define  API_DBG_BANDS  0x3
#define  API_DBG_CIPON  0x0
#define  API_DBG_HOPON  0x0
#define  API_DBG_DTXON  0x0
#define  API_DBG_T3212DUR  0x0
#define  API_DBG_ATTACHED  0x0
#define  API_DBG_PDPCTXACT  0x0
#define  API_DBG_GPRSCIPON  0x0
#define  API_POWER_LIST_COUNT  0x32
#define  CCCH_1_CHANNEL_WITH_SDCCH  0x0
#define  CCCH_1_CHANNEL  0x1
#define  CCCH_2_CHANNEL  0x2
#define  CCCH_3_CHANNEL  0x3
#define  CCCH_4_CHANNEL  0x4
#define  INVALID_CCCH_CHANNEL_NUM  0xff
#define  BAND_GSM900  0x9
#define  BAND_DCS1800  0x12
#define  BAND_PCS1900  0x13
#define  BAND_INVALID  0xff
#define  API_NETWORK_STATUS_CS_SIM_KO  0x0
#define  API_NETWORK_STATUS_CS_SERVICE_MASK  0x0
#define  API_NETWORK_STATUS_CS_NO  0x0
#define  API_NETWORK_STATUS_CS_FULL  0x0
#define  API_NETWORK_STATUS_CS_EMC  0x0
#define  API_NETWORK_STATUS_PS_SIM_KO  0x0
#define  API_NETWORK_STATUS_PS_SERVICE_MASK  0x0
#define  API_NETWORK_STATUS_PS_KO  0x0
#define  API_NETWORK_STATUS_PS_OK  0x0
#define  API_NETWORK_STATUS_SIMCARD_NOT_EXIST  0x0
#define  API_IMS_AKA_SUCCESS  0x0
#define  API_IMS_AKA_SQN_FAILURE  0x1
#define  API_IMS_AKA_MAC_FAILURE  0x2
#define  API_IMS_AKA_OTH_FAILURE  0x3
#define  API_CC_CALL_STATE_PROCEEDING  0x0
#define  API_CC_CALL_STATE_ACTIVE  0x1
#define  API_CC_CALL_STATE_DELIVERED  0x2
#define  API_CC_CALL_STATE_RECEIVED  0x3
#define  API_CC_AUX_STATE_HOLD_IDLE  0x0
#define  API_CC_AUX_STATE_HOLD_REQ  0x1
#define  API_CC_AUX_STATE_CALL_HOLD  0x2
#define  API_CC_AUX_STATE_RETRIEVE_REQ  0x3
#define  API_CC_AUX_STATE_MPTY_IDLE  0x0
#define  API_CC_AUX_STATE_MPTY_REQ  0x1
#define  API_CC_AUX_STATE_CALL_IN_MPTY  0x2
#define  API_CC_AUX_STATE_SPLIT_REQ  0x3
#define  API_MAX_BLACK_CELL_NUM  0x4
#define  API_MAX_BLACK_CELL_NUM  0x4
#define  API_USER_OPER_NONE  0x0
#define  API_USER_OPER_SEL_PLMN  0x1
#define  API_USER_OPER_ATTACH_REQ  0x2
#define  API_USER_OPER_DETACH_REQ  0x4
#define  API_IDM_5GCH1  0x1
#define  API_IDM_5GCH2  0x2
#define  API_IDM_MAX_NODE  0x40
#define  MM_MMC_UPDATE_FLAG_REG  0x1
#define  MM_MMC_UPDATE_FLAG_DEREG  0x0
#define  MM_INFO_SYNC_NONE  0x0
#define  MM_INFO_SYNC_LOCI  0x1
#define  MM_INFO_SYNC_GPRS_FPLMN  0x2
#define  MM_INFO_SYNC_SEC_CTX  0x4
#define  MM_INFO_SYNC_PS_CTX_STATUS  0x8
#define  MM_INFO_SYNC_SIM_RESET  0x10
#define  LTE_GUTI_LENGTH  0xc
#define  MM_TIN_INVALID  0x0
#define  MM_TIN_GUTI  0x1
#define  MM_TIN_PTMSI  0x2
#define  MM_TIN_RAT_RELATED_TMSI  0x3
#define  MM_CS_CONNECTION_START  0x0
#define  MM_CS_CONNECTION_READY  0x1
#define  MM_CS_CONNECTION_END  0x2
#define  MM_USER_PS_DETACH_CMP  0x3
#define  MM_MT_CALL_SUCCESS  0x4
#define  INTERRAT_CHN_TYPE_NONE  0x0
#define  INTERRAT_CHN_TYPE_RESEL  0x1
#define  INTERRAT_CHN_TYPE_CCO  0x2
#define  INTERRAT_CHN_TYPE_HO  0x3
#define  PCO_LEN_FOR_IRAT  0x64
#define  MAX_BLACK_CELL_NUM  0x4
#define  ADP_MAX_IDM_RECV_DATA_NUM  0x14



<sub T_MsgHeader>
    len       u16  u16  len       |input;|
    txName    u16  u16  txName    |input;|
    txIns     u16  u16  txIns     |input;|
    rxName    u16  u16  rxName    |input;|
    rxIns     u16  u16  rxIns     |input;|
    opType    u16  u16  opType    |input;|
    simFlag   u16  u16  simFlag   |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_MsgHeader>


<sub Prim_Hdr_Type>
    lPrimId   U32  U32  lPrimId   |input;|
    lPrimLen  U32  U32  lPrimLen  |input;|
</sub Prim_Hdr_Type>


<union T_MsgHdr_U>
    hdr           struct         Prim_Hdr_Type  
    signalHeader  struct         T_MsgHeader    
</union T_MsgHdr_U>


<sub T_HeaderInfo>
    subFrameNum    u16  u16  subFrameNum    |input;|
    workMode       u16  u16  workMode       |input;|
    stateFlag      u16  u16  stateFlag      |input;|
    primitiveFlag  u16  u16  primitiveFlag  |input;|
    spareLen       u16  u16  spareLen       |input;|
    length         u16  u16  length         |input;|
</sub T_HeaderInfo>


<sub T_CommonPdu>
    pduLen         u16  u16  pduLen         |input;|
    pdcpHeaderLen  u16  u16  pdcpHeaderLen  |input;|
    pduData        Ptr  u8   
</sub T_CommonPdu>


<sub T_RohcRestoreInfo>
    rohcHeaderLen   u16  u16  rohcHeaderLen   |input;|
    ipHeaderPoint   Ptr  u8   
    ipHeaderData    Ptr  u8   
</sub T_RohcRestoreInfo>


<sub T_ComPduLte>
    pduType                u8                 u8                 pduType                |input;|
    dataType               u8                 u8                 dataType               |input;|
    ebi                    u16                u16                ebi                    |input;|
    pdcpSn                 u16                u16                pdcpSn                 |input;|
    maxExpireCnt           u32                u32                maxExpireCnt           |input;|
    count                  u32                u32                count                  |input;|
    sduOffset              u16                u16                sduOffset              |input;|
    li                     u16                u16                li                     |input;|
    pduLen                 u16                u16                pduLen                 |input;|
    pdcpHeaderLen          u16                u16                pdcpHeaderLen          |input;|
    rohcRestoreInfo        struct             T_RohcRestoreInfo  
    feedback               u8                 u8                 feedback               |input;|
    rai                    u16                u16                rai                    |input;|
    type_of_user_data      u16                u16                type_of_user_data      |input;|
    pPduData               Ptr                u8                 
    pFreeQE                Ptr                void               
    pNext                  Ptr                T_ComPduLte_Tag    
</sub T_ComPduLte>


<sub T_ComSduLte>
    dataType               u8      u8      dataType               |input;|
    pdcpSn                 u16     u16     pdcpSn                 |input;|
    discardFlag            u16     u16     discardFlag            |input;|
    sduLen                 u16     u16     sduLen                 |input;|
    pdcpHeaderLen          u16     u16     pdcpHeaderLen          |input;|
    dhcpFlag               u32     u32     dhcpFlag               |input;|
    pSduData               Ptr     u8      
    pSduDataFree           Ptr     void    
    pNext                  Ptr     T_ComSduLte_Tag
</sub T_ComSduLte>


<sub T_headComInfo>
    maxCid    u16  u16  maxCid    |input;|
    profiles  u16  u16  profiles  |input;|
</sub T_headComInfo>


<sub T_CellDescLte>
    frequency  u32  u32  frequency  |input;|
    phyCellId  u16  u16  phyCellId  |input;|
    reserved   u16  u16  reserved   |input;|
</sub T_CellDescLte>


<sub T_UBIT_DMA_INFO>
    sourceAddr  u32  u32  sourceAddr  |input;|
    length      u32  u32  length      |input;|
</sub T_UBIT_DMA_INFO>


<sub T_CellMesResult_MultiMode>
    freq             u16  u16  freq             |input;|
    cellParameterId  u16  u16  cellParameterId  |input;|
    rscp             u8   u8   rscp             |input;|
    rsrq             u8   u8   rsrq             |input;|
    sfType           u8   u8   sfType           |input;|
    sfPattern        u8   u8   sfPattern        |input;|
</sub T_CellMesResult_MultiMode>


<sub T_CellInfo_MultiMode>
    servCell                                        struct                     T_CellMesResult_MultiMode  
    lteNum                                          u16                        u16                        lteNum                                          |input;|
    lteNeighbourCell[STRONGEST_NCELL_NUM_ENG_MODE]  array                      T_CellMesResult_MultiMode  lteNeighbourCell                                |multiedit;|
</sub T_CellInfo_MultiMode>


<sub T_NcellInfoForTrace>
    lteNum                      u8     u8     lteNum                      |input;|
    gsmNum                      u8     u8     gsmNum                      |input;|
    reserved[2]                 array  u8     reserved                    |multiedit;|
    frequency[TRACE_NCELL_NUM]  array  u32    frequency                   |multiedit;|
    cellId[TRACE_NCELL_NUM]     array  u16    cellId                      |multiedit;|
    rscpLevel[TRACE_NCELL_NUM]  array  s16    rscpLevel                   |multiedit;|
    rssiLevel[TRACE_NCELL_NUM]  array  s16    rssiLevel                   |multiedit;|
    s[TRACE_NCELL_NUM]          array  s16    s                           |multiedit;|
    r[TRACE_NCELL_NUM]          array  s16    r                           |multiedit;|
    sinrLevel[TRACE_NCELL_NUM]  array  u16    sinrLevel                   |multiedit;|
</sub T_NcellInfoForTrace>


<sub T_ERRC_servCellInfoForTrac>
    errcMode      u8     u8     errcMode      |input;|
    errcSubState  u8     u8     errcSubState  |input;|
    tai[5]        array  u8     tai           |multiedit;|
    resvered1     u8     u8     resvered1     |input;|
    freq          u32    u32    freq          |input;|
    phyId         u16    u16    phyId         |input;|
    measEvent     u32    u32    measEvent     |input;|
    dlBandWidth   u8     u8     dlBandWidth   |input;|
    sfAssignment  u8     u8     sfAssignment  |input;|
    icsResult     u8     u8     icsResult     |input;|
    accResult     u8     u8     accResult     |input;|
</sub T_ERRC_servCellInfoForTrac>


<sub T_CellServLte>
    frequency          u32  u32  frequency          |input;|
    phyCellId          u16  u16  phyCellId          |input;|
    cellType           u16  u16  cellType           |input;|
    dlBandWidth        u16  u16  dlBandWidth        |input;|
    ulBandWidth        u16  u16  ulBandWidth        |input;|
    dlCpType           u16  u16  dlCpType           |input;|
    ulCpType           u16  u16  ulCpType           |input;|
    sfAssigment        u16  u16  sfAssigment        |input;|
    specialSfPatern    u16  u16  specialSfPatern    |input;|
    antennaPortsCount  u16  u16  antennaPortsCount  |input;|
    reserved           u16  u16  reserved           |input;|
</sub T_CellServLte>


<sub T_MeasSubframePatternR10>
    subframePatternIndex  u16    u16    subframePatternIndex  |input;|
    subframePattern[7]    array  u16    subframePattern       |multiedit;|
</sub T_MeasSubframePatternR10>


<sub T_PhichConfig>
    phichDuration  u16  u16  phichDuration  |input;|
    phichResource  u16  u16  phichResource  |input;|
</sub T_PhichConfig>


<sub T_MbsfnConfigInfo>
    radioframeAllocatPeriod  u16  u16  radioframeAllocatPeriod  |input;|
    radioframeAllocatOffset  u16  u16  radioframeAllocatOffset  |input;|
    subframeAllocationInfo   u32  u32  subframeAllocationInfo   |input;|
</sub T_MbsfnConfigInfo>


<sub T_MeasFreqResult>
    frequency                                   u32    u32    frequency                                   |input;|
    intraCellMeasNum                            u16    u16    intraCellMeasNum                            |input;|
    measFlag                                    u16    u16    measFlag                                    |input;|
    lteMeasCellIdList[EAS_WB_MAX_LTE_CELL_NUM]  array  u16    lteMeasCellIdList                           |multiedit;|
    rsrp[EAS_WB_MAX_LTE_CELL_NUM]               array  u16    rsrp                                        |multiedit;|
    rsrq[EAS_WB_MAX_LTE_CELL_NUM]               array  u16    rsrq                                        |multiedit;|
    syncOffset[EAS_WB_MAX_LTE_CELL_NUM]         array  u32    syncOffset                                  |multiedit;|
    cellCpType[EAS_WB_MAX_LTE_CELL_NUM]         array  u16    cellCpType                                  |multiedit;|
    sinr[EAS_WB_MAX_LTE_CELL_NUM]               array  u16    sinr                                        |multiedit;|
</sub T_MeasFreqResult>


<sub T_DrxConfigInfo_WB>
    validFlag           u16  u16  validFlag           |input;|
    onDurationTimer     u16  u16  onDurationTimer     |input;|
    inactiveTimer       u16  u16  inactiveTimer       |input;|
    dlReTranTimer       u16  u16  dlReTranTimer       |input;|
    ulRetranTimer       u16  u16  ulRetranTimer       |input;|
    longDrxCycle        u16  u16  longDrxCycle        |input;|
    longDrxStartOffset  u16  u16  longDrxStartOffset  |input;|
    shortDrxCycle       u16  u16  shortDrxCycle       |input;|
    shortCycleTimer     u16  u16  shortCycleTimer     |input;|
    reserved            u16  u16  reserved            |input;|
</sub T_DrxConfigInfo_WB>


<sub T_p0Persistent>
    p0PersisTentFlag  u16  u16  p0PersisTentFlag  |input;|
    p0UePusch         s16  s16  p0UePusch         |input;|
    p0NomiPusch       s16  s16  p0NomiPusch       |input;|
    reserved          u16  u16  reserved          |input;|
</sub T_p0Persistent>


<sub T_SpsConfigUl>
    spsUlFlag             u16             u16             spsUlFlag             |input;|
    spsIntervalUl         u16             u16             spsIntervalUl         |input;|
    implicitReleaseAfter  u16             u16             implicitReleaseAfter  |input;|
    twoIntervalFlag       u16             u16             twoIntervalFlag       |input;|
    p0Persistent          struct          T_p0Persistent  
    numUlProcess          u16             u16             numUlProcess          |input;|
    reserved              u16             u16             reserved              |input;|
</sub T_SpsConfigUl>


<sub T_SpsConfigDl>
    spsDlFlag                           u16    u16    spsDlFlag                           |input;|
    spsIntervalDl                       u16    u16    spsIntervalDl                       |input;|
    numDlProcess                        u16    u16    numDlProcess                        |input;|
    n1PucchNum                          u16    u16    n1PucchNum                          |input;|
    n1PucchNumP1                        u16    u16    n1PucchNumP1                        |input;|
    reserved                            u16    u16    reserved                            |input;|
    n1Pucch[EAS_WB_MAX_N1_PUCCH_NUM]    array  u16    n1Pucch                             |multiedit;|
    n1PucchP1[EAS_WB_MAX_N1_PUCCH_NUM]  array  u16    n1PucchP1                           |multiedit;|
</sub T_SpsConfigDl>


<sub T_SpsConfigInfo>
    spsRnti      u32            u32            spsRnti      |input;|
    spsConfigDl  struct         T_SpsConfigDl  
    spsConfigUl  struct         T_SpsConfigUl  
</sub T_SpsConfigInfo>


<sub T_RachCommInfoToL1>
    powerRampingStep         u16  u16  powerRampingStep         |input;|
    preambleInitTargetPower  u16  u16  preambleInitTargetPower  |input;|
    preambleTransMax         u16  u16  preambleTransMax         |input;|
    reserved                 u16  u16  reserved                 |input;|
</sub T_RachCommInfoToL1>


<sub T_PrachConfigInfo>
    prachConfigIndex           u16  u16  prachConfigIndex           |input;|
    highSpeedFlag              u16  u16  highSpeedFlag              |input;|
    zeroCorrelationZoneConfig  u16  u16  zeroCorrelationZoneConfig  |input;|
    prachFreqOffset            u16  u16  prachFreqOffset            |input;|
</sub T_PrachConfigInfo>


<sub T_PrachConfig>
    rootSequenceIndex  u16                u16                rootSequenceIndex  |input;|
    reserved           u16                u16                reserved           |input;|
    prachConfigInfo    struct             T_PrachConfigInfo  
</sub T_PrachConfig>


<sub T_PrachParametersListCE>
    prachConfigIndex                u16    u16    prachConfigIndex                |input;|
    prachFreqOffset                 u16    u16    prachFreqOffset                 |input;|
    prachStartingSubframe           u16    u16    prachStartingSubframe           |input;|
    maxNumPreambleAttemptCE         u16    u16    maxNumPreambleAttemptCE         |input;|
    numRepetitionPerPreambleAttemp  u16    u16    numRepetitionPerPreambleAttemp  |input;|
    mpdcchNbsNum                    u16    u16    mpdcchNbsNum                    |input;|
    mpdcchNbsToMonitor[2]           array  u16    mpdcchNbsToMonitor              |multiedit;|
    mpdcchNumRepetitionRA           u16    u16    mpdcchNumRepetitionRA           |input;|
    prachHopConfig                  u16    u16    prachHopConfig                  |input;|
</sub T_PrachParametersListCE>


<sub T_PrachConfigR13>
    rsrpThresholdNum                u16                      u16                      rsrpThresholdNum                |input;|
    rsrpThresholdsPrachInfoList[3]  array                    u16                      rsrpThresholdsPrachInfoList     |multiedit;|
    mpdcchStartSFCssRAType          u16                      u16                      mpdcchStartSFCssRAType          |input;|
    mpdcchStartSFCssRA              u16                      u16                      mpdcchStartSFCssRA              |input;|
    prachHoppingOffset              u16                      u16                      prachHoppingOffset              |input;|
    prachParameterNum               u16                      u16                      prachParameterNum               |input;|
    prachParametersListCE[4]        array                    T_PrachParametersListCE  prachParametersListCE           |multiedit;|
    initialCeLevel                  u16                      u16                      initialCeLevel                  |input;|
    reserved                        u16                      u16                      reserved                        |input;|
</sub T_PrachConfigR13>


<sub T_BLValidSubfBitMap>
    validMapBitNum                 u16    u16    validMapBitNum                 |input;|
    fddDownOrTddSubframeBitmap[3]  array  u16    fddDownOrTddSubframeBitmap     |multiedit;|
    fddUplinkSubframeBitmapLC      u16    u16    fddUplinkSubframeBitmapLC      |input;|
    Reserved                       u16    u16    Reserved                       |input;|
</sub T_BLValidSubfBitMap>


<sub T_PdschCommInfo>
    referenceSignalPower  s16  s16  referenceSignalPower  |input;|
    pb                    u16  u16  pb                    |input;|
</sub T_PdschCommInfo>


<sub T_PdschCommInfoV1310>
    pdschMaxNumRepetitionCEmodeAR13  u16  u16  pdschMaxNumRepetitionCEmodeAR13  |input;|
    pdschMaxNumRepetitionCEmodeBR13  u16  u16  pdschMaxNumRepetitionCEmodeBR13  |input;|
</sub T_PdschCommInfoV1310>


<sub T_PuschRsInfo>
    groupHopFlag     u16  u16  groupHopFlag     |input;|
    groupAssign      u16  u16  groupAssign      |input;|
    sequenceHopFlag  u16  u16  sequenceHopFlag  |input;|
    cyclicShift      u16  u16  cyclicShift      |input;|
</sub T_PuschRsInfo>


<sub T_PuschConfigBasic>
    nSb        u16  u16  nSb        |input;|
    hopMode    u16  u16  hopMode    |input;|
    hopOffset  u16  u16  hopOffset  |input;|
    qam64Flag  u16  u16  qam64Flag  |input;|
</sub T_PuschConfigBasic>


<sub T_PuschCommInfo>
    puschRs        struct              T_PuschRsInfo       
    puschCfgBasic  struct              T_PuschConfigBasic  
</sub T_PuschCommInfo>


<sub T_PuschCommInfoV1310>
    puschMaxNumCEModeA  u16  u16  puschMaxNumCEModeA  |input;|
    puschMaxNumCEModeB  u16  u16  puschMaxNumCEModeB  |input;|
    puschHoppingOffset  u16  u16  puschHoppingOffset  |input;|
    reserved            u16  u16  reserved            |input;|
</sub T_PuschCommInfoV1310>


<sub T_PucchCommInfo>
    deltaPucchShift  u16  u16  deltaPucchShift  |input;|
    cqiNrb           u16  u16  cqiNrb           |input;|
    nCsAn            u16  u16  nCsAn            |input;|
    n1pucchAn        u16  u16  n1pucchAn        |input;|
</sub T_PucchCommInfo>


<sub T_PucchCommInfoV1310>
    n1pucchAnNum                    u16    u16    n1pucchAnNum                    |input;|
    reserved                        u16    u16    reserved                        |input;|
    n1pucchAnList[4]                array  u16    n1pucchAnList                   |multiedit;|
    pucchNumRepetitionCEMsg4Level0  u16    u16    pucchNumRepetitionCEMsg4Level0  |input;|
    pucchNumRepetitionCEMsg4Level1  u16    u16    pucchNumRepetitionCEMsg4Level1  |input;|
    pucchNumRepetitionCEMsg4Level2  u16    u16    pucchNumRepetitionCEMsg4Level2  |input;|
    pucchNumRepetitionCEMsg4Level3  u16    u16    pucchNumRepetitionCEMsg4Level3  |input;|
</sub T_PucchCommInfoV1310>


<sub T_FreqHoppingParameters>
    mpdcchPdschHoppingNB              u16  u16  mpdcchPdschHoppingNB              |input;|
    dlModeAType                       u16  u16  dlModeAType                       |input;|
    intervalDlHoppingConfigCommModeA  u16  u16  intervalDlHoppingConfigCommModeA  |input;|
    dlModeBType                       u16  u16  dlModeBType                       |input;|
    intervalDlHoppingConfigCommModeB  u16  u16  intervalDlHoppingConfigCommModeB  |input;|
    ulModeAType                       u16  u16  ulModeAType                       |input;|
    intervalUlHoppingConfigCommModeA  u16  u16  intervalUlHoppingConfigCommModeA  |input;|
    ulModeBType                       u16  u16  ulModeBType                       |input;|
    intervalUlHoppingConfigCommModeB  u16  u16  intervalUlHoppingConfigCommModeB  |input;|
    mpdcchPdschHoppingOffset          u16  u16  mpdcchPdschHoppingOffset          |input;|
</sub T_FreqHoppingParameters>


<sub T_UlSrsCommInfo>
    ulSrsCommInfoFlag  u16  u16  ulSrsCommInfoFlag  |input;|
    srsBandWidth       u16  u16  srsBandWidth       |input;|
    srsSubFrameType    u16  u16  srsSubFrameType    |input;|
    ackNackSimulFlag   u16  u16  ackNackSimulFlag   |input;|
    uptsRecofigFlag    u16  u16  uptsRecofigFlag    |input;|
    reserved           u16  u16  reserved           |input;|
</sub T_UlSrsCommInfo>


<sub T_PucchDeltaFList>
    format1   u16  u16  format1   |input;|
    format1b  u16  u16  format1b  |input;|
    format2   u16  u16  format2   |input;|
    format2a  u16  u16  format2a  |input;|
    format2b  u16  u16  format2b  |input;|
    reseved   u16  u16  reseved   |input;|
</sub T_PucchDeltaFList>


<sub T_UlPowerCtlCommInfo>
    p0NomiPusch        s16                s16                p0NomiPusch        |input;|
    alpha              u16                u16                alpha              |input;|
    p0NomiPucch        s16                s16                p0NomiPucch        |input;|
    deltaPreambleMsg3  s16                s16                deltaPreambleMsg3  |input;|
    pucchDeltaFlist    struct             T_PucchDeltaFList  
</sub T_UlPowerCtlCommInfo>


<sub T_CqiReportConf>
    cqiReportFlag      u16  u16  cqiReportFlag      |input;|
    reportModeAp       u16  u16  reportModeAp       |input;|
    nomPdschRsEpreOff  s16  s16  nomPdschRsEpreOff  |input;|
    cqiRepPeriodFlag   u16  u16  cqiRepPeriodFlag   |input;|
    simulFlag          u16  u16  simulFlag          |input;|
    cqiPucchRescIndex  u16  u16  cqiPucchRescIndex  |input;|
    pmiConfIndex       u16  u16  pmiConfIndex       |input;|
    cqiFormatInd       u16  u16  cqiFormatInd       |input;|
    k                  u16  u16  k                  |input;|
    riIndex            u16  u16  riIndex            |input;|
    pmiRiReportFlag    u16  u16  pmiRiReportFlag    |input;|
    cqiMaskFlag        u16  u16  cqiMaskFlag        |input;|
</sub T_CqiReportConf>


<sub T_AntennaInfo>
    transMode           u16    u16    transMode           |input;|
    codBkSubSetNum      u16    u16    codBkSubSetNum      |input;|
    codBkSubsetRest[8]  array  u16    codBkSubsetRest     |multiedit;|
    ueTransAntSel       u16    u16    ueTransAntSel       |input;|
    reserved            u16    u16    reserved            |input;|
</sub T_AntennaInfo>


<sub T_PdschConfigDedicated>
    pa        u16  u16  pa        |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_PdschConfigDedicated>


<sub T_MpdcchConfigR13>
    validF                    u16  u16  validF                    |input;|
    csiNumRepetitionCE        u16  u16  csiNumRepetitionCE        |input;|
    mpdcchPdschHoppingConfig  u16  u16  mpdcchPdschHoppingConfig  |input;|
    mpdcchStartSFUESS         u16  u16  mpdcchStartSFUESS         |input;|
    mpdcchNumRepetition       u16  u16  mpdcchNumRepetition       |input;|
    mpdcchNarrowband          u16  u16  mpdcchNarrowband          |input;|
</sub T_MpdcchConfigR13>


<sub T_EpdcchSetConfigR11>
    transmissionType            u16                u16                transmissionType            |input;|
    numberPbrPais               u16                u16                numberPbrPais               |input;|
    resBlockAssignBitNum        u16                u16                resBlockAssignBitNum        |input;|
    resourceBlockAssignment[3]  array              u16                resourceBlockAssignment     |multiedit;|
    dmrsScramblingSequenceInt   u16                u16                dmrsScramblingSequenceInt   |input;|
    pucchResourceStartOffset    u16                u16                pucchResourceStartOffset    |input;|
    csiRSConfigZPId2            u16                u16                csiRSConfigZPId2            |input;|
    reserved                    u16                u16                reserved                    |input;|
    mpdcchConfigR13             struct             T_MpdcchConfigR13  
</sub T_EpdcchSetConfigR11>


<sub T_EpdcchConfigR11>
    startSymbolR11         u16                   u16                   startSymbolR11         |input;|
    EpdcchSetNum           u16                   u16                   EpdcchSetNum           |input;|
    EpdcchSetConfigR11[2]  array                 T_EpdcchSetConfigR11  EpdcchSetConfigR11     |multiedit;|
</sub T_EpdcchConfigR11>


<sub T_PuschDediInfo>
    ackIndexBetaOffset    u16  u16  ackIndexBetaOffset    |input;|
    riIndexBetaOffset     u16  u16  riIndexBetaOffset     |input;|
    cqiIndexBetaOffset    u16  u16  cqiIndexBetaOffset    |input;|
    ulSchttiBundlingFlag  u16  u16  ulSchttiBundlingFlag  |input;|
    groupHoppingDisabled  u16  u16  groupHoppingDisabled  |input;|
    reserved              u16  u16  reserved              |input;|
</sub T_PuschDediInfo>


<sub T_PuschConfigDedicatedR13>
    puschHoppingConfig  u16  u16  puschHoppingConfig  |input;|
    reserved            u16  u16  reserved            |input;|
</sub T_PuschConfigDedicatedR13>


<sub T_TpcConfig>
    tpcRnti        u32  u32  tpcRnti        |input;|
    formatType     u16  u16  formatType     |input;|
    IndexFormat3   u16  u16  IndexFormat3   |input;|
    IndexFormat3A  u16  u16  IndexFormat3A  |input;|
    reserved       u16  u16  reserved       |input;|
</sub T_TpcConfig>


<sub T_SrsConfigAp>
    srsAntennaPortAp        u16  u16  srsAntennaPortAp        |input;|
    srsBandwidthAp          u16  u16  srsBandwidthAp          |input;|
    freqDomainPosAp         u16  u16  freqDomainPosAp         |input;|
    transCombAp             u16  u16  transCombAp             |input;|
    cyclicShiftAp           u16  u16  cyclicShiftAp           |input;|
    transmissionCombNumR13  u16  u16  transmissionCombNumR13  |input;|
</sub T_SrsConfigAp>


<sub T_UlSrsDediInfoAperiodic>
    confFlag                 u16            u16            confFlag                 |input;|
    srsConfigIndexApR10      u16            u16            srsConfigIndexApR10      |input;|
    srsActivateApConfigFlag  u16            u16            srsActivateApConfigFlag  |input;|
    srsUpPtsAddR13           u16            u16            srsUpPtsAddR13           |input;|
    srsConfigApFormat0       struct         T_SrsConfigAp  
    srsConfigApFormat1a2b2c  struct         T_SrsConfigAp  
</sub T_UlSrsDediInfoAperiodic>


<sub T_UlSrsDediInfo>
    ulSrsDediFlag           u16  u16  ulSrsDediFlag           |input;|
    srsBandWidth            u16  u16  srsBandWidth            |input;|
    srsHopBand              u16  u16  srsHopBand              |input;|
    freqDomainPos           u16  u16  freqDomainPos           |input;|
    duration                u16  u16  duration                |input;|
    srsConfIndex            u16  u16  srsConfIndex            |input;|
    transComb               u16  u16  transComb               |input;|
    cyclicShift             u16  u16  cyclicShift             |input;|
    srsAntennaPortR10       u16  u16  srsAntennaPortR10       |input;|
    transmissionCombNumR13  u16  u16  transmissionCombNumR13  |input;|
    srsUpPtsAdd             u16  u16  srsUpPtsAdd             |input;|
    reserved                u16  u16  reserved                |input;|
</sub T_UlSrsDediInfo>


<sub T_PucchParam>
    validF          u16  u16  validF          |input;|
    nPucchIdentity  u16  u16  nPucchIdentity  |input;|
    n1PucchAN       u16  u16  n1PucchAN       |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_PucchParam>


<sub T_PucchNumRepetitionCe>
    validF         u16  u16  validF         |input;|
    modeType       u16  u16  modeType       |input;|
    repNumFormat1  u16  u16  repNumFormat1  |input;|
    repNumFormat2  u16  u16  repNumFormat2  |input;|
</sub T_PucchNumRepetitionCe>


<sub T_PucchConfigDedicated>
    pucchCfgDedFlag         u16  u16  pucchCfgDedFlag         |input;|
    ackNackRepetition       u16  u16  ackNackRepetition       |input;|
    repFactor               u16  u16  repFactor               |input;|
    n1PucchAnRep            u16  u16  n1PucchAnRep            |input;|
    tddAckNackFeedbackMode  u16  u16  tddAckNackFeedbackMode  |input;|
    reserved                u16  u16  reserved                |input;|
</sub T_PucchConfigDedicated>


<sub T_PucchConfigDedicatedR13>
    pucchNumRepInfo  struct                  T_PucchNumRepetitionCe  
</sub T_PucchConfigDedicatedR13>


<sub T_DeltaTxDoffsetListPucch>
    deltaTxDoffsetPucchFormat1R10      u16  u16  deltaTxDoffsetPucchFormat1R10      |input;|
    deltaTxDoffsetPucchFormat1a1bR10   u16  u16  deltaTxDoffsetPucchFormat1a1bR10   |input;|
    deltaTxDoffsetPucchFormat22a2bR10  u16  u16  deltaTxDoffsetPucchFormat22a2bR10  |input;|
    deltaTxDoffsetPucchFormat3R10      u16  u16  deltaTxDoffsetPucchFormat3R10      |input;|
    deltaTxDoffsetPucchFormat1bCSR11   u16  u16  deltaTxDoffsetPucchFormat1bCSR11   |input;|
    reserved                           u16  u16  reserved                           |input;|
</sub T_DeltaTxDoffsetListPucch>


<sub T_UlPowerCtrDediInfo>
    p0UePusch                s16                        s16                        p0UePusch                |input;|
    deltaMcsFlag             u16                        u16                        deltaMcsFlag             |input;|
    accumFlag                u16                        u16                        accumFlag                |input;|
    p0UePucch                s16                        s16                        p0UePucch                |input;|
    pSrsOffset               u16                        u16                        pSrsOffset               |input;|
    filterCoeff              u16                        u16                        filterCoeff              |input;|
    pSrsOffsetAp             u16                        u16                        pSrsOffsetAp             |input;|
    reserved                 u16                        u16                        reserved                 |input;|
    deltaTxDoffsetListPucch  struct                     T_DeltaTxDoffsetListPucch  
</sub T_UlPowerCtrDediInfo>


<sub T_FreqBandLte>
    startPoint  u32  u32  startPoint  |input;|
    endPoint    u32  u32  endPoint    |input;|
</sub T_FreqBandLte>


<sub T_NeighCellsCrsInfo>
    physCellId                             u16                u16                physCellId                             |input;|
    antennaPortsCount                      u16                u16                antennaPortsCount                      |input;|
    mbsfnConfigNum                         u16                u16                mbsfnConfigNum                         |input;|
    reserved                               u16                u16                reserved                               |input;|
    mbsfnConfigList[EAS_WB_MAX_MBSFN_NUM]  array              T_MbsfnConfigInfo  mbsfnConfigList                        |multiedit;|
</sub T_NeighCellsCrsInfo>


<sub T_NeighCellsCrsInfoList>
    numOfNCCI                                               u16                  u16                  numOfNCCI                                               |input;|
    reserved                                                u16                  u16                  reserved                                                |input;|
    neighCellsCrsInfo[EAS_WB_MAX_NEIGH_CELLS_CRS_INFO_NUM]  array                T_NeighCellsCrsInfo  neighCellsCrsInfo                                       |multiedit;|
</sub T_NeighCellsCrsInfoList>


<sub T_sfnInfo>
    ssfn    u16  u16  ssfn    |input;|
    offset  u16  u16  offset  |input;|
</sub T_sfnInfo>


<sub T_adjustSFNInfo>
    currentCellSFNInfo  struct     T_sfnInfo  
    targetCellSFNInfo   struct     T_sfnInfo  
</sub T_adjustSFNInfo>


<sub T_adjustHFNInfo>
    targetCellHFNInfo   u16        u16        targetCellHFNInfo   |input;|
    currentCellHFNInfo  u16        u16        currentCellHFNInfo  |input;|
    currentCellSFNInfo  struct     T_sfnInfo  
</sub T_adjustHFNInfo>


<sub T_RL1C_PWR_SWEEP_REQ>
    sweepId                        u16            u16            sweepId                        |input;|
    freqBandNum                    u16            u16            freqBandNum                    |input;|
    plmnSearchFlag                 u16            u16            plmnSearchFlag                 |input;|
    reserved                       u16            u16            reserved                       |input;|
    freqBand[EAS_WB_MAX_FREQBAND]  array          T_FreqBandLte  freqBand                       |multiedit;|
</sub T_RL1C_PWR_SWEEP_REQ>


<sub T_RL1C_PWR_SWEEP_CNF>
    sweepId           u16            u16            sweepId           |input;|
    freqPointNum      u16            u16            freqPointNum      |input;|
    scanFreqBandInfo  struct         T_FreqBandLte  
</sub T_RL1C_PWR_SWEEP_CNF>


<sub T_RL1C_CELL_SEARCH_REQ>
    cellSearchId          u16  u16  cellSearchId          |input;|
    dlCpType              u16  u16  dlCpType              |input;|
    freq                  u32  u32  freq                  |input;|
    phyCellId             u16  u16  phyCellId             |input;|
    plmnSearchFlag        u16  u16  plmnSearchFlag        |input;|
    pwrFlag               u16  u16  pwrFlag               |input;|
    cellSearchInEc        u16  u16  cellSearchInEc        |input;|
    cellSearchFreqNumInd  u16  u16  cellSearchFreqNumInd  |input;|
    reserved2             u16  u16  reserved2             |input;|
</sub T_RL1C_CELL_SEARCH_REQ>


<sub T_RL1C_CELL_SEARCH_CNF>
    cellSearchId                           u16    u16    cellSearchId                           |input;|
    cellNum                                u16    u16    cellNum                                |input;|
    frequency                              u32    u32    frequency                              |input;|
    phyCellId[EAS_WB_MAX_CELL_SEARCH_NUM]  array  u16    phyCellId                              |multiedit;|
    dlCpType[EAS_WB_MAX_CELL_SEARCH_NUM]   array  u16    dlCpType                               |multiedit;|
    syncOff[EAS_WB_MAX_CELL_SEARCH_NUM]    array  u32    syncOff                                |multiedit;|
</sub T_RL1C_CELL_SEARCH_CNF>


<sub T_RL1C_FREQ_MEAS_REQ>
    freqMeasId                      u16    u16    freqMeasId                      |input;|
    freqNum                         u16    u16    freqNum                         |input;|
    freq[EAS_WB_MAX_FREQ_MEAS_NUM]  array  u32    freq                            |multiedit;|
</sub T_RL1C_FREQ_MEAS_REQ>


<sub T_RL1C_FREQ_MEAS_CNF>
    freqMeasId                      u16    u16    freqMeasId                      |input;|
    freqNum                         u16    u16    freqNum                         |input;|
    freq[EAS_WB_MAX_FREQ_MEAS_NUM]  array  u32    freq                            |multiedit;|
</sub T_RL1C_FREQ_MEAS_CNF>


<sub T_RL1C_CELL_SYNC_REQ>
    syncId        u16            u16            syncId        |input;|
    sinr          u16            u16            sinr          |input;|
    cellInfo      struct         T_CellServLte  
    syncOffset    u32            u32            syncOffset    |input;|
    syncType      u16            u16            syncType      |input;|
    syncBackFlag  u16            u16            syncBackFlag  |input;|
</sub T_RL1C_CELL_SYNC_REQ>


<sub T_RL1C_CELL_SYNC_CNF>
    syncId          u16  u16  syncId          |input;|
    successfulFlag  u16  u16  successfulFlag  |input;|
    dlCpType        u16  u16  dlCpType        |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_RL1C_CELL_SYNC_CNF>


<sub T_RL1C_SI_READ_REQ>
    siCellDesc                             struct                   T_CellServLte            
    siReadScenario                         u16                      u16                      siReadScenario                         |input;|
    useSysModPeriodFlag                    u16                      u16                      useSysModPeriodFlag                    |input;|
    syncOffset                             u32                      u32                      syncOffset                             |input;|
    siWindowLenth                          u16                      u16                      siWindowLenth                          |input;|
    siType                                 u16                      u16                      siType                                 |input;|
    siReadSchedulBitMap                    u32                      u32                      siReadSchedulBitMap                    |input;|
    reserved1                              u16                      u16                      reserved1                              |input;|
    siSchedulNum                           u16                      u16                      siSchedulNum                           |input;|
    siNvalue[EAS_WB_MAX_SI_NUM]            array                    u16                      siNvalue                               |multiedit;|
    siPeriod[EAS_WB_MAX_SI_NUM]            array                    u16                      siPeriod                               |multiedit;|
    phichCfg                               struct                   T_PhichConfig            
    sib1SchedulIndex                       u16                      u16                      sib1SchedulIndex                       |input;|
    siRepPatten                            u16                      u16                      siRepPatten                            |input;|
    siHoppingComCfg                        u16                      u16                      siHoppingComCfg                        |input;|
    startSymbolLC                          u16                      u16                      startSymbolLC                          |input;|
    validSubFrameConfig                    struct                   T_BLValidSubfBitMap      
    freqHoppingParam                       struct                   T_FreqHoppingParameters  
    mbsfnConfigNum                         u16                      u16                      mbsfnConfigNum                         |input;|
    isNewCell                              u16                      u16                      isNewCell                              |input;|
    mbsfnConfigList[EAS_WB_MAX_MBSFN_NUM]  array                    T_MbsfnConfigInfo        mbsfnConfigList                        |multiedit;|
    siNbIndex[EAS_WB_MAX_SI_NUM]           array                    u16                      siNbIndex                              |multiedit;|
    siTBS[EAS_WB_MAX_SI_NUM]               array                    u16                      siTBS                                  |multiedit;|
    ceMode                                 u16                      u16                      ceMode                                 |input;|
    reserved                               u16                      u16                      reserved                               |input;|
    siDataDiffBitMap                       u32                      u32                      siDataDiffBitMap                       |input;|
</sub T_RL1C_SI_READ_REQ>


<sub T_RL1C_MIB_DATA_IND>
    crcFlag            u16              u16              crcFlag            |input;|
    rsrp               u16              u16              rsrp               |input;|
    rsrq               u16              u16              rsrq               |input;|
    antennaPortsCount  u16              u16              antennaPortsCount  |input;|
    sfn_low2bit        u16              u16              sfn_low2bit        |input;|
    reserved           u16              u16              reserved           |input;|
    data[4]            array            u8               data               |multiedit;|
    adjustSFNInfo      struct           T_adjustSFNInfo  
</sub T_RL1C_MIB_DATA_IND>


<sub T_RL1C_SIB1_DATA_IND>
    crcFlag                          u16        u16        crcFlag                          |input;|
    rsrp                             u16        u16        rsrp                             |input;|
    rsrq                             u16        u16        rsrq                             |input;|
    currentCellHFNInfo               u16        u16        currentCellHFNInfo               |input;|
    currentCellSFNInfo               struct     T_sfnInfo  
    sinr                             u16        u16        sinr                             |input;|
    rssi                             u16        u16        rssi                             |input;|
    reserved                         u16        u16        reserved                         |input;|
    dataLen                          u16        u16        dataLen                          |input;|
    data[EAS_WB_MAX_SI_DATA_LENGTH]  array      u8         data                             |multiedit;|
</sub T_RL1C_SIB1_DATA_IND>


<sub T_RL1C_SI_DATA_IND>
    rsrp                             u16    u16    rsrp                             |input;|
    rsrq                             u16    u16    rsrq                             |input;|
    dataLen                          u16    u16    dataLen                          |input;|
    reserved                         u16    u16    reserved                         |input;|
    data[EAS_WB_MAX_SI_DATA_LENGTH]  array  u8     data                             |multiedit;|
</sub T_RL1C_SI_DATA_IND>


<sub T_EutranMeasFreqInfo>
    frequency             u32  u32  frequency             |input;|
    measBandWidth         u16  u16  measBandWidth         |input;|
    presenceAntennaPort1  u16  u16  presenceAntennaPort1  |input;|
    neighCellConfig       u16  u16  neighCellConfig       |input;|
    priority              u16  u16  priority              |input;|
</sub T_EutranMeasFreqInfo>


<sub T_GeranCellMeasInfo>
    gsmArfcn     u16  u16  gsmArfcn     |input;|
    bsicThreshd  u16  u16  bsicThreshd  |input;|
    priority     u16  u16  priority     |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_GeranCellMeasInfo>


<sub T_CellSelectionInfo>
    ceMode        u16  u16  ceMode        |input;|
    pMax          s16  s16  pMax          |input;|
    qualMin       s16  s16  qualMin       |input;|
    qRxLevMin     s16  s16  qRxLevMin     |input;|
    qualMinCe     s16  s16  qualMinCe     |input;|
    qRxLevMinCe   s16  s16  qRxLevMinCe   |input;|
    qualMinCe1    s16  s16  qualMinCe1    |input;|
    qRxLevMinCe1  s16  s16  qRxLevMinCe1  |input;|
</sub T_CellSelectionInfo>


<sub T_AtDummyFun>
    forceMeasGeran  u16  u16  forceMeasGeran  |input;|
    sCellRsrpDelta  s16  s16  sCellRsrpDelta  |input;|
    sCellRsrqDelta  s16  s16  sCellRsrqDelta  |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_AtDummyFun>


<sub T_IdlMeasurementInfo>
    measId                                    u16                   u16                   measId                                    |input;|
    intraSearchP                              u16                   u16                   intraSearchP                              |input;|
    intraSearchQ                              u16                   u16                   intraSearchQ                              |input;|
    nonIntraSearchP                           u16                   u16                   nonIntraSearchP                           |input;|
    nonIntraSearchQ                           u16                   u16                   nonIntraSearchQ                           |input;|
    rsrqOnAllSymbol                           u16                   u16                   rsrqOnAllSymbol                           |input;|
    reserved1                                 u16                   u16                   reserved1                                 |input;|
    lteFreqNum                                u16                   u16                   lteFreqNum                                |input;|
    lteMeasFreqInfo[EAS_WB_MAX_LTE_FREQ_NUM]  array                 T_EutranMeasFreqInfo  lteMeasFreqInfo                           |multiedit;|
    gsmCellNum                                u16                   u16                   gsmCellNum                                |input;|
    reserved                                  u16                   u16                   reserved                                  |input;|
    gsmCellList[EAS_MAX_GGE_CELL_NUM]         array                 T_GeranCellMeasInfo   gsmCellList                               |multiedit;|
    atDummyFun                                struct                T_AtDummyFun          
</sub T_IdlMeasurementInfo>


<sub T_PagingParam>
    nValue                                 u16                      u16                      nValue                                 |input;|
    pagingPeriod                           u16                      u16                      pagingPeriod                           |input;|
    ueIdPo                                 u16                      u16                      ueIdPo                                 |input;|
    ueIdPtw                                u16                      u16                      ueIdPtw                                |input;|
    edrxPeriod                             u32                      u32                      edrxPeriod                             |input;|
    ptwLen                                 u32                      u32                      ptwLen                                 |input;|
    maxMpdcchRepNum                        u16                      u16                      maxMpdcchRepNum                        |input;|
    numOfPagingNb                          u16                      u16                      numOfPagingNb                          |input;|
    siHoppingConfigComm                    u16                      u16                      siHoppingConfigComm                    |input;|
    startSymbolLC                          u16                      u16                      startSymbolLC                          |input;|
    validSfn                               struct                   T_BLValidSubfBitMap      
    freqHoppingParam                       struct                   T_FreqHoppingParameters  
    phichCfg                               struct                   T_PhichConfig            
    pdschCommInfo                          struct                   T_PdschCommInfo          
    pdschCommInfoV1310                     struct                   T_PdschCommInfoV1310     
    mbsfnConfigNum                         u16                      u16                      mbsfnConfigNum                         |input;|
    reserved                               u16                      u16                      reserved                               |input;|
    mbsfnConfigList[EAS_WB_MAX_MBSFN_NUM]  array                    T_MbsfnConfigInfo        mbsfnConfigList                        |multiedit;|
</sub T_PagingParam>


<sub T_RL1C_IDL_CONFIG_REQ>
    cellDescInfo       struct               T_CellServLte        
    idlConfigType      u16                  u16                  idlConfigType      |input;|
    highSpeedFlag      u16                  u16                  highSpeedFlag      |input;|
    siModiPeriod       u32                  u32                  siModiPeriod       |input;|
    cellSelectionInfo  struct               T_CellSelectionInfo  
    pagingParam        struct               T_PagingParam        
</sub T_RL1C_IDL_CONFIG_REQ>


<sub T_RL1C_PAGING_DATA_IND>
    result                            u16    u16    result                            |input;|
    dataLen                           u16    u16    dataLen                           |input;|
    data[EAS_WB_MAX_PCH_INFO_LENGTH]  array  u8     data                              |multiedit;|
</sub T_RL1C_PAGING_DATA_IND>


<sub T_IdlMeasFreqResult>
    intraCellNum                                u16    u16    intraCellNum                                |input;|
    resultTypeFlag                              u16    u16    resultTypeFlag                              |input;|
    frequency                                   u32    u32    frequency                                   |input;|
    lteMeasCellIdList[EAS_WB_MAX_LTE_CELL_NUM]  array  u16    lteMeasCellIdList                           |multiedit;|
    rsrp[EAS_WB_MAX_LTE_CELL_NUM]               array  u16    rsrp                                        |multiedit;|
    rsrq[EAS_WB_MAX_LTE_CELL_NUM]               array  u16    rsrq                                        |multiedit;|
    syncOffset[EAS_WB_MAX_LTE_CELL_NUM]         array  u32    syncOffset                                  |multiedit;|
    cellCpType[EAS_WB_MAX_LTE_CELL_NUM]         array  u16    cellCpType                                  |multiedit;|
    sinr[EAS_WB_MAX_LTE_CELL_NUM]               array  u16    sinr                                        |multiedit;|
</sub T_IdlMeasFreqResult>


<sub T_GeranCellMeasResult>
    gsmArfcn        u16  u16  gsmArfcn        |input;|
    rssi            u16  u16  rssi            |input;|
    bsic            u16  u16  bsic            |input;|
    resultTypeFlag  u16  u16  resultTypeFlag  |input;|
</sub T_GeranCellMeasResult>


<sub T_RL1C_IDL_MEAS_IND>
    measId                                       u16                    u16                    measId                                       |input;|
    lteFreqNum                                   u16                    u16                    lteFreqNum                                   |input;|
    serveRsrp                                    u16                    u16                    serveRsrp                                    |input;|
    serveRsrq                                    u16                    u16                    serveRsrq                                    |input;|
    serveSinr                                    u16                    u16                    serveSinr                                    |input;|
    serveRssi                                    s16                    s16                    serveRssi                                    |input;|
    oosFlag                                      u16                    u16                    oosFlag                                      |input;|
    reserved                                     u16                    u16                    reserved                                     |input;|
    lteMeasResult[EAS_WB_MAX_LTE_FREQ_NUM]       array                  T_IdlMeasFreqResult    lteMeasResult                                |multiedit;|
    gsmCellNum                                   u16                    u16                    gsmCellNum                                   |input;|
    reserved2                                    u16                    u16                    reserved2                                    |input;|
    gsmCellMeasResultList[EAS_MAX_GGE_CELL_NUM]  array                  T_GeranCellMeasResult  gsmCellMeasResultList                        |multiedit;|
</sub T_RL1C_IDL_MEAS_IND>


<sub T_UlPowerCtlCommInfoV1020>
    ulPowerCtlComV1020Flag   u16  u16  ulPowerCtlComV1020Flag   |input;|
    deltafPucchFormat3R10    u16  u16  deltafPucchFormat3R10    |input;|
    deltaPucchFormat1bCsR10  u16  u16  deltaPucchFormat1bCsR10  |input;|
    reserved                 u16  u16  reserved                 |input;|
</sub T_UlPowerCtlCommInfoV1020>


<sub T_UlPowerCtlCommInfoV1310>
    deltaFPucchFormat4R13  u16  u16  deltaFPucchFormat4R13  |input;|
    deltaFPucchFormat5R13  u16  u16  deltaFPucchFormat5R13  |input;|
</sub T_UlPowerCtlCommInfoV1310>


<sub T_CommCfgForComm>
    pcmax                                  s16                        s16                        pcmax                                  |input;|
    nValue                                 u16                        u16                        nValue                                 |input;|
    pagingPeriod                           u16                        u16                        pagingPeriod                           |input;|
    ueId                                   u16                        u16                        ueId                                   |input;|
    mbsfnConfigNum                         u16                        u16                        mbsfnConfigNum                         |input;|
    additionalSpectrumEmission             u16                        u16                        additionalSpectrumEmission             |input;|
    siModiPeriod                           u32                        u32                        siModiPeriod                           |input;|
    prachCfg                               struct                     T_PrachConfig              
    pdschCommCfg                           struct                     T_PdschCommInfo            
    puschCommCfg                           struct                     T_PuschCommInfo            
    pucchCommCfg                           struct                     T_PucchCommInfo            
    ulSrsCommInfo                          struct                     T_UlSrsCommInfo            
    ulPowerCtrCommInfo                     struct                     T_UlPowerCtlCommInfo       
    phichCfg                               struct                     T_PhichConfig              
    ulPowerCtlCommInfoV1020                struct                     T_UlPowerCtlCommInfoV1020  
    mbsfnConfigList[EAS_WB_MAX_MBSFN_NUM]  array                      T_MbsfnConfigInfo          mbsfnConfigList                        |multiedit;|
    rachCommInfo                           struct                     T_RachCommInfoToL1         
</sub T_CommCfgForComm>


<sub T_CommCfgForBlCe>
    startSymbolLC       u16                      u16                      startSymbolLC       |input;|
    reserved            u16                      u16                      reserved            |input;|
    prachCfgR13         struct                   T_PrachConfigR13         
    pdschCommInfoV1310  struct                   T_PdschCommInfoV1310     
    puschCommInfoV1310  struct                   T_PuschCommInfoV1310     
    pucchCommInfoV1310  struct                   T_PucchCommInfoV1310     
    freqHoppingParam    struct                   T_FreqHoppingParameters  
    validSfn            struct                   T_BLValidSubfBitMap      
</sub T_CommCfgForBlCe>


<sub T_CommCfgForNonBlCe>
    reserved  u32  u32  reserved  |input;|
</sub T_CommCfgForNonBlCe>


<sub T_RL1C_CHN_COMM_CONFIG_REQ>
    servCellInfo         struct               T_CellServLte        
    pCommCfgForComm      Ptr                  T_CommCfgForComm     
    pCommCfgForBlCe      Ptr                  T_CommCfgForBlCe     
    pCommCfgForNonBlCe   Ptr                  T_CommCfgForNonBlCe  
</sub T_RL1C_CHN_COMM_CONFIG_REQ>


<sub T_AntennaInfoUlR10>
    ulTransMode               u16  u16  ulTransMode               |input;|
    fourAntennaPortActivated  u16  u16  fourAntennaPortActivated  |input;|
</sub T_AntennaInfoUlR10>


<sub T_CqiReportAperiodicR10>
    aperiodicCqiFlag         u16  u16  aperiodicCqiFlag         |input;|
    cqiReportModeAperiodic   u16  u16  cqiReportModeAperiodic   |input;|
    aperiodicCSITrigger1R10  u16  u16  aperiodicCSITrigger1R10  |input;|
    aperiodicCSITrigger2R10  u16  u16  aperiodicCSITrigger2R10  |input;|
</sub T_CqiReportAperiodicR10>


<sub T_CqiReportPeriodicR10>
    periodicCqiFlag             u16  u16  periodicCqiFlag             |input;|
    cqiPucchResourceIndexR10    u16  u16  cqiPucchResourceIndexR10    |input;|
    cqiPucchResourceP1IndexR10  u16  u16  cqiPucchResourceP1IndexR10  |input;|
    cqiPmiConfigIndex           u16  u16  cqiPmiConfigIndex           |input;|
    cqiFormatIndFlag            u16  u16  cqiFormatIndFlag            |input;|
    csiReportMode               u16  u16  csiReportMode               |input;|
    k                           u16  u16  k                           |input;|
    periodicityFactorR10        u16  u16  periodicityFactorR10        |input;|
    riConfigIndex               u16  u16  riConfigIndex               |input;|
    simultaneousAckNackAndCQI   u16  u16  simultaneousAckNackAndCQI   |input;|
    cqiMaskFlag                 u16  u16  cqiMaskFlag                 |input;|
    csiConfigFlag               u16  u16  csiConfigFlag               |input;|
    cqiPmiConfigIndex2R10       u16  u16  cqiPmiConfigIndex2R10       |input;|
    riConfigIndex2R10           u16  u16  riConfigIndex2R10           |input;|
</sub T_CqiReportPeriodicR10>


<sub T_CqiReportConfR10>
    cqiReportR10Flag              u16                       u16                       cqiReportR10Flag              |input;|
    nomPdschRsEpreOffset          s16                       s16                       nomPdschRsEpreOffset          |input;|
    cqiReportAperiodicR10         struct                    T_CqiReportAperiodicR10   
    cqiReportPeriodicR10          struct                    T_CqiReportPeriodicR10    
    pmiRIReportR9                 u16                       u16                       pmiRIReportR9                 |input;|
    csiSubframePatternConfigFlag  u16                       u16                       csiSubframePatternConfigFlag  |input;|
    csiMeasSubframeSet1R10        struct                    T_MeasSubframePatternR10  
    csiMeasSubframeSet2R10        struct                    T_MeasSubframePatternR10  
</sub T_CqiReportConfR10>


<sub T_PucchConfigDedicatedV1020>
    pucchCfgDedV1020Flag               u16                       u16                       pucchCfgDedV1020Flag               |input;|
    pucchFromatChoice                  u16                       u16                       pucchFromatChoice                  |input;|
    n3PucchAnListR10[4]                array                     u16                       n3PucchAnListR10                   |multiedit;|
    twoAntPortActivatedFormat3R10Flag  u16                       u16                       twoAntPortActivatedFormat3R10Flag  |input;|
    n3PucchAnListP1R10[4]              array                     u16                       n3PucchAnListP1R10                 |multiedit;|
    n1PucchAnCsR10Flag                 u16                       u16                       n1PucchAnCsR10Flag                 |input;|
    n1PucchAnCsListR10[2]              array                     T_n1PucchAnCsListR10      n1PucchAnCsListR10                 |multiedit;|
    twoAntPortActPucchFormat1a1bR10    u16                       u16                       twoAntPortActPucchFormat1a1bR10    |input;|
    simulPucchPuschR10                 u16                       u16                       simulPucchPuschR10                 |input;|
    n1PucchAnRepP1R10                  u16                       u16                       n1PucchAnRepP1R10                  |input;|
    reserved                           u16                       u16                       reserved                           |input;|
</sub T_PucchConfigDedicatedV1020>


<sub T_n1PucchAnCsListR10
    n1PucchAnCsListR10[4]              array                     u16                       n1PucchAnCsListR10                 |multiedit;|
</sub T_n1PucchAnCsListR10


<sub T_CsiRsConfigR10>
    csiRsConfigFlag       u16  u16  csiRsConfigFlag       |input;|
    antennaPortsCount     u16  u16  antennaPortsCount     |input;|
    resourceConfig        u16  u16  resourceConfig        |input;|
    subframeConfig        u16  u16  subframeConfig        |input;|
    pC                    u16  u16  pC                    |input;|
    zeroTxPowerFlag       u16  u16  zeroTxPowerFlag       |input;|
    zeroTxPwrSubframeCfg  u16  u16  zeroTxPwrSubframeCfg  |input;|
    reserved              u16  u16  reserved              |input;|
    zeroTxPwrResourceCfg  u32  u32  zeroTxPwrResourceCfg  |input;|
</sub T_CsiRsConfigR10>


<sub T_CsiRsConfZpR11>
    csiRsConfZpId     u16  u16  csiRsConfZpId     |input;|
    resourceConfList  u16  u16  resourceConfList  |input;|
    subframeConf      u16  u16  subframeConf      |input;|
    reserved          u16  u16  reserved          |input;|
</sub T_CsiRsConfZpR11>


<sub T_CsiRsConfZpListR11>
    numOfCsiRsConfZp                           u16               u16               numOfCsiRsConfZp                           |input;|
    reserved                                   u16               u16               reserved                                   |input;|
    csiRsConfZpList[EAS_WB_MAX_CSI_RS_ZP_NUM]  array             T_CsiRsConfZpR11  csiRsConfZpList                            |multiedit;|
</sub T_CsiRsConfZpListR11>


<sub T_PuschConfigDedicatedR1430>
    cePuschNbMaxTbsR14      u16  u16  cePuschNbMaxTbsR14      |input;|
    cePuschMaxBandwidthR14  u16  u16  cePuschMaxBandwidthR14  |input;|
</sub T_PuschConfigDedicatedR1430>


<sub T_PdschConfigDedicatedR1430>
    cePdschMaxBandwidthR14      u16  u16  cePdschMaxBandwidthR14      |input;|
    cePdschTenProcessesR14      u16  u16  cePdschTenProcessesR14      |input;|
    ceHarqAckBundlingR14        u16  u16  ceHarqAckBundlingR14        |input;|
    ceSchedulingEnhancementR14  u16  u16  ceSchedulingEnhancementR14  |input;|
    tbsIndexAlt2R14             u16  u16  tbsIndexAlt2R14             |input;|
    reserved                    u16  u16  reserved                    |input;|
</sub T_PdschConfigDedicatedR1430>


<sub T_PuschEnhancementsConfigR14>
    puschHoppingOffsetPuschEnhr14  u16  u16  puschHoppingOffsetPuschEnhr14  |input;|
    intervalFddPuschEnhr14         u16  u16  intervalFddPuschEnhr14         |input;|
    intervalTddPuschEnhr14         u16  u16  intervalTddPuschEnhr14         |input;|
    reserved                       u16  u16  reserved                       |input;|
</sub T_PuschEnhancementsConfigR14>


<sub T_DedCfgForBlCeR14>
    cfgBitMap                         u16                           u16                           cfgBitMap                         |input;|
    reserved                          u16                           u16                           reserved                          |input;|
    cePdschPuschEnhancementConfigR14  u16                           u16                           cePdschPuschEnhancementConfigR14  |input;|
    ceUeTxAntennaSelectionConfigR14   u16                           u16                           ceUeTxAntennaSelectionConfigR14   |input;|
    puschEnhancementsConfigR14        struct                        T_PuschEnhancementsConfigR14  
    pdschConfigDedicatedR1430         struct                        T_PdschConfigDedicatedR1430   
    puschConfigDedicatedR1430         struct                        T_PuschConfigDedicatedR1430   
</sub T_DedCfgForBlCeR14>


<sub T_DedCfgForComm>
    crnti                        u32                       u32                       crnti                        |input;|
    n310                         u16                       u16                       n310                         |input;|
    n311                         u16                       u16                       n311                         |input;|
    t310                         u16                       u16                       t310                         |input;|
    reserved                     u16                       u16                       reserved                     |input;|
    pucchDedInfo                 struct                    T_PucchConfigDedicated    
    pucchParam                   struct                    T_PucchParam              
    cqiReportConf                struct                    T_CqiReportConf           
    cqiReportConfR10             struct                    T_CqiReportConfR10        
    antennalInfo                 struct                    T_AntennaInfo             
    pdschDedInfo                 struct                    T_PdschConfigDedicated    
    puschDedCfg                  struct                    T_PuschDediInfo           
    tpcPusch                     struct                    T_TpcConfig               
    tpcPucch                     struct                    T_TpcConfig               
    srsDedInfo                   struct                    T_UlSrsDediInfo           
    srsApInfo                    struct                    T_UlSrsDediInfoAperiodic  
    spsConfig                    struct                    T_SpsConfigInfo           
    ulPowerCtrDedInfo            struct                    T_UlPowerCtrDediInfo      
    drxConfig                    struct                    T_DrxConfigInfo_WB        
    measSubframePatternPcellR10  struct                    T_MeasSubframePatternR10  
    neighCellsCrsInfo            struct                    T_NeighCellsCrsInfoList   
</sub T_DedCfgForComm>


<sub T_DedCfgForBlCe>
    ceMode                   u16                        u16                        ceMode                   |input;|
    reserved                 u16                        u16                        reserved                 |input;|
    epdcchInfo               struct                     T_EpdcchConfigR11          
    pucchConfigDedicatedR13  struct                     T_PucchConfigDedicatedR13  
    puschConfigDedicatedR13  struct                     T_PuschConfigDedicatedR13  
    dedCfgForBlCeR14         struct                     T_DedCfgForBlCeR14         
</sub T_DedCfgForBlCe>


<sub T_DedCfgForNonBlCe>
    atennaInfoUlR10   struct                       T_AntennaInfoUlR10           
    csiRsConfigR10    struct                       T_CsiRsConfigR10             
    csiRsConfZpR11    struct                       T_CsiRsConfZpListR11         
    pucchDedCfgV1020  struct                       T_PucchConfigDedicatedV1020  
</sub T_DedCfgForNonBlCe>


<sub T_RL1C_CHN_DED_CONFIG_REQ>
    servCellInfo        struct              T_CellServLte       
    pDedCfgForComm      Ptr                 T_DedCfgForComm     
    pDedCfgForBlCe      Ptr                 T_DedCfgForBlCe     
    pDedCfgForNonBlCe   Ptr                 T_DedCfgForNonBlCe  
</sub T_RL1C_CHN_DED_CONFIG_REQ>


<sub T_MeasSubframePatternConfigNeighR10>
    measSubframeCellNum                           u16                       u16                       measSubframeCellNum                           |input;|
    reserved                                      u16                       u16                       reserved                                      |input;|
    measSubframePattern                           struct                    T_MeasSubframePatternR10  
    startPhyCellId[EAS_WB_MAX_DCH_BLACKCELL_NUM]  array                     u16                       startPhyCellId                                |multiedit;|
    phyCellIdRange[EAS_WB_MAX_DCH_BLACKCELL_NUM]  array                     u16                       phyCellIdRange                                |multiedit;|
</sub T_MeasSubframePatternConfigNeighR10>


<sub T_RL1C_DCH_MEAS_REQ>
    measId                                                      u16                                  u16                                  measId                                                      |input;|
    gapType                                                     u16                                  u16                                  gapType                                                     |input;|
    gapOffset                                                   u16                                  u16                                  gapOffset                                                   |input;|
    filterCoefRsrp                                              u16                                  u16                                  filterCoefRsrp                                              |input;|
    filterCoefRsrq                                              u16                                  u16                                  filterCoefRsrq                                              |input;|
    lteFreqNum                                                  u16                                  u16                                  lteFreqNum                                                  |input;|
    sMeasure                                                    u16                                  u16                                  sMeasure                                                    |input;|
    rsrqOnAllSymbol                                             u16                                  u16                                  rsrqOnAllSymbol                                             |input;|
    filterCoefSinr                                              u16                                  u16                                  filterCoefSinr                                              |input;|
    ceMode                                                      u16                                  u16                                  ceMode                                                      |input;|
    serveInfo                                                   struct                               T_CellServLte                        
    lteMeasFreqInfo[EAS_WB_MAX_LTE_FREQ_NUM]                    array                                T_EutranMeasFreqInfo                 lteMeasFreqInfo                                             |multiedit;|
    measSubframePatternConfigNeighR10[EAS_WB_MAX_LTE_FREQ_NUM]  array                                T_MeasSubframePatternConfigNeighR10  measSubframePatternConfigNeighR10                           |multiedit;|
    gsmCellNum                                                  u16                                  u16                                  gsmCellNum                                                  |input;|
    filterCoefRssi                                              u16                                  u16                                  filterCoefRssi                                              |input;|
    gsmCell[EAS_MAX_GGE_CELL_NUM]                               array                                u16                                  gsmCell                                                     |multiedit;|
    atDummyFun                                                  struct                               T_AtDummyFun                         
    highSpeedFlag                                               u16                                  u16                                  highSpeedFlag                                               |input;|
    reserved                                                    u16                                  u16                                  reserved                                                    |input;|
</sub T_RL1C_DCH_MEAS_REQ>


<sub T_RL1C_DCH_MEAS_IND>
    measId                                       u16                    u16                    measId                                       |input;|
    lteFreqNum                                   u16                    u16                    lteFreqNum                                   |input;|
    measStatus                                   u16                    u16                    measStatus                                   |input;|
    reserved1                                    u16                    u16                    reserved1                                    |input;|
    lteMeasResult[EAS_WB_MAX_LTE_FREQ_NUM]       array                  T_MeasFreqResult       lteMeasResult                                |multiedit;|
    gsmCellNum                                   u16                    u16                    gsmCellNum                                   |input;|
    reserved2                                    u16                    u16                    reserved2                                    |input;|
    gsmCellMeasResultList[EAS_MAX_GGE_CELL_NUM]  array                  T_GeranCellMeasResult  gsmCellMeasResultList                        |multiedit;|
</sub T_RL1C_DCH_MEAS_IND>


<sub T_RL1C_DEACT_REQ>
    cause     u16  u16  cause     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_DEACT_REQ>


<sub T_RL1C_PHY_RESET_REQ>
    resetType  u16  u16  resetType  |input;|
    resered    u16  u16  resered    |input;|
</sub T_RL1C_PHY_RESET_REQ>


<sub T_RL1C_CGI_MEAS_REQ>
    cgiCellInfo           struct         T_CellDescLte  
    syncOffset            u32            u32            syncOffset            |input;|
    cellCpType            u16            u16            cellCpType            |input;|
    autoGapFlag           u16            u16            autoGapFlag           |input;|
    presenceAntennaPort1  u16            u16            presenceAntennaPort1  |input;|
    cellType              u16            u16            cellType              |input;|
</sub T_RL1C_CGI_MEAS_REQ>


<sub T_RL1C_CGI_MEAS_IND>
    cgiDataLen                          u16    u16    cgiDataLen                          |input;|
    reserved                            u16    u16    reserved                            |input;|
    cgiData[EAS_WB_MAX_SI_DATA_LENGTH]  array  u8     cgiData                             |multiedit;|
    mibData[4]                          array  u8     mibData                             |multiedit;|
</sub T_RL1C_CGI_MEAS_IND>


<sub T_RL1C_RLF_STATUS_IND>
    statusInd  u32  u32  statusInd  |input;|
</sub T_RL1C_RLF_STATUS_IND>


<sub T_RL1C_EDRX_SLEEP_IND>
    sleepLen  u32  u32  sleepLen  |input;|
</sub T_RL1C_EDRX_SLEEP_IND>


<sub T_RL1C_DIRECT_IND>
    data      u16  u16  data      |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_DIRECT_IND>


<sub T_RL1C_OUT_OF_SERVICE_IND>
    cause     u16  u16  cause     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_OUT_OF_SERVICE_IND>


<sub T_RL1C_PCELL_MEAS_IND>
    rsrp      u16  u16  rsrp      |input;|
    rsrq      u16  u16  rsrq      |input;|
    rxTxDiff  u16  u16  rxTxDiff  |input;|
    sinr      u16  u16  sinr      |input;|
    rssi      s16  s16  rssi      |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_PCELL_MEAS_IND>


<sub T_RL1C_CE_MODE_CONFIG_REQ>
    ceMode    u16  u16  ceMode    |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_CE_MODE_CONFIG_REQ>


<sub T_RL1C_BAND_SCAN_REQ>
    scanId                         u16            u16            scanId                         |input;|
    plmnSearchFlag                 u16            u16            plmnSearchFlag                 |input;|
    freqBandNum                    u16            u16            freqBandNum                    |input;|
    reserved                       u16            u16            reserved                       |input;|
    freqBand[EAS_WB_MAX_FREQBAND]  array          T_FreqBandLte  freqBand                       |multiedit;|
</sub T_RL1C_BAND_SCAN_REQ>


<sub T_RL1C_BAND_SCAN_CNF>
    scanId                         u16            u16            scanId                         |input;|
    freqBandNum                    u16            u16            freqBandNum                    |input;|
    freqBand[EAS_WB_MAX_FREQBAND]  array          T_FreqBandLte  freqBand                       |multiedit;|
</sub T_RL1C_BAND_SCAN_CNF>


<sub T_RL1C_HSFN_INFO_REQ>
    hyperSfn  u16  u16  hyperSfn  |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_RL1C_HSFN_INFO_REQ>


<sub T_RL1C_TARGET_CELL_SYNC_INFO_REQ>
    adjustSFNInfo  struct           T_adjustSFNInfo  
    adjustHFNInfo  struct           T_adjustHFNInfo  
</sub T_RL1C_TARGET_CELL_SYNC_INFO_REQ>


<sub T_RL1C_SI_SCHEDULING_BITMAP_REQ>
    siReadSchedulBitMap  u32  u32  siReadSchedulBitMap  |input;|
</sub T_RL1C_SI_SCHEDULING_BITMAP_REQ>


<sub T_RL1C_IDL_MEAS_REQ>
    measurementInfo  struct                T_IdlMeasurementInfo  
</sub T_RL1C_IDL_MEAS_REQ>


<sub T_RarResourceInfo>
    ceMode           u16  u16  ceMode           |input;|
    msg3NbIndex      u16  u16  msg3NbIndex      |input;|
    startRB          u16  u16  startRB          |input;|
    lcrb             u16  u16  lcrb             |input;|
    msg3RepNum       u16  u16  msg3RepNum       |input;|
    modulationOrder  u16  u16  modulationOrder  |input;|
    tbSize           u16  u16  tbSize           |input;|
    tpcCommond       u16  u16  tpcCommond       |input;|
    csiFlag          u16  u16  csiFlag          |input;|
    uldelay          u16  u16  uldelay          |input;|
    mpdcchNbIndex    u16  u16  mpdcchNbIndex    |input;|
    reserved         u16  u16  reserved         |input;|
</sub T_RarResourceInfo>


<sub T_ResourceInfo>
    dciType                 u16  u16  dciType                 |input;|
    hoppingFlag             u16  u16  hoppingFlag             |input;|
    modulationOrder         u16  u16  modulationOrder         |input;|
    lcrb                    u16  u16  lcrb                    |input;|
    ulDelay                 u16  u16  ulDelay                 |input;|
    redundancyVers          u16  u16  redundancyVers          |input;|
    ulIndex                 u16  u16  ulIndex                 |input;|
    cqiFlag                 u16  u16  cqiFlag                 |input;|
    spsFlag                 u16  u16  spsFlag                 |input;|
    srsFlag                 u16  u16  srsFlag                 |input;|
    puschTocComm            u16  u16  puschTocComm            |input;|
    dmrsValue               u16  u16  dmrsValue               |input;|
    dai                     u16  u16  dai                     |input;|
    tbsize                  u16  u16  tbsize                  |input;|
    ndiValue                u16  u16  ndiValue                |input;|
    startRB                 u16  u16  startRB                 |input;|
    nb_index                u16  u16  nb_index                |input;|
    harqId                  u16  u16  harqId                  |input;|
    tranRepNum              u16  u16  tranRepNum              |input;|
    dciRepNum               u16  u16  dciRepNum               |input;|
    resIndicator            u16  u16  resIndicator            |input;|
    hoppingBit              u16  u16  hoppingBit              |input;|
    tpmi                    u16  u16  tpmi                    |input;|
    resourceAllocationType  u16  u16  resourceAllocationType  |input;|
</sub T_ResourceInfo>


<sub T_PuschDataCtr>
    flag      u16  u16  flag      |input;|
    reserved  u16  u16  reserved  |input;|
    dataPtr   Ptr  u8   
</sub T_PuschDataCtr>


<union T_Msg3ResourceInfo_union>
    rarResource  struct             T_RarResourceInfo  
    dciResource  struct             T_ResourceInfo     
</union T_Msg3ResourceInfo_union>


<sub T_ML1C_PRACH_SEND_REQ>
    cellDesc              struct         T_CellServLte  
    prachType             u16            u16            prachType             |input;|
    preamblIndex          u16            u16            preamblIndex          |input;|
    prachMaskIndex        u16            u16            prachMaskIndex        |input;|
    rarWinLen             u16            u16            rarWinLen             |input;|
    targetTransPower      s16            s16            targetTransPower      |input;|
    firstTransFlag        u16            u16            firstTransFlag        |input;|
    preambleTransCounter  u16            u16            preambleTransCounter  |input;|
    rarHopping            u16            u16            rarHopping            |input;|
    preambRepNum          u16            u16            preambRepNum          |input;|
    ceLevel               u16            u16            ceLevel               |input;|
</sub T_ML1C_PRACH_SEND_REQ>


<sub T_ML1C_RAR_RESULT_IND>
    rarSfn                      u16    u16    rarSfn                      |input;|
    successFlag                 u16    u16    successFlag                 |input;|
    rarData[MAX_RECV_RAR_BUFF]  array  u8     rarData                     |multiedit;|
</sub T_ML1C_RAR_RESULT_IND>


<sub T_ML1C_SEND_MSG3_REQ>
    msg3Sfn        u16             u16             msg3Sfn        |input;|
    transType      u16             u16             transType      |input;|
    ceMode         u16             u16             ceMode         |input;|
    reserved1      u16             u16             reserved1      |input;|
    tempCrnti      u32             u32             tempCrnti      |input;|
    crnti          u32             u32             crnti          |input;|
    msg3           Ptr             T_PuschDataCtr  
    grantInfo      struct          T_ResourceInfo  
    mpdcchNbIndex  u16             u16             mpdcchNbIndex  |input;|
    reserved2      u16             u16             reserved2      |input;|
    sendCounter    u16             u16             sendCounter    |input;|
    harqId         u16             u16             harqId         |input;|
</sub T_ML1C_SEND_MSG3_REQ>


<sub T_ML1C_PDCCH_ORDER_IND>
    raPreamblIndex  u16  u16  raPreamblIndex  |input;|
    prachMaskIndex  u16  u16  prachMaskIndex  |input;|
    startCeLevel    u16  u16  startCeLevel    |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_ML1C_PDCCH_ORDER_IND>


<sub T_ML1C_PRACH_END_REQ>
    crnti  u32  u32  crnti  |input;|
</sub T_ML1C_PRACH_END_REQ>


<sub T_ML1C_DL_HARQ_INFO_IND>
    dciEndSfn     u16  u16  dciEndSfn     |input;|
    pdschEndSfn   u16  u16  pdschEndSfn   |input;|
    harqId        u16  u16  harqId        |input;|
    dataType      u16  u16  dataType      |input;|
    resourceType  u16  u16  resourceType  |input;|
    reserved      u16  u16  reserved      |input;|
</sub T_ML1C_DL_HARQ_INFO_IND>


<sub T_ML1C_PDSCH_DLSCH_READ_IND>
    dataSfn  u16  u16  dataSfn  |input;|
    crcFlag  u16  u16  crcFlag  |input;|
    tbSize   u16  u16  tbSize   |input;|
    harqId   u16  u16  harqId   |input;|
    data     Ptr  u8   
</sub T_ML1C_PDSCH_DLSCH_READ_IND>


<sub T_ML1C_UL_HARQ_INFO_IND>
    dciRecvSfn                          u16             u16             dciRecvSfn                          |input;|
    resourceType                        u16             u16             resourceType                        |input;|
    crntiResInfoNum                     u16             u16             crntiResInfoNum                     |input;|
    spsResInfoNum                       u16             u16             spsResInfoNum                       |input;|
    crntiResInfo[MAX_UL_GRANT_RES_NUM]  array           T_ResourceInfo  crntiResInfo                        |multiedit;|
    spsResInfo[MAX_UL_GRANT_RES_NUM]    array           T_ResourceInfo  spsResInfo                          |multiedit;|
    hfn                                 u16             u16             hfn                                 |input;|
    harqIndPresent                      u16             u16             harqIndPresent                      |input;|
    harqId[MAX_UL_ACK_NACK_NUM]         array           u16             harqId                              |multiedit;|
    ackOrNack[MAX_UL_ACK_NACK_NUM]      array           u16             ackOrNack                           |multiedit;|
</sub T_ML1C_UL_HARQ_INFO_IND>


<sub T_ML1C_PUSCH_SEND_REQ>
    sendSfn            u16             u16             sendSfn            |input;|
    transType          u16             u16             transType          |input;|
    rnti               u16             u16             rnti               |input;|
    hfn                u16             u16             hfn                |input;|
    data               Ptr             T_PuschDataCtr  
    resourInfo         struct          T_ResourceInfo  
    rearmostPuschFlag  u16             u16             rearmostPuschFlag  |input;|
    sendCounter        u16             u16             sendCounter        |input;|
    harqId             u16             u16             harqId             |input;|
    reserved2          u16             u16             reserved2          |input;|
</sub T_ML1C_PUSCH_SEND_REQ>


<sub T_ML1C_SR_SEND_REQ>
    srPeriod         u16  u16  srPeriod         |input;|
    srOffset         u16  u16  srOffset         |input;|
    srMaxNum         u16  u16  srMaxNum         |input;|
    srProhibitTimer  u16  u16  srProhibitTimer  |input;|
    srResourceIndex  u16  u16  srResourceIndex  |input;|
    reserved         u16  u16  reserved         |input;|
</sub T_ML1C_SR_SEND_REQ>


<sub T_ML1C_DRX_STATUS_REQ>
    cause           u16  u16  cause           |input;|
    stopSsfn        u16  u16  stopSsfn        |input;|
    stopHfn         u16  u16  stopHfn         |input;|
    nextActiveSsfn  u16  u16  nextActiveSsfn  |input;|
    nextActiveHfn   u16  u16  nextActiveHfn   |input;|
    activeCause     u16  u16  activeCause     |input;|
</sub T_ML1C_DRX_STATUS_REQ>


<sub T_ML1C_ADJUST_TA_REQ>
    sfn        u16  u16  sfn        |input;|
    ta         u16  u16  ta         |input;|
    rarTaFlag  u16  u16  rarTaFlag  |input;|
    reserved   u16  u16  reserved   |input;|
</sub T_ML1C_ADJUST_TA_REQ>


<sub T_ML1C_SEND_UL_SPS_INFO_REQ>
    nextSpsScheHfn   u16  u16  nextSpsScheHfn   |input;|
    nextSpsScheSsfn  u16  u16  nextSpsScheSsfn  |input;|
</sub T_ML1C_SEND_UL_SPS_INFO_REQ>


<0x2236 OP_ML1C_PUSCH_SEND_REQ>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_PUSCH_SEND_REQ  
</0x2236 OP_ML1C_PUSCH_SEND_REQ>


<0x2232 OP_ML1C_SEND_MSG3_REQ>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_ML1C_SEND_MSG3_REQ  
</0x2232 OP_ML1C_SEND_MSG3_REQ>


<sub T_AutoTestCellDesc>
    arfcn    u32  u32  arfcn    |input;|
    ratType  u16  u16  ratType  |input;|
    cellId   u16  u16  cellId   |input;|
</sub T_AutoTestCellDesc>


<sub T_AutoTestCellMeasResult>
    cellInfo  struct              T_AutoTestCellDesc  
    rsrp      s16                 s16                 rsrp      |input;|
    rsrq      s16                 s16                 rsrq      |input;|
</sub T_AutoTestCellMeasResult>


<sub T_AutoTestInfo>
    simFlag        u16                       u16                       simFlag        |input;|
    action         u16                       u16                       action         |input;|
    actionStatus   u16                       u16                       actionStatus   |input;|
    errcCurState   u16                       u16                       errcCurState   |input;|
    targetCell     struct                    T_AutoTestCellDesc        
    servingCell    struct                    T_AutoTestCellMeasResult  
    bestIntraCell  struct                    T_AutoTestCellMeasResult  
    bestInterCell  struct                    T_AutoTestCellMeasResult  
    bestGgeCell    struct                    T_AutoTestCellMeasResult  
</sub T_AutoTestInfo>


<sub T_Plmn>
    mcc[2]    array  u8     mcc       |multiedit;|
    mnc       u8     u8     mnc       |input;|
    reserved  u8     u8     reserved  |input;|
</sub T_Plmn>


<sub T_PHY_STATISTICS_INFO>
    v_sinr                 S16  S16  v_sinr                 |input;|
    v_txPower              S16  S16  v_txPower              |input;|
    v_dl_rbNumber_tti      U16  U16  v_dl_rbNumber_tti      |input;|
    v_ul_rbNumber_tti      U16  U16  v_ul_rbNumber_tti      |input;|
    v_dl_mcs               U16  U16  v_dl_mcs               |input;|
    v_ul_mcs               U16  U16  v_ul_mcs               |input;|
    v_dl_rb_start          U16  U16  v_dl_rb_start          |input;|
    v_ul_rb_start          U16  U16  v_ul_rb_start          |input;|
    v_mpdcch_real_rep_num  U16  U16  v_mpdcch_real_rep_num  |input;|
    v_pdsch_real_rep       U16  U16  v_pdsch_real_rep       |input;|
    v_pusch_real_rep       U16  U16  v_pusch_real_rep       |input;|
    v_static_time_ms       U16  U16  v_static_time_ms       |input;|
    v_dl_rbNumber_total    U32  U32  v_dl_rbNumber_total    |input;|
    v_ul_rbNumber_total    U32  U32  v_ul_rbNumber_total    |input;|
    v_dl_mcs_total         U16  U16  v_dl_mcs_total         |input;|
    v_ul_mcs_total         U16  U16  v_ul_mcs_total         |input;|
    v_dl_cnt               U16  U16  v_dl_cnt               |input;|
    v_ul_cnt               U16  U16  v_ul_cnt               |input;|
    v_rsrp_q4              S16  S16  v_rsrp_q4              |input;|
    v_rsrq_q4              S16  S16  v_rsrq_q4              |input;|
    v_rssi_q4              S16  S16  v_rssi_q4              |input;|
    v_wb_cqi               U16  U16  v_wb_cqi               |input;|
</sub T_PHY_STATISTICS_INFO>


<sub T_UE_L2_TIME_INFO>
    time               u32  u32  time               |input;|
    SystemFrameNumber  u16  u16  SystemFrameNumber  |input;|
    SubFrameNumber     u8   u8   SubFrameNumber     |input;|
    reserved           u8   u8   reserved           |input;|
</sub T_UE_L2_TIME_INFO>


<sub T_UE_L2_HO_INFO>
    Before  struct             T_UE_L2_TIME_INFO  
    After   struct             T_UE_L2_TIME_INFO  
</sub T_UE_L2_HO_INFO>


<sub T_UE_L2_HO_INFO_RPT>
    ho_pdcp_delay  struct           T_UE_L2_HO_INFO  
    ho_rlc_delay   struct           T_UE_L2_HO_INFO  
    ho_mac_delay   struct           T_UE_L2_HO_INFO  
</sub T_UE_L2_HO_INFO_RPT>


<sub T_STACK_STATISTICS_INFO>
    rsrp                                          U16              U16              rsrp                                          |input;|
    pathLoss                                      U16              U16              pathLoss                                      |input;|
    dlTransMode                                   U16              U16              dlTransMode                                   |input;|
    ulHarqRetrans                                 U16              U16              ulHarqRetrans                                 |input;|
    dlHarqRetrans                                 U16              U16              dlHarqRetrans                                 |input;|
    ulInitialBler                                 U16              U16              ulInitialBler                                 |input;|
    dlInitialBler                                 U16              U16              dlInitialBler                                 |input;|
    ulBler                                        U16              U16              ulBler                                        |input;|
    dlBler                                        U16              U16              dlBler                                        |input;|
    ulAckNum                                      U16              U16              ulAckNum                                      |input;|
    ulNackNum                                     U16              U16              ulNackNum                                     |input;|
    ulNewNum                                      U16              U16              ulNewNum                                      |input;|
    ulHarqRetxNum[EMAC_STATISTICS_RETX_TYPE_NUM]  array            U16              ulHarqRetxNum                                 |multiedit;|
    dlNewNum                                      U16              U16              dlNewNum                                      |input;|
    dlHarqRetxNum[EMAC_STATISTICS_RETX_TYPE_NUM]  array            U16              dlHarqRetxNum                                 |multiedit;|
    dlDiscardRlcRepPduNum                         u16              u16              dlDiscardRlcRepPduNum                         |input;|
    ulPdcpRate                                    U32              U32              ulPdcpRate                                    |input;|
    dlPdcpRate                                    U32              U32              dlPdcpRate                                    |input;|
    ulPdcpRohcRate                                U32              U32              ulPdcpRohcRate                                |input;|
    dlPdcpRohcRate                                U32              U32              dlPdcpRohcRate                                |input;|
    ulRlcRate                                     U32              U32              ulRlcRate                                     |input;|
    dlRlcRate                                     U32              U32              dlRlcRate                                     |input;|
    ulMacRate                                     U32              U32              ulMacRate                                     |input;|
    dlMacRate                                     U32              U32              dlMacRate                                     |input;|
    txPhyRate                                     U32              U32              txPhyRate                                     |input;|
    rxPhyRate                                     U32              U32              rxPhyRate                                     |input;|
    volteStreamLossMax                            U16              U16              volteStreamLossMax                            |input;|
    volteStreamLossSum                            U16              U16              volteStreamLossSum                            |input;|
    pdcpHoDelay                                   struct           T_UE_L2_HO_INFO  
</sub T_STACK_STATISTICS_INFO>


<sub T_UE_L2_STATUS_PERIOD_RPT>
    ulNewNum                                      u16    u16    ulNewNum                                      |input;|
    ulHarqRetxNum[EMAC_STATISTICS_RETX_TYPE_NUM]  array  u16    ulHarqRetxNum                                 |multiedit;|
    dlNewNum                                      u16    u16    dlNewNum                                      |input;|
    dlHarqRetxNum[EMAC_STATISTICS_RETX_TYPE_NUM]  array  u16    dlHarqRetxNum                                 |multiedit;|
    ulInitialBler                                 u16    u16    ulInitialBler                                 |input;|
    dlInitialBler                                 u16    u16    dlInitialBler                                 |input;|
    ulAckNum                                      u16    u16    ulAckNum                                      |input;|
    ulNackNum                                     u16    u16    ulNackNum                                     |input;|
    ulPdcpRohcTroughout                           u32    u32    ulPdcpRohcTroughout                           |input;|
    dlPdcpRohcTroughout                           u32    u32    dlPdcpRohcTroughout                           |input;|
    ulPdcpTroughout                               u32    u32    ulPdcpTroughout                               |input;|
    dlPdcpTroughout                               u32    u32    dlPdcpTroughout                               |input;|
    ulRlcTroughout                                u32    u32    ulRlcTroughout                                |input;|
    dlRlcTroughout                                u32    u32    dlRlcTroughout                                |input;|
    ulMacTroughout                                u32    u32    ulMacTroughout                                |input;|
    dlMacTroughout                                u32    u32    dlMacTroughout                                |input;|
    ulPhyTroughout                                u32    u32    ulPhyTroughout                                |input;|
    dlPhyTroughout                                u32    u32    dlPhyTroughout                                |input;|
</sub T_UE_L2_STATUS_PERIOD_RPT>


<sub T_UE_ERRC_MSG_RPT>
    channelType                      u8     u8     channelType                      |input;|
    reserved                         u8     u8     reserved                         |input;|
    msgLen                           u16    u16    msgLen                           |input;|
    msg[UE_ERRC_MSG_RPT__MAX_LENTH]  array  u8     msg                              |multiedit;|
</sub T_UE_ERRC_MSG_RPT>


<sub T_UE_SERVCELL_INFO_RPT>
    earfcn        u32     u32     earfcn        |input;|
    cellId        u32     u32     cellId        |input;|
    pci           u16     u16     pci           |input;|
    band          u8      u8      band          |input;|
    bandWidthDl   u8      u8      bandWidthDl   |input;|
    tranMode      u8      u8      tranMode      |input;|
    Technology    u8      u8      Technology    |input;|
    servTac[2]    array   u8      servTac       |multiedit;|
    servCellPlmn  struct  T_Plmn  
</sub T_UE_SERVCELL_INFO_RPT>


<sub T_UE_NAS_MSG_RPT>
    direction   u8     u8     direction   |input;|
    nasMsgType  u8     u8     nasMsgType  |input;|
    msgLen      u16    u16    msgLen      |input;|
    msg[1600]   array  u8     msg         |multiedit;|
</sub T_UE_NAS_MSG_RPT>


<sub T_UE_GSM_MSG_RPT>
    direction   u8     u8     direction   |input;|
    nasMsgType  u8     u8     nasMsgType  |input;|
    msgLen      u16    u16    msgLen      |input;|
    msg[1600]   array  u8     msg         |multiedit;|
</sub T_UE_GSM_MSG_RPT>


<sub api_statistic_t>
    success    u16  u16  success    |input;|
    fail       u16  u16  fail       |input;|
    passRatio  u16  u16  passRatio  |input;|
    delay      u32  u32  delay      |input;|
</sub api_statistic_t>


<sub api_dropTimes_t>
    dropOn2g  u16  u16  dropOn2g  |input;|
    dropOn4g  u16  u16  dropOn4g  |input;|
</sub api_dropTimes_t>


<sub api_attachTime_t>
    timeOn2g      u32  u32  timeOn2g      |input;|
    timeOn4g      u32  u32  timeOn4g      |input;|
    timeOnVolte   u32  u32  timeOnVolte   |input;|
    timeOnUnknow  u32  u32  timeOnUnknow  |input;|
    allTheTime    u32  u32  allTheTime    |input;|
</sub api_attachTime_t>


<sub api_handoverInfo_t>
    handoverStatistic[8]  array            api_statistic_t  handoverStatistic     |multiedit;|
</sub api_handoverInfo_t>


<sub api_reselectInfo_t>
    reselStatistic[4]  array            api_statistic_t  reselStatistic     |multiedit;|
</sub api_reselectInfo_t>


<sub api_capInfoLte_t>
    lteCipherFlag  u8  u8  lteCipherFlag  |input;|
    bsrvccFlag     u8  u8  bsrvccFlag     |input;|
    emfbiFlag      u8  u8  emfbiFlag      |input;|
    ipv6Flag       u8  u8  ipv6Flag       |input;|
    asrvccFlag     u8  u8  asrvccFlag     |input;|
    esrvccFlag     u8  u8  esrvccFlag     |input;|
</sub api_capInfoLte_t>


<sub api_gsmNcell_t>
    arfcn  u32  u32  arfcn  |input;|
    bsic   u16  u16  bsic   |input;|
    rxlev  u16  u16  rxlev  |input;|
</sub api_gsmNcell_t>


<sub api_lteCellAccessRelatedInfo_t>
    validFlag  u8     u8     validFlag  |input;|
    plmn[3]    array  u8     plmn       |multiedit;|
    enodeBID   u32    u32    enodeBID   |input;|
    cellId     u16    u16    cellId     |input;|
    tac        u16    u16    tac        |input;|
</sub api_lteCellAccessRelatedInfo_t>


<sub api_lteNcell_t>
    frequency       u32                             u32                             frequency       |input;|
    pcid            u16                             u16                             pcid            |input;|
    bandWidth       u16                             u16                             bandWidth       |input;|
    rsrp            s16                             s16                             rsrp            |input;|
    rsrq            s16                             s16                             rsrq            |input;|
    Srxlev          s16                             s16                             Srxlev          |input;|
    cellAccRelInfo  struct                          api_lteCellAccessRelatedInfo_t  
</sub api_lteNcell_t>


<sub lteScell_t>
    plmn[3]      array  u8     plmn         |multiedit;|
    imsi[16]     array  u8     imsi         |multiedit;|
    roamingFlag  u8     u8     roamingFlag  |input;|
    bandInfo     u16    u16    bandInfo     |input;|
    dlEarfcn     u32    u32    dlEarfcn     |input;|
    pcid         u16    u16    pcid         |input;|
    rsrp         s16    s16    rsrp         |input;|
    rsrq         s16    s16    rsrq         |input;|
    Srxlev       s16    s16    Srxlev       |input;|
    tsMode       u16    u16    tsMode       |input;|
    bandwidth    u16    u16    bandwidth    |input;|
    SA           u16    u16    SA           |input;|
    SSP          u16    u16    SSP          |input;|
    SINR         u16    u16    SINR         |input;|
    ulMcs        u32    u32    ulMcs        |input;|
    dlMcs        u32    u32    dlMcs        |input;|
    ulBler       u8     u8     ulBler       |input;|
    dlBler       u8     u8     dlBler       |input;|
    enodeBID     u32    u32    enodeBID     |input;|
    cellId       u16    u16    cellId       |input;|
    tac          u16    u16    tac          |input;|
    netMode      u16    u16    netMode      |input;|
    rxPower      s16    s16    rxPower      |input;|
    txPower      s16    s16    txPower      |input;|
</sub lteScell_t>


<sub api_nwCapLte_t>
    lteScell                             struct            lteScell_t        
    lteNcellNum                          u16               u16               lteNcellNum                          |input;|
    lteNcell[MAX_NETINFO_LTE_NCELL_NUM]  array             api_lteNcell_t    lteNcell                             |multiedit;|
    gsmNcellNum                          u16               u16               gsmNcellNum                          |input;|
    gsmNcell[MAX_NETINFO_GSM_NCELL_NUM]  array             api_gsmNcell_t    gsmNcell                             |multiedit;|
    capInfoLte                           struct            api_capInfoLte_t  
</sub api_nwCapLte_t>


<sub api_ueCapGsm_t>
    vamos         u32    u32    vamos         |input;|
    diversityGsm  u32    u32    diversityGsm  |input;|
    Plmn[3]       array  u8     Plmn          |multiedit;|
    Roaming       struct bool   
    CellId[2]     array  u8     CellId        |multiedit;|
    Arfcn         u16    u16    Arfcn         |input;|
    Bsic          u8     u8     Bsic          |input;|
    Rla           u8     u8     Rla           |input;|
    Lai[5]        array  u8     Lai           |multiedit;|
</sub api_ueCapGsm_t>


<sub api_netInfo_t>
    ueCapabilityGsm  struct          api_ueCapGsm_t  
    nwCapabilityLte  struct          api_nwCapLte_t  
</sub api_netInfo_t>


<sub api_netinfoStatistic_t>
    reselectInfo  struct              api_reselectInfo_t  
    handoverInfo  struct              api_handoverInfo_t  
    attachTime    struct              api_attachTime_t    
    dropTimes     struct              api_dropTimes_t     
</sub api_netinfoStatistic_t>


<sub T_UeStatusInfo>
    dlEarfcn       u32  u32  dlEarfcn       |input;|
    pcid           u16  u16  pcid           |input;|
    rsrp           s16  s16  rsrp           |input;|
    rsrq           s16  s16  rsrq           |input;|
    sinr           u16  u16  sinr           |input;|
    mcl            u16  u16  mcl            |input;|
    ulMcs          u16  u16  ulMcs          |input;|
    dlMcs          u16  u16  dlMcs          |input;|
    mpdcchRepNum   u16  u16  mpdcchRepNum   |input;|
    puschRepNum    u16  u16  puschRepNum    |input;|
    pdschRepNum    u16  u16  pdschRepNum    |input;|
    ulInitialBler  u16  u16  ulInitialBler  |input;|
    dlInitialBler  u16  u16  dlInitialBler  |input;|
    ulRbNum        u32  u32  ulRbNum        |input;|
    dlRbNum        u32  u32  dlRbNum        |input;|
    ulRlcRate      u32  u32  ulRlcRate      |input;|
    dlRlcRate      u32  u32  dlRlcRate      |input;|
    ulTbs          u32  u32  ulTbs          |input;|
    dlTbs          u32  u32  dlTbs          |input;|
</sub T_UeStatusInfo>


<sub T_iratLteFreqInfo_el1>
    arfcn                 u32  u32  arfcn                 |input;|
    reserved              u16  u16  reserved              |input;|
    allowedMeasBandWidth  u16  u16  allowedMeasBandWidth  |input;|
    strongestCellOffset   u32  u32  strongestCellOffset   |input;|
</sub T_iratLteFreqInfo_el1>


<sub T_MeasFreqInfo>
    frequecy              u32  u32  frequecy              |input;|
    reserved              u16  u16  reserved              |input;|
    allowedMeasBandWidth  u16  u16  allowedMeasBandWidth  |input;|
    presenceAntennaPort1  u16  u16  presenceAntennaPort1  |input;|
    neighCellConfig       u16  u16  neighCellConfig       |input;|
    cellNum               u16  u16  cellNum               |input;|
    measUpdateType        u16  u16  measUpdateType        |input;|
    strongestCellOffset   u32  u32  strongestCellOffset   |input;|
</sub T_MeasFreqInfo>


<sub T_IdlMeasCellInfo>
    cellId[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]      array  u16    cellId                                           |multiedit;|
    syncOffset[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]  array  u32    syncOffset                                       |multiedit;|
    cpType[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]      array  u16    cpType                                           |multiedit;|
</sub T_IdlMeasCellInfo>


<sub T_IdlMeasFreqInfo_El1>
    frequecy              u32                u32                frequecy              |input;|
    allowedMeasBandWidth  u16                u16                allowedMeasBandWidth  |input;|
    presenceAntennaPort1  u16                u16                presenceAntennaPort1  |input;|
    neighCellConfig       u16                u16                neighCellConfig       |input;|
    cellNum               u16                u16                cellNum               |input;|
    measUpdateType        u16                u16                measUpdateType        |input;|
    reserved              u16                u16                reserved              |input;|
    strongestCellOffset   u32                u32                strongestCellOffset   |input;|
    cellInfoList          struct             T_IdlMeasCellInfo  
</sub T_IdlMeasFreqInfo_El1>


<sub T_IdlCellMeasRes>
    cellId[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]         array  u16    cellId                                              |multiedit;|
    rsrp[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]           array  u16    rsrp                                                |multiedit;|
    rsrq[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]           array  u16    rsrq                                                |multiedit;|
    lteSyncOffset[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]  array  u32    lteSyncOffset                                       |multiedit;|
    sinr[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]           array  u16    sinr                                                |multiedit;|
    afc[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]            array  u16    afc                                                 |multiedit;|
    rsrpScale[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]      array  u32    rsrpScale                                           |multiedit;|
    irtScale[EL1C_IDL_FREQ_SUPPORT_MEAS_CELL_NUM]       array  u32    irtScale                                            |multiedit;|
</sub T_IdlCellMeasRes>


<sub T_IdlCellDetectRes>
    lteBlindMeasCellIdList[EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM]  array  u16    lteBlindMeasCellIdList                                        |multiedit;|
    lteBlindRsrp[EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM]            array  u16    lteBlindRsrp                                                  |multiedit;|
    lteBlindRsrq[EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM]            array  u16    lteBlindRsrq                                                  |multiedit;|
    lteBlindSinr[EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM]            array  u16    lteBlindSinr                                                  |multiedit;|
    lteBlindCpType[EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM]          array  u16    lteBlindCpType                                                |multiedit;|
    lteBlindSyncOffset[EL1C_IDL_FREQ_SUPPORT_BLIND_CELL_NUM]      array  u32    lteBlindSyncOffset                                            |multiedit;|
</sub T_IdlCellDetectRes>


<sub T_IdlMeasResult_EL1>
    frequency         u32                 u32                 frequency         |input;|
    intraCellMeasNum  u16                 u16                 intraCellMeasNum  |input;|
    blindMeasNum      u16                 u16                 blindMeasNum      |input;|
    measResult        struct              T_IdlCellMeasRes    
    detectResult      struct              T_IdlCellDetectRes  
</sub T_IdlMeasResult_EL1>


<sub T_MeasFreqResult_EL1>
    frequency         u32  u32  frequency         |input;|
    intraCellMeasNum  u16  u16  intraCellMeasNum  |input;|
    blindMeasNum      u16  u16  blindMeasNum      |input;|
    agc               u16  u16  agc               |input;|
    reserved          u16  u16  reserved          |input;|
    rssi              u32  u32  rssi              |input;|
</sub T_MeasFreqResult_EL1>


<sub T_DchCellMeasRes>
    cellId[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]         array  u16    cellId                                              |multiedit;|
    rsrp[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]           array  u16    rsrp                                                |multiedit;|
    rsrq[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]           array  u16    rsrq                                                |multiedit;|
    lteSyncOffset[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]  array  u32    lteSyncOffset                                       |multiedit;|
    cellCpType[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]     array  u16    cellCpType                                          |multiedit;|
    sinr[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]           array  u16    sinr                                                |multiedit;|
    afc[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]            array  u16    afc                                                 |multiedit;|
    rsrpScale[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]      array  u32    rsrpScale                                           |multiedit;|
    irtScale[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]       array  u32    irtScale                                            |multiedit;|
    irtFail[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]        array  u16    irtFail                                             |multiedit;|
    irtTotal[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]       array  u16    irtTotal                                            |multiedit;|
    afcFail[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]        array  u16    afcFail                                             |multiedit;|
    afcTotal[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]       array  u16    afcTotal                                            |multiedit;|
</sub T_DchCellMeasRes>


<sub T_DchCellDetectRes>
    lteBlindMeasCellIdList[EL1C_DCH_FREQ_SUPPORT_BLIND_CELL_NUM]  array  u16    lteBlindMeasCellIdList                                        |multiedit;|
    lteBlindSyncOffset[EL1C_DCH_FREQ_SUPPORT_BLIND_CELL_NUM]      array  u32    lteBlindSyncOffset                                            |multiedit;|
    lteBlindCpType[EL1C_DCH_FREQ_SUPPORT_BLIND_CELL_NUM]          array  u16    lteBlindCpType                                                |multiedit;|
    lteBlindPeakAvg[EL1C_DCH_FREQ_SUPPORT_BLIND_CELL_NUM]         array  u16    lteBlindPeakAvg                                               |multiedit;|
</sub T_DchCellDetectRes>


<sub T_MeasSubframePatternCfg>
    measSubframeCellNum                           u16                       u16                       measSubframeCellNum                           |input;|
    reserved                                      u16                       u16                       reserved                                      |input;|
    measSubframePattern                           struct                    T_MeasSubframePatternR10  
    startPhyCellId[EAS_WB_MAX_DCH_BLACKCELL_NUM]  array                     u16                       startPhyCellId                                |multiedit;|
    phyCellIdRange[EAS_WB_MAX_DCH_BLACKCELL_NUM]  array                     u16                       phyCellIdRange                                |multiedit;|
</sub T_MeasSubframePatternCfg>


<sub T_EL1C_PCH_GAP_INFO_REQ>
    gapId     u16         u16         gapId     |input;|
    reserved  u16         u16         reserved  |input;|
    gapStart  struct      T_TimeUnit  
    gapEnd    struct      T_TimeUnit  
</sub T_EL1C_PCH_GAP_INFO_REQ>


<sub T_EL1C_PCH_GAP_END_IND>
    gapId         u16                  u16                  gapId         |input;|
    nextPoTa      u16                  u16                  nextPoTa      |input;|
    serverRsrp    u16                  u16                  serverRsrp    |input;|
    serverRsrq    u16                  u16                  serverRsrq    |input;|
    serverSinr    u16                  u16                  serverSinr    |input;|
    syncStatus    u16                  u16                  syncStatus    |input;|
    doppler       u16                  u16                  doppler       |input;|
    rssi          u16                  u16                  rssi          |input;|
    intraMeasRes  struct               T_IdlMeasResult_EL1  
</sub T_EL1C_PCH_GAP_END_IND>


<sub T_EL1C_IDL_GAP_INFO_REQ>
    gapId          u16         u16         gapId          |input;|
    reserved       u16         u16         reserved       |input;|
    gapStart       struct      T_TimeUnit  
    gapEnd         struct      T_TimeUnit  
    gapEndType     u16         u16         gapEndType     |input;|
    resultRepType  u16         u16         resultRepType  |input;|
</sub T_EL1C_IDL_GAP_INFO_REQ>


<sub T_EL1C_IDL_GAP_END_IND>
    gapId     u16  u16  gapId     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_EL1C_IDL_GAP_END_IND>


<sub T_EL1C_IDL_ABORT_GAP_REQ>
    gapId          u16  u16  gapId          |input;|
    taskCleanFlag  u16  u16  taskCleanFlag  |input;|
</sub T_EL1C_IDL_ABORT_GAP_REQ>


<sub T_EL1C_PROT_GAP_INFO_REQ>
    gapId       u16         u16         gapId       |input;|
    gapType     u16         u16         gapType     |input;|
    gapStart    struct      T_TimeUnit  
    gapEnd      struct      T_TimeUnit  
    gapResFlag  u16         u16         gapResFlag  |input;|
    reserved    u16         u16         reserved    |input;|
</sub T_EL1C_PROT_GAP_INFO_REQ>


<sub T_EL1C_PROT_GAP_END_IND>
    gapId     u16  u16  gapId     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_EL1C_PROT_GAP_END_IND>


<sub T_EL1C_ABORT_PROT_GAP_REQ>
    gapId          u16  u16  gapId          |input;|
    taskCleanFlag  u16  u16  taskCleanFlag  |input;|
</sub T_EL1C_ABORT_PROT_GAP_REQ>


<sub T_EL1C_PAGING_START_REQ>
    pchPoSfn                               u16                      u16                      pchPoSfn                               |input;|
    pagingPeriodIndex                      u16                      u16                      pagingPeriodIndex                      |input;|
    servCellInfo                           struct                   T_CellServLte            
    pdschCommInfo                          struct                   T_PdschCommInfo          
    otherCardPsTrans                       u16                      u16                      otherCardPsTrans                       |input;|
    pagingCancelFlag                       u16                      u16                      pagingCancelFlag                       |input;|
    mbsfnConfigNum                         u16                      u16                      mbsfnConfigNum                         |input;|
    pagingTa                               u16                      u16                      pagingTa                               |input;|
    mbsfnConfigList[EAS_WB_MAX_MBSFN_NUM]  array                    T_MbsfnConfigInfo        mbsfnConfigList                        |multiedit;|
    siHoppingConfigComm                    u16                      u16                      siHoppingConfigComm                    |input;|
    startSymbolLC                          u16                      u16                      startSymbolLC                          |input;|
    pagingNbIndex                          u16                      u16                      pagingNbIndex                          |input;|
    maxMpdcchRepNum                        u16                      u16                      maxMpdcchRepNum                        |input;|
    rsrqOnAllSymbol                        u16                      u16                      rsrqOnAllSymbol                        |input;|
    detectPedingCatm                       u16                      u16                      detectPedingCatm                       |input;|
    nonPsPagingFlag                        u16                      u16                      nonPsPagingFlag                        |input;|
    reserved                               u16                      u16                      reserved                               |input;|
    validSubFrameConfig                    struct                   T_BLValidSubfBitMap      
    freqHoppingParam                       struct                   T_FreqHoppingParameters  
    phichConfig                            struct                   T_PhichConfig            
    intraMeasInfo                          struct                   T_IdlMeasFreqInfo_El1    
</sub T_EL1C_PAGING_START_REQ>


<sub T_EL1C_PAGING_DATA_IND>
    result                            u16    u16    result                            |input;|
    dataLen                           u16    u16    dataLen                           |input;|
    data[EAS_WB_MAX_PCH_INFO_LENGTH]  array  u8     data                              |multiedit;|
</sub T_EL1C_PAGING_DATA_IND>


<sub T_EL1C_IDL_MEAS_REQ>
    measId                                    u16                    u16                    measId                                    |input;|
    lteFreqNum                                u16                    u16                    lteFreqNum                                |input;|
    otherCardPsTrans                          u16                    u16                    otherCardPsTrans                          |input;|
    rsrqOnAllSymbol                           u16                    u16                    rsrqOnAllSymbol                           |input;|
    servCellInfo                              struct                 T_CellServLte          
    lteMeasFreqInfo[EAS_WB_MAX_LTE_FREQ_NUM]  array                  T_IdlMeasFreqInfo_El1  lteMeasFreqInfo                           |multiedit;|
</sub T_EL1C_IDL_MEAS_REQ>


<sub T_EL1C_IDL_MEAS_IND>
    measId                                  u16                  u16                  measId                                  |input;|
    lteFreqNum                              u16                  u16                  lteFreqNum                              |input;|
    lteMeasResult[EAS_WB_MAX_LTE_FREQ_NUM]  array                T_IdlMeasResult_EL1  lteMeasResult                           |multiedit;|
</sub T_EL1C_IDL_MEAS_IND>


<sub T_EL1C_DCH_INTRA_MEAS_REQ>
    measId                                                  u16                                  u16                                  measId                                                  |input;|
    rsrqOnAllSymbol                                         u16                                  u16                                  rsrqOnAllSymbol                                         |input;|
    intraFreqInfo                                           struct                               T_MeasFreqInfo                       
    intraPatternInfo                                        struct                               T_MeasSubframePatternConfigNeighR10  
    lteMeasCellIdList[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]  array                                u16                                  lteMeasCellIdList                                       |multiedit;|
    lteSyncOffset[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]      array                                u32                                  lteSyncOffset                                           |multiedit;|
    cellCpType[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]         array                                u16                                  cellCpType                                              |multiedit;|
</sub T_EL1C_DCH_INTRA_MEAS_REQ>


<sub T_EL1C_DCH_INTRA_MEAS_IND>
    measId           u16                   u16                   measId           |input;|
    blindFinishFlag  u16                   u16                   blindFinishFlag  |input;|
    intraMeasResult  struct                T_MeasFreqResult_EL1  
    cellMeasRes      struct                T_DchCellMeasRes      
    cellDetectRes    struct                T_DchCellDetectRes    
</sub T_EL1C_DCH_INTRA_MEAS_IND>


<sub T_EL1C_GAP_PATTERN_INFO_REQ>
    cfgValidFlag  u16  u16  cfgValidFlag  |input;|
    gapType       u16  u16  gapType       |input;|
    gapOffset     u16  u16  gapOffset     |input;|
    reserved      u16  u16  reserved      |input;|
</sub T_EL1C_GAP_PATTERN_INFO_REQ>


<sub T_EL1C_DCH_INTER_MEAS_REQ>
    measId                                                  u16                                  u16                                  measId                                                  |input;|
    rsrqOnAllSymbol                                         u16                                  u16                                  rsrqOnAllSymbol                                         |input;|
    lteMeasFreqInfo                                         struct                               T_MeasFreqInfo                       
    interPatternInfo                                        struct                               T_MeasSubframePatternConfigNeighR10  
    lteMeasCellIdList[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]  array                                u16                                  lteMeasCellIdList                                       |multiedit;|
    lteSyncOffset[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]      array                                u32                                  lteSyncOffset                                           |multiedit;|
    cellCpType[EL1C_DCH_FREQ_SUPPORT_MEAS_CELL_NUM]         array                                u16                                  cellCpType                                              |multiedit;|
</sub T_EL1C_DCH_INTER_MEAS_REQ>


<sub T_EL1C_DCH_INTER_MEAS_IND>
    measId           u16                   u16                   measId           |input;|
    blindFinishFlag  u16                   u16                   blindFinishFlag  |input;|
    lteMeasResult    struct                T_MeasFreqResult_EL1  
    cellMeasRes      struct                T_DchCellMeasRes      
    cellDetectRes    struct                T_DchCellDetectRes    
</sub T_EL1C_DCH_INTER_MEAS_IND>


<sub T_EL1C_DCH_LTE_MEAS_REQ>
    measId                                         u16                                  u16                                  measId                                         |input;|
    ceMode                                         u16                                  u16                                  ceMode                                         |input;|
    detectContinueFlag                             u16                                  u16                                  detectContinueFlag                             |input;|
    rsrqOnAllSymbol                                u16                                  u16                                  rsrqOnAllSymbol                                |input;|
    lteFreqInfo                                    struct                               T_MeasFreqInfo                       
    ltePatternInfo                                 struct                               T_MeasSubframePatternConfigNeighR10  
    lteMeasCellIdList[EL1C_MAX_DCH_MEAS_CELL_NUM]  array                                u16                                  lteMeasCellIdList                              |multiedit;|
    lteSyncOffset[EL1C_MAX_DCH_MEAS_CELL_NUM]      array                                u32                                  lteSyncOffset                                  |multiedit;|
    cellCpType[EL1C_MAX_DCH_MEAS_CELL_NUM]         array                                u16                                  cellCpType                                     |multiedit;|
</sub T_EL1C_DCH_LTE_MEAS_REQ>


<sub T_EL1C_DCH_LTE_MEAS_IND>
    measId         u16                   u16                   measId         |input;|
    resultType     u16                   u16                   resultType     |input;|
    lteMeasResult  struct                T_MeasFreqResult_EL1  
    cellMeasRes    struct                T_DchCellMeasRes      
    cellDetectRes  struct                T_DchCellDetectRes    
</sub T_EL1C_DCH_LTE_MEAS_IND>


<sub T_EL1C_RLF_STATUS_IND>
    statusInd  u16  u16  statusInd  |input;|
    reserved   u16  u16  reserved   |input;|
</sub T_EL1C_RLF_STATUS_IND>


<sub T_EL1C_IRAT_MEAS_REQ>
    measId                                   u16                    u16                    measId                                   |input;|
    measType                                 u16                    u16                    measType                                 |input;|
    lastGap                                  u16                    u16                    lastGap                                  |input;|
    lteFreqNum                               u16                    u16                    lteFreqNum                               |input;|
    stateInfo                                u16                    u16                    stateInfo                                |input;|
    reserved                                 u16                    u16                    reserved                                 |input;|
    masterAfc                                u32                    u32                    masterAfc                                |input;|
    lteFreqList[MAX_IRAT_MEAS_LTE_FREQ_NUM]  array                  T_iratLteFreqInfo_el1  lteFreqList                              |multiedit;|
    lteCellList[MAX_IRAT_MEAS_LTE_FREQ_NUM]  array                  T_iratLteCellInfo      lteCellList                              |multiedit;|
    gapStart                                 struct                 T_TimeUnit             
    gapEnd                                   struct                 T_TimeUnit             
</sub T_EL1C_IRAT_MEAS_REQ>


<sub T_EL1C_IRAT_MEAS_IND>
    measId                                     u16                  u16                  measId                                     |input;|
    lteFreqNum                                 u16                  u16                  lteFreqNum                                 |input;|
    lteMeasResult[MAX_IRAT_MEAS_LTE_FREQ_NUM]  array                T_iratLteMeasResult  lteMeasResult                              |multiedit;|
</sub T_EL1C_IRAT_MEAS_IND>


<sub T_EL1C_IRAT_GAP_INFO_REQ>
    gapId      u16         u16         gapId      |input;|
    lastGap    u16         u16         lastGap    |input;|
    stateInfo  u16         u16         stateInfo  |input;|
    reserved   u16         u16         reserved   |input;|
    masterAfc  u32         u32         masterAfc  |input;|
    gapStart   struct      T_TimeUnit  
    gapEnd     struct      T_TimeUnit  
</sub T_EL1C_IRAT_GAP_INFO_REQ>


<sub T_EL1C_IRAT_GAP_END_IND>
    gapId     u16  u16  gapId     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_EL1C_IRAT_GAP_END_IND>


<sub T_EL1C_DCH_SEVER_CELL_MEAS_IND>
    rsrp      u16  u16  rsrp      |input;|
    rsrq      u16  u16  rsrq      |input;|
    sinr      u16  u16  sinr      |input;|
    rxTxDiff  u16  u16  rxTxDiff  |input;|
    rssi      u16  u16  rssi      |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_EL1C_DCH_SEVER_CELL_MEAS_IND>


<sub T_EL1C_IDL_NEXT_PAGING_TA_REQ>
    idlTimeLen                             u32                u32                idlTimeLen                             |input;|
    poSsfnOffset                           u16                u16                poSsfnOffset                           |input;|
    poPeriodIndex                          u16                u16                poPeriodIndex                          |input;|
    mbsfnConfigNum                         u16                u16                mbsfnConfigNum                         |input;|
    reserved                               u16                u16                reserved                               |input;|
    mbsfnConfigList[EAS_WB_MAX_MBSFN_NUM]  array              T_MbsfnConfigInfo  mbsfnConfigList                        |multiedit;|
    servCellInfo                           struct             T_CellServLte      
</sub T_EL1C_IDL_NEXT_PAGING_TA_REQ>


<sub T_EL1C_IDL_NEXT_PAGING_TA_CNF>
    pagingTaLen  u16  u16  pagingTaLen  |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_EL1C_IDL_NEXT_PAGING_TA_CNF>


<sub T_EL1C_CELL_RESYNC_REQ>
    timeDuration  u32  u32  timeDuration  |input;|
</sub T_EL1C_CELL_RESYNC_REQ>


<sub T_EL1C_CELL_RESYNC_CNF>
    successFlag  u16  u16  successFlag  |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_EL1C_CELL_RESYNC_CNF>


<sub T_EL1C_PHY_RESET_REQ>
    resetType  u16  u16  resetType  |input;|
    reserved   u16  u16  reserved   |input;|
</sub T_EL1C_PHY_RESET_REQ>


<sub T_EL1C_ABIS_INFO_REQ>
    abisCellNum                                  u16    u16    abisCellNum                                  |input;|
    allowedMeasBandWidth                         u16    u16    allowedMeasBandWidth                         |input;|
    presenceAntennaPort1                         u16    u16    presenceAntennaPort1                         |input;|
    multiCellNum                                 u16    u16    multiCellNum                                 |input;|
    abisCellId[EL1C_MAX_ABIS_CELL_NUM]           array  u16    abisCellId                                   |multiedit;|
    abisCellSyncOffset[EL1C_MAX_ABIS_CELL_NUM]   array  u32    abisCellSyncOffset                           |multiedit;|
    rsrpDelta[EL1C_MAX_ABIS_CELL_NUM]            array  s16    rsrpDelta                                    |multiedit;|
    multiCellId[EL1C_MAX_ABIS_CELL_NUM]          array  u16    multiCellId                                  |multiedit;|
    multiCellSyncOffset[EL1C_MAX_ABIS_CELL_NUM]  array  u32    multiCellSyncOffset                          |multiedit;|
    multiRsrpDelta[EL1C_MAX_ABIS_CELL_NUM]       array  s16    multiRsrpDelta                               |multiedit;|
</sub T_EL1C_ABIS_INFO_REQ>


<sub T_EL1C_DCH_PAGING_END_IND>
    nonPsPagingFlag  u16  u16  nonPsPagingFlag  |input;|
    reserved         u16  u16  reserved         |input;|
</sub T_EL1C_DCH_PAGING_END_IND>


<sub T_EL1C_SUSPEND_TRANS_REQ>
    suspendType  u16  u16  suspendType  |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_EL1C_SUSPEND_TRANS_REQ>


<0x5013 OP_EL1C_PCH_GAP_INFO_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_PCH_GAP_INFO_REQ  struct                   T_EL1C_PCH_GAP_INFO_REQ  
</0x5013 OP_EL1C_PCH_GAP_INFO_REQ>


<0x580d OP_EL1C_PCH_GAP_END_IND>
    signalHeader          struct                  T_MsgHeader             
    EL1C_PCH_GAP_END_IND  struct                  T_EL1C_PCH_GAP_END_IND  
</0x580d OP_EL1C_PCH_GAP_END_IND>


<0x5014 OP_EL1C_IDL_GAP_INFO_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_IDL_GAP_INFO_REQ  struct                   T_EL1C_IDL_GAP_INFO_REQ  
</0x5014 OP_EL1C_IDL_GAP_INFO_REQ>


<0x580e OP_EL1C_IDL_GAP_END_IND>
    signalHeader          struct                  T_MsgHeader             
    EL1C_IDL_GAP_END_IND  struct                  T_EL1C_IDL_GAP_END_IND  
</0x580e OP_EL1C_IDL_GAP_END_IND>


<0x5015 OP_EL1C_IDL_ABORT_GAP_REQ>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IDL_ABORT_GAP_REQ  struct                    T_EL1C_IDL_ABORT_GAP_REQ  
</0x5015 OP_EL1C_IDL_ABORT_GAP_REQ>


<0x580f OP_EL1C_IDL_ABORT_GAP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x580f OP_EL1C_IDL_ABORT_GAP_CNF>


<0x5016 OP_EL1C_SUSPEND_TRANS_REQ>
    signalHeader            struct                    T_MsgHeader               
    EL1C_SUSPEND_TRANS_REQ  struct                    T_EL1C_SUSPEND_TRANS_REQ  
</0x5016 OP_EL1C_SUSPEND_TRANS_REQ>


<0x5810 OP_EL1C_SUSPEND_TRANS_CNF>
    signalHeader  struct       T_MsgHeader  
</0x5810 OP_EL1C_SUSPEND_TRANS_CNF>


<0x5017 OP_EL1C_RESUME_TRANS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5017 OP_EL1C_RESUME_TRANS_REQ>


<0x5018 OP_EL1C_PROT_GAP_INFO_REQ>
    signalHeader            struct                    T_MsgHeader               
    EL1C_PROT_GAP_INFO_REQ  struct                    T_EL1C_PROT_GAP_INFO_REQ  
</0x5018 OP_EL1C_PROT_GAP_INFO_REQ>


<0x5811 OP_EL1C_PROT_GAP_END_IND>
    signalHeader           struct                   T_MsgHeader              
    EL1C_PROT_GAP_END_IND  struct                   T_EL1C_PROT_GAP_END_IND  
</0x5811 OP_EL1C_PROT_GAP_END_IND>


<0x5019 OP_EL1C_ABORT_PROT_GAP_REQ>
    signalHeader             struct                     T_MsgHeader                
    EL1C_ABORT_PROT_GAP_REQ  struct                     T_EL1C_ABORT_PROT_GAP_REQ  
</0x5019 OP_EL1C_ABORT_PROT_GAP_REQ>


<0x5812 OP_EL1C_ABORT_PROT_GAP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x5812 OP_EL1C_ABORT_PROT_GAP_CNF>


<0x501a OP_EL1C_PHY_RESET_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1C_PHY_RESET_REQ  struct                T_EL1C_PHY_RESET_REQ  
</0x501a OP_EL1C_PHY_RESET_REQ>


<0x5813 OP_EL1C_PHY_RESET_CNF>
    signalHeader  struct       T_MsgHeader  
</0x5813 OP_EL1C_PHY_RESET_CNF>


<0x501b OP_EL1C_PAGING_START_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_PAGING_START_REQ  struct                   T_EL1C_PAGING_START_REQ  
</0x501b OP_EL1C_PAGING_START_REQ>


<0x5814 OP_EL1C_PAGING_DATA_IND>
    signalHeader          struct                  T_MsgHeader             
    EL1C_PAGING_DATA_IND  struct                  T_EL1C_PAGING_DATA_IND  
</0x5814 OP_EL1C_PAGING_DATA_IND>


<0x5020 OP_EL1C_IDL_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    EL1C_IDL_MEAS_REQ  struct               T_EL1C_IDL_MEAS_REQ  
</0x5020 OP_EL1C_IDL_MEAS_REQ>


<0x5815 OP_EL1C_IDL_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    EL1C_IDL_MEAS_IND  struct               T_EL1C_IDL_MEAS_IND  
</0x5815 OP_EL1C_IDL_MEAS_IND>


<0x501c OP_EL1C_DCH_INTRA_MEAS_REQ>
    signalHeader             struct                     T_MsgHeader                
    EL1C_DCH_INTRA_MEAS_REQ  struct                     T_EL1C_DCH_INTRA_MEAS_REQ  
</0x501c OP_EL1C_DCH_INTRA_MEAS_REQ>


<0x5816 OP_EL1C_DCH_INTRA_MEAS_IND>
    signalHeader             struct                     T_MsgHeader                
    EL1C_DCH_INTRA_MEAS_IND  struct                     T_EL1C_DCH_INTRA_MEAS_IND  
</0x5816 OP_EL1C_DCH_INTRA_MEAS_IND>


<0x501d OP_EL1C_DCH_INTER_MEAS_REQ>
    signalHeader             struct                     T_MsgHeader                
    EL1C_DCH_INTER_MEAS_REQ  struct                     T_EL1C_DCH_INTER_MEAS_REQ  
</0x501d OP_EL1C_DCH_INTER_MEAS_REQ>


<0x5817 OP_EL1C_DCH_INTER_MEAS_IND>
    signalHeader             struct                     T_MsgHeader                
    EL1C_DCH_INTER_MEAS_IND  struct                     T_EL1C_DCH_INTER_MEAS_IND  
</0x5817 OP_EL1C_DCH_INTER_MEAS_IND>


<0x5818 OP_EL1C_RLF_STATUS_IND>
    signalHeader         struct                 T_MsgHeader            
    EL1C_RLF_STATUS_IND  struct                 T_EL1C_RLF_STATUS_IND  
</0x5818 OP_EL1C_RLF_STATUS_IND>


<0x501e OP_EL1C_IRAT_MEAS_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1C_IRAT_MEAS_REQ  struct                T_EL1C_IRAT_MEAS_REQ  
</0x501e OP_EL1C_IRAT_MEAS_REQ>


<0x5819 OP_EL1C_IRAT_MEAS_IND>
    signalHeader        struct                T_MsgHeader           
    EL1C_IRAT_MEAS_IND  struct                T_EL1C_IRAT_MEAS_IND  
</0x5819 OP_EL1C_IRAT_MEAS_IND>


<0x501f OP_EL1C_IRAT_GAP_INFO_REQ>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IRAT_GAP_INFO_REQ  struct                    T_EL1C_IRAT_GAP_INFO_REQ  
</0x501f OP_EL1C_IRAT_GAP_INFO_REQ>


<0x581a OP_EL1C_IRAT_GAP_END_IND>
    signalHeader           struct                   T_MsgHeader              
    EL1C_IRAT_GAP_END_IND  struct                   T_EL1C_IRAT_GAP_END_IND  
</0x581a OP_EL1C_IRAT_GAP_END_IND>


<0x5001 OP_EL1C_PRACH_SEND_REQ>
    signalHeader         struct                 T_MsgHeader            
    ML1C_PRACH_SEND_REQ  struct                 T_ML1C_PRACH_SEND_REQ  
</0x5001 OP_EL1C_PRACH_SEND_REQ>


<0x5801 OP_EL1C_RAR_RESULT_IND>
    signalHeader         struct                 T_MsgHeader            
    ML1C_RAR_RESULT_IND  struct                 T_ML1C_RAR_RESULT_IND  
</0x5801 OP_EL1C_RAR_RESULT_IND>


<0x5002 OP_EL1C_MSG3_SEND_REQ>
    signalHeader        struct                T_MsgHeader           
    ML1C_SEND_MSG3_REQ  struct                T_ML1C_SEND_MSG3_REQ  
</0x5002 OP_EL1C_MSG3_SEND_REQ>


<0xffff OP_EL1C_CONTENTION_SUCCESS_IND>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_EL1C_CONTENTION_SUCCESS_IND>


<0x5004 OP_EL1C_PRACH_END_REQ>
    signalHeader        struct                T_MsgHeader           
    ML1C_PRACH_END_REQ  struct                T_ML1C_PRACH_END_REQ  
</0x5004 OP_EL1C_PRACH_END_REQ>


<0x5803 OP_EL1C_PDCCH_ORDER_IND>
    signalHeader          struct                  T_MsgHeader             
    ML1C_PDCCH_ORDER_IND  struct                  T_ML1C_PDCCH_ORDER_IND  
</0x5803 OP_EL1C_PDCCH_ORDER_IND>


<0x5003 OP_EL1C_INITIAL_CR_SUCCESS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5003 OP_EL1C_INITIAL_CR_SUCCESS_REQ>


<0x5005 OP_EL1C_TA_ADJUST_REQ>
    signalHeader        struct                T_MsgHeader           
    ML1C_ADJUST_TA_REQ  struct                T_ML1C_ADJUST_TA_REQ  
</0x5005 OP_EL1C_TA_ADJUST_REQ>


<0x5006 OP_EL1C_SR_SEND_REQ>
    signalHeader      struct              T_MsgHeader         
    ML1C_SR_SEND_REQ  struct              T_ML1C_SR_SEND_REQ  
</0x5006 OP_EL1C_SR_SEND_REQ>


<0x5007 OP_EL1C_SR_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5007 OP_EL1C_SR_STOP_REQ>


<0x5008 OP_EL1C_DRX_STATUS_REQ>
    signalHeader         struct                 T_MsgHeader            
    ML1C_DRX_STATUS_REQ  struct                 T_ML1C_DRX_STATUS_REQ  
</0x5008 OP_EL1C_DRX_STATUS_REQ>


<0x5802 OP_EL1C_DL_HARQ_INFO_IND>
    signalHeader           struct                   T_MsgHeader              
    ML1C_DL_HARQ_INFO_IND  struct                   T_ML1C_DL_HARQ_INFO_IND  
</0x5802 OP_EL1C_DL_HARQ_INFO_IND>


<0x6001 OP_EL1C_PDSCH_DLSCH_READ_IND>
    signalHeader               struct                       T_MsgHeader                  
    ML1C_PDSCH_DLSCH_READ_IND  struct                       T_ML1C_PDSCH_DLSCH_READ_IND  
</0x6001 OP_EL1C_PDSCH_DLSCH_READ_IND>


<0x6101 OP_EL1C_UL_HARQ_INFO_IND>
    signalHeader           struct                   T_MsgHeader              
    ML1C_UL_HARQ_INFO_IND  struct                   T_ML1C_UL_HARQ_INFO_IND  
</0x6101 OP_EL1C_UL_HARQ_INFO_IND>


<0x6201 OP_EL1C_PUSCH_SEND_REQ>
    signalHeader         struct                 T_MsgHeader            
    ML1C_PUSCH_SEND_REQ  struct                 T_ML1C_PUSCH_SEND_REQ  
</0x6201 OP_EL1C_PUSCH_SEND_REQ>


<0x500a OP_EL1C_FREQ_MEAS_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_FREQ_MEAS_REQ  struct                T_RL1C_FREQ_MEAS_REQ  
</0x500a OP_EL1C_FREQ_MEAS_REQ>


<0x5806 OP_EL1C_FREQ_MEAS_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_FREQ_MEAS_CNF  struct                T_RL1C_FREQ_MEAS_CNF  
</0x5806 OP_EL1C_FREQ_MEAS_CNF>


<0x500d OP_EL1C_SI_READ_REQ>
    signalHeader      struct              T_MsgHeader         
    RL1C_SI_READ_REQ  struct              T_RL1C_SI_READ_REQ  
</0x500d OP_EL1C_SI_READ_REQ>


<0x5809 OP_EL1C_MIB_DATA_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_MIB_DATA_IND  struct               T_RL1C_MIB_DATA_IND  
</0x5809 OP_EL1C_MIB_DATA_IND>


<0x580a OP_EL1C_SIB1_DATA_IND>
    signalHeader        struct                T_MsgHeader           
    RL1C_SIB1_DATA_IND  struct                T_RL1C_SIB1_DATA_IND  
</0x580a OP_EL1C_SIB1_DATA_IND>


<0x580b OP_EL1C_SI_DATA_IND>
    signalHeader      struct              T_MsgHeader         
    RL1C_SI_DATA_IND  struct              T_RL1C_SI_DATA_IND  
</0x580b OP_EL1C_SI_DATA_IND>


<0x500b OP_EL1C_CELL_SEARCH_REQ>
    signalHeader          struct                  T_MsgHeader             
    RL1C_CELL_SEARCH_REQ  struct                  T_RL1C_CELL_SEARCH_REQ  
</0x500b OP_EL1C_CELL_SEARCH_REQ>


<0x5807 OP_EL1C_CELL_SEARCH_CNF>
    signalHeader          struct                  T_MsgHeader             
    RL1C_CELL_SEARCH_CNF  struct                  T_RL1C_CELL_SEARCH_CNF  
</0x5807 OP_EL1C_CELL_SEARCH_CNF>


<0x500c OP_EL1C_CELL_SYNC_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_CELL_SYNC_REQ  struct                T_RL1C_CELL_SYNC_REQ  
</0x500c OP_EL1C_CELL_SYNC_REQ>


<0x5808 OP_EL1C_CELL_SYNC_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_CELL_SYNC_CNF  struct                T_RL1C_CELL_SYNC_CNF  
</0x5808 OP_EL1C_CELL_SYNC_CNF>


<0x5009 OP_EL1C_PWR_SWEEP_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_PWR_SWEEP_REQ  struct                T_RL1C_PWR_SWEEP_REQ  
</0x5009 OP_EL1C_PWR_SWEEP_REQ>


<0x5805 OP_EL1C_PWR_SWEEP_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_PWR_SWEEP_CNF  struct                T_RL1C_PWR_SWEEP_CNF  
</0x5805 OP_EL1C_PWR_SWEEP_CNF>


<0x5011 OP_EL1C_CGI_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    RL1C_CGI_MEAS_REQ  struct               T_RL1C_CGI_MEAS_REQ  
</0x5011 OP_EL1C_CGI_MEAS_REQ>


<0x580c OP_EL1C_CGI_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_CGI_MEAS_IND  struct               T_RL1C_CGI_MEAS_IND  
</0x580c OP_EL1C_CGI_MEAS_IND>


<0x5012 OP_EL1C_STOP_CGI_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5012 OP_EL1C_STOP_CGI_REQ>


<0x500f OP_EL1C_CHN_COMM_CONFIG_REQ>
    signalHeader              struct                      T_MsgHeader                 
    RL1C_CHN_COMM_CONFIG_REQ  struct                      T_RL1C_CHN_COMM_CONFIG_REQ  
</0x500f OP_EL1C_CHN_COMM_CONFIG_REQ>


<0x5010 OP_EL1C_CHN_DED_CONFIG_REQ>
    signalHeader             struct                     T_MsgHeader                
    RL1C_CHN_DED_CONFIG_REQ  struct                     T_RL1C_CHN_DED_CONFIG_REQ  
</0x5010 OP_EL1C_CHN_DED_CONFIG_REQ>


<0x5021 OP_EL1C_PLMN_SEARCH_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5021 OP_EL1C_PLMN_SEARCH_STOP_REQ>


<0x581b OP_EL1C_PLMN_SEARCH_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x581b OP_EL1C_PLMN_SEARCH_STOP_CNF>


<0x5022 OP_EL1C_DCH_LTE_MEAS_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_DCH_LTE_MEAS_REQ  struct                   T_EL1C_DCH_LTE_MEAS_REQ  
</0x5022 OP_EL1C_DCH_LTE_MEAS_REQ>


<0x581c OP_EL1C_DCH_LTE_MEAS_IND>
    signalHeader           struct                   T_MsgHeader              
    EL1C_DCH_LTE_MEAS_IND  struct                   T_EL1C_DCH_LTE_MEAS_IND  
</0x581c OP_EL1C_DCH_LTE_MEAS_IND>


<0x5023 OP_EL1C_DCH_SEVER_CELL_MEAS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5023 OP_EL1C_DCH_SEVER_CELL_MEAS_REQ>


<0x581d OP_EL1C_DCH_SEVER_CELL_MEAS_IND>
    signalHeader                  struct                          T_MsgHeader                     
    EL1C_DCH_SEVER_CELL_MEAS_IND  struct                          T_EL1C_DCH_SEVER_CELL_MEAS_IND  
</0x581d OP_EL1C_DCH_SEVER_CELL_MEAS_IND>


<0x5024 OP_EL1C_IDL_NEXT_PAGING_TA_REQ>
    signalHeader                 struct                         T_MsgHeader                    
    EL1C_IDL_NEXT_PAGING_TA_REQ  struct                         T_EL1C_IDL_NEXT_PAGING_TA_REQ  
</0x5024 OP_EL1C_IDL_NEXT_PAGING_TA_REQ>


<0x581e OP_EL1C_IDL_NEXT_PAGING_TA_CNF>
    signalHeader                 struct                         T_MsgHeader                    
    EL1C_IDL_NEXT_PAGING_TA_CNF  struct                         T_EL1C_IDL_NEXT_PAGING_TA_CNF  
</0x581e OP_EL1C_IDL_NEXT_PAGING_TA_CNF>


<0x5025 OP_EL1C_CELL_RESYNC_REQ>
    signalHeader          struct                  T_MsgHeader             
    EL1C_CELL_RESYNC_REQ  struct                  T_EL1C_CELL_RESYNC_REQ  
</0x5025 OP_EL1C_CELL_RESYNC_REQ>


<0x581f OP_EL1C_CELL_RESYNC_CNF>
    signalHeader          struct                  T_MsgHeader             
    EL1C_CELL_RESYNC_CNF  struct                  T_EL1C_CELL_RESYNC_CNF  
</0x581f OP_EL1C_CELL_RESYNC_CNF>


<0x5026 OP_EL1C_BAND_SCAN_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1C_BAND_SCAN_REQ  struct                T_RL1C_BAND_SCAN_REQ  
</0x5026 OP_EL1C_BAND_SCAN_REQ>


<0x5820 OP_EL1C_BAND_SCAN_CNF>
    signalHeader        struct                T_MsgHeader           
    EL1C_BAND_SCAN_CNF  struct                T_RL1C_BAND_SCAN_CNF  
</0x5820 OP_EL1C_BAND_SCAN_CNF>


<0x5027 OP_EL1C_GAP_PATTERN_INFO_REQ>
    signalHeader               struct                       T_MsgHeader                  
    EL1C_GAP_PATTERN_INFO_REQ  struct                       T_EL1C_GAP_PATTERN_INFO_REQ  
</0x5027 OP_EL1C_GAP_PATTERN_INFO_REQ>


<0x5028 OP_EL1C_ABORT_INTRA_MEAS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5028 OP_EL1C_ABORT_INTRA_MEAS_REQ>


<0x5822 OP_EL1C_ABORT_INTRA_MEAS_CNF>
    signalHeader  struct       T_MsgHeader  
</0x5822 OP_EL1C_ABORT_INTRA_MEAS_CNF>


<0x5029 OP_EL1C_ABIS_INFO_REQ>
    signalHeader        struct                T_MsgHeader           
    EL1C_ABIS_INFO_REQ  struct                T_EL1C_ABIS_INFO_REQ  
</0x5029 OP_EL1C_ABIS_INFO_REQ>


<0x502a OP_EL1C_AFC_SET_REQ>
    signalHeader  struct       T_MsgHeader  
</0x502a OP_EL1C_AFC_SET_REQ>


<0x502d OP_EL1C_SI_SCHEDULING_BITMAP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x502d OP_EL1C_SI_SCHEDULING_BITMAP_REQ>


<0x502b OP_EL1C_OTDOA_MEAS_CFG_REQ>
</0x502b OP_EL1C_OTDOA_MEAS_CFG_REQ>


<0x502c OP_EL1C_OTDOA_MEAS_CTRL_REQ>
</0x502c OP_EL1C_OTDOA_MEAS_CTRL_REQ>


<0xffff OP_EL1C_OTDOA_REFCELL_SEARCH_REQ>
</0xffff OP_EL1C_OTDOA_REFCELL_SEARCH_REQ>


<0x5823 OP_EL1C_OTDOA_NCELL_PRS_INFO_IND>
</0x5823 OP_EL1C_OTDOA_NCELL_PRS_INFO_IND>


<sub T_EL1C_SI_STOP_REQ>
    clearGapFlag  u16  u16  clearGapFlag  |input;|
    reserved      u16  u16  reserved      |input;|
</sub T_EL1C_SI_STOP_REQ>


<0x500e OP_EL1C_SI_STOP_REQ>
    signalHeader      struct              T_MsgHeader         
    EL1C_SI_STOP_REQ  struct              T_EL1C_SI_STOP_REQ  
</0x500e OP_EL1C_SI_STOP_REQ>


<0x5825 OP_EL1C_SI_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x5825 OP_EL1C_SI_STOP_CNF>


<0x502e OP_EL1C_RESYNC_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x502e OP_EL1C_RESYNC_STOP_REQ>


<0x5826 OP_EL1C_RESYNC_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x5826 OP_EL1C_RESYNC_STOP_CNF>


<0x5827 OP_EL1C_DCH_PAGING_END_IND>
    signalHeader             struct                     T_MsgHeader                
    EL1C_DCH_PAGING_END_IND  struct                     T_EL1C_DCH_PAGING_END_IND  
</0x5827 OP_EL1C_DCH_PAGING_END_IND>


<0x502f OP_EL1C_UP_SIGNAL_MSG_STT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x502f OP_EL1C_UP_SIGNAL_MSG_STT_REQ>


<0x5030 OP_EL1C_UP_SIGNAL_MSG_STP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5030 OP_EL1C_UP_SIGNAL_MSG_STP_REQ>


<sub T_EL1C_DCH_CELL_PRESYNC_CNF>
    successFlag  u16  u16  successFlag  |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_EL1C_DCH_CELL_PRESYNC_CNF>


<0x5031 OP_EL1C_DCH_CELL_PRESYNC_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5031 OP_EL1C_DCH_CELL_PRESYNC_REQ>


<0x5828 OP_EL1C_DCH_CELL_PRESYNC_CNF>
    signalHeader               struct                       T_MsgHeader                  
    EL1C_DCH_CELL_PRESYNC_CNF  struct                       T_EL1C_DCH_CELL_PRESYNC_CNF  
</0x5828 OP_EL1C_DCH_CELL_PRESYNC_CNF>


<sub T_EL1C_ENTER_IDM_MODE_REQ>
    servCellInfo   struct         T_CellServLte  
    idmMode        u16            u16            idmMode        |input;|
    masterTxLevel  s16            s16            masterTxLevel  |input;|
    masterRxLevel  s16            s16            masterRxLevel  |input;|
    idmBandwith    u16            u16            idmBandwith    |input;|
    idmFreq        u32            u32            idmFreq        |input;|
</sub T_EL1C_ENTER_IDM_MODE_REQ>


<0x5035 OP_EL1C_ENTER_IDM_MODE_REQ>
    signalHeader             struct                     T_MsgHeader                
    EL1C_ENTER_IDM_MODE_REQ  struct                     T_EL1C_ENTER_IDM_MODE_REQ  
</0x5035 OP_EL1C_ENTER_IDM_MODE_REQ>


<sub T_Idm_MsgBitStream>
    msgBitStream[EL1C_MAX_IDM_BLOCK_MAX_SUBF_NUM]  array  u16    msgBitStream                                   |multiedit;|
</sub T_Idm_MsgBitStream>


<sub T_EL1C_IDM_SEND_MSG_REQ>
    msgNum                                    u16                 u16                 msgNum                                    |input;|
    reserved                                  u16                 u16                 reserved                                  |input;|
    msgBitStream[EL1C_MAX_IDM_MAX_BLOCK_NUM]  array               T_Idm_MsgBitStream  msgBitStream                              |multiedit;|
    startTime                                 struct              T_TimeUnit          
    endTime                                   struct              T_TimeUnit          
</sub T_EL1C_IDM_SEND_MSG_REQ>


<0x5036 OP_EL1C_IDM_SEND_MSG_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_IDM_SEND_MSG_REQ  struct                   T_EL1C_IDM_SEND_MSG_REQ  
</0x5036 OP_EL1C_IDM_SEND_MSG_REQ>


<sub T_EL1C_IDM_RECV_MSG_REQ>
    startTime  struct      T_TimeUnit  
    endTime    struct      T_TimeUnit  
</sub T_EL1C_IDM_RECV_MSG_REQ>


<0x5037 OP_EL1C_IDM_RECV_MSG_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_IDM_RECV_MSG_REQ  struct                   T_EL1C_IDM_RECV_MSG_REQ  
</0x5037 OP_EL1C_IDM_RECV_MSG_REQ>


<sub T_EL1C_IDM_RECV_DATA_IND>
    msgNum                                    u16                 u16                 msgNum                                    |input;|
    lineLoss                                  u16                 u16                 lineLoss                                  |input;|
    crcResult[EL1C_MAX_IDM_MAX_BLOCK_NUM]     array               u16                 crcResult                                 |multiedit;|
    msgBitStream[EL1C_MAX_IDM_MAX_BLOCK_NUM]  array               T_Idm_MsgBitStream  msgBitStream                              |multiedit;|
</sub T_EL1C_IDM_RECV_DATA_IND>


<0x582b OP_EL1C_IDM_RECV_DATA_IND>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IDM_RECV_DATA_IND  struct                    T_EL1C_IDM_RECV_DATA_IND  
</0x582b OP_EL1C_IDM_RECV_DATA_IND>


<0x5038 OP_EL1C_IDM_MEAS_QUERY_REQ>
    signalHeader  struct       T_MsgHeader  
</0x5038 OP_EL1C_IDM_MEAS_QUERY_REQ>


<sub T_EL1C_IDM_MEAS_QUERY_IND>
    rsrp  u16  u16  rsrp  |input;|
    sinr  s16  s16  sinr  |input;|
</sub T_EL1C_IDM_MEAS_QUERY_IND>


<0x582c OP_EL1C_IDM_MEAS_QUERY_IND>
    signalHeader             struct                     T_MsgHeader                
    EL1C_IDM_MEAS_QUERY_IND  struct                     T_EL1C_IDM_MEAS_QUERY_IND  
</0x582c OP_EL1C_IDM_MEAS_QUERY_IND>


<sub T_Qos>
    Length       u8     u8     Length       |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
    QoS[16]      array  u8     QoS          |multiedit;|
</sub T_Qos>


<sub T_ApnAmbr>
    Length       u8     u8     Length       |input;|
    APN_AMBR[6]  array  u8     APN_AMBR     |multiedit;|
</sub T_ApnAmbr>


<sub T_PdpAddress>
    pdpTypeOrg                          u8     u8     pdpTypeOrg                          |input;|
    pdpType                             u8     u8     pdpType                             |input;|
    addressLen                          u8     u8     addressLen                          |input;|
    addressInfor[MAX_ADDRESSINFOR_LEN]  array  u8     addressInfor                        |multiedit;|
</sub T_PdpAddress>


<sub T_Tft>
    Length    u8     u8     Length    |input;|
    TFT[255]  array  u8     TFT       |multiedit;|
</sub T_Tft>


<sub T_CellDesc>
    frequency  u16  u16  frequency  |input;|
</sub T_CellDesc>


<sub T_RbPduInfo>
    rbIdentity   u8     u8     rbIdentity   |input;|
    pduNum       u8     u8     pduNum       |input;|
    reserved1    u8     u8     reserved1    |input;|
    snNum        u8     u8     snNum        |input;|
    rbPduSn[64]  array  u16    rbPduSn      |multiedit;|
</sub T_RbPduInfo>


<sub T_PDSCH_MEM>
    remain_len   u16  u16  remain_len   |input;|
    pdsch_data   Ptr  u8   
</sub T_PDSCH_MEM>


<sub T_ERLC_WB_SDU_SEG>
    fi                          u8           u8           fi                          |input;|
    len                         u16          u16          len                         |input;|
    data                        Ptr          u8           
    pdsch_mem                   Ptr          T_PDSCH_MEM  
    next                        Ptr          T_ERLC_WB_SDU_SEG_tag
</sub T_ERLC_WB_SDU_SEG>


<sub T_ERLC_WB_DL_SDU>
    rlcSduLen                  u16                u16                rlcSduLen                  |input;|
    count                      u32                u32                count                      |input;|
    seg                        Ptr                T_ERLC_WB_SDU_SEG  
    next                       Ptr                T_ERLC_WB_DL_SDU_tag
</sub T_ERLC_WB_DL_SDU>


<sub T_RabAndRbInfo>
    rabId       u8  u8  rabId       |input;|
    instanceId  u8  u8  instanceId  |input;|
    rbId        u8  u8  rbId        |input;|
</sub T_RabAndRbInfo>


<sub T_CsServiceClass>
    ti            u8  u8  ti            |input;|
    rabId         u8  u8  rabId         |input;|
    serviceClass  u8  u8  serviceClass  |input;|
</sub T_CsServiceClass>


<sub T_BackCellInfo>
    cellList[64]      array  u16    cellList          |multiedit;|
    rsrp[64]          array  u8     rsrp              |multiedit;|
    rsrq[64]          array  u8     rsrq              |multiedit;|
    CellTsOffset[64]  array  u32    CellTsOffset      |multiedit;|
</sub T_BackCellInfo>


<sub T_BackFreqInfo_WB>
    frequency      u32  u32  frequency      |input;|
    listedCellNum  u8   u8   listedCellNum  |input;|
    blindCellNum   u8   u8   blindCellNum   |input;|
</sub T_BackFreqInfo_WB>


<sub T_L1C_BackupMeasCtrInfo>
    serveCellFreq       u16                u16                serveCellFreq       |input;|
    serveCellId         u16                u16                serveCellId         |input;|
    hoppScheTimes       u8                 u8                 hoppScheTimes       |input;|
    padding             u8                 u8                 padding             |input;|
    siValidTimer        u32                u32                siValidTimer        |input;|
    measScheCounter[6]  array              u8                 measScheCounter     |multiedit;|
    measTriggerF[6]     array              u8                 measTriggerF        |multiedit;|
    freqInfoList[9]     array              T_BackFreqInfo_WB  freqInfoList        |multiedit;|
    cellInfoList        struct             T_BackCellInfo     
</sub T_L1C_BackupMeasCtrInfo>


<sub T_F8GroupConfigInfo>
    sourceAddr        Ptr    u8     
    segmentNum        u32    u32    segmentNum        |input;|
    destAddr          Ptr    u8     
    bearAndDirection  u32    u32    bearAndDirection  |input;|
    count             u32    u32    count             |input;|
    length            u32    u32    length            |input;|
    key[4]            array  u32    key               |multiedit;|
</sub T_F8GroupConfigInfo>


<sub T_F8DataSegmentConfigInfo>
    startAddr   Ptr  u8   
    length      u32  u32  length      |input;|
</sub T_F8DataSegmentConfigInfo>


<sub T_RCO_PndInfoApply>
    pndFlag  u8  u8  pndFlag  |input;|
    source   u8  u8  source   |input;|
    cause    u8  u8  cause    |input;|
    simTag   u8  u8  simTag   |input;|
</sub T_RCO_PndInfoApply>


<sub T_RCO_PndInfoAbort>
    pndFlag  u8   u8   pndFlag  |input;|
    mode     u8   u8   mode     |input;|
    bitmap   u16  u16  bitmap   |input;|
    simTag   u8   u8   simTag   |input;|
</sub T_RCO_PndInfoAbort>


<sub T_RCO_CRTab>
    cr[RCO_APPLY_CAUSE__MAX]                        array                                           T_cr                                            cr                                              |multiedit;|
</sub T_RCO_CRTab>


<sub T_cr
    cr[RCO_APPLY_CAUSE__MAX]                        array                                           u8                                              cr                                              |multiedit;|
</sub T_cr


<sub T_RCO_ConInfo>
    state                                struct                               E_RCO_MainState                      
    simTag                               struct                               E_RCO_SimCardType                    
    applyInfo                            struct                               T_RCO_PndInfoApply                   
    psMsgTxAcqMod                        struct                               E_RCO_ModeType                       
    abortInfo[RCO_MODE__MAX]             array                                T_RCO_PndInfoAbort                   abortInfo                            |multiedit;|
    bitmap[RCO_SIM__MAX]                 array                                T_bitmap                             bitmap                               |multiedit;|
</sub T_RCO_ConInfo>


<sub T_bitmap
    bitmap[RCO_MODE__MAX]                array                                u16                                  bitmap                               |multiedit;|
</sub T_bitmap


<sub T_MobiErr>
    indexId      u16  u16  indexId      |input;|
    causeSelect  u8   u8   causeSelect  |input;|
    sw1          u8   u8   sw1          |input;|
    sw2          u8   u8   sw2          |input;|
</sub T_MobiErr>


<0xffff OP_MobiErr>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0xffff OP_MobiErr>


<sub T_MOBI_SAP_AUTHENTICATE_REQ>
    authContextId                         u8     u8     authContextId                         |input;|
    length                                u8     u8     length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_REQ_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_REQ>


<0x0300 OP_MOBI_SAP_AUTHENTICATE_REQ>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_AUTHENTICATE_REQ  struct                       T_MOBI_SAP_AUTHENTICATE_REQ  
</0x0300 OP_MOBI_SAP_AUTHENTICATE_REQ>


<sub T_MOBI_SAP_AUTHENTICATE_CNF>
    length                                u16    u16    length                                |input;|
    authData[SIM_MAX_SIZE_AUTH_RSP_DATA]  array  u8     authData                              |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_CNF>


<0x0301 OP_MOBI_SAP_AUTHENTICATE_CNF>
    signalHeader               struct                       T_MsgHeader                  
    MOBI_SAP_AUTHENTICATE_CNF  struct                       T_MOBI_SAP_AUTHENTICATE_CNF  
</0x0301 OP_MOBI_SAP_AUTHENTICATE_CNF>


<0x0302 OP_MOBI_SAP_AUTHENTICATE_ERR>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0x0302 OP_MOBI_SAP_AUTHENTICATE_ERR>


<sub T_MOBI_SAP_RECORD_READ_REQ>
    indexId       u16  u16  indexId       |input;|
    recordNumber  u8   u8   recordNumber  |input;|
</sub T_MOBI_SAP_RECORD_READ_REQ>


<0x0303 OP_MOBI_SAP_RECORD_READ_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_RECORD_READ_REQ  struct                      T_MOBI_SAP_RECORD_READ_REQ  
</0x0303 OP_MOBI_SAP_RECORD_READ_REQ>


<sub T_MOBI_SAP_RECORD_READ_CNF>
    indexId                               u16    u16    indexId                               |input;|
    recordNumber                          u8     u8     recordNumber                          |input;|
    lengthOfRecord                        u8     u8     lengthOfRecord                        |input;|
    recordData[SIM_MAX_SIZE_RECORD_DATA]  array  u8     recordData                            |multiedit;|
</sub T_MOBI_SAP_RECORD_READ_CNF>


<0x0304 OP_MOBI_SAP_RECORD_READ_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_RECORD_READ_CNF  struct                      T_MOBI_SAP_RECORD_READ_CNF  
</0x0304 OP_MOBI_SAP_RECORD_READ_CNF>


<0x0305 OP_MOBI_SAP_RECORD_READ_ERR>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0x0305 OP_MOBI_SAP_RECORD_READ_ERR>


<sub T_MOBI_SAP_RECORD_UPDATE_REQ>
    indexId                               u16    u16    indexId                               |input;|
    recordNumber                          u8     u8     recordNumber                          |input;|
    lengthOfRecord                        u8     u8     lengthOfRecord                        |input;|
    recordData[SIM_MAX_SIZE_RECORD_DATA]  array  u8     recordData                            |multiedit;|
</sub T_MOBI_SAP_RECORD_UPDATE_REQ>


<0x0306 OP_MOBI_SAP_RECORD_UPDATE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RECORD_UPDATE_REQ  struct                        T_MOBI_SAP_RECORD_UPDATE_REQ  
</0x0306 OP_MOBI_SAP_RECORD_UPDATE_REQ>


<sub T_MOBI_SAP_RECORD_UPDATE_CNF>
    indexId       u16  u16  indexId       |input;|
    recordNumber  u8   u8   recordNumber  |input;|
</sub T_MOBI_SAP_RECORD_UPDATE_CNF>


<0x0307 OP_MOBI_SAP_RECORD_UPDATE_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_RECORD_UPDATE_CNF  struct                        T_MOBI_SAP_RECORD_UPDATE_CNF  
</0x0307 OP_MOBI_SAP_RECORD_UPDATE_CNF>


<0x0308 OP_MOBI_SAP_RECORD_UPDATE_ERR>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0x0308 OP_MOBI_SAP_RECORD_UPDATE_ERR>


<sub T_MOBI_SAP_BINARY_READ_REQ>
    indexId      u16  u16  indexId      |input;|
    offsetVal    u16  u16  offsetVal    |input;|
    excpDataLen  u8   u8   excpDataLen  |input;|
</sub T_MOBI_SAP_BINARY_READ_REQ>


<0x0309 OP_MOBI_SAP_BINARY_READ_REQ>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_BINARY_READ_REQ  struct                      T_MOBI_SAP_BINARY_READ_REQ  
</0x0309 OP_MOBI_SAP_BINARY_READ_REQ>


<sub T_MOBI_SAP_BINARY_READ_CNF>
    indexId                                 u16    u16    indexId                                 |input;|
    lengthData                              u16    u16    lengthData                              |input;|
    binaryData[SIM_MAX_SIZE_BIN_DATA_READ]  array  u8     binaryData                              |multiedit;|
</sub T_MOBI_SAP_BINARY_READ_CNF>


<0x030a OP_MOBI_SAP_BINARY_READ_CNF>
    signalHeader              struct                      T_MsgHeader                 
    MOBI_SAP_BINARY_READ_CNF  struct                      T_MOBI_SAP_BINARY_READ_CNF  
</0x030a OP_MOBI_SAP_BINARY_READ_CNF>


<0x030b OP_MOBI_SAP_BINARY_READ_ERR>
    signalHeader  struct       T_MsgHeader  
    mobiErr       struct       T_MobiErr    
</0x030b OP_MOBI_SAP_BINARY_READ_ERR>


<sub T_MOBI_SAP_BINARY_UPDATE_REQ>
    indexId                                   u16    u16    indexId                                   |input;|
    offsetVal                                 u16    u16    offsetVal                                 |input;|
    lengthData                                u8     u8     lengthData                                |input;|
    binaryData[SIM_MAX_SIZE_BIN_DATA_UPDATE]  array  u8     binaryData                                |multiedit;|
</sub T_MOBI_SAP_BINARY_UPDATE_REQ>


<0x030c OP_MOBI_SAP_BINARY_UPDATE_REQ>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_BINARY_UPDATE_REQ  struct                        T_MOBI_SAP_BINARY_UPDATE_REQ  
</0x030c OP_MOBI_SAP_BINARY_UPDATE_REQ>


<sub T_MOBI_SAP_BINARY_UPDATE_CNF>
    indexId  u16  u16  indexId  |input;|
</sub T_MOBI_SAP_BINARY_UPDATE_CNF>


<0x030d OP_MOBI_SAP_BINARY_UPDATE_CNF>
    signalHeader                struct                        T_MsgHeader                   
    MOBI_SAP_BINARY_UPDATE_CNF  struct                        T_MOBI_SAP_BINARY_UPDATE_CNF  
</0x030d OP_MOBI_SAP_BINARY_UPDATE_CNF>


<sub T_CAPI_REG_REGISTRATION_REQ>
    airMode  u8  u8  airMode  |input;|
</sub T_CAPI_REG_REGISTRATION_REQ>


<0x0101 OP_CAPI_REG_REGISTRATION_REQ>
    signalHeader  struct                       T_MsgHeader                  
    body          struct                       T_CAPI_REG_REGISTRATION_REQ  
</0x0101 OP_CAPI_REG_REGISTRATION_REQ>


<sub T_CAPI_REG_DEREGISTRATION_REQ>
    deregType  u8  u8  deregType  |input;|
</sub T_CAPI_REG_DEREGISTRATION_REQ>


<0x0102 OP_CAPI_REG_DEREGISTRATION_REQ>
    signalHeader  struct                         T_MsgHeader                    
    body          struct                         T_CAPI_REG_DEREGISTRATION_REQ  
</0x0102 OP_CAPI_REG_DEREGISTRATION_REQ>


<sub T_CAPI_REG_DEREGISTRATION_CNF>
    aireMode  u8  u8  aireMode  |input;|
</sub T_CAPI_REG_DEREGISTRATION_CNF>


<0x0103 OP_CAPI_REG_DEREGISTRATION_CNF>
    signalHeader  struct                         T_MsgHeader                    
    body          struct                         T_CAPI_REG_DEREGISTRATION_CNF  
</0x0103 OP_CAPI_REG_DEREGISTRATION_CNF>


<sub T_CAPI_REG_ATTACH_REQ>
    type  u8  u8  type  |input;|
</sub T_CAPI_REG_ATTACH_REQ>


<0x0104 OP_CAPI_REG_ATTACH_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 T_CAPI_REG_ATTACH_REQ  
</0x0104 OP_CAPI_REG_ATTACH_REQ>


<sub T_CAPI_REG_DETACH_REQ>
    type  u8  u8  type  |input;|
</sub T_CAPI_REG_DETACH_REQ>


<0x0105 OP_CAPI_REG_DETACH_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 T_CAPI_REG_DETACH_REQ  
</0x0105 OP_CAPI_REG_DETACH_REQ>


<sub T_CAPI_REG_AVAIL_PLMN_REQ>
    searchMode  u8  u8  searchMode  |input;|
</sub T_CAPI_REG_AVAIL_PLMN_REQ>


<0x0106 OP_CAPI_REG_AVAIL_PLMN_REQ>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_AVAIL_PLMN_REQ  
</0x0106 OP_CAPI_REG_AVAIL_PLMN_REQ>


<sub T_CAPI_REG_AVAIL_PLMN_IND>
    plmnNum                    u8                       u8                       plmnNum                    |input;|
    plmnList[60]               array                    u8                       plmnList                   |multiedit;|
    plmnListStatus[20]         array                    u8                       plmnListStatus             |multiedit;|
    rat[20]                    array                    u8                       rat                        |multiedit;|
    cellInfo[20]               array                    api_qScanFreqCellInfo_t  cellInfo                   |multiedit;|
    searchMode                 u8                       u8                       searchMode                 |input;|
</sub T_CAPI_REG_AVAIL_PLMN_IND>


<0x0107 OP_CAPI_REG_AVAIL_PLMN_IND>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_AVAIL_PLMN_IND  
</0x0107 OP_CAPI_REG_AVAIL_PLMN_IND>


<sub T_CAPI_REG_NW_SEL_REQ>
    plmn[MAX_PLMN_LEN]  array  u8     plmn                |multiedit;|
    rat                 u8     u8     rat                 |input;|
</sub T_CAPI_REG_NW_SEL_REQ>


<0x0108 OP_CAPI_REG_NW_SEL_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 T_CAPI_REG_NW_SEL_REQ  
</0x0108 OP_CAPI_REG_NW_SEL_REQ>


<0x010a OP_CAPI_REG_NW_RESEL_REQ>
    signalHeader  struct       T_MsgHeader  
</0x010a OP_CAPI_REG_NW_RESEL_REQ>


<sub T_CAPI_REG_NW_SELMODE_REQ>
    mode  u8  u8  mode  |input;|
</sub T_CAPI_REG_NW_SELMODE_REQ>


<0x0109 OP_CAPI_REG_NW_SELMODE_REQ>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_NW_SELMODE_REQ  
</0x0109 OP_CAPI_REG_NW_SELMODE_REQ>


<0x010b OP_CAPI_REG_ABORT_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x010b OP_CAPI_REG_ABORT_PLMN_REQ>


<sub T_CAPI_REG_ABORT_PLMN_IND>
    Cause  u8  u8  Cause  |input;|
</sub T_CAPI_REG_ABORT_PLMN_IND>


<0x010c OP_CAPI_REG_ABORT_PLMN_IND>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_ABORT_PLMN_IND  
</0x010c OP_CAPI_REG_ABORT_PLMN_IND>


<sub T_CAPI_REG_STATE_IND>
    csRegState          u8               u8               csRegState          |input;|
    psRegState          u8               u8               psRegState          |input;|
    cause               u8               u8               cause               |input;|
    cellIdentity[4]     array            u8               cellIdentity        |multiedit;|
    plmn[MAX_PLMN_LEN]  array            u8               plmn                |multiedit;|
    tac[2]              array            u8               tac                 |multiedit;|
    roaming             u8               u8               roaming             |input;|
    aireMode            u8               u8               aireMode            |input;|
    autoPdnAct          u8               u8               autoPdnAct          |input;|
    simExistFlag        u8               u8               simExistFlag        |input;|
    cause_type          u8               u8               cause_type          |input;|
    activeTime          u8               u8               activeTime          |input;|
    periodicTau         u8               u8               periodicTau         |input;|
    nwSupportedCiot     u8               u8               nwSupportedCiot     |input;|
    edrxEnable          u8               u8               edrxEnable          |input;|
    edrxPtw             u8               u8               edrxPtw             |input;|
    edrxValue           u8               u8               edrxValue           |input;|
    IMSVoPS             u8               u8               IMSVoPS             |input;|
    EMCBS               u8               u8               EMCBS               |input;|
    LteTddFlag          u8               u8               LteTddFlag          |input;|
    respType            u8               u8               respType            |input;|
    reserved2           u8               u8               reserved2           |input;|
    MmtelSsac           struct           api_MmtelSsac_t  
    SimPsInvalid        u8               u8               SimPsInvalid        |input;|
    SimCsInvalid        u8               u8               SimCsInvalid        |input;|
    gsmOnly             u8               u8               gsmOnly             |input;|
</sub T_CAPI_REG_STATE_IND>


<0x010d OP_CAPI_REG_STATE_IND>
    signalHeader  struct                T_MsgHeader           
    body          struct                T_CAPI_REG_STATE_IND  
</0x010d OP_CAPI_REG_STATE_IND>


<sub T_CAPI_REG_SIM_ERROR_IND>
    index        u16  u16  index        |input;|
    causeSelect  u8   u8   causeSelect  |input;|
    sw1          u8   u8   sw1          |input;|
    sw2          u8   u8   sw2          |input;|
</sub T_CAPI_REG_SIM_ERROR_IND>


<0x010e OP_CAPI_REG_SIM_ERROR_IND>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_CAPI_REG_SIM_ERROR_IND  
</0x010e OP_CAPI_REG_SIM_ERROR_IND>


<sub T_CAPI_REG_MM_INFO_IND>
    localTimeZone[2]          array  u8     localTimeZone             |multiedit;|
    univTimeLocalTimeZone[8]  array  u8     univTimeLocalTimeZone     |multiedit;|
    netDaylightSavingTime[2]  array  u8     netDaylightSavingTime     |multiedit;|
    fullNameForNetwork[115]   array  u8     fullNameForNetwork        |multiedit;|
    shortNameForNetwork[115]  array  u8     shortNameForNetwork       |multiedit;|
</sub T_CAPI_REG_MM_INFO_IND>


<0x0100 OP_CAPI_REG_MM_INFO_IND>
    signalHeader  struct                  T_MsgHeader             
    body          struct                  T_CAPI_REG_MM_INFO_IND  
</0x0100 OP_CAPI_REG_MM_INFO_IND>


<sub T_CAPI_REG_PSM_CONFIG_REQ>
    psmStatus      u8  u8  psmStatus      |input;|
    bitmap         u8  u8  bitmap         |input;|
    t3324Value     u8  u8  t3324Value     |input;|
    t3412ExtValue  u8  u8  t3412ExtValue  |input;|
</sub T_CAPI_REG_PSM_CONFIG_REQ>


<0x010f OP_CAPI_REG_PSM_CONFIG_REQ>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_PSM_CONFIG_REQ  
</0x010f OP_CAPI_REG_PSM_CONFIG_REQ>


<sub T_CAPI_REG_EDRX_CONFIG_REQ>
    mode       u8  u8  mode       |input;|
    actType    u8  u8  actType    |input;|
    eDrxValue  u8  u8  eDrxValue  |input;|
</sub T_CAPI_REG_EDRX_CONFIG_REQ>


<0x0110 OP_CAPI_REG_EDRX_CONFIG_REQ>
    signalHeader  struct                      T_MsgHeader                 
    body          struct                      T_CAPI_REG_EDRX_CONFIG_REQ  
</0x0110 OP_CAPI_REG_EDRX_CONFIG_REQ>


<sub T_CAPI_REG_SET_EPS_MODE_REQ>
    LteOpMode  u8  u8  LteOpMode  |input;|
</sub T_CAPI_REG_SET_EPS_MODE_REQ>


<0x0119 OP_CAPI_REG_SET_EPS_MODE_REQ>
    signalHeader  struct                       T_MsgHeader                  
    body          struct                       T_CAPI_REG_SET_EPS_MODE_REQ  
</0x0119 OP_CAPI_REG_SET_EPS_MODE_REQ>


<sub T_CAPI_REG_SIM_OPEN_IND>
    SimStatus  u8  u8  SimStatus  |input;|
</sub T_CAPI_REG_SIM_OPEN_IND>


<0x0111 OP_CAPI_REG_SIM_OPEN_IND>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_CAPI_REG_SIM_OPEN_IND  
</0x0111 OP_CAPI_REG_SIM_OPEN_IND>


<0x0112 OP_CAPI_REG_SIM_CLOSE_IND>
    signalHeader  struct       T_MsgHeader  
</0x0112 OP_CAPI_REG_SIM_CLOSE_IND>


<0x0113 OP_CAPI_REG_SIM_CLOSE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x0113 OP_CAPI_REG_SIM_CLOSE_CNF>


<sub T_CAPI_REG_CELL_IND>
    CurrRat  u8  u8  CurrRat  |input;|
</sub T_CAPI_REG_CELL_IND>


<0x0114 OP_CAPI_REG_CELL_IND>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_CAPI_REG_CELL_IND  
</0x0114 OP_CAPI_REG_CELL_IND>


<sub T_CAPI_REG_IRAT_START_IND>
    SourceRat  u8  u8  SourceRat  |input;|
    TargetRat  u8  u8  TargetRat  |input;|
</sub T_CAPI_REG_IRAT_START_IND>


<0x0115 OP_CAPI_REG_IRAT_START_IND>
    signalHeader  struct                     T_MsgHeader                
    body          struct                     T_CAPI_REG_IRAT_START_IND  
</0x0115 OP_CAPI_REG_IRAT_START_IND>


<sub T_CAPI_REG_IRAT_END_IND>
    CurrRat  u8  u8  CurrRat  |input;|
    Cause    u8  u8  Cause    |input;|
</sub T_CAPI_REG_IRAT_END_IND>


<0x0116 OP_CAPI_REG_IRAT_END_IND>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_CAPI_REG_IRAT_END_IND  
</0x0116 OP_CAPI_REG_IRAT_END_IND>


<0x0117 OP_CAPI_NW_CSREGSTATUS_IND>
    signalHeader    struct                  T_MsgHeader             
    csRegStatusInd  struct                  api_NwCsRegStatusInd_t  
</0x0117 OP_CAPI_NW_CSREGSTATUS_IND>


<0x0118 OP_CAPI_NW_PSREGSTATUS_IND>
    signalHeader    struct                  T_MsgHeader             
    psRegStatusInd  struct                  api_NwPsRegStatusInd_t  
</0x0118 OP_CAPI_NW_PSREGSTATUS_IND>


<0x011b OP_CAPI_REG_SET_USAGE_REQ>
    signalHeader  struct             T_MsgHeader        
    setUsageReq   struct             api_SetUsageReq_t  
</0x011b OP_CAPI_REG_SET_USAGE_REQ>


<0x011c OP_CAPI_REG_SET_VOICECFG_REQ>
    signalHeader  struct                T_MsgHeader           
    setVoiceCfg   struct                api_SetVoiceCfgReq_t  
</0x011c OP_CAPI_REG_SET_VOICECFG_REQ>


<0x011a OP_CAPI_REG_SET_SRVCC_REQ>
    signalHeader  struct             T_MsgHeader        
    setSrvccReq   struct             api_SetSrvccReq_t  
</0x011a OP_CAPI_REG_SET_SRVCC_REQ>


<0x011d OP_CAPI_REG_PREFER_SRV_IND>
    signalHeader   struct               T_MsgHeader          
    imsSrvPrefInd  struct               api_ImsSrvPrefInd_t  
</0x011d OP_CAPI_REG_PREFER_SRV_IND>


<0x011e OP_CAPI_REG_IMS_STATUS_REQ>
    signalHeader  struct              T_MsgHeader         
    imsStatusReq  struct              api_ImsStatusReq_t  
</0x011e OP_CAPI_REG_IMS_STATUS_REQ>


<0x011f OP_CAPI_REG_IMS_SRV_STATUS_REQ>
    signalHeader     struct                 T_MsgHeader            
    imsSrvStatusReq  struct                 api_ImsSrvStatusReq_t  
</0x011f OP_CAPI_REG_IMS_SRV_STATUS_REQ>


<0x0123 OP_CAPI_REG_IMS_SET_VALUE_REQ>
    signalHeader    struct                T_MsgHeader           
    imsSetValueReq  struct                api_ImsSetValueReq_t  
</0x0123 OP_CAPI_REG_IMS_SET_VALUE_REQ>


<0x0124 OP_CAPI_REG_EMERGENCY_NUM_LIST_IND>
    signalHeader      struct                  T_MsgHeader             
    emergencyNumList  struct                  api_EmergencyNumList_t  
</0x0124 OP_CAPI_REG_EMERGENCY_NUM_LIST_IND>


<0x0125 OP_CAPI_REG_IMS_HANDSHAKE_REQ>
    signalHeader     struct                 T_MsgHeader            
    ImsHandShakeReq  struct                 api_ImsHandShakeReq_t  
</0x0125 OP_CAPI_REG_IMS_HANDSHAKE_REQ>


<0x0126 OP_CAPI_REG_IMS_HANDSHAKE_CNF>
    signalHeader     struct                 T_MsgHeader            
    ImsHandShakeCnf  struct                 api_ImsHandShakeCnf_t  
</0x0126 OP_CAPI_REG_IMS_HANDSHAKE_CNF>


<0x0120 OP_CAPI_REG_IMS_SRVCC_START_IND>
    signalHeader  struct       T_MsgHeader  
</0x0120 OP_CAPI_REG_IMS_SRVCC_START_IND>


<0x0121 OP_CAPI_REG_IMS_SRVCC_END_IND>
    signalHeader    struct                T_MsgHeader           
    imsSrvccEndInd  struct                api_ImsSrvccEndInd_t  
</0x0121 OP_CAPI_REG_IMS_SRVCC_END_IND>


<0x0122 OP_CAPI_REG_IMS_SRVCC_CANCEL_IND>
    signalHeader  struct       T_MsgHeader  
</0x0122 OP_CAPI_REG_IMS_SRVCC_CANCEL_IND>


<0x0127 OP_CAPI_REG_ERRC_CONN_STATUS_IND>
    signalHeader       struct                     T_MsgHeader                
    ErrcConnStatusInd  struct                     api_NwErrcConnStatusInd_t  
</0x0127 OP_CAPI_REG_ERRC_CONN_STATUS_IND>


<sub T_SMREG_EPS_DEFAULT_CONFIG_REQ>
    pdnType           u8     u8     pdnType           |input;|
    apnLen            u8     u8     apnLen            |input;|
    apn[MAX_APN_LEN]  array  u8     apn               |multiedit;|
    pcoLen            u16    u16    pcoLen            |input;|
    pco[MAX_PCO_LEN]  array  u8     pco               |multiedit;|
</sub T_SMREG_EPS_DEFAULT_CONFIG_REQ>


<0x040c OP_SMREG_EPS_DEFAULT_CONFIG_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    SMREG_EPS_DEFAULT_CONFIG_REQ  struct                          T_SMREG_EPS_DEFAULT_CONFIG_REQ  
</0x040c OP_SMREG_EPS_DEFAULT_CONFIG_REQ>


<sub T_SMREG_EPS_ACTIVATE_REQ>
    SmIndex           u8            u8            SmIndex           |input;|
    nCid              u8            u8            nCid              |input;|
    reserved1         u16           u16           reserved1         |input;|
    pdnAddress        struct        T_PdnAddress  
    apnLen            u8            u8            apnLen            |input;|
    apn[MAX_APN_LEN]  array         u8            apn               |multiedit;|
    pcoLen            u16           u16           pcoLen            |input;|
    pco[MAX_PCO_LEN]  array         u8            pco               |multiedit;|
    flag              u8            u8            flag              |input;|
    lowPrioInd        u8            u8            lowPrioInd        |input;|
    requestType       u8            u8            requestType       |input;|
</sub T_SMREG_EPS_ACTIVATE_REQ>


<0x0400 OP_SMREG_EPS_ACTIVATE_REQ>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_REQ  struct                    T_SMREG_EPS_ACTIVATE_REQ  
</0x0400 OP_SMREG_EPS_ACTIVATE_REQ>


<sub T_SMREG_EPS_ACTIVATE_CNF>
    SmIndex           u8            u8            SmIndex           |input;|
    ebi               u8            u8            ebi               |input;|
    nCid              u8            u8            nCid              |input;|
    ApnLen            u8            u8            ApnLen            |input;|
    Apn[MAX_APN_LEN]  array         u8            Apn               |multiedit;|
    pdnAddress        struct        T_PdnAddress  
    epsQos            struct        T_EpsQos      
    qosFlag           u8            u8            qosFlag           |input;|
    reserved[3]       array         u8            reserved          |multiedit;|
    qos               struct        T_Qos         
    pcoLen            u16           u16           pcoLen            |input;|
    pco[MAX_PCO_LEN]  array         u8            pco               |multiedit;|
</sub T_SMREG_EPS_ACTIVATE_CNF>


<0x0401 OP_SMREG_EPS_ACTIVATE_CNF>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_CNF  struct                    T_SMREG_EPS_ACTIVATE_CNF  
</0x0401 OP_SMREG_EPS_ACTIVATE_CNF>


<sub T_SMREG_EPS_ACTIVATE_ERR>
    SmIndex  u8  u8  SmIndex  |input;|
    nCid     u8  u8  nCid     |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ACTIVATE_ERR>


<0x0402 OP_SMREG_EPS_ACTIVATE_ERR>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_ERR  struct                    T_SMREG_EPS_ACTIVATE_ERR  
</0x0402 OP_SMREG_EPS_ACTIVATE_ERR>


<sub T_SMREG_EPS_ACTIVATE_IND>
    SmIndex      u8        u8        SmIndex      |input;|
    ebi          u8        u8        ebi          |input;|
    linkedEbi    u8        u8        linkedEbi    |input;|
    actType      u8        u8        actType      |input;|
    epsQos       struct    T_EpsQos  
    tft          struct    T_Tft     
    qosFlag      u8        u8        qosFlag      |input;|
    reserved[3]  array     u8        reserved     |multiedit;|
    qos          struct    T_Qos     
</sub T_SMREG_EPS_ACTIVATE_IND>


<0x040e OP_SMREG_EPS_ACTIVATE_IND>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_IND  struct                    T_SMREG_EPS_ACTIVATE_IND  
</0x040e OP_SMREG_EPS_ACTIVATE_IND>


<sub T_SMREG_EPS_ACTIVATE_RSP>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_ACTIVATE_RSP>


<0x040f OP_SMREG_EPS_ACTIVATE_RSP>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_RSP  struct                    T_SMREG_EPS_ACTIVATE_RSP  
</0x040f OP_SMREG_EPS_ACTIVATE_RSP>


<sub T_SMREG_EPS_ACTIVATE_REJ>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ACTIVATE_REJ>


<0x0410 OP_SMREG_EPS_ACTIVATE_REJ>
    signalHeader            struct                    T_MsgHeader               
    SMREG_EPS_ACTIVATE_REJ  struct                    T_SMREG_EPS_ACTIVATE_REJ  
</0x0410 OP_SMREG_EPS_ACTIVATE_REJ>


<sub T_SMREG_EPS_ALLOCATION_REQ>
    SmIndex      u8        u8        SmIndex      |input;|
    linkedEbi    u8        u8        linkedEbi    |input;|
    reserved[2]  array     u8        reserved     |multiedit;|
    tft          struct    T_Tft     
    epsQos       struct    T_EpsQos  
</sub T_SMREG_EPS_ALLOCATION_REQ>


<0x0411 OP_SMREG_EPS_ALLOCATION_REQ>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_REQ  struct                      T_SMREG_EPS_ALLOCATION_REQ  
</0x0411 OP_SMREG_EPS_ALLOCATION_REQ>


<sub T_SMREG_EPS_ALLOCATION_CNF>
    SmIndex   u8  u8  SmIndex   |input;|
    respType  u8  u8  respType  |input;|
</sub T_SMREG_EPS_ALLOCATION_CNF>


<0x0412 OP_SMREG_EPS_ALLOCATION_CNF>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_CNF  struct                      T_SMREG_EPS_ALLOCATION_CNF  
</0x0412 OP_SMREG_EPS_ALLOCATION_CNF>


<sub T_SMREG_EPS_ALLOCATION_ERR>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_ALLOCATION_ERR>


<0x0413 OP_SMREG_EPS_ALLOCATION_ERR>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_ALLOCATION_ERR  struct                      T_SMREG_EPS_ALLOCATION_ERR  
</0x0413 OP_SMREG_EPS_ALLOCATION_ERR>


<sub T_SMREG_EPS_DEACTIVATE_REQ>
    SmIndex      u8     u8     SmIndex      |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
    tfa          struct T_Tft  
</sub T_SMREG_EPS_DEACTIVATE_REQ>


<0x0403 OP_SMREG_EPS_DEACTIVATE_REQ>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_REQ  struct                      T_SMREG_EPS_DEACTIVATE_REQ  
</0x0403 OP_SMREG_EPS_DEACTIVATE_REQ>


<sub T_SMREG_EPS_DEACTIVATE_CNF>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_DEACTIVATE_CNF>


<0x0404 OP_SMREG_EPS_DEACTIVATE_CNF>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_CNF  struct                      T_SMREG_EPS_DEACTIVATE_CNF  
</0x0404 OP_SMREG_EPS_DEACTIVATE_CNF>


<sub T_SMREG_EPS_DEACTIVATE_IND>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_DEACTIVATE_IND>


<0x0405 OP_SMREG_EPS_DEACTIVATE_IND>
    signalHeader              struct                      T_MsgHeader                 
    SMREG_EPS_DEACTIVATE_IND  struct                      T_SMREG_EPS_DEACTIVATE_IND  
</0x0405 OP_SMREG_EPS_DEACTIVATE_IND>


<sub T_SMREG_EPS_MODIFY_REQ>
    SmIndex      u8        u8        SmIndex      |input;|
    qosFlag      u8        u8        qosFlag      |input;|
    reserved[2]  array     u8        reserved     |multiedit;|
    epsQos       struct    T_EpsQos  
    tfa          struct    T_Tft     
</sub T_SMREG_EPS_MODIFY_REQ>


<0x0407 OP_SMREG_EPS_MODIFY_REQ>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_REQ  struct                  T_SMREG_EPS_MODIFY_REQ  
</0x0407 OP_SMREG_EPS_MODIFY_REQ>


<sub T_SMREG_EPS_MODIFY_CNF>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_MODIFY_CNF>


<0x0408 OP_SMREG_EPS_MODIFY_CNF>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_CNF  struct                  T_SMREG_EPS_MODIFY_CNF  
</0x0408 OP_SMREG_EPS_MODIFY_CNF>


<sub T_SMREG_EPS_MODIFY_ERR>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_MODIFY_ERR>


<0x0409 OP_SMREG_EPS_MODIFY_ERR>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_ERR  struct                  T_SMREG_EPS_MODIFY_ERR  
</0x0409 OP_SMREG_EPS_MODIFY_ERR>


<sub T_SMREG_EPS_MODIFY_IND>
    SmIndex           u8        u8        SmIndex           |input;|
    epsQosFlag        u8        u8        epsQosFlag        |input;|
    reserved1[2]      array     u8        reserved1         |multiedit;|
    epsQos            struct    T_EpsQos  
    qosFlag           u8        u8        qosFlag           |input;|
    reserved2[3]      array     u8        reserved2         |multiedit;|
    qos               struct    T_Qos     
    tftFlag           u8        u8        tftFlag           |input;|
    reserved3[3]      array     u8        reserved3         |multiedit;|
    tft               struct    T_Tft     
    pcoLen            u16       u16       pcoLen            |input;|
    pco[MAX_PCO_LEN]  array     u8        pco               |multiedit;|
</sub T_SMREG_EPS_MODIFY_IND>


<0x0406 OP_SMREG_EPS_MODIFY_IND>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_IND  struct                  T_SMREG_EPS_MODIFY_IND  
</0x0406 OP_SMREG_EPS_MODIFY_IND>


<sub T_SMREG_EPS_MODIFY_RSP>
    SmIndex  u8  u8  SmIndex  |input;|
</sub T_SMREG_EPS_MODIFY_RSP>


<0x040a OP_SMREG_EPS_MODIFY_RSP>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_RSP  struct                  T_SMREG_EPS_MODIFY_RSP  
</0x040a OP_SMREG_EPS_MODIFY_RSP>


<sub T_SMREG_EPS_MODIFY_REJ>
    SmIndex  u8  u8  SmIndex  |input;|
    cause    u8  u8  cause    |input;|
</sub T_SMREG_EPS_MODIFY_REJ>


<0x040b OP_SMREG_EPS_MODIFY_REJ>
    signalHeader          struct                  T_MsgHeader             
    SMREG_EPS_MODIFY_REJ  struct                  T_SMREG_EPS_MODIFY_REJ  
</0x040b OP_SMREG_EPS_MODIFY_REJ>


<sub T_RABM_EPCM_DATA_IND>
    ebi     u8           u8           ebi     |input;|
    pdata   Ptr          T_ComSduLte  
</sub T_RABM_EPCM_DATA_IND>


<0x1102 OP_RABM_EPCM_DATA_IND>
    signalHeader        struct                T_MsgHeader           
    RABM_EPCM_DATA_IND  struct                T_RABM_EPCM_DATA_IND  
</0x1102 OP_RABM_EPCM_DATA_IND>


<sub T_RABM_EPCM_DATA_REQ>
    ebi           u8           u8           ebi           |input;|
    dataPointer   Ptr          T_ComPduLte  
</sub T_RABM_EPCM_DATA_REQ>


<0x1101 OP_RABM_EPCM_DATA_REQ>
    signalHeader        struct                T_MsgHeader           
    RABM_EPCM_DATA_REQ  struct                T_RABM_EPCM_DATA_REQ  
</0x1101 OP_RABM_EPCM_DATA_REQ>


<sub T_CAPI_TEST_SP_CLEAN_INFO_REQ>
    type  u8  u8  type  |input;|
</sub T_CAPI_TEST_SP_CLEAN_INFO_REQ>


<0x0128 OP_CAPI_TEST_SP_CLEAN_INFO_REQ>
    signalHeader                struct                         T_MsgHeader                    
    API_TEST_SP_CLEAN_INFO_REQ  struct                         T_CAPI_TEST_SP_CLEAN_INFO_REQ  
</0x0128 OP_CAPI_TEST_SP_CLEAN_INFO_REQ>


<sub T_RABM_IPC_DATA_REQ>
    dataPointer   Ptr   void  
</sub T_RABM_IPC_DATA_REQ>


<0x1103 OP_RABM_IPC_DATA_REQ>
    signalHeader       struct               T_MsgHeader          
    RABM_IPC_DATA_REQ  struct               T_RABM_IPC_DATA_REQ  
</0x1103 OP_RABM_IPC_DATA_REQ>


<0x0129 OP_CAPI_BLACK_CELL_LIST_SET_REQ>
    signalHeader  struct       T_MsgHeader  
</0x0129 OP_CAPI_BLACK_CELL_LIST_SET_REQ>


<0x1301 OP_SM_PDP_CTX_MAPPING_IND>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 sm_PdpCtxMappingInd_t  
</0x1301 OP_SM_PDP_CTX_MAPPING_IND>


<0x1302 OP_SM_EPS_CTX_MAPPING_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1302 OP_SM_EPS_CTX_MAPPING_REQ>


<0x1303 OP_SM_EPS_CTX_MAPPING_CNF>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 sm_EpsCtxMappingCnf_t  
</0x1303 OP_SM_EPS_CTX_MAPPING_CNF>


<0x1311 OP_MM_CSFB_REQ>
</0x1311 OP_MM_CSFB_REQ>


<0x1312 OP_MM_ABORT_CSFB_REQ>
</0x1312 OP_MM_ABORT_CSFB_REQ>


<0x1313 OP_MM_CSFB_FAIL>
</0x1313 OP_MM_CSFB_FAIL>


<0x1314 OP_MM_CSFB_IND>
</0x1314 OP_MM_CSFB_IND>


<0x1321 OP_STK_START_REQ>
    signalHeader  struct          T_MsgHeader     
    body          struct          api_StartReq_t  
</0x1321 OP_STK_START_REQ>


<0x1322 OP_STK_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1322 OP_STK_STOP_REQ>


<0x1323 OP_STK_STOP_CNF>
    signalHeader  struct         T_MsgHeader    
    body          struct         stk_StopCnf_t  
</0x1323 OP_STK_STOP_CNF>


<0x1324 OP_STK_SIM_OPEN_IND>
    signalHeader  struct            T_MsgHeader       
    body          struct            api_SimOpenInd_t  
</0x1324 OP_STK_SIM_OPEN_IND>


<0x1325 OP_STK_SIM_CLOSED_IND>
    signalHeader  struct       T_MsgHeader  
</0x1325 OP_STK_SIM_CLOSED_IND>


<0x1326 OP_STK_SIM_CLOSE_CNF>
    signalHeader  struct            T_MsgHeader       
    body          struct            mm_SimCloseCnf_t  
</0x1326 OP_STK_SIM_CLOSE_CNF>


<0x1327 OP_MMP_ATTACH_REQ>
    signalHeader  struct               T_MsgHeader          
    body          struct               api_NwPsAttachReq_t  
</0x1327 OP_MMP_ATTACH_REQ>


<0x1328 OP_MMP_DETACH_REQ>
    signalHeader  struct               T_MsgHeader          
    body          struct               api_NwPsDetachReq_t  
</0x1328 OP_MMP_DETACH_REQ>


<0x1329 OP_MM_LTE_STATUS_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             mm_LteStatusInd_t  
</0x1329 OP_MM_LTE_STATUS_IND>


<0x132a OP_MM_RAT_IND>
    signalHeader  struct       T_MsgHeader  
    body          struct       mm_RatInd_t  
</0x132a OP_MM_RAT_IND>


<0x132b OP_MM_CS_INFO_SYNC>
    signalHeader  struct           T_MsgHeader      
    body          struct           mm_CsInfoSync_t  
</0x132b OP_MM_CS_INFO_SYNC>


<0x132c OP_MM_PS_INFO_SYNC>
    signalHeader  struct           T_MsgHeader      
    body          struct           mm_PsInfoSync_t  
</0x132c OP_MM_PS_INFO_SYNC>


<0x132f OP_MM_STATUS_IND>
    signalHeader  struct          T_MsgHeader     
    body          struct          mm_StatusInd_t  
</0x132f OP_MM_STATUS_IND>


<0x132d OP_MM_IRAT_START_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             mm_IratStartInd_t  
</0x132d OP_MM_IRAT_START_IND>


<0x132e OP_MM_IRAT_END_IND>
    signalHeader  struct           T_MsgHeader      
    body          struct           mm_IratEndInd_t  
</0x132e OP_MM_IRAT_END_IND>


<0xffff OP_RR_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_RR_STOP_REQ>


<0xffff OP_RR_STOP_CNF>
    signalHeader  struct         T_MsgHeader    
    body          struct         stk_StopCnf_t  
</0xffff OP_RR_STOP_CNF>


<0x1361 OP_RR_SIM_CLOSE_IND>
    signalHeader  struct       T_MsgHeader  
</0x1361 OP_RR_SIM_CLOSE_IND>


<0x1363 OP_RR_PARAM_UPDATE_REQ>
    signalHeader  struct               T_MsgHeader          
    body          struct               rr_ParamUpdateReq_t  
</0x1363 OP_RR_PARAM_UPDATE_REQ>


<0x1364 OP_RR_PARAM_UPDATE_IND>
    signalHeader  struct               T_MsgHeader          
    body          struct               rr_ParamUpdateInd_t  
</0x1364 OP_RR_PARAM_UPDATE_IND>


<0x1367 OP_RR_ACT_REQ>
    signalHeader  struct       T_MsgHeader  
    body          struct       rr_ActReq_t  
</0x1367 OP_RR_ACT_REQ>


<0x1368 OP_RR_ACT_IND>
    signalHeader  struct       T_MsgHeader  
    body          struct       rr_ActInd_t  
</0x1368 OP_RR_ACT_IND>


<0x1369 OP_RR_NW_LIST_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1369 OP_RR_NW_LIST_REQ>


<0x136a OP_RR_NW_LIST_IND>
    signalHeader  struct          T_MsgHeader     
    body          struct          rr_NwListInd_t  
</0x136a OP_RR_NW_LIST_IND>


<0x136b OP_RR_NW_LIST_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x136b OP_RR_NW_LIST_ABORT_REQ>


<0x136c OP_RR_NW_LIST_ABORT_IND>
    signalHeader  struct                T_MsgHeader           
    body          struct                api_NwListAbortInd_t  
</0x136c OP_RR_NW_LIST_ABORT_IND>


<0x136d OP_RR_NW_SELMODE_REQ>
    signalHeader  struct              T_MsgHeader         
    body          struct              api_NwSelModeReq_t  
</0x136d OP_RR_NW_SELMODE_REQ>


<0x136e OP_RR_NW_SEL_REQ>
    signalHeader  struct          T_MsgHeader     
    body          struct          api_NwSelReq_t  
</0x136e OP_RR_NW_SEL_REQ>


<0x136f OP_RR_NW_CS_REG_IND>
    signalHeader  struct                  T_MsgHeader             
    body          struct                  api_NwCsRegStatusInd_t  
</0x136f OP_RR_NW_CS_REG_IND>


<0x1370 OP_RR_NW_PS_REG_IND>
    signalHeader  struct                  T_MsgHeader             
    body          struct                  api_NwPsRegStatusInd_t  
</0x1370 OP_RR_NW_PS_REG_IND>


<0x1371 OP_RR_LTE_STATUS_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             rr_LteStatusInd_t  
</0x1371 OP_RR_LTE_STATUS_IND>


<0x1362 OP_RR_IRAT_CLASSMARK_REQ>
    signalHeader  struct                 T_MsgHeader            
    body          struct                 rr_IratClassMarkReq_t  
</0x1362 OP_RR_IRAT_CLASSMARK_REQ>


<0x1365 OP_RR_IRAT_INACTIVE_REQ>
    signalHeader  struct                T_MsgHeader           
    body          struct                rr_IratInactiveReq_t  
</0x1365 OP_RR_IRAT_INACTIVE_REQ>


<0x1366 OP_RR_IRAT_INACTIVE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1366 OP_RR_IRAT_INACTIVE_CNF>


<0x1372 OP_RR_IRAT_RESEL_START_IND>
    signalHeader  struct       T_MsgHeader  
</0x1372 OP_RR_IRAT_RESEL_START_IND>


<0x1373 OP_RR_IRAT_RESEL_FAIL_IND>
    signalHeader  struct       T_MsgHeader  
</0x1373 OP_RR_IRAT_RESEL_FAIL_IND>


<0x1374 OP_RR_IRAT_CCO_START_IND>
    signalHeader  struct       T_MsgHeader  
</0x1374 OP_RR_IRAT_CCO_START_IND>


<0x1375 OP_RR_IRAT_CCO_FAIL_IND>
    signalHeader  struct       T_MsgHeader  
</0x1375 OP_RR_IRAT_CCO_FAIL_IND>


<0x1376 OP_RR_IRAT_RAT_CHN_IND>
    signalHeader  struct              T_MsgHeader         
    body          struct              rr_IratRatChnInd_t  
</0x1376 OP_RR_IRAT_RAT_CHN_IND>


<sub T_SMS_UNITDATA_REQ>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_SMS_UNITDATA_REQ>


<sub T_SMS_UNITDATA_IND>
    length                    u16    u16    length                    |input;|
    fillByte                  u8     u8     fillByte                  |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_SMS_UNITDATA_IND>


<sub T_EMMSMS_EST_REQ>
    TI  u8  u8  TI  |input;|
</sub T_EMMSMS_EST_REQ>


<0x1001 OP_EMMSMS_EST_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_EST_REQ  struct            T_EMMSMS_EST_REQ  
</0x1001 OP_EMMSMS_EST_REQ>


<0x1002 OP_EMMSMS_EST_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1002 OP_EMMSMS_EST_CNF>


<sub T_EMMSMS_EST_IND>
    TI  u8  u8  TI  |input;|
</sub T_EMMSMS_EST_IND>


<0x1007 OP_EMMSMS_EST_IND>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_EST_IND  struct            T_EMMSMS_EST_IND  
</0x1007 OP_EMMSMS_EST_IND>


<sub T_EMMSMS_ERROR_IND>
    TI     u8  u8  TI     |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMSMS_ERROR_IND>


<0x1003 OP_EMMSMS_ERROR_IND>
    signalHeader      struct              T_MsgHeader         
    EMMSMS_ERROR_IND  struct              T_EMMSMS_ERROR_IND  
</0x1003 OP_EMMSMS_ERROR_IND>


<0x1004 OP_EMMSMS_UNITDATA_REQ>
    signalHeader      struct              T_MsgHeader         
    SMS_UNITDATA_REQ  struct              T_SMS_UNITDATA_REQ  
</0x1004 OP_EMMSMS_UNITDATA_REQ>


<0x1005 OP_EMMSMS_UNITDATA_IND>
    signalHeader      struct              T_MsgHeader         
    SMS_UNITDATA_IND  struct              T_SMS_UNITDATA_IND  
</0x1005 OP_EMMSMS_UNITDATA_IND>


<sub T_EMMSMS_REL_REQ>
    TI  u8  u8  TI  |input;|
</sub T_EMMSMS_REL_REQ>


<0x1006 OP_EMMSMS_REL_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMSMS_REL_REQ  struct            T_EMMSMS_REL_REQ  
</0x1006 OP_EMMSMS_REL_REQ>


<sub T_EMMESM_ESTABLISH_REQ>
    pti                          u8     u8     pti                          |input;|
    ebi                          u8     u8     ebi                          |input;|
    reqType                      u8     u8     reqType                      |input;|
    length                       u16    u16    length                       |input;|
    esmMessage[MAX_NAS_MSG_LEN]  array  u8     esmMessage                   |multiedit;|
</sub T_EMMESM_ESTABLISH_REQ>


<0x1021 OP_EMMESM_ESTABLISH_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_ESTABLISH_REQ  struct                  T_EMMESM_ESTABLISH_REQ  
</0x1021 OP_EMMESM_ESTABLISH_REQ>


<sub T_EMMESM_ESTABLISH_CNF>
    pti  u8  u8  pti  |input;|
    ebi  u8  u8  ebi  |input;|
</sub T_EMMESM_ESTABLISH_CNF>


<0x1022 OP_EMMESM_ESTABLISH_CNF>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_ESTABLISH_CNF  struct                  T_EMMESM_ESTABLISH_CNF  
</0x1022 OP_EMMESM_ESTABLISH_CNF>


<sub T_EMMESM_RELEASE_IND>
    pti    u8  u8  pti    |input;|
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMESM_RELEASE_IND>


<0x1024 OP_EMMESM_RELEASE_IND>
    signalHeader        struct                T_MsgHeader           
    EMMESM_RELEASE_IND  struct                T_EMMESM_RELEASE_IND  
</0x1024 OP_EMMESM_RELEASE_IND>


<sub T_EMMESM_EPS_STATUS_IND>
    pti  u8  u8  pti  |input;|
    ebi  u8  u8  ebi  |input;|
</sub T_EMMESM_EPS_STATUS_IND>


<0x1025 OP_EMMESM_EPS_STATUS_IND>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_EPS_STATUS_IND  struct                   T_EMMESM_EPS_STATUS_IND  
</0x1025 OP_EMMESM_EPS_STATUS_IND>


<sub T_EMMESM_DATA_REQ>
    length                    u16    u16    length                    |input;|
    dummy                     u8     u8     dummy                     |input;|
    exceptionData             u8     u8     exceptionData             |input;|
    message[MAX_NAS_MSG_LEN]  array  u8     message                   |multiedit;|
</sub T_EMMESM_DATA_REQ>


<0x1026 OP_EMMESM_DATA_REQ>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_REQ  struct             T_EMMESM_DATA_REQ  
</0x1026 OP_EMMESM_DATA_REQ>


<sub T_EMMESM_DATA_IND>
    length      u16    u16    length      |input;|
    protFlag    u8     u8     protFlag    |input;|
    dummy       u8     u8     dummy       |input;|
    message[0]  array  u8     message     |multiedit;|
</sub T_EMMESM_DATA_IND>


<0x1027 OP_EMMESM_DATA_IND>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_IND  struct             T_EMMESM_DATA_IND  
</0x1027 OP_EMMESM_DATA_IND>


<sub T_EMMESM_EPS_DELETE_REQ>
    pti    u8  u8  pti    |input;|
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_EMMESM_EPS_DELETE_REQ>


<0x1028 OP_EMMESM_EPS_DELETE_REQ>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_EPS_DELETE_REQ  struct                   T_EMMESM_EPS_DELETE_REQ  
</0x1028 OP_EMMESM_EPS_DELETE_REQ>


<sub T_EMMESM_LOOP_TEST_IND>
    command  u8  u8  command  |input;|
</sub T_EMMESM_LOOP_TEST_IND>


<0xffff OP_EMMESM_LOOP_TEST_IND>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_LOOP_TEST_IND  struct                  T_EMMESM_LOOP_TEST_IND  
</0xffff OP_EMMESM_LOOP_TEST_IND>


<sub T_EMMESM_LOOP_TEST_REQ>
    ipType  u8  u8  ipType  |input;|
</sub T_EMMESM_LOOP_TEST_REQ>


<0xffff OP_EMMESM_LOOP_TEST_REQ>
    signalHeader          struct                  T_MsgHeader             
    EMMESM_LOOP_TEST_REQ  struct                  T_EMMESM_LOOP_TEST_REQ  
</0xffff OP_EMMESM_LOOP_TEST_REQ>


<sub T_EMMESM_DATA_CNF>
    esmMsgType  u8  u8  esmMsgType  |input;|
    result      u8  u8  result      |input;|
    ebi         u8  u8  ebi         |input;|
    pti         u8  u8  pti         |input;|
</sub T_EMMESM_DATA_CNF>


<0x1029 OP_EMMESM_DATA_CNF>
    signalHeader     struct             T_MsgHeader        
    EMMESM_DATA_CNF  struct             T_EMMESM_DATA_CNF  
</0x1029 OP_EMMESM_DATA_CNF>


<0x102a OP_EMMESM_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x102a OP_EMMESM_ABORT_REQ>


<sub T_EMMESM_PDN_CON_IND>
    withoutPdnInd  u8  u8  withoutPdnInd  |input;|
</sub T_EMMESM_PDN_CON_IND>


<0x102b OP_EMMESM_PDN_CON_IND>
    signalHeader        struct                T_MsgHeader           
    EMMESM_PDN_CON_IND  struct                T_EMMESM_PDN_CON_IND  
</0x102b OP_EMMESM_PDN_CON_IND>


<sub T_EMMESM_STATUS_REQ>
    status   u8   u8   status   |input;|
    content  u16  u16  content  |input;|
</sub T_EMMESM_STATUS_REQ>


<0x102c OP_EMMESM_STATUS_REQ>
    signalHeader       struct               T_MsgHeader          
    EMMESM_STATUS_REQ  struct               T_EMMESM_STATUS_REQ  
</0x102c OP_EMMESM_STATUS_REQ>


<sub T_EMMESM_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMMESM_STATUS_IND>


<0x102d OP_EMMESM_STATUS_IND>
    signalHeader       struct               T_MsgHeader          
    EMMESM_STATUS_IND  struct               T_EMMESM_STATUS_IND  
</0x102d OP_EMMESM_STATUS_IND>


<sub T_ESM_T3396_EXP>
    T3396ExpPtr  u32  u32  T3396ExpPtr  |input;|
</sub T_ESM_T3396_EXP>


<0xffff OP_ESM_T3396_EXP>
    signalHeader   struct           T_MsgHeader      
    ESM_T3396_EXP  struct           T_ESM_T3396_EXP  
</0xffff OP_ESM_T3396_EXP>


<0x102f OP_EMMESM_STOP_T3396>
    signalHeader  struct       T_MsgHeader  
</0x102f OP_EMMESM_STOP_T3396>


<sub T_EMMESM_RAT_CHANGE_IND>
    SourceRat  u8  u8  SourceRat  |input;|
    TargetRat  u8  u8  TargetRat  |input;|
</sub T_EMMESM_RAT_CHANGE_IND>


<0x102e OP_EMMESM_RAT_CHANGE_IND>
    signalHeader           struct                   T_MsgHeader              
    EMMESM_RAT_CHANGE_IND  struct                   T_EMMESM_RAT_CHANGE_IND  
</0x102e OP_EMMESM_RAT_CHANGE_IND>


<0x104b OP_EMM_IMSI_PAGE_IND>
    signalHeader  struct       T_MsgHeader  
</0x104b OP_EMM_IMSI_PAGE_IND>


<sub T_EMM_CELL_INFO_REQ>
    limitedFlag  u8  u8  limitedFlag  |input;|
</sub T_EMM_CELL_INFO_REQ>


<0x1041 OP_EMM_CELL_INFO_REQ>
    signalHeader       struct               T_MsgHeader          
    EMM_CELL_INFO_REQ  struct               T_EMM_CELL_INFO_REQ  
</0x1041 OP_EMM_CELL_INFO_REQ>


<0x1042 OP_EMM_DETACH_REQ>
    signalHeader  struct       T_MsgHeader  
</0x1042 OP_EMM_DETACH_REQ>


<0x1049 OP_EMM_DETACH_IND>
    signalHeader  struct       T_MsgHeader  
</0x1049 OP_EMM_DETACH_IND>


<0x1048 OP_EMM_ATTACH_IND>
    signalHeader  struct       T_MsgHeader  
</0x1048 OP_EMM_ATTACH_IND>


<0x1047 OP_EMM_TAU_IND>
    signalHeader  struct       T_MsgHeader  
</0x1047 OP_EMM_TAU_IND>


<0x1046 OP_EMM_SERV_REJ_IND>
    signalHeader  struct       T_MsgHeader  
</0x1046 OP_EMM_SERV_REJ_IND>


<sub T_EMM_LOOP_TEST_IND>
    command                      u8     u8     command                      |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMM_LOOP_TEST_IND>


<0xffff OP_EMM_LOOP_TEST_IND>
    signalHeader       struct               T_MsgHeader          
    EMM_LOOP_TEST_IND  struct               T_EMM_LOOP_TEST_IND  
</0xffff OP_EMM_LOOP_TEST_IND>


<sub T_EMM_LOOP_TEST_REQ>
    command  u8  u8  command  |input;|
    cause    u8  u8  cause    |input;|
</sub T_EMM_LOOP_TEST_REQ>


<0xffff OP_EMM_LOOP_TEST_REQ>
    signalHeader       struct               T_MsgHeader          
    EMM_LOOP_TEST_REQ  struct               T_EMM_LOOP_TEST_REQ  
</0xffff OP_EMM_LOOP_TEST_REQ>


<sub T_EMM_STATUS_REQ>
    status    u8  u8  status    |input;|
    iratType  u8  u8  iratType  |input;|
</sub T_EMM_STATUS_REQ>


<0x1043 OP_EMM_STATUS_REQ>
    signalHeader    struct            T_MsgHeader       
    EMM_STATUS_REQ  struct            T_EMM_STATUS_REQ  
</0x1043 OP_EMM_STATUS_REQ>


<sub T_EMM_COMBINED_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_COMBINED_IND>


<0x1044 OP_EMM_COMBINED_IND>
    signalHeader      struct              T_MsgHeader         
    EMM_COMBINED_IND  struct              T_EMM_COMBINED_IND  
</0x1044 OP_EMM_COMBINED_IND>


<sub T_EMM_AUTH_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_AUTH_IND>


<0x1045 OP_EMM_AUTH_IND>
    signalHeader  struct          T_MsgHeader     
    EMM_AUTH_IND  struct          T_EMM_AUTH_IND  
</0x1045 OP_EMM_AUTH_IND>


<0x104a OP_EMM_GUTI_IND>
    signalHeader  struct       T_MsgHeader  
</0x104a OP_EMM_GUTI_IND>


<sub T_EMM_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMM_STATUS_IND>


<0x104c OP_EMM_STATUS_IND>
    signalHeader    struct            T_MsgHeader       
    EMM_STATUS_IND  struct            T_EMM_STATUS_IND  
</0x104c OP_EMM_STATUS_IND>


<0x104d OP_EMM_KENB_IND>
    signalHeader  struct       T_MsgHeader  
</0x104d OP_EMM_KENB_IND>


<sub T_EMM_BAR_ALLEVIATE_IND>
    barAlleviateType  u8  u8  barAlleviateType  |input;|
</sub T_EMM_BAR_ALLEVIATE_IND>


<0x104e OP_EMM_BAR_ALLEVIATE_IND>
    signalHeader           struct                   T_MsgHeader              
    EMM_BAR_ALLEVIATE_IND  struct                   T_EMM_BAR_ALLEVIATE_IND  
</0x104e OP_EMM_BAR_ALLEVIATE_IND>


<0x104f OP_EMM_SET_STATE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x104f OP_EMM_SET_STATE_REQ>


<sub T_EMMRABM_REESTABLISH_REQ>
    dataStatus     u16  u16  dataStatus     |input;|
    exceptionData  u8   u8   exceptionData  |input;|
</sub T_EMMRABM_REESTABLISH_REQ>


<0x1062 OP_EMMRABM_REESTABLISH_REQ>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_REESTABLISH_REQ  struct                     T_EMMRABM_REESTABLISH_REQ  
</0x1062 OP_EMMRABM_REESTABLISH_REQ>


<0x1061 OP_EMMRABM_REESTABLISH_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1061 OP_EMMRABM_REESTABLISH_CNF>


<sub T_EMMRABM_REESTABLISH_ERR>
    cause  u8  u8  cause  |input;|
</sub T_EMMRABM_REESTABLISH_ERR>


<0x1063 OP_EMMRABM_REESTABLISH_ERR>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_REESTABLISH_ERR  struct                     T_EMMRABM_REESTABLISH_ERR  
</0x1063 OP_EMMRABM_REESTABLISH_ERR>


<sub T_EMMRABM_STATUS_IND>
    statusInd  u8  u8  statusInd  |input;|
</sub T_EMMRABM_STATUS_IND>


<0x1064 OP_EMMRABM_STATUS_IND>
    signalHeader        struct                T_MsgHeader           
    EMMRABM_STATUS_IND  struct                T_EMMRABM_STATUS_IND  
</0x1064 OP_EMMRABM_STATUS_IND>


<sub T_EMMRABM_HCCP_STATUS_IND>
    hccpBitmap  u16  u16  hccpBitmap  |input;|
    reset       u8   u8   reset       |input;|
</sub T_EMMRABM_HCCP_STATUS_IND>


<0x1067 OP_EMMRABM_HCCP_STATUS_IND>
    signalHeader             struct                     T_MsgHeader                
    EMMRABM_HCCP_STATUS_IND  struct                     T_EMMRABM_HCCP_STATUS_IND  
</0x1067 OP_EMMRABM_HCCP_STATUS_IND>


<sub T_RABMESM_ACTIVATE_IND>
    ebi         u8   u8   ebi         |input;|
    cpOnlyInd   u8   u8   cpOnlyInd   |input;|
    linkedEbi   u8   u8   linkedEbi   |input;|
    pdnType     u8   u8   pdnType     |input;|
    hccpEnable  u8   u8   hccpEnable  |input;|
    profile     u8   u8   profile     |input;|
    maxCid      u16  u16  maxCid      |input;|
</sub T_RABMESM_ACTIVATE_IND>


<0x1081 OP_RABMESM_ACTIVATE_IND>
    signalHeader          struct                  T_MsgHeader             
    RABMESM_ACTIVATE_IND  struct                  T_RABMESM_ACTIVATE_IND  
</0x1081 OP_RABMESM_ACTIVATE_IND>


<sub T_RABMESM_IR_ACTIVATE_IND>
    ebi        u8  u8  ebi        |input;|
    linkedEbi  u8  u8  linkedEbi  |input;|
    pdnType    u8  u8  pdnType    |input;|
</sub T_RABMESM_IR_ACTIVATE_IND>


<0x108a OP_RABMESM_IR_ACTIVATE_IND>
    signalHeader             struct                     T_MsgHeader                
    RABMESM_IR_ACTIVATE_IND  struct                     T_RABMESM_IR_ACTIVATE_IND  
</0x108a OP_RABMESM_IR_ACTIVATE_IND>


<sub T_RABMESM_ACTIVATE_RSP>
    ebi    u8  u8  ebi    |input;|
    cause  u8  u8  cause  |input;|
</sub T_RABMESM_ACTIVATE_RSP>


<0x1082 OP_RABMESM_ACTIVATE_RSP>
    signalHeader          struct                  T_MsgHeader             
    RABMESM_ACTIVATE_RSP  struct                  T_RABMESM_ACTIVATE_RSP  
</0x1082 OP_RABMESM_ACTIVATE_RSP>


<sub T_RABMESM_DEACTIVATE_IND>
    ebi  u8  u8  ebi  |input;|
</sub T_RABMESM_DEACTIVATE_IND>


<0x1083 OP_RABMESM_DEACTIVATE_IND>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_IND  struct                    T_RABMESM_DEACTIVATE_IND  
</0x1083 OP_RABMESM_DEACTIVATE_IND>


<sub T_RABMESM_DEACTIVATE_REQ>
    ebi  u8  u8  ebi  |input;|
</sub T_RABMESM_DEACTIVATE_REQ>


<0x1085 OP_RABMESM_DEACTIVATE_REQ>
    signalHeader            struct                    T_MsgHeader               
    RABMESM_DEACTIVATE_REQ  struct                    T_RABMESM_DEACTIVATE_REQ  
</0x1085 OP_RABMESM_DEACTIVATE_REQ>


<sub T_RABMESM_DATA_REQ>
    ebi                    u8     u8     ebi                    |input;|
    RelAssistInd           u8     u8     RelAssistInd           |input;|
    exceptionData          u8     u8     exceptionData          |input;|
    length                 u16    u16    length                 |input;|
    data[MAX_NAS_MSG_LEN]  array  u8     data                   |multiedit;|
</sub T_RABMESM_DATA_REQ>


<0x1087 OP_RABMESM_DATA_REQ>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_REQ  struct              T_RABMESM_DATA_REQ  
</0x1087 OP_RABMESM_DATA_REQ>


<sub T_RABMESM_DATA_CNF>
    ebi     u8  u8  ebi     |input;|
    result  u8  u8  result  |input;|
</sub T_RABMESM_DATA_CNF>


<0x1089 OP_RABMESM_DATA_CNF>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_CNF  struct              T_RABMESM_DATA_CNF  
</0x1089 OP_RABMESM_DATA_CNF>


<sub T_RABMESM_DATA_IND>
    ebi                    u8     u8     ebi                    |input;|
    dummy                  u8     u8     dummy                  |input;|
    length                 u16    u16    length                 |input;|
    data[MAX_NAS_MSG_LEN]  array  u8     data                   |multiedit;|
</sub T_RABMESM_DATA_IND>


<0x1088 OP_RABMESM_DATA_IND>
    signalHeader      struct              T_MsgHeader         
    RABMESM_DATA_IND  struct              T_RABMESM_DATA_IND  
</0x1088 OP_RABMESM_DATA_IND>


<sub T_RABMESM_PCO_IND>
    ebi                   u8     u8     ebi                   |input;|
    linkedEbi             u8     u8     linkedEbi             |input;|
    pcoId                 u16    u16    pcoId                 |input;|
    length                u16    u16    length                |input;|
    pco[MAX_NAS_MSG_LEN]  array  u8     pco                   |multiedit;|
</sub T_RABMESM_PCO_IND>


<0x108b OP_RABMESM_PCO_IND>
    signalHeader     struct             T_MsgHeader        
    RABMESM_PCO_IND  struct             T_RABMESM_PCO_IND  
</0x108b OP_RABMESM_PCO_IND>


<sub T_EMMAS_ESTABLISH_REQ>
    establishCause                               u8     u8     establishCause                               |input;|
    callType                                     u8     u8     callType                                     |input;|
    registFlag                                   u8     u8     registFlag                                   |input;|
    nasMsgSn                                     u8     u8     nasMsgSn                                     |input;|
    eabFlag                                      u8     u8     eabFlag                                      |input;|
    campInd                                      u8     u8     campInd                                      |input;|
    gummeidType                                  u8     u8     gummeidType                                  |input;|
    resumeRrcConnFlag                            u8     u8     resumeRrcConnFlag                            |input;|
    CIoTProcInd                                  u16    u16    CIoTProcInd                                  |input;|
    length                                       u16    u16    length                                       |input;|
    resumeFallbackedlength                       u16    u16    resumeFallbackedlength                       |input;|
    nasMessage[MAX_NAS_MSG_LEN]                  array  u8     nasMessage                                   |multiedit;|
    nasMessageResumeFallbacked[MAX_NAS_MSG_LEN]  array  u8     nasMessageResumeFallbacked                   |multiedit;|
</sub T_EMMAS_ESTABLISH_REQ>


<sub T_EMMAS_ESTABLISH_CNF>
    resumeFallbackedFlag  u8  u8  resumeFallbackedFlag  |input;|
</sub T_EMMAS_ESTABLISH_CNF>


<sub T_EMMAS_RELEASE_REQ>
    cause  u8  u8  cause  |input;|
</sub T_EMMAS_RELEASE_REQ>


<sub T_ERR_CE_MODE_IND>
    ceMode  u8  u8  ceMode  |input;|
</sub T_ERR_CE_MODE_IND>


<sub T_EMMAS_RELEASE_IND>
    releaseCause      u8   u8   releaseCause      |input;|
    suspendFlag       u8   u8   suspendFlag       |input;|
    extendedWaitTime  u16  u16  extendedWaitTime  |input;|
</sub T_EMMAS_RELEASE_IND>


<sub T_EMMAS_PAGE_IND>
    ueIdType     u8  u8  ueIdType     |input;|
    pagingCause  u8  u8  pagingCause  |input;|
</sub T_EMMAS_PAGE_IND>


<sub T_EMMAS_SYNC_IND>
    syncCause  u8  u8  syncCause  |input;|
</sub T_EMMAS_SYNC_IND>


<sub T_EMMAS_DATA_REQ>
    length                       u16    u16    length                       |input;|
    dummy                        u8     u8     dummy                        |input;|
    nasMsgSn                     u8     u8     nasMsgSn                     |input;|
    nasMessage[MAX_NAS_MSG_LEN]  array  u8     nasMessage                   |multiedit;|
</sub T_EMMAS_DATA_REQ>


<sub T_EMMAS_DATA_IND>
    length         u16    u16    length         |input;|
    dummy          u16    u16    dummy          |input;|
    nasMessage[0]  array  u8     nasMessage     |multiedit;|
</sub T_EMMAS_DATA_IND>


<sub T_EMMAS_DATA_CNF>
    stateFlag  u8  u8  stateFlag  |input;|
    cnfNum     u8  u8  cnfNum     |input;|
    nasMsgSn   u8  u8  nasMsgSn   |input;|
</sub T_EMMAS_DATA_CNF>


<0x2072 OP_ERR_CE_MODE_IND>
    signalHeader     struct             T_MsgHeader        
    ERR_CE_MODE_IND  struct             T_ERR_CE_MODE_IND  
</0x2072 OP_ERR_CE_MODE_IND>


<0x2021 OP_EMMAS_ESTABLISH_REQ>
    signalHeader         struct                 T_MsgHeader            
    EMMAS_ESTABLISH_REQ  struct                 T_EMMAS_ESTABLISH_REQ  
</0x2021 OP_EMMAS_ESTABLISH_REQ>


<0x2036 OP_EMMAS_ESTABLISH_CNF>
    signalHeader         struct                 T_MsgHeader            
    EMMAS_ESTABLISH_CNF  struct                 T_EMMAS_ESTABLISH_CNF  
</0x2036 OP_EMMAS_ESTABLISH_CNF>


<0x2022 OP_EMMAS_RELEASE_REQ>
    signalHeader       struct               T_MsgHeader          
    EMMAS_RELEASE_REQ  struct               T_EMMAS_RELEASE_REQ  
</0x2022 OP_EMMAS_RELEASE_REQ>


<0x2031 OP_EMMAS_RELEASE_IND>
    signalHeader       struct               T_MsgHeader          
    EMMAS_RELEASE_IND  struct               T_EMMAS_RELEASE_IND  
</0x2031 OP_EMMAS_RELEASE_IND>


<0x2035 OP_EMMAS_PAGE_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_PAGE_IND  struct            T_EMMAS_PAGE_IND  
</0x2035 OP_EMMAS_PAGE_IND>


<0x2032 OP_EMMAS_SYNC_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_SYNC_IND  struct            T_EMMAS_SYNC_IND  
</0x2032 OP_EMMAS_SYNC_IND>


<0x2023 OP_EMMAS_DATA_REQ>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_REQ  struct            T_EMMAS_DATA_REQ  
</0x2023 OP_EMMAS_DATA_REQ>


<0x2033 OP_EMMAS_DATA_IND>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_IND  struct            T_EMMAS_DATA_IND  
</0x2033 OP_EMMAS_DATA_IND>


<0x2034 OP_EMMAS_DATA_CNF>
    signalHeader    struct            T_MsgHeader       
    EMMAS_DATA_CNF  struct            T_EMMAS_DATA_CNF  
</0x2034 OP_EMMAS_DATA_CNF>


<sub T_EMMAS_PS_SIGNALLING_START_REQ>
    type  u8  u8  type  |input;|
</sub T_EMMAS_PS_SIGNALLING_START_REQ>


<0x2024 OP_EMMAS_PS_SIGNALLING_START_REQ>
    signalHeader                   struct                           T_MsgHeader                      
    EMMAS_PS_SIGNALLING_START_REQ  struct                           T_EMMAS_PS_SIGNALLING_START_REQ  
</0x2024 OP_EMMAS_PS_SIGNALLING_START_REQ>


<sub T_EMMAS_PS_SIGNALLING_END_REQ>
    LocalRel  u8  u8  LocalRel  |input;|
</sub T_EMMAS_PS_SIGNALLING_END_REQ>


<0x2025 OP_EMMAS_PS_SIGNALLING_END_REQ>
    signalHeader                 struct                         T_MsgHeader                    
    EMMAS_PS_SIGNALLING_END_REQ  struct                         T_EMMAS_PS_SIGNALLING_END_REQ  
</0x2025 OP_EMMAS_PS_SIGNALLING_END_REQ>


<sub T_EMMAS_STATUS_IND>
    status  u8  u8  status  |input;|
</sub T_EMMAS_STATUS_IND>


<0x2037 OP_EMMAS_STATUS_IND>
    signalHeader      struct              T_MsgHeader         
    EMMAS_STATUS_IND  struct              T_EMMAS_STATUS_IND  
</0x2037 OP_EMMAS_STATUS_IND>


<0xffff OP_EMMAS_CP_REESTAB_REQ>
</0xffff OP_EMMAS_CP_REESTAB_REQ>


<0xffff OP_EMMAS_CP_REESTAB_CNF>
</0xffff OP_EMMAS_CP_REESTAB_CNF>


<sub T_EMMAS_VOLTE_HANDSHAKE_REQ>
    handShakeStart  u8  u8  handShakeStart  |input;|
</sub T_EMMAS_VOLTE_HANDSHAKE_REQ>


<sub T_EMMAS_VOLTE_HANDSHAKE_CNF>
    handShakeResult  u8  u8  handShakeResult  |input;|
</sub T_EMMAS_VOLTE_HANDSHAKE_CNF>


<0x2026 OP_EMMAS_VOLTE_HANDSHAKE_REQ>
    signalHeader               struct                       T_MsgHeader                  
    EMMAS_VOLTE_HANDSHAKE_REQ  struct                       T_EMMAS_VOLTE_HANDSHAKE_REQ  
</0x2026 OP_EMMAS_VOLTE_HANDSHAKE_REQ>


<0x2038 OP_EMMAS_VOLTE_HANDSHAKE_CNF>
    signalHeader               struct                       T_MsgHeader                  
    EMMAS_VOLTE_HANDSHAKE_CNF  struct                       T_EMMAS_VOLTE_HANDSHAKE_CNF  
</0x2038 OP_EMMAS_VOLTE_HANDSHAKE_CNF>


<sub T_EPossPlmn>
    cellInfo                         struct         T_CellDescLte  
    tac[2]                           array          u8             tac                              |multiedit;|
    rsrpValue                        s16            s16            rsrpValue                        |input;|
    rsrqValue                        s16            s16            rsrqValue                        |input;|
    rssiValue                        s16            s16            rssiValue                        |input;|
    reserved[3]                      array          u8             reserved                         |multiedit;|
    plmnNum                          u8             u8             plmnNum                          |input;|
    possiblePlmn[MAX_CELL_PLMN_NUM]  array          T_Plmn         possiblePlmn                     |multiedit;|
</sub T_EPossPlmn>


<sub T_ERR_ACT_REQ>
    imsi                                      struct         T_Imsi         
    plmnSelected                              struct         T_Plmn         
    equivalentPlmnNum                         u8             u8             equivalentPlmnNum                         |input;|
    nFreqNum                                  u8             u8             nFreqNum                                  |input;|
    reserved                                  u16            u16            reserved                                  |input;|
    equivalentPlmn[MAX_EQU_PLMNS_NUM]         array          T_Plmn         equivalentPlmn                            |multiedit;|
    neighbourFreq[MAX_FREQ_NUM]               array          T_CellDescLte  neighbourFreq                             |multiedit;|
    accessControlClass[MAX_UE_ACC_CLASS_LEN]  array          u8             accessControlClass                        |multiedit;|
    actType                                   u8             u8             actType                                   |input;|
</sub T_ERR_ACT_REQ>


<sub T_ERR_ACT_IND>
    tac[2]                           array          u8             tac                              |multiedit;|
    servCellPlmnNum                  u8             u8             servCellPlmnNum                  |input;|
    reserved1                        u8             u8             reserved1                        |input;|
    servCellPlmn[MAX_CELL_PLMN_NUM]  array          T_Plmn         servCellPlmn                     |multiedit;|
    plmn                             struct         T_Plmn         
    cellIdentity[4]                  array          u8             cellIdentity                     |multiedit;|
    servAttachWithoutPDN             u8             u8             servAttachWithoutPDN             |input;|
    upCIoTEPSOptimisation            u8             u8             upCIoTEPSOptimisation            |input;|
    cpCIoTEPSOptimisation            u8             u8             cpCIoTEPSOptimisation            |input;|
    neighbouringFreqNum              u8             u8             neighbouringFreqNum              |input;|
    neighbourFreq[MAX_FREQ_NUM]      array          T_CellDescLte  neighbourFreq                    |multiedit;|
    cellNum                          u8             u8             cellNum                          |input;|
    reserved2[3]                     array          u8             reserved2                        |multiedit;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array          T_EPossPlmn    cellInfo                         |multiedit;|
    bHighBand                        u8             u8             bHighBand                        |input;|
    gsmFreqNum                       u8             u8             gsmFreqNum                       |input;|
    reserved3                        u16            u16            reserved3                        |input;|
    gsmFreqInfo[MAX_GSM_FREQ_NUM]    array          u16            gsmFreqInfo                      |multiedit;|
    mmtelSsac                        struct         T_MmtelSsac    
    imsEmcSupport                    u8             u8             imsEmcSupport                    |input;|
</sub T_ERR_ACT_IND>


<sub T_ERR_ACT_ERR>
    cellNum                          u8           u8           cellNum                          |input;|
    reserved[3]                      array        u8           reserved                         |multiedit;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array        T_EPossPlmn  cellInfo                         |multiedit;|
</sub T_ERR_ACT_ERR>


<0x2063 OP_ERR_ACT_ERR>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_ERR   struct         T_ERR_ACT_ERR  
</0x2063 OP_ERR_ACT_ERR>


<sub T_ERR_DEACT_REQ>
    deactCause  u8  u8  deactCause  |input;|
</sub T_ERR_DEACT_REQ>


<0x2044 OP_ERR_DEACT_REQ>
    signalHeader   struct           T_MsgHeader      
    ERR_DEACT_REQ  struct           T_ERR_DEACT_REQ  
</0x2044 OP_ERR_DEACT_REQ>


<0x2045 OP_ERR_ABORT_PLMN_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2045 OP_ERR_ABORT_PLMN_REQ>


<sub T_ERR_GET_PLMN_REQ>
    activeMode  u8  u8  activeMode  |input;|
    hplmnFlag   u8  u8  hplmnFlag   |input;|
</sub T_ERR_GET_PLMN_REQ>


<sub T_ERR_GET_PLMN_CNF>
    cellNum                          u8           u8           cellNum                          |input;|
    reserved[3]                      array        u8           reserved                         |multiedit;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array        T_EPossPlmn  cellInfo                         |multiedit;|
</sub T_ERR_GET_PLMN_CNF>


<sub T_ERR_NEW_PARAM_REQ>
    equivalentPlmnNum                                      u8                                                     u8                                                     equivalentPlmnNum                                      |input;|
    ehplmnNum                                              u8                                                     u8                                                     ehplmnNum                                              |input;|
    k                                                      u8                                                     u8                                                     k                                                      |input;|
    forbiddenTaiNum                                        u8                                                     u8                                                     forbiddenTaiNum                                        |input;|
    stmsiValid                                             u8                                                     u8                                                     stmsiValid                                             |input;|
    lteKeyValid                                            u8                                                     u8                                                     lteKeyValid                                            |input;|
    regTai[MAX_TAI_LEN]                                    array                                                  u8                                                     regTai                                                 |multiedit;|
    mmeid[MAX_MME_ID_LEN]                                  array                                                  u8                                                     mmeid                                                  |multiedit;|
    stmsi[MAX_STMSI_LEN]                                   array                                                  u8                                                     stmsi                                                  |multiedit;|
    forbiddenTaiForNationalRoam[MAX_FORBIDDEN_TAI_NUM]     array                                                  T_forbiddenTaiForNationalRoam                          forbiddenTaiForNationalRoam                            |multiedit;|
    reserved[2]                                            array                                                  u8                                                     reserved                                               |multiedit;|
    selectedPlmn                                           struct                                                 T_Plmn                                                 
    simHplmn                                               struct                                                 T_Plmn                                                 
    ehplmnList[MAX_EQU_PLMNS_NUM]                          array                                                  T_Plmn                                                 ehplmnList                                             |multiedit;|
    equivalentPlmn[MAX_EQU_PLMNS_NUM]                      array                                                  T_Plmn                                                 equivalentPlmn                                         |multiedit;|
    kEnb[KEY_ENB_LEN]                                      array                                                  u8                                                     kEnb                                                   |multiedit;|
    kAsme[KEY_ASME_LEN]                                    array                                                  u8                                                     kAsme                                                  |multiedit;|
</sub T_ERR_NEW_PARAM_REQ>


<sub T_forbiddenTaiForNationalRoam
    forbiddenTaiForNationalRoam[5]                         array                                                  u8                                                     forbiddenTaiForNationalRoam                            |multiedit;|
</sub T_forbiddenTaiForNationalRoam


<sub T_ERR_SET_STATE_REQ>
    stateFlag     u8      u8      stateFlag     |input;|
    reserved[3]   array   u8      reserved      |multiedit;|
    plmnSelected  struct  T_Plmn  
</sub T_ERR_SET_STATE_REQ>


<0x2041 OP_ERR_ACT_REQ>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_REQ   struct         T_ERR_ACT_REQ  
</0x2041 OP_ERR_ACT_REQ>


<0x2062 OP_ERR_ACT_IND>
    signalHeader  struct         T_MsgHeader    
    ERR_ACT_IND   struct         T_ERR_ACT_IND  
</0x2062 OP_ERR_ACT_IND>


<0x2042 OP_ERR_GET_PLMN_REQ>
    signalHeader      struct              T_MsgHeader         
    ERR_GET_PLMN_REQ  struct              T_ERR_GET_PLMN_REQ  
</0x2042 OP_ERR_GET_PLMN_REQ>


<0x2064 OP_ERR_GET_PLMN_CNF>
    signalHeader      struct              T_MsgHeader         
    ERR_GET_PLMN_CNF  struct              T_ERR_GET_PLMN_CNF  
</0x2064 OP_ERR_GET_PLMN_CNF>


<0x2043 OP_ERR_NEW_PARAM_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_NEW_PARAM_REQ  struct               T_ERR_NEW_PARAM_REQ  
</0x2043 OP_ERR_NEW_PARAM_REQ>


<0xffff OP_ERR_SET_STATE_REQ>
    signalHeader       struct               T_MsgHeader          
    ERR_SET_STATE_REQ  struct               T_ERR_SET_STATE_REQ  
</0xffff OP_ERR_SET_STATE_REQ>


<0xffff OP_ERR_LOOP_TEST_REQ>
</0xffff OP_ERR_LOOP_TEST_REQ>


<0xffff OP_ERR_LOOP_TEST_CNF>
</0xffff OP_ERR_LOOP_TEST_CNF>


<sub T_ERR_BAR_ALLEVIATE_IND>
    barAlleviateType  u8  u8  barAlleviateType  |input;|
</sub T_ERR_BAR_ALLEVIATE_IND>


<0x2061 OP_ERR_BAR_ALLEVIATE_IND>
    signalHeader           struct                   T_MsgHeader              
    ERR_BAR_ALLEVIATE_IND  struct                   T_ERR_BAR_ALLEVIATE_IND  
</0x2061 OP_ERR_BAR_ALLEVIATE_IND>


<0x2067 OP_ERR_GET_PLMN_REJ>
    signalHeader  struct       T_MsgHeader  
</0x2067 OP_ERR_GET_PLMN_REJ>


<0x2066 OP_ERR_ABORT_PLMN_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2066 OP_ERR_ABORT_PLMN_CNF>


<0x2068 OP_ERR_DEACT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2068 OP_ERR_DEACT_CNF>


<sub T_ERR_EDRX_IND>
    edrxSleepTime  u32  u32  edrxSleepTime  |input;|
</sub T_ERR_EDRX_IND>


<0x2065 OP_ERR_EDRX_IND>
    signalHeader  struct          T_MsgHeader     
    ERR_EDRX_IND  struct          T_ERR_EDRX_IND  
</0x2065 OP_ERR_EDRX_IND>


<sub T_ERR_EDRX_PARAM_REQ>
    eDrxStatus   u8     u8     eDrxStatus   |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
    edrxPeriod   u32    u32    edrxPeriod   |input;|
    ptw          u32    u32    ptw          |input;|
</sub T_ERR_EDRX_PARAM_REQ>


<0x2046 OP_ERR_EDRX_PARAM_REQ>
    signalHeader        struct                T_MsgHeader           
    ERR_EDRX_PARAM_REQ  struct                T_ERR_EDRX_PARAM_REQ  
</0x2046 OP_ERR_EDRX_PARAM_REQ>


<sub T_ERR_PLMN_LIST_IND>
    cellNum                          u8           u8           cellNum                          |input;|
    reserved[3]                      array        u8           reserved                         |multiedit;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]  array        T_EPossPlmn  cellInfo                         |multiedit;|
</sub T_ERR_PLMN_LIST_IND>


<0x2073 OP_ERR_PLMN_LIST_IND>
    signalHeader       struct               T_MsgHeader          
    ERR_PLMN_LIST_IND  struct               T_ERR_PLMN_LIST_IND  
</0x2073 OP_ERR_PLMN_LIST_IND>


<sub T_ERR_IRAT_INACTIVE_REQ>
    imsi                                      struct         T_Imsi         
    plmnSelected                              struct         T_Plmn         
    equivalentPlmnNum                         u8             u8             equivalentPlmnNum                         |input;|
    reserved1[3]                              array          u8             reserved1                                 |multiedit;|
    equivalentPlmn[MAX_EQU_PLMNS_NUM]         array          T_Plmn         equivalentPlmn                            |multiedit;|
    nCellNum                                  u8             u8             nCellNum                                  |input;|
    reserved2[3]                              array          u8             reserved2                                 |multiedit;|
    neighbourCell[MAX_BA_LIST_NUM_LTE]        array          T_CellDescLte  neighbourCell                             |multiedit;|
    accessControlClass[MAX_UE_ACC_CLASS_LEN]  array          u8             accessControlClass                        |multiedit;|
</sub T_ERR_IRAT_INACTIVE_REQ>


<0x2048 OP_ERR_IRAT_INACTIVE_REQ>
    signalHeader           struct                   T_MsgHeader              
    ERR_IRAT_INACTIVE_REQ  struct                   T_ERR_IRAT_INACTIVE_REQ  
</0x2048 OP_ERR_IRAT_INACTIVE_REQ>


<0x2069 OP_ERR_IRAT_INACTIVE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2069 OP_ERR_IRAT_INACTIVE_CNF>


<sub T_ERR_IRAT_CLASSMARK_REQ>
    Rat                                 u8     u8     Rat                                 |input;|
    geranBandSupported                  u8     u8     geranBandSupported                  |input;|
    gsmLockFreqNum                      u8     u8     gsmLockFreqNum                      |input;|
    gsmLockFreq[MAX_GSM_LOCK_FREQ_NUM]  array  u16    gsmLockFreq                         |multiedit;|
</sub T_ERR_IRAT_CLASSMARK_REQ>


<0x2047 OP_ERR_IRAT_CLASSMARK_REQ>
    signalHeader            struct                    T_MsgHeader               
    ERR_IRAT_CLASSMARK_REQ  struct                    T_ERR_IRAT_CLASSMARK_REQ  
</0x2047 OP_ERR_IRAT_CLASSMARK_REQ>


<sub T_ERR_IRAT_CCO_START_IND>
    csfbInd  u8  u8  csfbInd  |input;|
</sub T_ERR_IRAT_CCO_START_IND>


<0x206d OP_ERR_IRAT_CCO_START_IND>
    signalHeader            struct                    T_MsgHeader               
    ERR_IRAT_CCO_START_IND  struct                    T_ERR_IRAT_CCO_START_IND  
</0x206d OP_ERR_IRAT_CCO_START_IND>


<sub T_ERR_IRAT_CCO_FAIL_IND>
    csfbInd  u8  u8  csfbInd  |input;|
</sub T_ERR_IRAT_CCO_FAIL_IND>


<0x206e OP_ERR_IRAT_CCO_FAIL_IND>
    signalHeader           struct                   T_MsgHeader              
    ERR_IRAT_CCO_FAIL_IND  struct                   T_ERR_IRAT_CCO_FAIL_IND  
</0x206e OP_ERR_IRAT_CCO_FAIL_IND>


<0x206b OP_ERR_IRAT_RESEL_START_IND>
    signalHeader  struct       T_MsgHeader  
</0x206b OP_ERR_IRAT_RESEL_START_IND>


<0x206c OP_ERR_IRAT_RESEL_FAIL_IND>
    signalHeader  struct       T_MsgHeader  
</0x206c OP_ERR_IRAT_RESEL_FAIL_IND>


<0x206a OP_ERR_IRAT_RAT_CHN_IND>
    signalHeader  struct       T_MsgHeader  
</0x206a OP_ERR_IRAT_RAT_CHN_IND>


<sub T_ERR_HO_SEC_IND>
    nonceMme[4]  array  u8     nonceMme     |multiedit;|
    secAlg       u8     u8     secAlg       |input;|
    eKsi         u8     u8     eKsi         |input;|
</sub T_ERR_HO_SEC_IND>


<0x2071 OP_ERR_HO_SEC_IND>
    signalHeader    struct            T_MsgHeader       
    ERR_HO_SEC_IND  struct            T_ERR_HO_SEC_IND  
</0x2071 OP_ERR_HO_SEC_IND>


<sub T_ERR_HO_SEC_RSP>
    kenb[KEY_ENB_LEN]    array  u8     kenb                 |multiedit;|
    kasme[KEY_ASME_LEN]  array  u8     kasme                |multiedit;|
</sub T_ERR_HO_SEC_RSP>


<0x2049 OP_ERR_HO_SEC_RSP>
    signalHeader    struct            T_MsgHeader       
    ERR_HO_SEC_RSP  struct            T_ERR_HO_SEC_RSP  
</0x2049 OP_ERR_HO_SEC_RSP>


<sub T_ERR_IRAT_HO_START_IND>
    dlCounter    u8     u8     dlCounter    |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_ERR_IRAT_HO_START_IND>


<0x206f OP_ERR_IRAT_HO_START_IND>
    signalHeader           struct                   T_MsgHeader              
    ERR_IRAT_HO_START_IND  struct                   T_ERR_IRAT_HO_START_IND  
</0x206f OP_ERR_IRAT_HO_START_IND>


<0x2070 OP_ERR_IRAT_HO_FAIL_IND>
    signalHeader  struct       T_MsgHeader  
</0x2070 OP_ERR_IRAT_HO_FAIL_IND>


<0x204a OP_ERR_POWER_ON_REQ>
    signalHeader  struct       T_MsgHeader  
</0x204a OP_ERR_POWER_ON_REQ>


<sub T_ERABMAS_ESTABLISH_IND>
    rabNum                u8              u8              rabNum                |input;|
    reserved[3]           array           u8              reserved              |multiedit;|
    rabList[MAX_DRB_NUM]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_ESTABLISH_IND>


<sub T_ERABMAS_ESTABLISH_RSP>
    rabNum                u8              u8              rabNum                |input;|
    reserved[3]           array           u8              reserved              |multiedit;|
    rabList[MAX_DRB_NUM]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_ESTABLISH_RSP>


<sub T_ERABMAS_ESTABLISH_REJ>
    rabNum                u8              u8              rabNum                |input;|
    reserved[3]           array           u8              reserved              |multiedit;|
    rabList[MAX_DRB_NUM]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_ESTABLISH_REJ>


<sub T_ERABMAS_RELEASE_IND>
    rabNum                u8              u8              rabNum                |input;|
    epsRelFlag            u8              u8              epsRelFlag            |input;|
    reserved[2]           array           u8              reserved              |multiedit;|
    rabList[MAX_DRB_NUM]  array           T_RabAndRbInfo  rabList               |multiedit;|
</sub T_ERABMAS_RELEASE_IND>


<sub T_ERABMAS_STATUS_IND>
    cause  u8  u8  cause  |input;|
</sub T_ERABMAS_STATUS_IND>


<0x2001 OP_ERABMAS_ESTABLISH_IND>
    signalHeader           struct                   T_MsgHeader              
    ERABMAS_ESTABLISH_IND  struct                   T_ERABMAS_ESTABLISH_IND  
</0x2001 OP_ERABMAS_ESTABLISH_IND>


<0x2006 OP_ERABMAS_ESTABLISH_RSP>
    signalHeader           struct                   T_MsgHeader              
    ERABMAS_ESTABLISH_RSP  struct                   T_ERABMAS_ESTABLISH_RSP  
</0x2006 OP_ERABMAS_ESTABLISH_RSP>


<0xffff OP_ERABMAS_ESTABLISH_REJ>
    signalHeader           struct                   T_MsgHeader              
    ERABMAS_ESTABLISH_REJ  struct                   T_ERABMAS_ESTABLISH_REJ  
</0xffff OP_ERABMAS_ESTABLISH_REJ>


<0x2002 OP_ERABMAS_RELEASE_IND>
    signalHeader         struct                 T_MsgHeader            
    ERABMAS_RELEASE_IND  struct                 T_ERABMAS_RELEASE_IND  
</0x2002 OP_ERABMAS_RELEASE_IND>


<0x2008 OP_ERABMAS_STATUS_IND>
    signalHeader        struct                T_MsgHeader           
    ERABMAS_STATUS_IND  struct                T_ERABMAS_STATUS_IND  
</0x2008 OP_ERABMAS_STATUS_IND>


<0x2007 OP_ERABMAS_RELEASE_RSP>
    signalHeader  struct       T_MsgHeader  
</0x2007 OP_ERABMAS_RELEASE_RSP>


<sub T_lteBlackCellIdArray_2G>
    blackCellId[MAX_LTE_BLACK_CELL_NUM]  array  u16    blackCellId                          |multiedit;|
</sub T_lteBlackCellIdArray_2G>


<sub T_BlackPcidGroup_2G>
    pcidPatternLength  u8  u8  pcidPatternLength  |input;|
    pcidPattern        u8  u8  pcidPattern        |input;|
    pcidPatternSense   u8  u8  pcidPatternSense   |input;|
    reserved           u8  u8  reserved           |input;|
</sub T_BlackPcidGroup_2G>


<sub T_BlackPcidArray_2G>
    blackPcidGroup[MAX_BLACK_PCID_GROUP_NUM]  array                T_BlackPcidGroup_2G  blackPcidGroup                            |multiedit;|
</sub T_BlackPcidArray_2G>


<sub T_BlackPcidArrayInfo_2G>
    length          u8                   u8                   length          |input;|
    reserved[3]     array                u8                   reserved        |multiedit;|
    blackPcidArray  struct               T_BlackPcidArray_2G  
</sub T_BlackPcidArrayInfo_2G>


<sub T_LteBlackPcIdInfo_2G>
    blackPcidKind       u8                        u8                        blackPcidKind       |input;|
    blackCellNum        u8                        u8                        blackCellNum        |input;|
    reserved            u16                       u16                       reserved            |input;|
    blackCellArray      struct                    T_lteBlackCellIdArray_2G  
    pcidBitmap          u8                        u8                        pcidBitmap          |input;|
    reserved1[3]        array                     u8                        reserved1           |multiedit;|
    blackPcidArrayInfo  struct                    T_BlackPcidArrayInfo_2G   
</sub T_LteBlackPcIdInfo_2G>


<sub T_RedirectCellInfo_2G>
    frequency      u32                    u32                    frequency      |input;|
    targetPcid     u16                    u16                    targetPcid     |input;|
    measBand       u8                     u8                     measBand       |input;|
    reserved       u8                     u8                     reserved       |input;|
    blackPcidInfo  struct                 T_LteBlackPcIdInfo_2G  
</sub T_RedirectCellInfo_2G>


<sub T_RedirectCellArray_2G>
    lteFreqNum                     u8                     u8                     lteFreqNum                     |input;|
    reserved[3]                    array                  u8                     reserved                       |multiedit;|
    lteFreqList[MAX_LTE_FREQ_NUM]  array                  T_RedirectCellInfo_2G  lteFreqList                    |multiedit;|
</sub T_RedirectCellArray_2G>


<sub T_FreqDediPriority_2G>
    frequency    u32    u32    frequency    |input;|
    prior        u8     u8     prior        |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_FreqDediPriority_2G>


<sub T_DediPriorityInfo_2G>
    priArray[MAX_PRI_NUM]  array                  T_FreqDediPriority_2G  priArray               |multiedit;|
</sub T_DediPriorityInfo_2G>


<sub T_DediPriorityList_2G>
    priNum       u8                     u8                     priNum       |input;|
    reserved[3]  array                  u8                     reserved     |multiedit;|
    priInfo      struct                 T_DediPriorityInfo_2G  
</sub T_DediPriorityList_2G>


<sub T_LteCellInfo_2G>
    frequency   u32  u32  frequency   |input;|
    pcID        u16  u16  pcID        |input;|
    cpType      u8   u8   cpType      |input;|
    bandWidth   u8   u8   bandWidth   |input;|
    rsrp        s16  s16  rsrp        |input;|
    reserved    u16  u16  reserved    |input;|
    syncOffset  u32  u32  syncOffset  |input;|
</sub T_LteCellInfo_2G>


<sub T_ErrResReqFreqs_2G>
    frequency      u32                    u32                    frequency      |input;|
    blackPcidInfo  struct                 T_LteBlackPcIdInfo_2G  
</sub T_ErrResReqFreqs_2G>


<sub T_LteCellListArray_2G>
    lteCellInfoList[MAX_RES_LTE_CELL_NUM]  array             T_LteCellInfo_2G  lteCellInfoList                        |multiedit;|
</sub T_LteCellListArray_2G>


<sub T_LteFreqListArray_2G>
    LteFreqInfo[MAX_LTE_FREQ_NUM]  array                T_ErrResReqFreqs_2G  LteFreqInfo                    |multiedit;|
</sub T_LteFreqListArray_2G>


<sub T_ErrReselReq_2G>
    lteCellNum     u8                     u8                     lteCellNum     |input;|
    lteFreqNum     u8                     u8                     lteFreqNum     |input;|
    measuredOrNot  u8                     u8                     measuredOrNot  |input;|
    reserved       u8                     u8                     reserved       |input;|
    lteCellList    struct                 T_LteCellListArray_2G  
    lteFreqList    struct                 T_LteFreqListArray_2G  
    gsmPriArray    struct                 T_DediPriorityList_2G  
    ltePriArray    struct                 T_DediPriorityList_2G  
    priTimerLen    u32                    u32                    priTimerLen    |input;|
</sub T_ErrReselReq_2G>


<sub T_ErrReselRejCause_2G>
    cause        u8     u8     cause        |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_ErrReselRejCause_2G>


<sub T_ErrResRejArray_2G>
    rejectCauseList[MAX_RES_LTE_CELL_NUM]  array                  T_ErrReselRejCause_2G  rejectCauseList                        |multiedit;|
</sub T_ErrResRejArray_2G>


<sub T_ErrResRej_2G>
    lteCellNum        u8                     u8                     lteCellNum        |input;|
    reserved[3]       array                  u8                     reserved          |multiedit;|
    rejectCellsList   struct                 T_LteCellListArray_2G  
    rejectCellsArray  struct                 T_ErrResRejArray_2G    
</sub T_ErrResRej_2G>


<sub T_GSM_TARGET_CELL_2G>
    arfcn         u16  u16  arfcn         |input;|
    bsic          u8   u8   bsic          |input;|
    nccPermitted  u8   u8   nccPermitted  |input;|
</sub T_GSM_TARGET_CELL_2G>


<sub T_GSM_TARGET_CELL_LIST_ARRAY_2G>
    gsmCell[MAX_GSM_CELL_NUM]  array                 T_GSM_TARGET_CELL_2G  gsmCell                    |multiedit;|
</sub T_GSM_TARGET_CELL_LIST_ARRAY_2G>


<sub T_GSM_TARGET_CELL_LIST_2G>
    gsmcellNum    u8                               u8                               gsmcellNum    |input;|
    reserved[3]   array                            u8                               reserved      |multiedit;|
    gsmCellArray  struct                           T_GSM_TARGET_CELL_LIST_ARRAY_2G  
</sub T_GSM_TARGET_CELL_LIST_2G>


<sub T_GsmSystemInfo_2G>
    numOfSi              u8                   u8                   numOfSi              |input;|
    reserved[3]          array                u8                   reserved             |multiedit;|
    lenOfSi[10]          array                u8                   lenOfSi              |multiedit;|
    contentOfSi[10]      array                T_contentOfSi        contentOfSi          |multiedit;|
</sub T_GsmSystemInfo_2G>


<sub T_contentOfSi
    contentOfSi[23]      array                u8                   contentOfSi          |multiedit;|
</sub T_contentOfSi


<sub T_GsmSystemInfoArray_2G>
    sysInfoList[MAX_GSM_CELL_NUM]  array               T_GsmSystemInfo_2G  sysInfoList                    |multiedit;|
</sub T_GsmSystemInfoArray_2G>


<sub T_GSM_REDIRECTION_CELL_INFO_2G>
    cellInfoList  struct                     T_GSM_TARGET_CELL_LIST_2G  
    sysInfoList   struct                     T_GsmSystemInfoArray_2G    
</sub T_GSM_REDIRECTION_CELL_INFO_2G>


<sub T_GSM_REDIRECTION_INFO_2G>
    RedirectedCarrierInfo  struct                          T_GSM_TARGET_CELL_LIST_2G       
    CellInfoGERAN          struct                          T_GSM_REDIRECTION_CELL_INFO_2G  
</sub T_GSM_REDIRECTION_INFO_2G>


<sub T_IR_RR_RESEL_REQ_2G>
    gsmCellList  struct                     T_GSM_TARGET_CELL_LIST_2G  
    rxlev        u8                         u8                         rxlev        |input;|
    cause        u8                         u8                         cause        |input;|
    reserved     u16                        u16                        reserved     |input;|
    ltePriArray  struct                     T_DediPriorityList_2G      
    gsmPriArray  struct                     T_DediPriorityList_2G      
    priTimerLen  u32                        u32                        priTimerLen  |input;|
</sub T_IR_RR_RESEL_REQ_2G>


<sub T_IR_RESEL_FAIL_CAUSE_ARRAY_2G>
    cause[MAX_GSM_CELL_NUM]  array  u8     cause                    |multiedit;|
</sub T_IR_RESEL_FAIL_CAUSE_ARRAY_2G>


<sub T_IR_RR_RESEL_REJ_2G>
    gsmCellNum      u8                               u8                               gsmCellNum      |input;|
    reserved[3]     array                            u8                               reserved        |multiedit;|
    gsmCellArray    struct                           T_GSM_TARGET_CELL_LIST_ARRAY_2G  
    failCauseArray  struct                           T_IR_RESEL_FAIL_CAUSE_ARRAY_2G   
</sub T_IR_RR_RESEL_REJ_2G>


<sub T_IR_RR_CELL_CHANGE_REQ_2G>
    targetGsmCell  struct                T_GSM_TARGET_CELL_2G  
    t304           u32                   u32                   t304           |input;|
    ncMode         u8                    u8                    ncMode         |input;|
    isSiOrPsi      u8                    u8                    isSiOrPsi      |input;|
    reserved       u16                   u16                   reserved       |input;|
    geranSi        struct                T_GsmSystemInfo_2G    
</sub T_IR_RR_CELL_CHANGE_REQ_2G>


<sub T_RR_ERR_CELL_SEARCH_REQ>
    lteRedirectArray  struct                  T_RedirectCellArray_2G  
    gsmDediPri        u8                      u8                      gsmDediPri        |input;|
    reserved[3]       array                   u8                      reserved          |multiedit;|
    ltePriArray       struct                  T_DediPriorityList_2G   
    priTimerLen       u32                     u32                     priTimerLen       |input;|
</sub T_RR_ERR_CELL_SEARCH_REQ>


<0x3012 OP_RR_ERR_CELL_SEARCH_REQ>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_RR_ERR_CELL_SEARCH_REQ  
</0x3012 OP_RR_ERR_CELL_SEARCH_REQ>


<0x3001 OP_ERR_RR_CELL_SEARCH_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3001 OP_ERR_RR_CELL_SEARCH_CNF>


<0x3002 OP_ERR_RR_CELL_SEARCH_REJ>
    signalHeader  struct       T_MsgHeader  
</0x3002 OP_ERR_RR_CELL_SEARCH_REJ>


<sub T_RR_ERR_L1_RSRC_REQ>
    manualPlmnSearch  u8     u8     manualPlmnSearch  |input;|
    reserved[3]       array  u8     reserved          |multiedit;|
</sub T_RR_ERR_L1_RSRC_REQ>


<0x3013 OP_RR_ERR_L1_RSRC_REQ>
    signalHeader  struct                T_MsgHeader           
    body          struct                T_RR_ERR_L1_RSRC_REQ  
</0x3013 OP_RR_ERR_L1_RSRC_REQ>


<0x3003 OP_ERR_RR_L1_RSRC_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3003 OP_ERR_RR_L1_RSRC_CNF>


<0x3004 OP_ERR_RR_L1_RSRC_REJ>
    signalHeader  struct       T_MsgHeader  
</0x3004 OP_ERR_RR_L1_RSRC_REJ>


<0x3014 OP_RR_ERR_L1_RSRC_FREE_IND>
    signalHeader  struct       T_MsgHeader  
</0x3014 OP_RR_ERR_L1_RSRC_FREE_IND>


<sub T_RR_ERR_CELL_RESEL_REQ>
    errResReq  struct            T_ErrReselReq_2G  
</sub T_RR_ERR_CELL_RESEL_REQ>


<0x3015 OP_RR_ERR_CELL_RESEL_REQ>
    signalHeader           struct                   T_MsgHeader              
    RR_ERR_CELL_RESEL_REQ  struct                   T_RR_ERR_CELL_RESEL_REQ  
</0x3015 OP_RR_ERR_CELL_RESEL_REQ>


<sub T_ERR_RR_CELL_RESEL_CNF>
    errResReject  struct          T_ErrResRej_2G  
</sub T_ERR_RR_CELL_RESEL_CNF>


<0x3006 OP_ERR_RR_CELL_RESEL_CNF>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_ERR_RR_CELL_RESEL_CNF  
</0x3006 OP_ERR_RR_CELL_RESEL_CNF>


<sub T_ERR_RR_CELL_RESEL_REJ>
    errResReject  struct          T_ErrResRej_2G  
</sub T_ERR_RR_CELL_RESEL_REJ>


<0x3005 OP_ERR_RR_CELL_RESEL_REJ>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_ERR_RR_CELL_RESEL_REJ  
</0x3005 OP_ERR_RR_CELL_RESEL_REJ>


<sub T_RR_ERR_CELL_CHANGE_REQ>
    targetCell   struct            T_LteCellInfo_2G  
    t3174        u8                u8                t3174        |input;|
    reserved[3]  array             u8                reserved     |multiedit;|
</sub T_RR_ERR_CELL_CHANGE_REQ>


<0x3016 OP_RR_ERR_CELL_CHANGE_REQ>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_RR_ERR_CELL_CHANGE_REQ  
</0x3016 OP_RR_ERR_CELL_CHANGE_REQ>


<0x3007 OP_ERR_RR_CELL_CHANGE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3007 OP_ERR_RR_CELL_CHANGE_CNF>


<sub T_ERR_RR_CELL_CHANGE_REJ>
    cause        u8     u8     cause        |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_ERR_RR_CELL_CHANGE_REJ>


<0x3008 OP_ERR_RR_CELL_CHANGE_REJ>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_ERR_RR_CELL_CHANGE_REJ  
</0x3008 OP_ERR_RR_CELL_CHANGE_REJ>


<0x3017 OP_RR_ERR_SET_INACTIVE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x3017 OP_RR_ERR_SET_INACTIVE_REQ>


<0x3009 OP_ERR_RR_SET_INACTIVE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3009 OP_ERR_RR_SET_INACTIVE_CNF>


<sub T_ERR_RR_CELL_SEARCH_REQ>
    gsmRedirection    struct                     T_GSM_REDIRECTION_INFO_2G  
    ltePriArray       struct                     T_DediPriorityList_2G      
    gsmPriArray       struct                     T_DediPriorityList_2G      
    priTimerLen       u32                        u32                        priTimerLen       |input;|
    csfbBackFlag      u8                         u8                         csfbBackFlag      |input;|
    reserved[3]       array                      u8                         reserved          |multiedit;|
    csfbBackLteArray  struct                     T_RedirectCellArray_2G     
</sub T_ERR_RR_CELL_SEARCH_REQ>


<0x300a OP_ERR_RR_CELL_SEARCH_REQ>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_ERR_RR_CELL_SEARCH_REQ  
</0x300a OP_ERR_RR_CELL_SEARCH_REQ>


<0x3018 OP_RR_ERR_CELL_SEARCH_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3018 OP_RR_ERR_CELL_SEARCH_CNF>


<0x3019 OP_RR_ERR_CELL_SEARCH_REJ>
    signalHeader  struct       T_MsgHeader  
</0x3019 OP_RR_ERR_CELL_SEARCH_REJ>


<sub T_ERR_RR_L1_RSRC_REQ>
    manualPlmnSearch  u8     u8     manualPlmnSearch  |input;|
    reserved[3]       array  u8     reserved          |multiedit;|
</sub T_ERR_RR_L1_RSRC_REQ>


<0x300b OP_ERR_RR_L1_RSRC_REQ>
    signalHeader  struct                T_MsgHeader           
    body          struct                T_ERR_RR_L1_RSRC_REQ  
</0x300b OP_ERR_RR_L1_RSRC_REQ>


<0x301a OP_RR_ERR_L1_RSRC_CNF>
    signalHeader  struct       T_MsgHeader  
</0x301a OP_RR_ERR_L1_RSRC_CNF>


<0x301b OP_RR_ERR_L1_RSRC_REJ>
    signalHeader  struct       T_MsgHeader  
</0x301b OP_RR_ERR_L1_RSRC_REJ>


<0x300c OP_ERR_RR_L1_RSRC_FREE_IND>
    signalHeader  struct       T_MsgHeader  
</0x300c OP_ERR_RR_L1_RSRC_FREE_IND>


<sub T_ERR_RR_CELL_RESEL_REQ>
    rrResReq  struct                T_IR_RR_RESEL_REQ_2G  
</sub T_ERR_RR_CELL_RESEL_REQ>


<0x300d OP_ERR_RR_CELL_RESEL_REQ>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_ERR_RR_CELL_RESEL_REQ  
</0x300d OP_ERR_RR_CELL_RESEL_REQ>


<sub T_RR_ERR_CELL_RESEL_CNF>
    rrResReject  struct                T_IR_RR_RESEL_REJ_2G  
</sub T_RR_ERR_CELL_RESEL_CNF>


<0x301c OP_RR_ERR_CELL_RESEL_CNF>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_RR_ERR_CELL_RESEL_CNF  
</0x301c OP_RR_ERR_CELL_RESEL_CNF>


<sub T_RR_ERR_CELL_RESEL_REJ>
    rrResReject  struct                T_IR_RR_RESEL_REJ_2G  
</sub T_RR_ERR_CELL_RESEL_REJ>


<0x301d OP_RR_ERR_CELL_RESEL_REJ>
    signalHeader  struct                   T_MsgHeader              
    body          struct                   T_RR_ERR_CELL_RESEL_REJ  
</0x301d OP_RR_ERR_CELL_RESEL_REJ>


<sub T_ERR_RR_CELL_CHANGE_REQ>
    rrCellChangeReq   struct                      T_IR_RR_CELL_CHANGE_REQ_2G  
    csfbBackFlag      u8                          u8                          csfbBackFlag      |input;|
    reserved[3]       array                       u8                          reserved          |multiedit;|
    csfbBackLteArray  struct                      T_RedirectCellArray_2G      
</sub T_ERR_RR_CELL_CHANGE_REQ>


<0x300e OP_ERR_RR_CELL_CHANGE_REQ>
    signalHeader  struct                    T_MsgHeader               
    body          struct                    T_ERR_RR_CELL_CHANGE_REQ  
</0x300e OP_ERR_RR_CELL_CHANGE_REQ>


<0x301f OP_RR_ERR_CELL_CHANGE_REJ>
    signalHeader  struct       T_MsgHeader  
</0x301f OP_RR_ERR_CELL_CHANGE_REJ>


<0x301e OP_RR_ERR_CELL_CHANGE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x301e OP_RR_ERR_CELL_CHANGE_CNF>


<0x300f OP_ERR_RR_SET_INACTIVE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x300f OP_ERR_RR_SET_INACTIVE_REQ>


<0x3020 OP_RR_ERR_SET_INACTIVE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3020 OP_RR_ERR_SET_INACTIVE_CNF>


<sub T_L3_MSG_2G>
    lenth                   u16    u16    lenth                   |input;|
    msg[MAX_L3_MSG_2G_LEN]  array  u8     msg                     |multiedit;|
</sub T_L3_MSG_2G>


<sub T_ERR_RR_HO_REQ>
    bandIndicator       u8                      u8                      bandIndicator       |input;|
    fastReturnFlag      u8                      u8                      fastReturnFlag      |input;|
    reserved[2]         array                   u8                      reserved            |multiedit;|
    hoMsgContent        struct                  T_L3_MSG_2G             
    fastReturnLteArray  struct                  T_RedirectCellArray_2G  
</sub T_ERR_RR_HO_REQ>


<0x3010 OP_ERR_RR_HO_REQ>
    signalHeader  struct           T_MsgHeader      
    body          struct           T_ERR_RR_HO_REQ  
</0x3010 OP_ERR_RR_HO_REQ>


<0x3021 OP_RR_ERR_HO_CNF>
    signalHeader  struct       T_MsgHeader  
</0x3021 OP_RR_ERR_HO_CNF>


<0x3022 OP_RR_ERR_HO_REJ>
    signalHeader  struct       T_MsgHeader  
</0x3022 OP_RR_ERR_HO_REJ>


<sub T_PDCP_DATA_REQ_LTE>
    rbIdentity     u8           u8           rbIdentity     |input;|
    reserved3[3]   array        u8           reserved3      |multiedit;|
    pDataPointer   Ptr          T_ComPduLte  
</sub T_PDCP_DATA_REQ_LTE>


<sub T_PDCP_DATA_IND_LTE>
    rbIdentity    u8           u8           rbIdentity    |input;|
    reserved3[3]  array        u8           reserved3     |multiedit;|
    pdata         Ptr          T_ComSduLte  
</sub T_PDCP_DATA_IND_LTE>


<0x21c1 OP_PDCP_DATA_REQ_LTE>
    signalHeader       struct               T_MsgHeader          
    PDCP_DATA_REQ_LTE  struct               T_PDCP_DATA_REQ_LTE  
</0x21c1 OP_PDCP_DATA_REQ_LTE>


<0x21c3 OP_PDCP_DATA_IND_LTE>
    signalHeader       struct               T_MsgHeader          
    PDCP_DATA_IND_LTE  struct               T_PDCP_DATA_IND_LTE  
</0x21c3 OP_PDCP_DATA_IND_LTE>


<0x21c6 OP_PDCP_ENTER_FLOW_CTR_IND>
    signalHeader  struct       T_MsgHeader  
</0x21c6 OP_PDCP_ENTER_FLOW_CTR_IND>


<0x21c5 OP_PDCP_RELEASE_FLOW_CTR_IND>
    signalHeader  struct       T_MsgHeader  
</0x21c5 OP_PDCP_RELEASE_FLOW_CTR_IND>


<sub T_PDCP_FLOW_ALLOWANCE_IND>
    rbIdentity    u8   u8   rbIdentity    |input;|
    allowedIpNum  u16  u16  allowedIpNum  |input;|
</sub T_PDCP_FLOW_ALLOWANCE_IND>


<0x21c4 OP_PDCP_FLOW_ALLOWANCE_IND>
    signalHeader             struct                     T_MsgHeader                
    PDCP_FLOW_ALLOWANCE_IND  struct                     T_PDCP_FLOW_ALLOWANCE_IND  
</0x21c4 OP_PDCP_FLOW_ALLOWANCE_IND>


<sub T_WB_SECURITY_ALGORITHM>
    integrityAlgorithm  u8   u8   integrityAlgorithm  |input;|
    ciperAlgorithm      u8   u8   ciperAlgorithm      |input;|
    reserved            u16  u16  reserved            |input;|
</sub T_WB_SECURITY_ALGORITHM>


<sub T_WB_SECURITY_KEY>
    keyRrcInt[AS_WB_MAX_INT_KEY_LEN]      array  u8     keyRrcInt                             |multiedit;|
    keyRrcEnc[AS_WB_MAX_RRC_ENC_KEY_LEN]  array  u8     keyRrcEnc                             |multiedit;|
    keyUpEnc[AS_WB_MAX_UP_ENC_KEY_LEN]    array  u8     keyUpEnc                              |multiedit;|
    keyEnb[AS_WB_MAX_ENB_KEY_LEN]         array  u8     keyEnb                                |multiedit;|
</sub T_WB_SECURITY_KEY>


<sub T_WB_HEAD_COM_INFO>
    maxCid    u16  u16  maxCid    |input;|
    profiles  u16  u16  profiles  |input;|
</sub T_WB_HEAD_COM_INFO>


<sub T_EPDC_WB_CONFIG_REQ_LTE>
    rbId                  u8                       u8                       rbId                  |input;|
    configCause           u8                       u8                       configCause           |input;|
    discardTimer          u8                       u8                       discardTimer          |input;|
    rlcMode               u8                       u8                       rlcMode               |input;|
    snSize                u8                       u8                       snSize                |input;|
    statusReportRequried  u8                       u8                       statusReportRequried  |input;|
    heaComFlag            u8                       u8                       heaComFlag            |input;|
    drbContinueROHC       u8                       u8                       drbContinueROHC       |input;|
    asContextFlag         u8                       u8                       asContextFlag         |input;|
    reserved3[3]          array                    u8                       reserved3             |multiedit;|
    headComInfo           struct                   T_WB_HEAD_COM_INFO       
    securityAlgorithm     struct                   T_WB_SECURITY_ALGORITHM  
    securityKey           struct                   T_WB_SECURITY_KEY        
    pCurrentErlcSduPos    u32                      u32                      pCurrentErlcSduPos    |input;|
</sub T_EPDC_WB_CONFIG_REQ_LTE>


<sub T_EPDC_WB_RELEASE_REQ_LTE>
    rbId  u8  u8  rbId  |input;|
</sub T_EPDC_WB_RELEASE_REQ_LTE>


<sub T_EPDC_WB_INTEGRITY_IND_LTE>
    rbId                         u8     u8     rbId                         |input;|
    integrityFlag                u8     u8     integrityFlag                |input;|
    mess[AS_WB_MAX_SMC_MSG_LEN]  array  u8     mess                         |multiedit;|
    reserved                     u8     u8     reserved                     |input;|
</sub T_EPDC_WB_INTEGRITY_IND_LTE>


<sub T_EPDC_WB_DATA_CNF_LTE>
    cnfNum    u8  u8  cnfNum    |input;|
    nasMsgSn  u8  u8  nasMsgSn  |input;|
    reserved  u8  u8  reserved  |input;|
</sub T_EPDC_WB_DATA_CNF_LTE>


<sub T_EPDC_WB_DATA_REQ_LTE>
    rbId        u8           u8           rbId        |input;|
    cipherFlag  u8           u8           cipherFlag  |input;|
    reserved    u16          u16          reserved    |input;|
    pduData     Ptr          T_ComPduLte  
</sub T_EPDC_WB_DATA_REQ_LTE>


<sub T_EPDC_WB_DATA_IND_LTE>
    rbId          u8           u8           rbId          |input;|
    reserved3[3]  array        u8           reserved3     |multiedit;|
    pduData       Ptr          T_ComSduLte  
</sub T_EPDC_WB_DATA_IND_LTE>


<0x20e1 OP_EPDC_WB_CONFIG_REQ_LTE>
    signalHeader            struct                    T_MsgHeader               
    EPDC_WB_CONFIG_REQ_LTE  struct                    T_EPDC_WB_CONFIG_REQ_LTE  
</0x20e1 OP_EPDC_WB_CONFIG_REQ_LTE>


<0x20e2 OP_EPDC_WB_RELEASE_REQ_LTE>
    signalHeader             struct                     T_MsgHeader                
    EPDC_WB_RELEASE_REQ_LTE  struct                     T_EPDC_WB_RELEASE_REQ_LTE  
</0x20e2 OP_EPDC_WB_RELEASE_REQ_LTE>


<0x20f1 OP_EPDC_WB_INTEGRITY_IND_LTE>
    signalHeader               struct                       T_MsgHeader                  
    EPDC_WB_INTEGRITY_IND_LTE  struct                       T_EPDC_WB_INTEGRITY_IND_LTE  
</0x20f1 OP_EPDC_WB_INTEGRITY_IND_LTE>


<0x20f2 OP_EPDC_WB_DATA_CNF_LTE>
    signalHeader          struct                  T_MsgHeader             
    EPDC_WB_DATA_CNF_LTE  struct                  T_EPDC_WB_DATA_CNF_LTE  
</0x20f2 OP_EPDC_WB_DATA_CNF_LTE>


<0x20e3 OP_EPDC_WB_DATA_REQ_LTE>
    signalHeader          struct                  T_MsgHeader             
    EPDC_WB_DATA_REQ_LTE  struct                  T_EPDC_WB_DATA_REQ_LTE  
</0x20e3 OP_EPDC_WB_DATA_REQ_LTE>


<0x20f3 OP_EPDC_WB_DATA_IND_LTE>
    signalHeader          struct                  T_MsgHeader             
    EPDC_WB_DATA_IND_LTE  struct                  T_EPDC_WB_DATA_IND_LTE  
</0x20f3 OP_EPDC_WB_DATA_IND_LTE>


<0x2231 OP_ML1C_PRACH_SEND_REQ>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_PRACH_SEND_REQ  
</0x2231 OP_ML1C_PRACH_SEND_REQ>


<0x223b OP_ML1C_RAR_RESULT_IND>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_RAR_RESULT_IND  
</0x223b OP_ML1C_RAR_RESULT_IND>


<0x223c OP_ML1C_CONTENTION_SUCCESS_IND>
    signalHeader  struct       T_MsgHeader  
</0x223c OP_ML1C_CONTENTION_SUCCESS_IND>


<0x223d OP_ML1C_PDCCH_ORDER_IND>
    signalHeader  struct                  T_MsgHeader             
    sigInfo       struct                  T_ML1C_PDCCH_ORDER_IND  
</0x223d OP_ML1C_PDCCH_ORDER_IND>


<0x2233 OP_ML1C_PRACH_END_REQ>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_ML1C_PRACH_END_REQ  
</0x2233 OP_ML1C_PRACH_END_REQ>


<0x223e OP_ML1C_DL_HARQ_INFO_IND>
    signalHeader  struct                   T_MsgHeader              
    sigInfo       struct                   T_ML1C_DL_HARQ_INFO_IND  
</0x223e OP_ML1C_DL_HARQ_INFO_IND>


<0x223f OP_ML1C_UL_HARQ_INFO_IND>
    signalHeader  struct                   T_MsgHeader              
    sigInfo       struct                   T_ML1C_UL_HARQ_INFO_IND  
</0x223f OP_ML1C_UL_HARQ_INFO_IND>


<0x2238 OP_ML1C_ADJUST_TA_REQ>
    signalHeader  struct                T_MsgHeader           
    sigInfo       struct                T_ML1C_ADJUST_TA_REQ  
</0x2238 OP_ML1C_ADJUST_TA_REQ>


<0x2234 OP_ML1C_SR_SEND_REQ>
    signalHeader  struct              T_MsgHeader         
    sigInfo       struct              T_ML1C_SR_SEND_REQ  
</0x2234 OP_ML1C_SR_SEND_REQ>


<0x2235 OP_ML1C_SR_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2235 OP_ML1C_SR_STOP_REQ>


<0x2237 OP_ML1C_INITIAL_CR_SUCCESS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2237 OP_ML1C_INITIAL_CR_SUCCESS_REQ>


<0x2239 OP_ML1C_DRX_STATUS_REQ>
    signalHeader  struct                 T_MsgHeader            
    sigInfo       struct                 T_ML1C_DRX_STATUS_REQ  
</0x2239 OP_ML1C_DRX_STATUS_REQ>


<0x2240 OP_ML1C_PDSCH_DLSCH_READ_IND>
    signalHeader  struct                       T_MsgHeader                  
    sigInfo       struct                       T_ML1C_PDSCH_DLSCH_READ_IND  
</0x2240 OP_ML1C_PDSCH_DLSCH_READ_IND>


<0x2241 OP_ML1C_SR_MAXNUM_IND>
    signalHeader  struct       T_MsgHeader  
</0x2241 OP_ML1C_SR_MAXNUM_IND>


<0xffff OP_ML1C_SEND_UL_SPS_INFO_REQ>
    signalHeader  struct                       T_MsgHeader                  
    sigInfo       struct                       T_ML1C_SEND_UL_SPS_INFO_REQ  
</0xffff OP_ML1C_SEND_UL_SPS_INFO_REQ>


<0x2109 OP_RL1C_PWR_SWEEP_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_PWR_SWEEP_REQ  struct                T_RL1C_PWR_SWEEP_REQ  
</0x2109 OP_RL1C_PWR_SWEEP_REQ>


<0x2145 OP_RL1C_PWR_SWEEP_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_PWR_SWEEP_CNF  struct                T_RL1C_PWR_SWEEP_CNF  
</0x2145 OP_RL1C_PWR_SWEEP_CNF>


<0x2146 OP_RL1C_CELL_SEARCH_CNF>
    signalHeader          struct                  T_MsgHeader             
    RL1C_CELL_SEARCH_CNF  struct                  T_RL1C_CELL_SEARCH_CNF  
</0x2146 OP_RL1C_CELL_SEARCH_CNF>


<0x2147 OP_RL1C_CELL_SYNC_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_CELL_SYNC_CNF  struct                T_RL1C_CELL_SYNC_CNF  
</0x2147 OP_RL1C_CELL_SYNC_CNF>


<0x2142 OP_RL1C_SIB1_DATA_IND>
    signalHeader        struct                T_MsgHeader           
    RL1C_SIB1_DATA_IND  struct                T_RL1C_SIB1_DATA_IND  
</0x2142 OP_RL1C_SIB1_DATA_IND>


<0x2143 OP_RL1C_SI_DATA_IND>
    signalHeader      struct              T_MsgHeader         
    RL1C_SI_DATA_IND  struct              T_RL1C_SI_DATA_IND  
</0x2143 OP_RL1C_SI_DATA_IND>


<0x2112 OP_RL1C_CHN_COMM_CONFIG_FOR_COMM>
    RL1C_CHN_COMM_CONFIG_FOR_COMM  struct            T_CommCfgForComm  
</0x2112 OP_RL1C_CHN_COMM_CONFIG_FOR_COMM>


<0x2113 OP_RL1C_CHN_COMM_CONFIG_FOR_BLCE>
    RL1C_CHN_COMM_CONFIG_FOR_BLCE  struct            T_CommCfgForBlCe  
</0x2113 OP_RL1C_CHN_COMM_CONFIG_FOR_BLCE>


<0x2114 OP_RL1C_CHN_COMM_CONFIG_FOR_NONE_BLCE>
    RL1C_CHN_COMM_CONFIG_FOR_NONE_BLCE  struct               T_CommCfgForNonBlCe  
</0x2114 OP_RL1C_CHN_COMM_CONFIG_FOR_NONE_BLCE>


<0x210a OP_RL1C_CHN_COMM_CONFIG_REQ>
    signalHeader              struct                      T_MsgHeader                 
    RL1C_CHN_COMM_CONFIG_REQ  struct                      T_RL1C_CHN_COMM_CONFIG_REQ  
</0x210a OP_RL1C_CHN_COMM_CONFIG_REQ>


<0x2115 OP_RL1C_CHN_DED_CONFIG_FOR_COMM>
    RL1C_CHN_DED_CONFIG_FOR_COMM  struct           T_DedCfgForComm  
</0x2115 OP_RL1C_CHN_DED_CONFIG_FOR_COMM>


<0x2116 OP_RL1C_CHN_DED_CONFIG_FOR_BLCE>
    RL1C_CHN_DED_CONFIG_FOR_BLCE  struct           T_DedCfgForBlCe  
</0x2116 OP_RL1C_CHN_DED_CONFIG_FOR_BLCE>


<0x2117 OP_RL1C_CHN_DED_CONFIG_FOR_NONE_BLCE>
    RL1C_CHN_DED_CONFIG_FOR_NONE_BLCE  struct              T_DedCfgForNonBlCe  
</0x2117 OP_RL1C_CHN_DED_CONFIG_FOR_NONE_BLCE>


<0x210b OP_RL1C_CHN_DED_CONFIG_REQ>
    signalHeader             struct                     T_MsgHeader                
    RL1C_CHN_DED_CONFIG_REQ  struct                     T_RL1C_CHN_DED_CONFIG_REQ  
</0x210b OP_RL1C_CHN_DED_CONFIG_REQ>


<0x2105 OP_RL1C_PLMN_SEARCH_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2105 OP_RL1C_PLMN_SEARCH_STOP_REQ>


<0x2151 OP_RL1C_PLMN_SEARCH_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2151 OP_RL1C_PLMN_SEARCH_STOP_CNF>


<0x2148 OP_RL1C_DEACT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2148 OP_RL1C_DEACT_CNF>


<0x210c OP_RL1C_PHY_RESET_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_PHY_RESET_REQ  struct                T_RL1C_PHY_RESET_REQ  
</0x210c OP_RL1C_PHY_RESET_REQ>


<0x2154 OP_RL1C_PHY_RESET_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2154 OP_RL1C_PHY_RESET_CNF>


<0x210f OP_RL1C_CGI_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    RL1C_CGI_MEAS_REQ  struct               T_RL1C_CGI_MEAS_REQ  
</0x210f OP_RL1C_CGI_MEAS_REQ>


<0x214e OP_RL1C_CGI_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_CGI_MEAS_IND  struct               T_RL1C_CGI_MEAS_IND  
</0x214e OP_RL1C_CGI_MEAS_IND>


<0x210d OP_RL1C_STOP_CGI_REQ>
    signalHeader  struct       T_MsgHeader  
</0x210d OP_RL1C_STOP_CGI_REQ>


<0x2150 OP_RL1C_RLF_STATUS_IND>
    signalHeader         struct                 T_MsgHeader            
    RL1C_RLF_STATUS_IND  struct                 T_RL1C_RLF_STATUS_IND  
</0x2150 OP_RL1C_RLF_STATUS_IND>


<0x214c OP_RL1C_EDRX_SLEEP_IND>
    signalHeader         struct                 T_MsgHeader            
    RL1C_EDRX_SLEEP_IND  struct                 T_RL1C_EDRX_SLEEP_IND  
</0x214c OP_RL1C_EDRX_SLEEP_IND>


<0x214b OP_RL1C_DIRECT_IND>
    signalHeader     struct             T_MsgHeader        
    RL1C_DIRECT_IND  struct             T_RL1C_DIRECT_IND  
</0x214b OP_RL1C_DIRECT_IND>


<0x2149 OP_RL1C_OUT_OF_SERVICE_IND>
    signalHeader             struct                     T_MsgHeader                
    RL1C_OUT_OF_SERVICE_IND  struct                     T_RL1C_OUT_OF_SERVICE_IND  
</0x2149 OP_RL1C_OUT_OF_SERVICE_IND>


<0x2101 OP_RL1C_SI_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2101 OP_RL1C_SI_STOP_REQ>


<0x2102 OP_RL1C_IDL_CONFIG_REQ>
    signalHeader         struct                 T_MsgHeader            
    RL1C_IDL_CONFIG_REQ  struct                 T_RL1C_IDL_CONFIG_REQ  
</0x2102 OP_RL1C_IDL_CONFIG_REQ>


<0x2103 OP_RL1C_FREQ_MEAS_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_FREQ_MEAS_REQ  struct                T_RL1C_FREQ_MEAS_REQ  
</0x2103 OP_RL1C_FREQ_MEAS_REQ>


<0x2144 OP_RL1C_FREQ_MEAS_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_FREQ_MEAS_CNF  struct                T_RL1C_FREQ_MEAS_CNF  
</0x2144 OP_RL1C_FREQ_MEAS_CNF>


<0x2104 OP_RL1C_SI_READ_REQ>
    signalHeader      struct              T_MsgHeader         
    RL1C_SI_READ_REQ  struct              T_RL1C_SI_READ_REQ  
</0x2104 OP_RL1C_SI_READ_REQ>


<0x2141 OP_RL1C_MIB_DATA_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_MIB_DATA_IND  struct               T_RL1C_MIB_DATA_IND  
</0x2141 OP_RL1C_MIB_DATA_IND>


<0x214a OP_RL1C_PAGING_DATA_IND>
    signalHeader          struct                  T_MsgHeader             
    RL1C_PAGING_DATA_IND  struct                  T_RL1C_PAGING_DATA_IND  
</0x214a OP_RL1C_PAGING_DATA_IND>


<0x2106 OP_RL1C_CELL_SEARCH_REQ>
    signalHeader          struct                  T_MsgHeader             
    RL1C_CELL_SEARCH_REQ  struct                  T_RL1C_CELL_SEARCH_REQ  
</0x2106 OP_RL1C_CELL_SEARCH_REQ>


<0x2107 OP_RL1C_CELL_SYNC_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_CELL_SYNC_REQ  struct                T_RL1C_CELL_SYNC_REQ  
</0x2107 OP_RL1C_CELL_SYNC_REQ>


<0x2108 OP_RL1C_DEACT_REQ>
    signalHeader    struct            T_MsgHeader       
    RL1C_DEACT_REQ  struct            T_RL1C_DEACT_REQ  
</0x2108 OP_RL1C_DEACT_REQ>


<0x214d OP_RL1C_IDL_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_IDL_MEAS_IND  struct               T_RL1C_IDL_MEAS_IND  
</0x214d OP_RL1C_IDL_MEAS_IND>


<0x214f OP_RL1C_DCH_MEAS_IND>
    signalHeader       struct               T_MsgHeader          
    RL1C_DCH_MEAS_IND  struct               T_RL1C_DCH_MEAS_IND  
</0x214f OP_RL1C_DCH_MEAS_IND>


<0x210e OP_RL1C_DCH_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    RL1C_DCH_MEAS_REQ  struct               T_RL1C_DCH_MEAS_REQ  
</0x210e OP_RL1C_DCH_MEAS_REQ>


<0x2152 OP_RL1C_PCELL_MEAS_IND>
    signalHeader         struct                 T_MsgHeader            
    RL1C_PCELL_MEAS_IND  struct                 T_RL1C_PCELL_MEAS_IND  
</0x2152 OP_RL1C_PCELL_MEAS_IND>


<0x2111 OP_RL1C_CE_MODE_CONFIG_REQ>
    signalHeader             struct                     T_MsgHeader                
    RL1C_CE_MODE_CONFIG_REQ  struct                     T_RL1C_CE_MODE_CONFIG_REQ  
</0x2111 OP_RL1C_CE_MODE_CONFIG_REQ>


<0x2110 OP_RL1C_BAND_SCAN_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_BAND_SCAN_REQ  struct                T_RL1C_BAND_SCAN_REQ  
</0x2110 OP_RL1C_BAND_SCAN_REQ>


<0x2153 OP_RL1C_BAND_SCAN_CNF>
    signalHeader        struct                T_MsgHeader           
    RL1C_BAND_SCAN_CNF  struct                T_RL1C_BAND_SCAN_CNF  
</0x2153 OP_RL1C_BAND_SCAN_CNF>


<0x2118 OP_RL1C_HSFN_INFO_REQ>
    signalHeader        struct                T_MsgHeader           
    RL1C_HSFN_INFO_REQ  struct                T_RL1C_HSFN_INFO_REQ  
</0x2118 OP_RL1C_HSFN_INFO_REQ>


<sub T_RL1C_PS_SIGNALLING_START_REQ>
    signallingType  u16  u16  signallingType  |input;|
    reserved        u16  u16  reserved        |input;|
</sub T_RL1C_PS_SIGNALLING_START_REQ>


<0x2119 OP_RL1C_PS_SIGNALLING_START_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    RL1C_PS_SIGNALLING_START_REQ  struct                          T_RL1C_PS_SIGNALLING_START_REQ  
</0x2119 OP_RL1C_PS_SIGNALLING_START_REQ>


<0x211a OP_RL1C_PS_SIGNALLING_END_REQ>
    signalHeader  struct       T_MsgHeader  
</0x211a OP_RL1C_PS_SIGNALLING_END_REQ>


<0x211e OP_RL1C_IDL_MEAS_REQ>
    signalHeader       struct               T_MsgHeader          
    RL1C_IDL_MEAS_REQ  struct               T_RL1C_IDL_MEAS_REQ  
</0x211e OP_RL1C_IDL_MEAS_REQ>


<0x211d OP_RL1C_TARGET_CELL_SYNC_INFO_REQ>
    signalHeader                    struct                            T_MsgHeader                       
    RL1C_TARGET_CELL_SYNC_INFO_REQ  struct                            T_RL1C_TARGET_CELL_SYNC_INFO_REQ  
</0x211d OP_RL1C_TARGET_CELL_SYNC_INFO_REQ>


<0x211c OP_RL1C_SI_SCHEDULING_BITMAP_REQ>
    signalHeader                   struct                           T_MsgHeader                      
    RL1C_SI_SCHEDULING_BITMAP_REQ  struct                           T_RL1C_SI_SCHEDULING_BITMAP_REQ  
</0x211c OP_RL1C_SI_SCHEDULING_BITMAP_REQ>


<0x2155 OP_RL1C_SI_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x2155 OP_RL1C_SI_STOP_CNF>


<0x2123 OP_RL1C_UP_SIGNAL_MSG_STT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2123 OP_RL1C_UP_SIGNAL_MSG_STT_REQ>


<0x2124 OP_RL1C_UP_SIGNAL_MSG_STP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2124 OP_RL1C_UP_SIGNAL_MSG_STP_REQ>


<0x2120 OP_RL1C_OTDOA_REFCELL_SEARCH_REQ>
</0x2120 OP_RL1C_OTDOA_REFCELL_SEARCH_REQ>


<0x2156 OP_RL1C_OTDOA_REFCELL_SEARCH_CNF>
</0x2156 OP_RL1C_OTDOA_REFCELL_SEARCH_CNF>


<0x2121 OP_RL1C_OTDOA_MEAS_CTRL_REQ>
</0x2121 OP_RL1C_OTDOA_MEAS_CTRL_REQ>


<0x2158 OP_RL1C_OTDOA_MEAS_RESULT_IND>
</0x2158 OP_RL1C_OTDOA_MEAS_RESULT_IND>


<0x2157 OP_RL1C_OTDOA_NCELL_PRS_INFO_IND>
</0x2157 OP_RL1C_OTDOA_NCELL_PRS_INFO_IND>


<0x211f OP_RL1C_OTDOA_MEAS_CFG_REQ>
</0x211f OP_RL1C_OTDOA_MEAS_CFG_REQ>


<0x211b OP_RL1C_DCH_EMERGENCY_MEAS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x211b OP_RL1C_DCH_EMERGENCY_MEAS_REQ>


<0x2122 OP_RL1C_IDL_EMERGENCY_MEAS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x2122 OP_RL1C_IDL_EMERGENCY_MEAS_REQ>


<0xffff OP_ADP_IDL_STATE_IND>
</0xffff OP_ADP_IDL_STATE_IND>


<sub T_EMAC_WB_DATA_IND_LTE>
    rbIdentity    u8                     u8                     rbIdentity    |input;|
    reserved3[3]  array                  u8                     reserved3     |multiedit;|
    pPduPointer   Ptr                    T_ERLC_WB_DL_PDU_INFO  
</sub T_EMAC_WB_DATA_IND_LTE>


<sub T_ERLC_WB_UL_PDU>
    pduLen                     u16                  u16                  pduLen                     |input;|
    sduLen                     u16                  u16                  sduLen                     |input;|
    next                       Ptr                  T_ERLC_WB_UL_PDU_tag 
    head                       Ptr                  T_AXIDMA_BLOCK_INFO  
    tail                       Ptr                  T_AXIDMA_BLOCK_INFO  
</sub T_ERLC_WB_UL_PDU>


<sub T_EMAC_WB_DATA_REQ_LTE>
    instId        u8                u8                instId        |input;|
    reserved3[3]  array             u8                reserved3     |multiedit;|
    pdu           Ptr               T_ERLC_WB_UL_PDU  
</sub T_EMAC_WB_DATA_REQ_LTE>


<sub T_MAC_REGULAR_BSR_REQ_LTE>
    lcid  u8  u8  lcid  |input;|
</sub T_MAC_REGULAR_BSR_REQ_LTE>


<sub T_AXIDMA_BUFF_INFO>
    used_len                        u16    u16    used_len                        |input;|
    total_len                       u16    u16    total_len                       |input;|
    buff[MAX_AXIDMA_BUFF_FOR_CAT1]  array  u8     buff                            |multiedit;|
</sub T_AXIDMA_BUFF_INFO>


<sub T_EMAC_WB_STATUS_IND_LTE>
    instId       u8                  u8                  instId       |input;|
    flagLastPdu  u8                  u8                  flagLastPdu  |input;|
    pduSize      u16                 u16                 pduSize      |input;|
    head_buff    Ptr                 T_AXIDMA_BUFF_INFO  
</sub T_EMAC_WB_STATUS_IND_LTE>


<0x2213 OP_EMAC_WB_DATA_IND_LTE>
    signalHeader          struct                  T_MsgHeader             
    EMAC_WB_DATA_IND_LTE  struct                  T_EMAC_WB_DATA_IND_LTE  
</0x2213 OP_EMAC_WB_DATA_IND_LTE>


<0x2211 OP_EMAC_WB_DATA_REQ_LTE>
    signalHeader          struct                  T_MsgHeader             
    EMAC_WB_DATA_REQ_LTE  struct                  T_EMAC_WB_DATA_REQ_LTE  
</0x2211 OP_EMAC_WB_DATA_REQ_LTE>


<0xffff OP_EMAC_WB_STATUS_IND_LTE>
    signalHeader            struct                    T_MsgHeader               
    EMAC_WB_STATUS_IND_LTE  struct                    T_EMAC_WB_STATUS_IND_LTE  
</0xffff OP_EMAC_WB_STATUS_IND_LTE>


<0x2203 OP_MAC_REGULAR_BSR_REQ_LTE>
    signalHeader             struct                     T_MsgHeader                
    MAC_REGULAR_BSR_REQ_LTE  struct                     T_MAC_REGULAR_BSR_REQ_LTE  
</0x2203 OP_MAC_REGULAR_BSR_REQ_LTE>


<sub T_RachCe_Info>
    firstPreamble                 u8     u8     firstPreamble                 |input;|
    lastPreamble                  u8     u8     lastPreamble                  |input;|
    rarHoppingConfig              u8     u8     rarHoppingConfig              |input;|
    raResponseWindowSize          u8     u8     raResponseWindowSize          |input;|
    macContentionResolutionTimer  u8     u8     macContentionResolutionTimer  |input;|
    reserved3[3]                  array  u8     reserved3                     |multiedit;|
</sub T_RachCe_Info>


<sub T_PreamblesGroupAConfig>
    validFlag                 u16  u16  validFlag                 |input;|
    sizeOfRA_PreamblesGroupA  u16  u16  sizeOfRA_PreamblesGroupA  |input;|
    messageSizeGroupA         u16  u16  messageSizeGroupA         |input;|
    messagePowerOffsetGroupB  u16  u16  messagePowerOffsetGroupB  |input;|
</sub T_PreamblesGroupAConfig>


<sub T_PreambleInfo>
    numberOfRA_Preambles   u16                      u16                      numberOfRA_Preambles   |input;|
    reserved               u16                      u16                      reserved               |input;|
    preamblesGroupAConfig  struct                   T_PreamblesGroupAConfig  
</sub T_PreambleInfo>


<sub T_RachCommInfo>
    powerRampingStep           u8              u8              powerRampingStep           |input;|
    preambleInitTargetPower    u8              u8              preambleInitTargetPower    |input;|
    preambleTransMax           u8              u8              preambleTransMax           |input;|
    reserved                   u8              u8              reserved                   |input;|
    preambleInfo               struct          T_PreambleInfo  
    raResponseWz               u8              u8              raResponseWz               |input;|
    macContentionTimer         u8              u8              macContentionTimer         |input;|
    maxMsg3TxNum               u8              u8              maxMsg3TxNum               |input;|
    rachCeNum                  u8              u8              rachCeNum                  |input;|
    preambleTransMaxCe         u8              u8              preambleTransMaxCe         |input;|
    reserved3[3]               array           u8              reserved3                  |multiedit;|
    rachCeLevel[MAX_CE_LEVEL]  array           T_RachCe_Info   rachCeLevel                |multiedit;|
</sub T_RachCommInfo>


<sub T_SrConfigInfo>
    srPucchResourIndex  u16  u16  srPucchResourIndex  |input;|
    srConfigIndex       u8   u8   srConfigIndex       |input;|
    srTranMax           u8   u8   srTranMax           |input;|
</sub T_SrConfigInfo>


<sub T_RbInforSetup>
    instId                     u8  u8  instId                     |input;|
    serviceType                u8  u8  serviceType                |input;|
    epsBearerId                u8  u8  epsBearerId                |input;|
    ulRlcMode                  u8  u8  ulRlcMode                  |input;|
    logicalChID                u8  u8  logicalChID                |input;|
    logicalPriority            u8  u8  logicalPriority            |input;|
    pbr                        u8  u8  pbr                        |input;|
    bsd                        u8  u8  bsd                        |input;|
    logicalChGroup             u8  u8  logicalChGroup             |input;|
    logicalChannelSrMask       u8  u8  logicalChannelSrMask       |input;|
    logicalChannelSrProhibit   u8  u8  logicalChannelSrProhibit   |input;|
    bitRateQueryProhibitTimer  u8  u8  bitRateQueryProhibitTimer  |input;|
</sub T_RbInforSetup>


<sub T_PhrConfig>
    validFlag         u8  u8  validFlag         |input;|
    periodPhrTimer    u8  u8  periodPhrTimer    |input;|
    prohibitPhrTimer  u8  u8  prohibitPhrTimer  |input;|
    dlPathLossChang   u8  u8  dlPathLossChang   |input;|
</sub T_PhrConfig>


<sub T_MacMainInfo>
    maxHarqTx              u8                  u8                  maxHarqTx              |input;|
    periodBsrTimer         u8                  u8                  periodBsrTimer         |input;|
    retxBsrTimer           u8                  u8                  retxBsrTimer           |input;|
    ttiBundlingFlag        u8                  u8                  ttiBundlingFlag        |input;|
    eHarqFlag              u8                  u8                  eHarqFlag              |input;|
    timeAlignTimer         u8                  u8                  timeAlignTimer         |input;|
    srProhibitTimer        u8                  u8                  srProhibitTimer        |input;|
    logichSrProhibitTimer  u8                  u8                  logichSrProhibitTimer  |input;|
    cqiMaskFlag            u8                  u8                  cqiMaskFlag            |input;|
    reserved3[3]           array               u8                  reserved3              |multiedit;|
    drxConfig              struct              T_DrxConfigInfo_WB  
    phrCofig               struct              T_PhrConfig         
</sub T_MacMainInfo>


<sub T_RachCfgInfo>
    pCmax              s8              s8              pCmax              |input;|
    deltaPreambleMsg3  s8              s8              deltaPreambleMsg3  |input;|
    downRsPower        s16             s16             downRsPower        |input;|
    rachCommInfo       struct          T_RachCommInfo  
    prachInfo          struct          T_PrachConfig   
</sub T_RachCfgInfo>


<0x20a5 OP_CMAC_RESET_REQ>
    signalHeader  struct       T_MsgHeader  
</0x20a5 OP_CMAC_RESET_REQ>


<sub T_CMAC_RANDOM_ACC_REQ>
    pCmax                               s8                    s8                    pCmax                               |input;|
    msg3Len                             u8                    u8                    msg3Len                             |input;|
    accessMode                          u8                    u8                    accessMode                          |input;|
    deltaPreambleMsg3                   s8                    s8                    deltaPreambleMsg3                   |input;|
    mbsfnConfigNum                      u8                    u8                    mbsfnConfigNum                      |input;|
    unicastFreqHoppingInd               u8                    u8                    unicastFreqHoppingInd               |input;|
    downRsPower                         s16                   s16                   downRsPower                         |input;|
    servCellInfo                        struct                T_CellServLte         
    rachCommInfo                        struct                T_RachCommInfo        
    prachInfo                           struct                T_PrachConfig         
    macMainCfg                          struct                T_MacMainInfo         
    mbsfnConfigInfoList[MAX_MBSFN_NUM]  array                 T_MbsfnConfigInfo     mbsfnConfigInfoList                 |multiedit;|
    msg3Data[MAX_MSG3_LEN]              array                 u8                    msg3Data                            |multiedit;|
    puschComInfo                        struct                T_PuschCommInfoV1310  
    pucchComInfo                        struct                T_PucchCommInfoV1310  
    prachInfoR13                        struct                T_PrachConfigR13      
    validSfn                            struct                T_BLValidSubfBitMap   
</sub T_CMAC_RANDOM_ACC_REQ>


<0x20a1 OP_CMAC_RANDOM_ACC_REQ>
    signalHeader         struct                 T_MsgHeader            
    CMAC_RANDOM_ACC_REQ  struct                 T_CMAC_RANDOM_ACC_REQ  
</0x20a1 OP_CMAC_RANDOM_ACC_REQ>


<sub T_CMAC_HANDOVER_ACC_REQ>
    pCmax                               s8                    s8                    pCmax                               |input;|
    raPreambleIndex                     u8                    u8                    raPreambleIndex                     |input;|
    raPrachMaskIndex                    u8                    u8                    raPrachMaskIndex                    |input;|
    mbsfnConfigNum                      u8                    u8                    mbsfnConfigNum                      |input;|
    deltaPreambleMsg3                   s8                    s8                    deltaPreambleMsg3                   |input;|
    reserved3[3]                        array                 u8                    reserved3                           |multiedit;|
    cRnti                               u32                   u32                   cRnti                               |input;|
    targetCellInfo                      struct                T_CellServLte         
    rachCommInfo                        struct                T_RachCommInfo        
    prachInfo                           struct                T_PrachConfig         
    mbsfnConfigInfoList[MAX_MBSFN_NUM]  array                 T_MbsfnConfigInfo     mbsfnConfigInfoList                 |multiedit;|
    puschComInfo                        struct                T_PuschCommInfoV1310  
    pucchComInfo                        struct                T_PucchCommInfoV1310  
    prachInfoR13                        struct                T_PrachConfigR13      
    validSfn                            struct                T_BLValidSubfBitMap   
</sub T_CMAC_HANDOVER_ACC_REQ>


<0x20a2 OP_CMAC_HANDOVER_ACC_REQ>
    signalHeader           struct                   T_MsgHeader              
    CMAC_HANDOVER_ACC_REQ  struct                   T_CMAC_HANDOVER_ACC_REQ  
</0x20a2 OP_CMAC_HANDOVER_ACC_REQ>


<sub T_CMAC_ACC_STATUS_IND>
    resultFlag                     u16    u16    resultFlag                     |input;|
    dataLenth                      u16    u16    dataLenth                      |input;|
    cRnti                          u32    u32    cRnti                          |input;|
    data[MAX_ACC_STATUS_IND_BUFF]  array  u8     data                           |multiedit;|
</sub T_CMAC_ACC_STATUS_IND>


<0x20b1 OP_CMAC_ACC_STATUS_IND>
    signalHeader         struct                 T_MsgHeader            
    CMAC_ACC_STATUS_IND  struct                 T_CMAC_ACC_STATUS_IND  
</0x20b1 OP_CMAC_ACC_STATUS_IND>


<0x20b2 OP_CMAC_TA_TIME_OUT_IND>
    signalHeader  struct       T_MsgHeader  
</0x20b2 OP_CMAC_TA_TIME_OUT_IND>


<0x20b3 OP_CMAC_REESTABLISH_IND>
    signalHeader  struct       T_MsgHeader  
</0x20b3 OP_CMAC_REESTABLISH_IND>


<sub T_CMAC_MAC_CONFIG_REQ>
    rbNum                                   u8               u8               rbNum                                   |input;|
    ceMode                                  u8               u8               ceMode                                  |input;|
    downRsPower                             s16              s16              downRsPower                             |input;|
    servCellInfo                            struct           T_CellServLte    
    rbInfoSetupList[EAS_WB_MAX_RB_NUM_LTE]  array            T_RbInforSetup   rbInfoSetupList                         |multiedit;|
    mainInfo                                struct           T_MacMainInfo    
    srConfig                                struct           T_SrConfigInfo   
    spsConfig                               struct           T_SpsConfigInfo  
    pucchRepformat1                         u8               u8               pucchRepformat1                         |input;|
    reserved3[3]                            array            u8               reserved3                               |multiedit;|
</sub T_CMAC_MAC_CONFIG_REQ>


<0x20a3 OP_CMAC_MAC_CONFIG_REQ>
    signalHeader         struct                 T_MsgHeader            
    CMAC_MAC_CONFIG_REQ  struct                 T_CMAC_MAC_CONFIG_REQ  
</0x20a3 OP_CMAC_MAC_CONFIG_REQ>


<sub T_CMAC_COMM_UPDATE_REQ>
    rachCfgInfo  struct         T_RachCfgInfo  
</sub T_CMAC_COMM_UPDATE_REQ>


<0x20a4 OP_CMAC_COMM_UPDATE_REQ>
    signalHeader          struct                  T_MsgHeader             
    CMAC_COMM_UPDATE_REQ  struct                  T_CMAC_COMM_UPDATE_REQ  
</0x20a4 OP_CMAC_COMM_UPDATE_REQ>


<sub T_CMAC_BIT_RATE_RECOMMEND_REQ_LTE>
    instId    u8   u8   instId    |input;|
    dir       u8   u8   dir       |input;|
    kBitRate  u16  u16  kBitRate  |input;|
</sub T_CMAC_BIT_RATE_RECOMMEND_REQ_LTE>


<0xffff OP_CMAC_BIT_RATE_RECOMMEND_REQ_LTE>
    signalHeader         struct                             T_MsgHeader                        
    bitRateRecommendReq  struct                             T_CMAC_BIT_RATE_RECOMMEND_REQ_LTE  
</0xffff OP_CMAC_BIT_RATE_RECOMMEND_REQ_LTE>


<sub T_CMAC_BIT_RATE_RECOMMEND_IND_LTE>
    instId    u8   u8   instId    |input;|
    dir       u8   u8   dir       |input;|
    kBitRate  u16  u16  kBitRate  |input;|
</sub T_CMAC_BIT_RATE_RECOMMEND_IND_LTE>


<0xffff OP_CMAC_BIT_RATE_RECOMMEND_IND_LTE>
    signalHeader         struct                             T_MsgHeader                        
    bitRateRecommendInd  struct                             T_CMAC_BIT_RATE_RECOMMEND_IND_LTE  
</0xffff OP_CMAC_BIT_RATE_RECOMMEND_IND_LTE>


<sub T_ERLC_WB_UM_DATA_REQ_LTE>
    rbIdentity     u8           u8           rbIdentity     |input;|
    reserved3[3]   array        u8           reserved3      |multiedit;|
    pDataPointer   Ptr          T_ComPduLte  
</sub T_ERLC_WB_UM_DATA_REQ_LTE>


<sub T_ERLC_WB_AM_DATA_IND_LTE>
    dataType      u8                u8                dataType      |input;|
    reserved3[3]  array             u8                reserved3     |multiedit;|
    sdu_list      Ptr               T_ERLC_WB_DL_SDU  
</sub T_ERLC_WB_AM_DATA_IND_LTE>


<sub T_ERLC_WB_UM_DATA_IND_LTE>
    dataType      u8                u8                dataType      |input;|
    reserved3[3]  array             u8                reserved3     |multiedit;|
    sdu_list      Ptr               T_ERLC_WB_DL_SDU  
</sub T_ERLC_WB_UM_DATA_IND_LTE>


<sub T_ERLC_WB_AM_DATA_CNF_LTE>
    rbIdentity    u8     u8     rbIdentity    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
    firstCnfSn    u16    u16    firstCnfSn    |input;|
    cnfPduNum     u16    u16    cnfPduNum     |input;|
</sub T_ERLC_WB_AM_DATA_CNF_LTE>


<0x21e1 OP_ERLC_WB_UM_DATA_REQ_LTE>
    signalHeader             struct                     T_MsgHeader                
    ERLC_WB_UM_DATA_REQ_LTE  struct                     T_ERLC_WB_UM_DATA_REQ_LTE  
</0x21e1 OP_ERLC_WB_UM_DATA_REQ_LTE>


<0x21e3 OP_ERLC_WB_AM_DATA_IND_LTE>
    signalHeader             struct                     T_MsgHeader                
    ERLC_WB_AM_DATA_IND_LTE  struct                     T_ERLC_WB_AM_DATA_IND_LTE  
</0x21e3 OP_ERLC_WB_AM_DATA_IND_LTE>


<0x21e4 OP_ERLC_WB_UM_DATA_IND_LTE>
    signalHeader             struct                     T_MsgHeader                
    ERLC_WB_UM_DATA_IND_LTE  struct                     T_ERLC_WB_UM_DATA_IND_LTE  
</0x21e4 OP_ERLC_WB_UM_DATA_IND_LTE>


<0x21e5 OP_ERLC_WB_AM_DATA_CNF_LTE>
    signalHeader             struct                     T_MsgHeader                
    ERLC_WB_AM_DATA_CNF_LTE  struct                     T_ERLC_WB_AM_DATA_CNF_LTE  
</0x21e5 OP_ERLC_WB_AM_DATA_CNF_LTE>


<0xffff OP_ERLC_WB_REL_UL_PDCP_PDU_IND_LTE>
    signalHeader            struct       T_MsgHeader  
    waitForRelPduListHead   Ptr          T_ComPduLte  
</0xffff OP_ERLC_WB_REL_UL_PDCP_PDU_IND_LTE>


<sub T_AS_WB_UM_PARA>
    ulSnFieldLength    u8  u8  ulSnFieldLength    |input;|
    dlTimerReordering  u8  u8  dlTimerReordering  |input;|
    dlSnFieldLength    u8  u8  dlSnFieldLength    |input;|
    reserved           u8  u8  reserved           |input;|
</sub T_AS_WB_UM_PARA>


<sub T_AS_WB_AM_UP_PARA>
    maxRetxThreshold     u8   u8   maxRetxThreshold     |input;|
    timerPollRetransmit  u8   u8   timerPollRetransmit  |input;|
    pollPdu              u8   u8   pollPdu              |input;|
    pollByte             u8   u8   pollByte             |input;|
    pLastEpdcPduPos      u32  u32  pLastEpdcPduPos      |input;|
</sub T_AS_WB_AM_UP_PARA>


<sub T_AS_WB_AM_DW_PARA>
    timerStatusProhibit  u8   u8   timerStatusProhibit  |input;|
    timerReordering      u8   u8   timerReordering      |input;|
    reserved             u16  u16  reserved             |input;|
</sub T_AS_WB_AM_DW_PARA>


<sub T_ERLC_WB_STATUS_IND_LTE>
    statusCode    u8     u8     statusCode    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_ERLC_WB_STATUS_IND_LTE>


<sub T_ERLC_WB_CONFIG_REQ_LTE>
    rbIdentity     u8                  u8                  rbIdentity     |input;|
    configCause    u8                  u8                  configCause    |input;|
    mode           u8                  u8                  mode           |input;|
    direction      u8                  u8                  direction      |input;|
    ctrlOrUsr      u8                  u8                  ctrlOrUsr      |input;|
    suspendResume  u8                  u8                  suspendResume  |input;|
    reserved       u16                 u16                 reserved       |input;|
    umParas        struct              T_AS_WB_UM_PARA     
    amUpParas      struct              T_AS_WB_AM_UP_PARA  
    amDwParas      struct              T_AS_WB_AM_DW_PARA  
</sub T_ERLC_WB_CONFIG_REQ_LTE>


<sub T_ERLC_WB_DEACT_REQ_LTE>
    rbIdentity    u8     u8     rbIdentity    |input;|
    reserved3[3]  array  u8     reserved3     |multiedit;|
</sub T_ERLC_WB_DEACT_REQ_LTE>


<0x20d1 OP_ERLC_WB_STATUS_IND_LTE>
    signalHeader            struct                    T_MsgHeader               
    ERLC_WB_STATUS_IND_LTE  struct                    T_ERLC_WB_STATUS_IND_LTE  
</0x20d1 OP_ERLC_WB_STATUS_IND_LTE>


<0x20c1 OP_ERLC_WB_CONFIG_REQ_LTE>
    signalHeader            struct                    T_MsgHeader               
    ERLC_WB_CONFIG_REQ_LTE  struct                    T_ERLC_WB_CONFIG_REQ_LTE  
</0x20c1 OP_ERLC_WB_CONFIG_REQ_LTE>


<0x20c2 OP_ERLC_WB_DEACT_REQ_LTE>
    signalHeader           struct                   T_MsgHeader              
    ERLC_WB_DEACT_REQ_LTE  struct                   T_ERLC_WB_DEACT_REQ_LTE  
</0x20c2 OP_ERLC_WB_DEACT_REQ_LTE>


<sub T_EL1C_IRAT_GGE_MEAS_REQ>
    measId                                u16         u16         measId                                |input;|
    cellNum                               u16         u16         cellNum                               |input;|
    stateInfo                             u16         u16         stateInfo                             |input;|
    reserved                              u16         u16         reserved                              |input;|
    masterAfc                             u32         u32         masterAfc                             |input;|
    cellList[MAX_IRAT_MEAS_GGE_CELL_NUM]  array       u16         cellList                              |multiedit;|
    rssi[MAX_IRAT_MEAS_GGE_CELL_NUM]      array       u16         rssi                                  |multiedit;|
    gapStart                              struct      T_TimeUnit  
    gapEnd                                struct      T_TimeUnit  
</sub T_EL1C_IRAT_GGE_MEAS_REQ>


<sub T_EL1C_IRAT_GGE_MEAS_CNF>
    measId                                  u16                  u16                  measId                                  |input;|
    cellNum                                 u16                  u16                  cellNum                                 |input;|
    measResult[MAX_IRAT_MEAS_GGE_CELL_NUM]  array                T_iratGgeMeasResult  measResult                              |multiedit;|
</sub T_EL1C_IRAT_GGE_MEAS_CNF>


<sub T_EL1C_IRAT_GGE_BSIC_REQ>
    bsicId      u16         u16         bsicId      |input;|
    type        u16         u16         type        |input;|
    arfcn       u16         u16         arfcn       |input;|
    stateInfo   u16         u16         stateInfo   |input;|
    syncFn      u32         u32         syncFn      |input;|
    syncOffset  u16         u16         syncOffset  |input;|
    rxlev       u16         u16         rxlev       |input;|
    afc         s16         s16         afc         |input;|
    reserved    u16         u16         reserved    |input;|
    gapStart    struct      T_TimeUnit  
    gapEnd      struct      T_TimeUnit  
</sub T_EL1C_IRAT_GGE_BSIC_REQ>


<sub T_EL1C_IRAT_GGE_BSIC_CNF>
    bsicId      u16  u16  bsicId      |input;|
    status      u16  u16  status      |input;|
    arfcn       u16  u16  arfcn       |input;|
    bsic        u16  u16  bsic        |input;|
    absFn       u32  u32  absFn       |input;|
    syncFn      u32  u32  syncFn      |input;|
    syncOffset  u16  u16  syncOffset  |input;|
    afc         s16  s16  afc         |input;|
</sub T_EL1C_IRAT_GGE_BSIC_CNF>


<sub T_EL1C_IRAT_GGE_GAP_INFO_IND>
    gapId      u16         u16         gapId      |input;|
    gapType    u16         u16         gapType    |input;|
    masterAfc  u32         u32         masterAfc  |input;|
    gapStart   struct      T_TimeUnit  
    gapEnd     struct      T_TimeUnit  
</sub T_EL1C_IRAT_GGE_GAP_INFO_IND>


<sub T_EL1C_IRAT_GGE_GAP_END_IND>
    gapId     u16  u16  gapId     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_EL1C_IRAT_GGE_GAP_END_IND>


<sub T_EL1C_IRAT_GGE_LIST_UPDATE_REQ>
    cellNum                               u16    u16    cellNum                               |input;|
    reserved                              u16    u16    reserved                              |input;|
    cellList[MAX_IRAT_MEAS_GGE_CELL_NUM]  array  u16    cellList                              |multiedit;|
</sub T_EL1C_IRAT_GGE_LIST_UPDATE_REQ>


<sub T_L1G_IRAT_LTE_MEAS_REQ>
    measId                                   u16                u16                measId                                   |input;|
    measType                                 u16                u16                measType                                 |input;|
    lastGap                                  u16                u16                lastGap                                  |input;|
    lteFreqNum                               u16                u16                lteFreqNum                               |input;|
    stateInfo                                u16                u16                stateInfo                                |input;|
    reserved                                 u16                u16                reserved                                 |input;|
    masterAfc                                u32                u32                masterAfc                                |input;|
    lteFreqList[MAX_IRAT_MEAS_LTE_FREQ_NUM]  array              T_iratLteFreqInfo  lteFreqList                              |multiedit;|
    lteCellList[MAX_IRAT_MEAS_LTE_FREQ_NUM]  array              T_iratLteCellInfo  lteCellList                              |multiedit;|
    gapStart                                 struct             T_TimeUnit         
    gapEnd                                   struct             T_TimeUnit         
</sub T_L1G_IRAT_LTE_MEAS_REQ>


<sub T_L1G_IRAT_LTE_MEAS_CNF>
    measId                                     u16                  u16                  measId                                     |input;|
    lteFreqNum                                 u16                  u16                  lteFreqNum                                 |input;|
    lteMeasResult[MAX_IRAT_MEAS_LTE_FREQ_NUM]  array                T_iratLteMeasResult  lteMeasResult                              |multiedit;|
</sub T_L1G_IRAT_LTE_MEAS_CNF>


<sub T_L1G_IRAT_LTE_GAP_INFO_IND>
    gapId      u16         u16         gapId      |input;|
    gapType    u16         u16         gapType    |input;|
    lastGap    u16         u16         lastGap    |input;|
    stateInfo  u16         u16         stateInfo  |input;|
    masterAfc  u32         u32         masterAfc  |input;|
    gapStart   struct      T_TimeUnit  
    gapEnd     struct      T_TimeUnit  
</sub T_L1G_IRAT_LTE_GAP_INFO_IND>


<sub T_L1G_IRAT_LTE_GAP_END_IND>
    gapId     u16  u16  gapId     |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_L1G_IRAT_LTE_GAP_END_IND>


<0x4001 OP_EL1C_IRAT_GGE_MEAS_REQ>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IRAT_GGE_MEAS_REQ  struct                    T_EL1C_IRAT_GGE_MEAS_REQ  
</0x4001 OP_EL1C_IRAT_GGE_MEAS_REQ>


<0x4008 OP_EL1C_IRAT_GGE_MEAS_CNF>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IRAT_GGE_MEAS_CNF  struct                    T_EL1C_IRAT_GGE_MEAS_CNF  
</0x4008 OP_EL1C_IRAT_GGE_MEAS_CNF>


<0x4002 OP_EL1C_IRAT_GGE_BSIC_REQ>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IRAT_GGE_BSIC_REQ  struct                    T_EL1C_IRAT_GGE_BSIC_REQ  
</0x4002 OP_EL1C_IRAT_GGE_BSIC_REQ>


<0x4009 OP_EL1C_IRAT_GGE_BSIC_CNF>
    signalHeader            struct                    T_MsgHeader               
    EL1C_IRAT_GGE_BSIC_CNF  struct                    T_EL1C_IRAT_GGE_BSIC_CNF  
</0x4009 OP_EL1C_IRAT_GGE_BSIC_CNF>


<0x4003 OP_EL1C_IRAT_GGE_BSIC_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4003 OP_EL1C_IRAT_GGE_BSIC_STOP_REQ>


<0x4004 OP_EL1C_IRAT_GGE_GAP_INFO_IND>
    signalHeader                struct                        T_MsgHeader                   
    EL1C_IRAT_GGE_GAP_INFO_IND  struct                        T_EL1C_IRAT_GGE_GAP_INFO_IND  
</0x4004 OP_EL1C_IRAT_GGE_GAP_INFO_IND>


<0x400a OP_EL1C_IRAT_GGE_GAP_END_IND>
    signalHeader               struct                       T_MsgHeader                  
    EL1C_IRAT_GGE_GAP_END_IND  struct                       T_EL1C_IRAT_GGE_GAP_END_IND  
</0x400a OP_EL1C_IRAT_GGE_GAP_END_IND>


<0x400b OP_EL1C_IRAT_GGE_PLMN_GAP_START_REQ>
    signalHeader  struct       T_MsgHeader  
</0x400b OP_EL1C_IRAT_GGE_PLMN_GAP_START_REQ>


<0x400c OP_EL1C_IRAT_GGE_PLMN_GAP_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x400c OP_EL1C_IRAT_GGE_PLMN_GAP_STOP_REQ>


<0x4005 OP_EL1C_IRAT_GGE_GAP_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4005 OP_EL1C_IRAT_GGE_GAP_ABORT_REQ>


<0x400d OP_EL1C_IRAT_GGE_GAP_ABORT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x400d OP_EL1C_IRAT_GGE_GAP_ABORT_CNF>


<0x4006 OP_EL1C_IRAT_GGE_LIST_UPDATE_REQ>
    signalHeader                   struct                           T_MsgHeader                      
    EL1C_IRAT_GGE_LIST_UPDATE_REQ  struct                           T_EL1C_IRAT_GGE_LIST_UPDATE_REQ  
</0x4006 OP_EL1C_IRAT_GGE_LIST_UPDATE_REQ>


<0x400f OP_L1G_IRAT_LTE_MEAS_REQ>
    signalHeader           struct                   T_MsgHeader              
    L1G_IRAT_LTE_MEAS_REQ  struct                   T_L1G_IRAT_LTE_MEAS_REQ  
</0x400f OP_L1G_IRAT_LTE_MEAS_REQ>


<0x4013 OP_L1G_IRAT_LTE_MEAS_CNF>
    signalHeader           struct                   T_MsgHeader              
    L1G_IRAT_LTE_MEAS_CNF  struct                   T_L1G_IRAT_LTE_MEAS_CNF  
</0x4013 OP_L1G_IRAT_LTE_MEAS_CNF>


<0x4010 OP_L1G_IRAT_LTE_GAP_INFO_IND>
    signalHeader               struct                       T_MsgHeader                  
    L1G_IRAT_LTE_GAP_INFO_IND  struct                       T_L1G_IRAT_LTE_GAP_INFO_IND  
</0x4010 OP_L1G_IRAT_LTE_GAP_INFO_IND>


<0x4014 OP_L1G_IRAT_LTE_GAP_END_IND>
    signalHeader              struct                      T_MsgHeader                 
    L1G_IRAT_LTE_GAP_END_IND  struct                      T_L1G_IRAT_LTE_GAP_END_IND  
</0x4014 OP_L1G_IRAT_LTE_GAP_END_IND>


<0x4015 OP_L1G_IRAT_LTE_PLMN_GAP_START_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4015 OP_L1G_IRAT_LTE_PLMN_GAP_START_REQ>


<0x4016 OP_L1G_IRAT_LTE_PLMN_GAP_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4016 OP_L1G_IRAT_LTE_PLMN_GAP_STOP_REQ>


<0x4011 OP_L1G_IRAT_LTE_GAP_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4011 OP_L1G_IRAT_LTE_GAP_ABORT_REQ>


<0x4017 OP_L1G_IRAT_LTE_GAP_ABORT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x4017 OP_L1G_IRAT_LTE_GAP_ABORT_CNF>


<sub T_GapInfo>
    gapStartPoint  struct      T_TimeUnit  
    gapEndPoint    struct      T_TimeUnit  
</sub T_GapInfo>


<sub T_PagingInfo>
    peroid  u32         u32         peroid  |input;|
    offset  struct      T_TimeUnit  
</sub T_PagingInfo>


<sub T_Ref_TimeStamp>
    refCount    u32         u32         refCount    |input;|
    masterTime  struct      T_TimeUnit  
</sub T_Ref_TimeStamp>


<sub T_Irat_TimeStamp>
    ggeTime  struct      T_TimeUnit  
    lteTime  struct      T_TimeUnit  
</sub T_Irat_TimeStamp>


<sub T_ProtGapPattern>
    peroid  u16  u16  peroid  |input;|
    offset  u16  u16  offset  |input;|
</sub T_ProtGapPattern>


<sub T_L1CD_GAP_APPLY_IND>
    masterType             u16           u16           masterType             |input;|
    taskType               u16           u16           taskType               |input;|
    intraDetectWithLtePch  u16           u16           intraDetectWithLtePch  |input;|
    ggeSyncUpd             u16           u16           ggeSyncUpd             |input;|
    regularGapInfo         struct        T_GapInfo     
    pagingCfg              struct        T_PagingInfo  
    effectiveTime          struct        T_TimeUnit    
</sub T_L1CD_GAP_APPLY_IND>


<sub T_L1CD_GAP_CANCEL_IND>
    masterType  u16  u16  masterType  |input;|
    taskType    u16  u16  taskType    |input;|
</sub T_L1CD_GAP_CANCEL_IND>


<sub T_L1CD_GAP_INFO_RSP>
    gapId     u16        u16        gapId     |input;|
    taskType  u16        u16        taskType  |input;|
    gapInfo   struct     T_GapInfo  
</sub T_L1CD_GAP_INFO_RSP>


<sub T_L1CD_GAP_END_IND>
    gapId                  u16  u16  gapId                  |input;|
    taskStatus             u16  u16  taskStatus             |input;|
    ltePagingTa            u16  u16  ltePagingTa            |input;|
    intraDetectWithLtePch  u16  u16  intraDetectWithLtePch  |input;|
    skipNextPaging         u16  u16  skipNextPaging         |input;|
</sub T_L1CD_GAP_END_IND>


<sub T_L1CD_PROT_GAP_APPLY_IND>
    masterType  u16  u16  masterType  |input;|
    taskType    u16  u16  taskType    |input;|
</sub T_L1CD_PROT_GAP_APPLY_IND>


<sub T_L1CD_PROT_GAP_CANCEL_IND>
    masterType  u16  u16  masterType  |input;|
    taskType    u16  u16  taskType    |input;|
</sub T_L1CD_PROT_GAP_CANCEL_IND>


<sub T_L1CD_PROT_GAP_INFO_RSP>
    gapId       u16               u16               gapId       |input;|
    taskType    u16               u16               taskType    |input;|
    gapType     u16               u16               gapType     |input;|
    gapInfo     struct            T_GapInfo         
    gapPattern  struct            T_ProtGapPattern  
</sub T_L1CD_PROT_GAP_INFO_RSP>


<sub T_L1CD_PROT_GAP_END_IND>
    gapId       u16  u16  gapId       |input;|
    taskStatus  u16  u16  taskStatus  |input;|
</sub T_L1CD_PROT_GAP_END_IND>


<sub T_L1CD_PROT_GAP_PATTERN_IND>
    gapPattern  struct            T_ProtGapPattern  
</sub T_L1CD_PROT_GAP_PATTERN_IND>


<sub T_L1CD_ENTER_LTE_LIMITED_PRO_IND>
    proType   u16  u16  proType   |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_L1CD_ENTER_LTE_LIMITED_PRO_IND>


<sub T_L1CD_EXIT_LTE_LIMITED_PRO_IND>
    proType   u16  u16  proType   |input;|
    reserved  u16  u16  reserved  |input;|
</sub T_L1CD_EXIT_LTE_LIMITED_PRO_IND>


<sub T_L1CD_SUSPEND_TRANS_REQ>
    suspendType  u16  u16  suspendType  |input;|
    reserved     u16  u16  reserved     |input;|
</sub T_L1CD_SUSPEND_TRANS_REQ>


<0x4041 OP_L1CD_REG_LTE_MODE_IND>
    signalHeader  struct       T_MsgHeader  
</0x4041 OP_L1CD_REG_LTE_MODE_IND>


<0x4053 OP_L1CD_REG_GSM_MODE_IND>
    signalHeader  struct       T_MsgHeader  
</0x4053 OP_L1CD_REG_GSM_MODE_IND>


<0x4042 OP_L1CD_DEREG_LTE_MODE_IND>
    signalHeader  struct       T_MsgHeader  
</0x4042 OP_L1CD_DEREG_LTE_MODE_IND>


<0x4054 OP_L1CD_DEREG_GSM_MODE_IND>
    signalHeader  struct       T_MsgHeader  
</0x4054 OP_L1CD_DEREG_GSM_MODE_IND>


<0x405a OP_L1CD_L1G_SCHEDULE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x405a OP_L1CD_L1G_SCHEDULE_REQ>


<0x405b OP_L1CD_ABORT_L1G_SCHEDULE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x405b OP_L1CD_ABORT_L1G_SCHEDULE_REQ>


<0x4055 OP_L1CD_ABORT_L1G_SCHEDULE_CNF>
    signalHeader  struct       T_MsgHeader  
</0x4055 OP_L1CD_ABORT_L1G_SCHEDULE_CNF>


<0x4043 OP_L1CD_ENTER_LTE_PS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4043 OP_L1CD_ENTER_LTE_PS_IND>


<0x4044 OP_L1CD_EXIT_LTE_PS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4044 OP_L1CD_EXIT_LTE_PS_IND>


<0x4056 OP_L1CD_ENTER_GSM_PS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4056 OP_L1CD_ENTER_GSM_PS_IND>


<0x405c OP_L1CD_EXIT_GSM_PS_IND>
    signalHeader  struct       T_MsgHeader  
</0x405c OP_L1CD_EXIT_GSM_PS_IND>


<0x405e OP_L1CD_ENTER_PS_MODE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x405e OP_L1CD_ENTER_PS_MODE_REQ>


<0x405f OP_L1CD_EXIT_PS_MODE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x405f OP_L1CD_EXIT_PS_MODE_REQ>


<0x4045 OP_L1CD_ENTER_LTE_CS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4045 OP_L1CD_ENTER_LTE_CS_IND>


<0x4046 OP_L1CD_EXIT_LTE_CS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4046 OP_L1CD_EXIT_LTE_CS_IND>


<0x4057 OP_L1CD_ENTER_GSM_CS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4057 OP_L1CD_ENTER_GSM_CS_IND>


<0x4058 OP_L1CD_EXIT_GSM_CS_IND>
    signalHeader  struct       T_MsgHeader  
</0x4058 OP_L1CD_EXIT_GSM_CS_IND>


<0x4060 OP_L1CD_ENTER_CS_MODE_REQ>
    signalHeader  struct       T_MsgHeader  
    csMasterMode  u16          u16          csMasterMode  |input;|
    reserved      u16          u16          reserved      |input;|
</0x4060 OP_L1CD_ENTER_CS_MODE_REQ>


<0x4061 OP_L1CD_EXIT_CS_MODE_REQ>
    signalHeader  struct       T_MsgHeader  
    csMasterMode  u16          u16          csMasterMode  |input;|
    reserved      u16          u16          reserved      |input;|
</0x4061 OP_L1CD_EXIT_CS_MODE_REQ>


<0x4063 OP_L1CD_GAP_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4063 OP_L1CD_GAP_ABORT_REQ>


<0x406b OP_L1CD_GAP_ABORT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x406b OP_L1CD_GAP_ABORT_CNF>


<0x4051 OP_L1CD_PROT_GAP_ABORT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4051 OP_L1CD_PROT_GAP_ABORT_REQ>


<0x4048 OP_L1CD_PROT_GAP_ABORT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x4048 OP_L1CD_PROT_GAP_ABORT_CNF>


<0x4064 OP_L1CD_SUSPEND_TRANS_REQ>
    signalHeader            struct                    T_MsgHeader               
    L1CD_SUSPEND_TRANS_REQ  struct                    T_L1CD_SUSPEND_TRANS_REQ  
</0x4064 OP_L1CD_SUSPEND_TRANS_REQ>


<0x406e OP_L1CD_SUSPEND_TRANS_CNF>
    signalHeader  struct       T_MsgHeader  
</0x406e OP_L1CD_SUSPEND_TRANS_CNF>


<0x4065 OP_L1CD_RESUME_TRANS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x4065 OP_L1CD_RESUME_TRANS_REQ>


<0x4049 OP_L1CD_BASE_TIME_CHANGE_IND>
    signalHeader  struct       T_MsgHeader  
</0x4049 OP_L1CD_BASE_TIME_CHANGE_IND>


<0x404a OP_L1CD_LTE_DRX_DEACTIVE_IND>
    signalHeader  struct       T_MsgHeader  
</0x404a OP_L1CD_LTE_DRX_DEACTIVE_IND>


<0x404b OP_L1CD_LTE_DRX_ACTIVE_IND>
    signalHeader  struct       T_MsgHeader  
</0x404b OP_L1CD_LTE_DRX_ACTIVE_IND>


<0x4068 OP_L1CD_GAP_APPLY_IND>
    signalHeader        struct                T_MsgHeader           
    L1CD_GAP_APPLY_IND  struct                T_L1CD_GAP_APPLY_IND  
</0x4068 OP_L1CD_GAP_APPLY_IND>


<0x4069 OP_L1CD_GAP_CANCEL_IND>
    signalHeader         struct                 T_MsgHeader            
    L1CD_GAP_CANCEL_IND  struct                 T_L1CD_GAP_CANCEL_IND  
</0x4069 OP_L1CD_GAP_CANCEL_IND>


<0x4062 OP_L1CD_GAP_INFO_RSP>
    signalHeader       struct               T_MsgHeader          
    L1CD_GAP_INFO_RSP  struct               T_L1CD_GAP_INFO_RSP  
</0x4062 OP_L1CD_GAP_INFO_RSP>


<0x406a OP_L1CD_GAP_END_IND>
    signalHeader      struct              T_MsgHeader         
    L1CD_GAP_END_IND  struct              T_L1CD_GAP_END_IND  
</0x406a OP_L1CD_GAP_END_IND>


<0x406c OP_L1CD_PROT_GAP_APPLY_IND>
    signalHeader             struct                     T_MsgHeader                
    L1CD_PROT_GAP_APPLY_IND  struct                     T_L1CD_PROT_GAP_APPLY_IND  
</0x406c OP_L1CD_PROT_GAP_APPLY_IND>


<0x406d OP_L1CD_PROT_GAP_CANCEL_IND>
    signalHeader              struct                      T_MsgHeader                 
    L1CD_PROT_GAP_CANCEL_IND  struct                      T_L1CD_PROT_GAP_CANCEL_IND  
</0x406d OP_L1CD_PROT_GAP_CANCEL_IND>


<0x4050 OP_L1CD_PROT_GAP_INFO_RSP>
    signalHeader            struct                    T_MsgHeader               
    L1CD_PROT_GAP_INFO_RSP  struct                    T_L1CD_PROT_GAP_INFO_RSP  
</0x4050 OP_L1CD_PROT_GAP_INFO_RSP>


<0x4047 OP_L1CD_PROT_GAP_END_IND>
    signalHeader           struct                   T_MsgHeader              
    L1CD_PROT_GAP_END_IND  struct                   T_L1CD_PROT_GAP_END_IND  
</0x4047 OP_L1CD_PROT_GAP_END_IND>


<0x404c OP_L1CD_PROT_GAP_PATTERN_IND>
    signalHeader               struct                       T_MsgHeader                  
    L1CD_PROT_GAP_PATTERN_IND  struct                       T_L1CD_PROT_GAP_PATTERN_IND  
</0x404c OP_L1CD_PROT_GAP_PATTERN_IND>


<sub T_L1CD_EVENT_TRIGGER_IND>
    eventType  u16  u16  eventType  |input;|
    cardInfo   u16  u16  cardInfo   |input;|
    taskType   u16  u16  taskType   |input;|
</sub T_L1CD_EVENT_TRIGGER_IND>


<0x4066 OP_L1CD_EVENT_TRIGGER_IND>
    signalHeader            struct                    T_MsgHeader               
    L1CD_EVENT_TRIGGER_IND  struct                    T_L1CD_EVENT_TRIGGER_IND  
</0x4066 OP_L1CD_EVENT_TRIGGER_IND>


<0x404d OP_L1CD_ENTER_LTE_LIMITED_PRO_IND>
    signalHeader                    struct                            T_MsgHeader                       
    L1CD_ENTER_LTE_LIMITED_PRO_IND  struct                            T_L1CD_ENTER_LTE_LIMITED_PRO_IND  
</0x404d OP_L1CD_ENTER_LTE_LIMITED_PRO_IND>


<0x404e OP_L1CD_EXIT_LTE_LIMITED_PRO_IND>
    signalHeader                   struct                           T_MsgHeader                      
    L1CD_EXIT_LTE_LIMITED_PRO_IND  struct                           T_L1CD_EXIT_LTE_LIMITED_PRO_IND  
</0x404e OP_L1CD_EXIT_LTE_LIMITED_PRO_IND>


<sub T_EquvPlmnList>
    rplmn[MAX_PLMN_LEN]                             array  u8     rplmn                                           |multiedit;|
    equvPlmnList[61]                                array  u8     equvPlmnList                                    |multiedit;|
</sub T_EquvPlmnList>


<sub T_Imsi>
    length                   u8     u8     length                   |input;|
    imsiCon[8]               array  u8     imsiCon                  |multiedit;|
    fillByte                 u8     u8     fillByte                 |input;|
    reserved                 u16    u16    reserved                 |input;|
</sub T_Imsi>


<sub T_NvCarrierFreqNB>
    earfcn       u32    u32    earfcn       |input;|
    offset       s8     s8     offset       |input;|
    reserved[3]  array  u8     reserved     |multiedit;|
</sub T_NvCarrierFreqNB>


<sub T_EpsLoci>
    guti[12]      array  u8     guti          |multiedit;|
    regTai[5]     array  u8     regTai        |multiedit;|
    updateStatus  u8     u8     updateStatus  |input;|
    reserved[34]  array  u8     reserved      |multiedit;|
</sub T_EpsLoci>


<sub T_EpsNSC>
    length        u8     u8     length        |input;|
    epsNsc[64]    array  u8     epsNsc        |multiedit;|
    reserved[67]  array  u8     reserved      |multiedit;|
</sub T_EpsNSC>


<sub T_DefaultPdnCfg>
    pdnType                u8                     u8                     pdnType                |input;|
    nSlpi                  u8                     u8                     nSlpi                  |input;|
    apn[4]                 array                  T_apn                  apn                    |multiedit;|
    reserve[2]             array                  u8                     reserve                |multiedit;|
</sub T_DefaultPdnCfg>


<sub T_apn
    apn[MAX_APN_LEN+1]     array                  u8                     apn                    |multiedit;|
</sub T_apn


<sub T_HccpCfg>
    enable       u8     u8     enable       |input;|
    profile      u8     u8     profile      |input;|
    maxCid       u16    u16    maxCid       |input;|
    reserve[16]  array  u8     reserve      |multiedit;|
</sub T_HccpCfg>


<sub H_PsDataOffCfg>
    enablePsDataOff        u8   u8   enablePsDataOff        |input;|
    reserved               u8   u8   reserved               |input;|
    exempted_service_type  u16  u16  exempted_service_type  |input;|
</sub H_PsDataOffCfg>


<sub T_EmmT3402Info>
    t3402Value  u32    u32    t3402Value  |input;|
    rejPlmn[3]  array  u8     rejPlmn     |multiedit;|
    reserved    u8     u8     reserved    |input;|
</sub T_EmmT3402Info>


<sub T_T3396_BakupInfo>
    t3396RemainLen                u32    u32    t3396RemainLen                |input;|
    apnLen                        u8     u8     apnLen                        |input;|
    StartPlmn[3]                  array  u8     StartPlmn                     |multiedit;|
    t3396Apn[MAX_BACKUP_APN_LEN]  array  u8     t3396Apn                      |multiedit;|
    BackOffProc                   u8     u8     BackOffProc                   |input;|
    lowPrioInd                    u8     u8     lowPrioInd                    |input;|
    reserved[2]                   array  u8     reserved                      |multiedit;|
</sub T_T3396_BakupInfo>


<sub T_NasTimerBackup>
    t3245RemainLen                        u32                u32                t3245RemainLen                        |input;|
    t3346RemainLen                        u32                u32                t3346RemainLen                        |input;|
    t3346StartPlmn[3]                     array              u8                 t3346StartPlmn                        |multiedit;|
    t3346ExceptionData                    u8                 u8                 t3346ExceptionData                    |input;|
    t3346LowPriority                      u8                 u8                 t3346LowPriority                      |input;|
    t3396bakupNum                         u8                 u8                 t3396bakupNum                         |input;|
    reserved[2]                           array              u8                 reserved                              |multiedit;|
    t3396BakupInfo[MAX_T3396_BACKUP_NUM]  array              T_T3396_BakupInfo  t3396BakupInfo                        |multiedit;|
    emmT3402Info                          struct             T_EmmT3402Info     
    reserved1[128]                        array              u8                 reserved1                             |multiedit;|
</sub T_NasTimerBackup>


<sub T_Dynamic_nas>
    mmcequvPlmn                                     struct            T_EquvPlmnList    
    mmcprevUsedLteFreq[MAX_PREV_USED_LTE_FREQ_LEN]  array             u32               mmcprevUsedLteFreq                              |multiedit;|
    ltePrevUsedBand[8]                              array             u8                ltePrevUsedBand                                 |multiedit;|
    epsLoci                                         struct            T_EpsLoci         
    epsNsc                                          struct            T_EpsNSC          
    nasTimer                                        struct            T_NasTimerBackup  
    GsmBaNb                                         u8                u8                GsmBaNb                                         |input;|
    GsmBaBandList                                   u8                u8                GsmBaBandList                                   |input;|
    GsmBa[MAX_PREV_USED_GSM_BA_NUM]                 array             u16               GsmBa                                           |multiedit;|
</sub T_Dynamic_nas>


<sub T_StoredArfcnInfo>
    arfcn                                   u32    u32    arfcn                                   |input;|
    plmnNum                                 u8     u8     plmnNum                                 |input;|
    cellCharacterBitMap                     u8     u8     cellCharacterBitMap                     |input;|
    plmn[18]                                array  u8     plmn                                    |multiedit;|
</sub T_StoredArfcnInfo>


<sub T_EasStoredInfo>
    arfcnNum                          u8                 u8                 arfcnNum                          |input;|
    reserved[3]                       array              u8                 reserved                          |multiedit;|
    arfcnInfo[MAX_STORED_EARFCN_NUM]  array              T_StoredArfcnInfo  arfcnInfo                         |multiedit;|
</sub T_EasStoredInfo>


<sub T_NVM_Dynamic_PS>
    imsi           struct           T_Imsi           
    lteNas         struct           T_Dynamic_nas    
    nbnas          struct           T_Dynamic_nas    
    randSand       u32              u32              randSand       |input;|
    easStoredInfo  struct           T_EasStoredInfo  
</sub T_NVM_Dynamic_PS>


<sub T_SecurityCapability>
    lteCipheringAlgorithmCap            u16  u16  lteCipheringAlgorithmCap            |input;|
    lteIntegrityProtectionAlgorithmCap  u16  u16  lteIntegrityProtectionAlgorithmCap  |input;|
</sub T_SecurityCapability>


<sub T_featureGroupIndicator>
    Bit1:1   u32  u32  Bit1:1   |input;|
    Bit2:1   u32  u32  Bit2:1   |input;|
    Bit3:1   u32  u32  Bit3:1   |input;|
    Bit4:1   u32  u32  Bit4:1   |input;|
    Bit5:1   u32  u32  Bit5:1   |input;|
    Bit6:1   u32  u32  Bit6:1   |input;|
    Bit7:1   u32  u32  Bit7:1   |input;|
    Bit8:1   u32  u32  Bit8:1   |input;|
    Bit9:1   u32  u32  Bit9:1   |input;|
    Bit10:1  u32  u32  Bit10:1  |input;|
    Bit11:1  u32  u32  Bit11:1  |input;|
    Bit12:1  u32  u32  Bit12:1  |input;|
    Bit13:1  u32  u32  Bit13:1  |input;|
    Bit14:1  u32  u32  Bit14:1  |input;|
    Bit15:1  u32  u32  Bit15:1  |input;|
    Bit16:1  u32  u32  Bit16:1  |input;|
    Bit17:1  u32  u32  Bit17:1  |input;|
    Bit18:1  u32  u32  Bit18:1  |input;|
    Bit19:1  u32  u32  Bit19:1  |input;|
    Bit20:1  u32  u32  Bit20:1  |input;|
    Bit21:1  u32  u32  Bit21:1  |input;|
    Bit22:1  u32  u32  Bit22:1  |input;|
    Bit23:1  u32  u32  Bit23:1  |input;|
    Bit24:1  u32  u32  Bit24:1  |input;|
    Bit25:1  u32  u32  Bit25:1  |input;|
    Bit26:1  u32  u32  Bit26:1  |input;|
    Bit27:1  u32  u32  Bit27:1  |input;|
    Bit28:1  u32  u32  Bit28:1  |input;|
    Bit29:1  u32  u32  Bit29:1  |input;|
    Bit30:1  u32  u32  Bit30:1  |input;|
    Bit31:1  u32  u32  Bit31:1  |input;|
    Bit32:1  u32  u32  Bit32:1  |input;|
</sub T_featureGroupIndicator>


<sub T_featureGroupIndRel9Add>
    Bit33:1  u32  u32  Bit33:1  |input;|
    Bit34:1  u32  u32  Bit34:1  |input;|
    Bit35:1  u32  u32  Bit35:1  |input;|
    Bit36:1  u32  u32  Bit36:1  |input;|
    Bit37:1  u32  u32  Bit37:1  |input;|
    Bit38:1  u32  u32  Bit38:1  |input;|
    Bit39:1  u32  u32  Bit39:1  |input;|
    Bit40:1  u32  u32  Bit40:1  |input;|
    Bit41:1  u32  u32  Bit41:1  |input;|
    Bit42:1  u32  u32  Bit42:1  |input;|
    Bit43:1  u32  u32  Bit43:1  |input;|
    Bit44:1  u32  u32  Bit44:1  |input;|
    Bit45:1  u32  u32  Bit45:1  |input;|
    Bit46:1  u32  u32  Bit46:1  |input;|
    Bit47:1  u32  u32  Bit47:1  |input;|
    Bit48:1  u32  u32  Bit48:1  |input;|
    Bit49:1  u32  u32  Bit49:1  |input;|
    Bit50:1  u32  u32  Bit50:1  |input;|
    Bit51:1  u32  u32  Bit51:1  |input;|
    Bit52:1  u32  u32  Bit52:1  |input;|
    Bit53:1  u32  u32  Bit53:1  |input;|
    Bit54:1  u32  u32  Bit54:1  |input;|
    Bit55:1  u32  u32  Bit55:1  |input;|
    Bit56:1  u32  u32  Bit56:1  |input;|
    Bit57:1  u32  u32  Bit57:1  |input;|
    Bit58:1  u32  u32  Bit58:1  |input;|
    Bit59:1  u32  u32  Bit59:1  |input;|
    Bit60:1  u32  u32  Bit60:1  |input;|
    Bit61:1  u32  u32  Bit61:1  |input;|
    Bit62:1  u32  u32  Bit62:1  |input;|
    Bit63:1  u32  u32  Bit63:1  |input;|
    Bit64:1  u32  u32  Bit64:1  |input;|
</sub T_featureGroupIndRel9Add>


<sub T_featureGroupIndRel10>
    Bit101:1  u32  u32  Bit101:1  |input;|
    Bit102:1  u32  u32  Bit102:1  |input;|
    Bit103:1  u32  u32  Bit103:1  |input;|
    Bit104:1  u32  u32  Bit104:1  |input;|
    Bit105:1  u32  u32  Bit105:1  |input;|
    Bit106:1  u32  u32  Bit106:1  |input;|
    Bit107:1  u32  u32  Bit107:1  |input;|
    Bit108:1  u32  u32  Bit108:1  |input;|
    Bit109:1  u32  u32  Bit109:1  |input;|
    Bit110:1  u32  u32  Bit110:1  |input;|
    Bit111:1  u32  u32  Bit111:1  |input;|
    Bit112:1  u32  u32  Bit112:1  |input;|
    Bit113:1  u32  u32  Bit113:1  |input;|
    Bit114:1  u32  u32  Bit114:1  |input;|
    Bit115:1  u32  u32  Bit115:1  |input;|
    Bit116:1  u32  u32  Bit116:1  |input;|
    Bit117:1  u32  u32  Bit117:1  |input;|
    Bit118:1  u32  u32  Bit118:1  |input;|
    Bit119:1  u32  u32  Bit119:1  |input;|
    Bit120:1  u32  u32  Bit120:1  |input;|
    Bit121:1  u32  u32  Bit121:1  |input;|
    Bit122:1  u32  u32  Bit122:1  |input;|
    Bit123:1  u32  u32  Bit123:1  |input;|
    Bit124:1  u32  u32  Bit124:1  |input;|
    Bit125:1  u32  u32  Bit125:1  |input;|
    Bit126:1  u32  u32  Bit126:1  |input;|
    Bit127:1  u32  u32  Bit127:1  |input;|
    Bit128:1  u32  u32  Bit128:1  |input;|
    Bit129:1  u32  u32  Bit129:1  |input;|
    Bit130:1  u32  u32  Bit130:1  |input;|
    Bit131:1  u32  u32  Bit131:1  |input;|
    Bit132:1  u32  u32  Bit132:1  |input;|
</sub T_featureGroupIndRel10>


<sub T_featureGroupInd>
    featureGroupIndicator_fdd   struct                    T_featureGroupIndicator   
    featureGroupIndicator_tdd   struct                    T_featureGroupIndicator   
    featureGroupIndRel9Add_fdd  struct                    T_featureGroupIndRel9Add  
    featureGroupIndRel9Add_tdd  struct                    T_featureGroupIndRel9Add  
    featureGroupIndRel10_fdd    struct                    T_featureGroupIndRel10    
    featureGroupIndRel10_tdd    struct                    T_featureGroupIndRel10    
</sub T_featureGroupInd>


<sub T_PdcpParameters>
    rohcProfile0001:1                u32  u32  rohcProfile0001:1                |input;|
    rohcProfile0002:1                u32  u32  rohcProfile0002:1                |input;|
    rohcProfile0003:1                u32  u32  rohcProfile0003:1                |input;|
    rohcProfile0004:1                u32  u32  rohcProfile0004:1                |input;|
    rohcProfile0006:1                u32  u32  rohcProfile0006:1                |input;|
    rohcProfile0101:1                u32  u32  rohcProfile0101:1                |input;|
    rohcProfile0102:1                u32  u32  rohcProfile0102:1                |input;|
    rohcProfile0103:1                u32  u32  rohcProfile0103:1                |input;|
    rohcProfile0104:1                u32  u32  rohcProfile0104:1                |input;|
    maxNumberROHC_ContextSessions:4  u32  u32  maxNumberROHC_ContextSessions:4  |input;|
    pdcp_SN_Extension:1              u32  u32  pdcp_SN_Extension:1              |input;|
    supportRohcContextContinue:1     u32  u32  supportRohcContextContinue:1     |input;|
    pdcp_SN_Extension_18bits_r13:1   u32  u32  pdcp_SN_Extension_18bits_r13:1   |input;|
    reserved:16                      u32  u32  reserved:16                      |input;|
</sub T_PdcpParameters>


<sub T_RlcParameters>
    extendedRlcLiField_r12:1    u32  u32  extendedRlcLiField_r12:1    |input;|
    extendedRlcSnSoField_r13:1  u32  u32  extendedRlcSnSoField_r13:1  |input;|
    reserved:30                 u32  u32  reserved:30                 |input;|
</sub T_RlcParameters>


<sub T_PhysicalLayerParameters>
    ue_TxAntennaSelectionSupported_fdd:1       u32  u32  ue_TxAntennaSelectionSupported_fdd:1       |input;|
    ue_TxAntennaSelectionSupported_tdd:1       u32  u32  ue_TxAntennaSelectionSupported_tdd:1       |input;|
    ue_SpecificRefSigsSupported:1              u32  u32  ue_SpecificRefSigsSupported:1              |input;|
    enhancedDualLayerFDD:1                     u32  u32  enhancedDualLayerFDD:1                     |input;|
    enhancedDualLayerTDD:1                     u32  u32  enhancedDualLayerTDD:1                     |input;|
    two_AntennaPortsForPUCCH_r10:1             u32  u32  two_AntennaPortsForPUCCH_r10:1             |input;|
    tm9_With_8Tx_FDD_r10:1                     u32  u32  tm9_With_8Tx_FDD_r10:1                     |input;|
    pmi_Disabling_r10_fdd:1                    u32  u32  pmi_Disabling_r10_fdd:1                    |input;|
    pmi_Disabling_r10_tdd:1                    u32  u32  pmi_Disabling_r10_tdd:1                    |input;|
    simultaneousPUCCH_PUSCH_r10_fdd:1          u32  u32  simultaneousPUCCH_PUSCH_r10_fdd:1          |input;|
    simultaneousPUCCH_PUSCH_r10_tdd:1          u32  u32  simultaneousPUCCH_PUSCH_r10_tdd:1          |input;|
    multiClusterPUSCH_WithinCC_r10_fdd:1       u32  u32  multiClusterPUSCH_WithinCC_r10_fdd:1       |input;|
    multiClusterPUSCH_WithinCC_r10_tdd:1       u32  u32  multiClusterPUSCH_WithinCC_r10_tdd:1       |input;|
    reserved1:19                               u32  u32  reserved1:19                               |input;|
    nonContiguousUL_RA_WithinCC_Info_r10       u32  u32  nonContiguousUL_RA_WithinCC_Info_r10       |input;|
    crs_InterfHandl_r11:1                      u32  u32  crs_InterfHandl_r11:1                      |input;|
    ePDCCH_r11_fdd:1                           u32  u32  ePDCCH_r11_fdd:1                           |input;|
    ePDCCH_r11_tdd:1                           u32  u32  ePDCCH_r11_tdd:1                           |input;|
    ss_CCH_InterfHandl_r11_fdd:1               u32  u32  ss_CCH_InterfHandl_r11_fdd:1               |input;|
    ss_CCH_InterfHandl_r11_tdd:1               u32  u32  ss_CCH_InterfHandl_r11_tdd:1               |input;|
    tdd_SpecialSubframe_r11:1                  u32  u32  tdd_SpecialSubframe_r11:1                  |input;|
    ul_CoMP_r11:1                              u32  u32  ul_CoMP_r11:1                              |input;|
    tm5_FDD:1                                  u32  u32  tm5_FDD:1                                  |input;|
    tm5_TDD:1                                  u32  u32  tm5_TDD:1                                  |input;|
    e_HARQ_Pattern_FDD_r12:1                   u32  u32  e_HARQ_Pattern_FDD_r12:1                   |input;|
    csi_SubframeSet_r12:1                      u32  u32  csi_SubframeSet_r12:1                      |input;|
    phy_TDD_ReConfig_FDD_PCell_r12:1           u32  u32  phy_TDD_ReConfig_FDD_PCell_r12:1           |input;|
    phy_TDD_ReConfig_TDD_PCell_r12:1           u32  u32  phy_TDD_ReConfig_TDD_PCell_r12:1           |input;|
    pusch_SRS_PowerControl_SubframeSet_r12:1   u32  u32  pusch_SRS_PowerControl_SubframeSet_r12:1   |input;|
    enhanced_4TxCodebook_r12:1                 u32  u32  enhanced_4TxCodebook_r12:1                 |input;|
    pusch_FeedbackMode_r12:1                   u32  u32  pusch_FeedbackMode_r12:1                   |input;|
    noResourceRestrictionForTTIBundling_r12:1  u32  u32  noResourceRestrictionForTTIBundling_r12:1  |input;|
    alternativeTBS_Indices_r12:1               u32  u32  alternativeTBS_Indices_r12:1               |input;|
    pucch_Format4_r13_fdd:1                    u32  u32  pucch_Format4_r13_fdd:1                    |input;|
    pucch_Format4_r13_tdd:1                    u32  u32  pucch_Format4_r13_tdd:1                    |input;|
    pucch_Format5_r13_fdd:1                    u32  u32  pucch_Format5_r13_fdd:1                    |input;|
    pucch_Format5_r13_tdd:1                    u32  u32  pucch_Format5_r13_tdd:1                    |input;|
    supportedBlindDecoding_r13:1               u32  u32  supportedBlindDecoding_r13:1               |input;|
    pdcch_CandidateReductions_r13:1            u32  u32  pdcch_CandidateReductions_r13:1            |input;|
    skipMonitoringDCI_Format0_1A_r13:1         u32  u32  skipMonitoringDCI_Format0_1A_r13:1         |input;|
    crs_InterfMitigationTM10_r13:1             u32  u32  crs_InterfMitigationTM10_r13:1             |input;|
    pdsch_CollisionHandling_r13:1              u32  u32  pdsch_CollisionHandling_r13:1              |input;|
    aperiodicCSI_Reporting_r13:2               u32  u32  aperiodicCSI_Reporting_r13:2               |input;|
    spatialBundling_HARQ_ACK_r13:1             u32  u32  spatialBundling_HARQ_ACK_r13:1             |input;|
    uci_PUSCH_Ext_r13:1                        u32  u32  uci_PUSCH_Ext_r13:1                        |input;|
    cch_InterfMitigation_RefRecTypeA_r13:1     u32  u32  cch_InterfMitigation_RefRecTypeA_r13:1     |input;|
    cch_InterfMitigation_RefRecTypeB_r13:1     u32  u32  cch_InterfMitigation_RefRecTypeB_r13:1     |input;|
    ce_PUSCH_NB_MaxTBS_r14:1                   u32  u32  ce_PUSCH_NB_MaxTBS_r14:1                   |input;|
    ce_HARQ_AckBundling_r14:1                  u32  u32  ce_HARQ_AckBundling_r14:1                  |input;|
    ce_PDSCH_TenProcesses_r14:1                u32  u32  ce_PDSCH_TenProcesses_r14:1                |input;|
    ce_PDSCH_PUSCH_Enhancement_r14:1           u32  u32  ce_PDSCH_PUSCH_Enhancement_r14:1           |input;|
    ce_SchedulingEnhancement_r14:1             u32  u32  ce_SchedulingEnhancement_r14:1             |input;|
    ce_SRS_Enhancement_r14:1                   u32  u32  ce_SRS_Enhancement_r14:1                   |input;|
    ce_RetuningSymbols_r14:2                   u32  u32  ce_RetuningSymbols_r14:2                   |input;|
    reserved2:23                               u32  u32  reserved2:23                               |input;|
</sub T_PhysicalLayerParameters>


<sub T_supportedBandEutra>
    supportedBandEutra:7            u16  u16  supportedBandEutra:7            |input;|
    halfDuplex:1                    u16  u16  halfDuplex:1                    |input;|
    dl_256QAM_r12:1                 u16  u16  dl_256QAM_r12:1                 |input;|
    ul_64QAM_r12:1                  u16  u16  ul_64QAM_r12:1                  |input;|
    uePowerClass:3                  u16  u16  uePowerClass:3                  |input;|
    intraFreq_CE_NeedForGaps_r13:1  u16  u16  intraFreq_CE_NeedForGaps_r13:1  |input;|
    multiFreqSearchSupport:1        u16  u16  multiFreqSearchSupport:1        |input;|
    reserved:1                      u16  u16  reserved:1                      |input;|
</sub T_supportedBandEutra>


<sub T_RfParameters>
    supportBandNum:7                                 u32                   u32                   supportBandNum:7                                 |input;|
    freqBandPriorityAdjustment_r12:1                 u32                   u32                   freqBandPriorityAdjustment_r12:1                 |input;|
    reserved:24                                      u32                   u32                   reserved:24                                      |input;|
    supportedBandListEUTRA[EUTRAN_MAX_SUPPORT_BAND]  array                 T_supportedBandEutra  supportedBandListEUTRA                           |multiedit;|
</sub T_RfParameters>


<sub T_MeasurementParameters>
    interFreqNeedForGap:1       u32  u32  interFreqNeedForGap:1       |input;|
    interRatNeedForGap:1        u32  u32  interRatNeedForGap:1        |input;|
    rsrqMeasWideBand_fdd:1      u32  u32  rsrqMeasWideBand_fdd:1      |input;|
    rsrqMeasWideBand_tdd:1      u32  u32  rsrqMeasWideBand_tdd:1      |input;|
    benifitFromInterruption:1   u32  u32  benifitFromInterruption:1   |input;|
    timerT312:1                 u32  u32  timerT312:1                 |input;|
    alternativeTimeToTrigger:1  u32  u32  alternativeTimeToTrigger:1  |input;|
    incMonEutra:1               u32  u32  incMonEutra:1               |input;|
    extendedMaxMeasId:1         u32  u32  extendedMaxMeasId:1         |input;|
    extendedRSRQLowerRange:1    u32  u32  extendedRSRQLowerRange:1    |input;|
    rsrqOnAllSymbols:1          u32  u32  rsrqOnAllSymbols:1          |input;|
    crsDiscoverySignalMeas:1    u32  u32  crsDiscoverySignalMeas:1    |input;|
    csirsDiscoverySignalMeas:1  u32  u32  csirsDiscoverySignalMeas:1  |input;|
    rsSINRMeas:1                u32  u32  rsSINRMeas:1                |input;|
    supWhiteCellList:1          u32  u32  supWhiteCellList:1          |input;|
    extendedMaxObjectId:1       u32  u32  extendedMaxObjectId:1       |input;|
    ulPDCPDelay:1               u32  u32  ulPDCPDelay:1               |input;|
    extendedFreqPriorities:1    u32  u32  extendedFreqPriorities:1    |input;|
    multiBandInfoReport:1       u32  u32  multiBandInfoReport:1       |input;|
    rssiChanlOccupReporting:1   u32  u32  rssiChanlOccupReporting:1   |input;|
    ceMeasurements_r14:1        u32  u32  ceMeasurements_r14:1        |input;|
    reserved:11                 u32  u32  reserved:11                 |input;|
</sub T_MeasurementParameters>


<sub T_GeneralParameters>
    deviceType:1                      u32  u32  deviceType:1                      |input;|
    ueRxTxTimeDiffMeasurements_r11:1  u32  u32  ueRxTxTimeDiffMeasurements_r11:1  |input;|
    reserved:30                       u32  u32  reserved:30                       |input;|
</sub T_GeneralParameters>


<sub T_NeighCellSiAcqPara>
    intraFreqSiAcqForHo_fdd:1  u32  u32  intraFreqSiAcqForHo_fdd:1  |input;|
    intraFreqSiAcqForHo_tdd:1  u32  u32  intraFreqSiAcqForHo_tdd:1  |input;|
    interFreqSiAcqForHo_fdd:1  u32  u32  interFreqSiAcqForHo_fdd:1  |input;|
    interFreqSiAcqForHo_tdd:1  u32  u32  interFreqSiAcqForHo_tdd:1  |input;|
    reserved:28                u32  u32  reserved:28                |input;|
</sub T_NeighCellSiAcqPara>


<sub T_MacParameters>
    longDRX_Command_r12:1                 u32  u32  longDRX_Command_r12:1                 |input;|
    logicalChannelSR_ProhibitTimer_r12:1  u32  u32  logicalChannelSR_ProhibitTimer_r12:1  |input;|
    extendedMAC_LengthField_r13:1         u32  u32  extendedMAC_LengthField_r13:1         |input;|
    extendedLongDRX_r13:1                 u32  u32  extendedLongDRX_r13:1                 |input;|
    reserved:28                           u32  u32  reserved:28                           |input;|
</sub T_MacParameters>


<sub T_CeParameters>
    ce_ModeA_r13:1                 u32  u32  ce_ModeA_r13:1                 |input;|
    ce_ModeB_r13:1                 u32  u32  ce_ModeB_r13:1                 |input;|
    intraFreqA3_CE_ModeA_r13:1     u32  u32  intraFreqA3_CE_ModeA_r13:1     |input;|
    intraFreqA3_CE_ModeB_r13:1     u32  u32  intraFreqA3_CE_ModeB_r13:1     |input;|
    intraFreqHO_CE_ModeA_r13:1     u32  u32  intraFreqHO_CE_ModeA_r13:1     |input;|
    intraFreqHO_CE_ModeB_r13:1     u32  u32  intraFreqHO_CE_ModeB_r13:1     |input;|
    ue_CE_NeedULGaps_r13:1         u32  u32  ue_CE_NeedULGaps_r13:1         |input;|
    unicastFrequencyHopping_r13:1  u32  u32  unicastFrequencyHopping_r13:1  |input;|
    tm6_CE_ModeA_r13_tdd:1         u32  u32  tm6_CE_ModeA_r13_tdd:1         |input;|
    tm6_CE_ModeA_r13_fdd:1         u32  u32  tm6_CE_ModeA_r13_fdd:1         |input;|
    tm9_CE_ModeA_r13_tdd:1         u32  u32  tm9_CE_ModeA_r13_tdd:1         |input;|
    tm9_CE_ModeA_r13_fdd:1         u32  u32  tm9_CE_ModeA_r13_fdd:1         |input;|
    tm9_CE_ModeB_r13_tdd:1         u32  u32  tm9_CE_ModeB_r13_tdd:1         |input;|
    tm9_CE_ModeB_r13_fdd:1         u32  u32  tm9_CE_ModeB_r13_fdd:1         |input;|
    reserved:18                    u32  u32  reserved:18                    |input;|
</sub T_CeParameters>


<sub T_RadioAccessCapabilityLte>
    release                u8                         u8                         release                |input;|
    ueCategory             u8                         u8                         ueCategory             |input;|
    ueCategoryDL           u8                         u8                         ueCategoryDL           |input;|
    ueCategoryUL           u8                         u8                         ueCategoryUL           |input;|
    pdcpParam              struct                     T_PdcpParameters           
    rlcParam               struct                     T_RlcParameters            
    physicalLayerParam     struct                     T_PhysicalLayerParameters  
    rfParam                struct                     T_RfParameters             
    measurementParam       struct                     T_MeasurementParameters    
    generalParam           struct                     T_GeneralParameters        
    neighCellSiAcqParam    struct                     T_NeighCellSiAcqPara       
    macParam               struct                     T_MacParameters            
    ceParam                struct                     T_CeParameters             
    featureGroupIndicator  struct                     T_featureGroupInd          
</sub T_RadioAccessCapabilityLte>


<sub T_SupportedBandNB>
    freqBandIndicator         u16  u16  freqBandIndicator         |input;|
    powerClassNB20dbmSupport  u8   u8   powerClassNB20dbmSupport  |input;|
    reserved                  u8   u8   reserved                  |input;|
</sub T_SupportedBandNB>


<sub T_RadioAccessCapabilityLteNB>
    release                 u8                 u8                 release                 |input;|
    ueCategory              u8                 u8                 ueCategory              |input;|
    multiDRBSupport         u8                 u8                 multiDRBSupport         |input;|
    pdcpSupportROHC         u8                 u8                 pdcpSupportROHC         |input;|
    pdcpMaxNumROHCSessions  u8                 u8                 pdcpMaxNumROHCSessions  |input;|
    multiToneSupport        u8                 u8                 multiToneSupport        |input;|
    multiCarrierSupport     u8                 u8                 multiCarrierSupport     |input;|
    supportBandNum          u8                 u8                 supportBandNum          |input;|
    supportedBandEutra[10]  array              T_SupportedBandNB  supportedBandEutra      |multiedit;|
    multiNSPmaxSupport      u8                 u8                 multiNSPmaxSupport      |input;|
    switchBs                u8                 u8                 switchBs                |input;|
    reserved[2]             array              u8                 reserved                |multiedit;|
</sub T_RadioAccessCapabilityLteNB>


<sub T_UeCapabilityRequenstedLte>
    radioAccessCapability_NB  struct                        T_RadioAccessCapabilityLteNB  
    securityCapbility         struct                        T_SecurityCapability          
</sub T_UeCapabilityRequenstedLte>


<sub T_InterRatCapabilty>
    supportGeran:1         u32  u32  supportGeran:1         |input;|
    interratPsHoToGeran:1  u32  u32  interratPsHoToGeran:1  |input;|
    reserved:30            u32  u32  reserved:30            |input;|
</sub T_InterRatCapabilty>


<sub T_ImsParam>
    sip_mwiExpireSec     u32    u32    sip_mwiExpireSec     |input;|
    sip_mwiEventEnabled  u8     u8     sip_mwiEventEnabled  |input;|
    amr_codec_mode       u8     u8     amr_codec_mode       |input;|
    reserved[6]          array  u8     reserved             |multiedit;|
    deltaNvImsiMcc       u16    u16    deltaNvImsiMcc       |input;|
    deltaNvImsiMnc       u16    u16    deltaNvImsiMnc       |input;|
    reserved1[16]        array  u8     reserved1            |multiedit;|
</sub T_ImsParam>


<sub T_NasCapability>
    signallingPrioritySupport:1          u32              u32              signallingPrioritySupport:1          |input;|
    attachWithImsiSupport:1              u32              u32              attachWithImsiSupport:1              |input;|
    Timer_T3245_Support:1                u32              u32              Timer_T3245_Support:1                |input;|
    eabSupported:1                       u32              u32              eabSupported:1                       |input;|
    FastFirstHiPriPLMNSearch:1           u32              u32              FastFirstHiPriPLMNSearch:1           |input;|
    cp_ciot_support:1                    u32              u32              cp_ciot_support:1                    |input;|
    up_ciot_support:1                    u32              u32              up_ciot_support:1                    |input;|
    emmRegWithoutPdnSupport:1            u32              u32              emmRegWithoutPdnSupport:1            |input;|
    emmRegWithoutPdnSupportOnly:1        u32              u32              emmRegWithoutPdnSupportOnly:1        |input;|
    smsWithoutComAttSupport:1            u32              u32              smsWithoutComAttSupport:1            |input;|
    niddSupport:1                        u32              u32              niddSupport:1                        |input;|
    S1_U_DataTransferSupport:1           u32              u32              S1_U_DataTransferSupport:1           |input;|
    cp_hc_support:1                      u32              u32              cp_hc_support:1                      |input;|
    cp_up_prefer:2                       u32              u32              cp_up_prefer:2                       |input;|
    ePCObit_support:1                    u32              u32              ePCObit_support:1                    |input;|
    ExcepDataReportAllowed:1             u32              u32              ExcepDataReportAllowed:1             |input;|
    psmSupport:1                         u32              u32              psmSupport:1                         |input;|
    eDrxSupport:1                        u32              u32              eDrxSupport:1                        |input;|
    lteUsageSetting:1                    u32              u32              lteUsageSetting:1                    |input;|
    lteSmsPrefer:1                       u32              u32              lteSmsPrefer:1                       |input;|
    srvccSupport:1                       u32              u32              srvccSupport:1                       |input;|
    overrideSignallingPrioritySupport:1  u32              u32              overrideSignallingPrioritySupport:1  |input;|
    overrideEabSupported:1               u32              u32              overrideEabSupported:1               |input;|
    apnRateCtrl:1                        u32              u32              apnRateCtrl:1                        |input;|
    nonIpMTU:1                           u32              u32              nonIpMTU:1                           |input;|
    ipv4MTU:1                            u32              u32              ipv4MTU:1                            |input;|
    DataPdnAutoAct:1                     u32              u32              DataPdnAutoAct:1                     |input;|
    reserv:4                             u32              u32              reserv:4                             |input;|
    lteVoicePrefer                       u8               u8               lteVoicePrefer                       |input;|
    MinimumPeriodicSearchTimer           u8               u8               MinimumPeriodicSearchTimer           |input;|
    SM_RetryWaitTime                     u8               u8               SM_RetryWaitTime                     |input;|
    RequiredT3412ExtendValue             u8               u8               RequiredT3412ExtendValue             |input;|
    RequiredT3324Value                   u8               u8               RequiredT3324Value                   |input;|
    RequiredExtendedDrx                  u8               u8               RequiredExtendedDrx                  |input;|
    LteRatType                           u8               u8               LteRatType                           |input;|
    eutranDisableForEmmCause15           u8               u8               eutranDisableForEmmCause15           |input;|
    smRetryAtRATChange                   u8               u8               smRetryAtRATChange                   |input;|
    ciotReport                           u8               u8               ciotReport                           |input;|
    PsDataOnlyPingAllowed                u8               u8               PsDataOnlyPingAllowed                |input;|
    reserved                             u8               u8               reserved                             |input;|
    defaultApnCfg                        struct           T_DefaultPdnCfg  
    defaultHccpCfg                       struct           T_HccpCfg        
    psdataOffCfg                         struct           H_PsDataOffCfg   
    reserved1[32]                        array            u8               reserved1                            |multiedit;|
    imsParam                             struct           T_ImsParam       
</sub T_NasCapability>


<sub T_UeCapabilityRequenstedLte_wb>
    lteEqPout              u8                          u8                          lteEqPout              |input;|
    lteRatSupport          u8                          u8                          lteRatSupport          |input;|
    reserved[2]            array                       u8                          reserved               |multiedit;|
    radioAccessCapability  struct                      T_RadioAccessCapabilityLte  
    securityCapbility      struct                      T_SecurityCapability        
</sub T_UeCapabilityRequenstedLte_wb>


<sub T_NVM_Static_PsCap_wb>
    eUtranCapability  struct                          T_UeCapabilityRequenstedLte_wb  
    geranCapablity    struct                          T_InterRatCapabilty             
</sub T_NVM_Static_PsCap_wb>


<sub T_LteBlindCellListInfo>
    serverCellFreq     u16    u16    serverCellFreq     |input;|
    serverCellId       u16    u16    serverCellId       |input;|
    cellNum            u16    u16    cellNum            |input;|
    reserved           u16    u16    reserved           |input;|
    cellPhyIdList[16]  array  u16    cellPhyIdList      |multiedit;|
</sub T_LteBlindCellListInfo>


<sub T_LteBlindStubInfo>
    cellListNum       u8                      u8                      cellListNum       |input;|
    stubType          u8                      u8                      stubType          |input;|
    reserved[2]       array                   u8                      reserved          |multiedit;|
    cellListInfo[12]  array                   T_LteBlindCellListInfo  cellListInfo      |multiedit;|
</sub T_LteBlindStubInfo>


<sub T_NVM_FlowCtrlPara>
    lteDIFlowCtrlOpen   u8     u8     lteDIFlowCtrlOpen   |input;|
    lteDIFlowCtrlClose  u8     u8     lteDIFlowCtrlClose  |input;|
    reserved[2]         array  u8     reserved            |multiedit;|
</sub T_NVM_FlowCtrlPara>


<sub T_LocFrequencyinfo>
    freqNum   u16    u16    freqNum   |input;|
    reserved  u16    u16    reserved  |input;|
    freq[9]   array  u32    freq      |multiedit;|
</sub T_LocFrequencyinfo>


<sub T_LocFrequencyinfo_NB>
    freqNum      u8                 u8                 freqNum      |input;|
    reserved[3]  array              u8                 reserved     |multiedit;|
    freq[9]      array              T_NvCarrierFreqNB  freq         |multiedit;|
</sub T_LocFrequencyinfo_NB>


<sub T_imsiSimulation>
    imsiValidFlag   u8     u8     imsiValidFlag   |input;|
    reserved[2]     array  u8     reserved        |multiedit;|
    imsiContent[9]  array  u8     imsiContent     |multiedit;|
</sub T_imsiSimulation>


<sub T_TraceConfig>
    traCategoryControl   u32    u32    traCategoryControl   |input;|
    lteTraModuleControl  u32    u32    lteTraModuleControl  |input;|
    ggeTraModuleControl  u32    u32    ggeTraModuleControl  |input;|
    pubTraModuleControl  u32    u32    pubTraModuleControl  |input;|
    phyModuleControl     u32    u32    phyModuleControl     |input;|
    traceFlowControl     u32    u32    traceFlowControl     |input;|
    tracePort            u32    u32    tracePort            |input;|
    reserved             u32    u32    reserved             |input;|
    phyMsgControl[32]    array  u32    phyMsgControl        |multiedit;|
    lteTraModuleBuff     u32    u32    lteTraModuleBuff     |input;|
    ggeTraModuleBuff     u32    u32    ggeTraModuleBuff     |input;|
    pubTraModuleBuff     u32    u32    pubTraModuleBuff     |input;|
    phyModuleBuff        u32    u32    phyModuleBuff        |input;|
    reserved1[3]         array  u32    reserved1            |multiedit;|
    ggeTraModuleCfg[32]  array  u16    ggeTraModuleCfg      |multiedit;|
</sub T_TraceConfig>


<sub T_reportEventPara>
    validFlag      u8   u8   validFlag      |input;|
    hysteresis     u8   u8   hysteresis     |input;|
    timeToTrigger  u16  u16  timeToTrigger  |input;|
</sub T_reportEventPara>


<sub T_optimizedFeature>
    optimizedFeatureBitMap              u8     u8     optimizedFeatureBitMap              |input;|
    primaryCellRsrpOffset               s8     s8     primaryCellRsrpOffset               |input;|
    pCellSinrThresold                   u8     u8     pCellSinrThresold                   |input;|
    betterNCellSinrOffsetThres1         u8     u8     betterNCellSinrOffsetThres1         |input;|
    betterNCellSinrOffsetWeight1        u8     u8     betterNCellSinrOffsetWeight1        |input;|
    worseNCellSinrOffsetThres1          u8     u8     worseNCellSinrOffsetThres1          |input;|
    worseNCellSinrOffsetWeight1         u8     u8     worseNCellSinrOffsetWeight1         |input;|
    emergencyMeasPCellSinrThresold      u8     u8     emergencyMeasPCellSinrThresold      |input;|
    emergencyMeasInterFreqNum           u8     u8     emergencyMeasInterFreqNum           |input;|
    interFreqTimerToTrigger             u8     u8     interFreqTimerToTrigger             |input;|
    fasterReestPCellSinrThresold1       u8     u8     fasterReestPCellSinrThresold1       |input;|
    fasterReestPCellSinrThresold2       u8     u8     fasterReestPCellSinrThresold2       |input;|
    fasterReestSinrOffsetThresold1      u8     u8     fasterReestSinrOffsetThresold1      |input;|
    fasterReestSinrOffsetThresold2      u8     u8     fasterReestSinrOffsetThresold2      |input;|
    fasterReestConsecutiveEnterCounter  u8     u8     fasterReestConsecutiveEnterCounter  |input;|
    sinrThresold                        u8     u8     sinrThresold                        |input;|
    reserved[8]                         array  u8     reserved                            |multiedit;|
</sub T_optimizedFeature>


<sub T_connMeasCtrl>
    A1                struct              T_reportEventPara   
    A2                struct              T_reportEventPara   
    A3                struct              T_reportEventPara   
    A4                struct              T_reportEventPara   
    A5                struct              T_reportEventPara   
    B1                struct              T_reportEventPara   
    B2                struct              T_reportEventPara   
    optimizedFeature  struct              T_optimizedFeature  
</sub T_connMeasCtrl>


<sub T_IdleOptimizedFeature>
    optimizedFeatureBitMap          u8     u8     optimizedFeatureBitMap          |input;|
    betterSinrThreshold             u8     u8     betterSinrThreshold             |input;|
    emergencyStateSinrThreshold1    u8     u8     emergencyStateSinrThreshold1    |input;|
    emergencyStateSinrThreshold2    u8     u8     emergencyStateSinrThreshold2    |input;|
    emergencyStateFastIddetWaitWin  u8     u8     emergencyStateFastIddetWaitWin  |input;|
    emergencyStatePenaltyTime       u8     u8     emergencyStatePenaltyTime       |input;|
    amendMeasResultSinrThreshold1   u8     u8     amendMeasResultSinrThreshold1   |input;|
    amendMeasResultSinrThreshold2   u8     u8     amendMeasResultSinrThreshold2   |input;|
    amendMeasResultSinrOffSet1      u8     u8     amendMeasResultSinrOffSet1      |input;|
    amendMeasResultSinrOffSet2      u8     u8     amendMeasResultSinrOffSet2      |input;|
    sinrIntraSearchThsd             u8     u8     sinrIntraSearchThsd             |input;|
    sinrInterSearchThsd             u8     u8     sinrInterSearchThsd             |input;|
    interMeasThsd                   u8     u8     interMeasThsd                   |input;|
    interSinrDis                    u8     u8     interSinrDis                    |input;|
    reserved[2]                     array  u8     reserved                        |multiedit;|
</sub T_IdleOptimizedFeature>


<sub T_crystalTempCompParam>
    tempCompEnable  u8   u8   tempCompEnable  |input;|
    threshold0      u8   u8   threshold0      |input;|
    threshold1      u16  u16  threshold1      |input;|
    mInMsec         u32  u32  mInMsec         |input;|
    nInMsec         u32  u32  nInMsec         |input;|
</sub T_crystalTempCompParam>


<sub T_LocBandInfo>
    lockBandNum                  u8     u8     lockBandNum                  |input;|
    reserved                     u8     u8     reserved                     |input;|
    bandInfo[MAX_LOCK_BAND_NUM]  array  u16    bandInfo                     |multiedit;|
</sub T_LocBandInfo>


<sub T_SpecialRequirementsIndiction>
    blackCellListEnable:1  u32  u32  blackCellListEnable:1  |input;|
    reserved:31            u32  u32  reserved:31            |input;|
</sub T_SpecialRequirementsIndiction>


<sub T_NVM_Static_Eng>
    versionControl                u8                              u8                              versionControl                |input;|
    sleepFlag                     u8                              u8                              sleepFlag                     |input;|
    comprehensFlag                u8                              u8                              comprehensFlag                |input;|
    securityUsedFlag              u8                              u8                              securityUsedFlag              |input;|
    flowCtrlPara                  struct                          T_NVM_FlowCtrlPara              
    ceSearchEnable                u8                              u8                              ceSearchEnable                |input;|
    assertBitmap                  u8                              u8                              assertBitmap                  |input;|
    lockLteCell                   u16                             u16                             lockLteCell                   |input;|
    resetFlag                     u8                              u8                              resetFlag                     |input;|
    barCellWhenSIFail             u8                              u8                              barCellWhenSIFail             |input;|
    PsFlowCtrlThresh              u16                             u16                             PsFlowCtrlThresh              |input;|
    atUartControl                 u32                             u32                             atUartControl                 |input;|
    cSelUsingOperatorInfo         u8                              u8                              cSelUsingOperatorInfo         |input;|
    stackAutoStart                u8                              u8                              stackAutoStart                |input;|
    defaultRat                    u8                              u8                              defaultRat                    |input;|
    audioPath                     u8                              u8                              audioPath                     |input;|
    sleepControl                  u32                             u32                             sleepControl                  |input;|
    lockLteFreqInfo               struct                          T_LocFrequencyinfo              
    lockLteBandInfo               struct                          T_LocBandInfo                   
    imsiSimulation                struct                          T_imsiSimulation                
    lockLteFreqInfo_NB            struct                          T_LocFrequencyinfo_NB           
    abisCtrDetal                  s16                             s16                             abisCtrDetal                  |input;|
    dchScellPeriod                u8                              u8                              dchScellPeriod                |input;|
    idlDetectPeriod               u8                              u8                              idlDetectPeriod               |input;|
    connMeasCtrl                  struct                          T_connMeasCtrl                  
    subBandSupBitmap              u16                             u16                             subBandSupBitmap              |input;|
    baRoundCnt                    u8                              u8                              baRoundCnt                    |input;|
    highSpeedDetectPeriod         u8                              u8                              highSpeedDetectPeriod         |input;|
    idleOptimizedFeature          struct                          T_IdleOptimizedFeature          
    traceConfig                   struct                          T_TraceConfig                   
    crystalTempCompParam          struct                          T_crystalTempCompParam          
    gcfTest                       u8                              u8                              gcfTest                       |input;|
    multiCtrDetalPagingRsrp       s8                              s8                              multiCtrDetalPagingRsrp       |input;|
    multiCtrDetalPagingSnrThrd    u8                              u8                              multiCtrDetalPagingSnrThrd    |input;|
    reserved1                     u8                              u8                              reserved1                     |input;|
    specialRequirementsIndiction  struct                          T_SpecialRequirementsIndiction  
    reserved[44]                  array                           u8                              reserved                      |multiedit;|
</sub T_NVM_Static_Eng>


<sub T_freqlist_for_poweron_NB>
    freq_num                     u8                 u8                 freq_num                     |input;|
    reserved1[3]                 array              u8                 reserved1                    |multiedit;|
    freq[MAX_POWER_ON_FREQ_LEN]  array              T_NvCarrierFreqNB  freq                         |multiedit;|
    reserved2[64]                array              u8                 reserved2                    |multiedit;|
</sub T_freqlist_for_poweron_NB>


<sub T_NVM_Static_PsCap>
    lteEqPout                u8                           u8                           lteEqPout                |input;|
    reserved[3]              array                        u8                           reserved                 |multiedit;|
    eUtranCapability         struct                       T_UeCapabilityRequenstedLte  
    freqlist_for_poweron_NB  struct                       T_freqlist_for_poweron_NB    
    reserved1[60]            array                        u8                           reserved1                |multiedit;|
</sub T_NVM_Static_PsCap>


<sub T_IDM_NodeCh>
    olpc            u8  u8  olpc            |input;|
    rfswitch        u8  u8  rfswitch        |input;|
    pll             u8  u8  pll             |input;|
    isAllowedClose  u8  u8  isAllowedClose  |input;|
</sub T_IDM_NodeCh>


<sub T_IDM_NodeInfo>
    ch1  struct        T_IDM_NodeCh  
    ch2  struct        T_IDM_NodeCh  
</sub T_IDM_NodeInfo>


<sub T_NVM_Static_IDM>
    mode                  u8              u8              mode                  |input;|
    node                  u8              u8              node                  |input;|
    rxPowFsmu             u8              u8              rxPowFsmu             |input;|
    txPowFsmu             u8              u8              txPowFsmu             |input;|
    subframe_cfg_5g       u8              u8              subframe_cfg_5g       |input;|
    frame_cfg_5g          u8              u8              frame_cfg_5g          |input;|
    frame_time_offset_5g  u16             u16             frame_time_offset_5g  |input;|
    plmn                  u32             u32             plmn                  |input;|
    preferFreq            u32             u32             preferFreq            |input;|
    preferCellId          u16             u16             preferCellId          |input;|
    mu_up_inpow_ch1       u8              u8              mu_up_inpow_ch1       |input;|
    mu_up_inpow_ch2       u8              u8              mu_up_inpow_ch2       |input;|
    mu_down_outpow_ch1    u8              u8              mu_down_outpow_ch1    |input;|
    mu_down_outpow_ch2    u8              u8              mu_down_outpow_ch2    |input;|
    occationPeriod        u8              u8              occationPeriod        |input;|
    dlHeartPeriod         u8              u8              dlHeartPeriod         |input;|
    upInPowPeriod         u8              u8              upInPowPeriod         |input;|
    FramePeriod5g         u8              u8              FramePeriod5g         |input;|
    PlmnPeriod5g          u8              u8              PlmnPeriod5g          |input;|
    sCellPeriod           u8              u8              sCellPeriod           |input;|
    localNodeInfo         struct          T_IDM_NodeInfo  
    fsruNodeInfo[64]      array           T_IDM_NodeInfo  fsruNodeInfo          |multiedit;|
</sub T_NVM_Static_IDM>


<sub T_NVM_Static>
    crcdata            u16                    u16                    crcdata            |input;|
    len                u16                    u16                    len                |input;|
    nvmVersion         u32                    u32                    nvmVersion         |input;|
    nasCapability      struct                 T_NasCapability        
    nvmStaticPsCap_wb  struct                 T_NVM_Static_PsCap_wb  
    nvmStaticEng       struct                 T_NVM_Static_Eng       
    nvmStaticPsCap     struct                 T_NVM_Static_PsCap     
    nvmStaticIDM       struct                 T_NVM_Static_IDM       
    scrambleMode       u8                     u8                     scrambleMode       |input;|
    rsrpOffset         s8                     s8                     rsrpOffset         |input;|
    rrcRlsTimer10      u8                     u8                     rrcRlsTimer10      |input;|
    pm                 u8                     u8                     pm                 |input;|
    cpReestab          u8                     u8                     cpReestab          |input;|
    reserved[3]        array                  u8                     reserved           |multiedit;|
</sub T_NVM_Static>


<sub T_NVM_Dynamic>
    crcdata       u16               u16               crcdata       |input;|
    len           u16               u16               len           |input;|
    nvmDynamicPs  struct            T_NVM_Dynamic_PS  
</sub T_NVM_Dynamic>


<sub T_EpsQos>
    Length                   u8     u8     Length                   |input;|
    reserved[2]              array  u8     reserved                 |multiedit;|
    EpsQoS[MAX_EPS_QOS_LEN]  array  u8     EpsQoS                   |multiedit;|
</sub T_EpsQos>


<sub T_PdnAddress>
    pdnType                             u8     u8     pdnType                             |input;|
    addressLen                          u8     u8     addressLen                          |input;|
    reserved[2]                         array  u8     reserved                            |multiedit;|
    addressInfor[MAX_ADDRESSINFOR_LEN]  array  u8     addressInfor                        |multiedit;|
</sub T_PdnAddress>


<sub T_MMC_BakupInfo>
    v_mmc_shutdownTypes                                         u8      u8      v_mmc_shutdownTypes                                         |input;|
    v_mmc_currentState                                          u16     u16     v_mmc_currentState                                          |input;|
    v_mmc_previousState                                         u16     u16     v_mmc_previousState                                         |input;|
    v_mmc_PowerOnStatus                                         u16     u16     v_mmc_PowerOnStatus                                         |input;|
    v_mmc_csInvalidFlag                                         u8      u8      v_mmc_csInvalidFlag                                         |input;|
    v_mmc_psInvalidFlag                                         u8      u8      v_mmc_psInvalidFlag                                         |input;|
    a_mmc_apiStartInfo[54]                                      array   u32     a_mmc_apiStartInfo                                          |multiedit;|
    v_mmc_mmiAttachType                                         u8      u8      v_mmc_mmiAttachType                                         |input;|
    v_mmc_mmiAttachTypeBak                                      u8      u8      v_mmc_mmiAttachTypeBak                                      |input;|
    v_mmc_csUpdatedFlag                                         u8      u8      v_mmc_csUpdatedFlag                                         |input;|
    v_mmc_psUpdatedFlag                                         u8      u8      v_mmc_psUpdatedFlag                                         |input;|
    v_mmc_cp_ciot_support                                       u8      u8      v_mmc_cp_ciot_support                                       |input;|
    v_mmc_up_ciot_support                                       u8      u8      v_mmc_up_ciot_support                                       |input;|
    v_mmc_S1_U_DataTransferSupport                              u8      u8      v_mmc_S1_U_DataTransferSupport                              |input;|
    v_mmc_emmRegWithoutPdnSupport                               u8      u8      v_mmc_emmRegWithoutPdnSupport                               |input;|
    v_mmc_cp_hc_support                                         u8      u8      v_mmc_cp_hc_support                                         |input;|
    v_mmc_ePco_support                                          u8      u8      v_mmc_ePco_support                                          |input;|
    v_mmc_negExtendedDrx                                        u8      u8      v_mmc_negExtendedDrx                                        |input;|
    v_mmc_plmnSelMode                                           u8      u8      v_mmc_plmnSelMode                                           |input;|
    a_mmc_manualSelectedPlmn[MAX_PLMN_LEN]                      array   u8      a_mmc_manualSelectedPlmn                                    |multiedit;|
    v_mmc_manualSelFplmn                                        u8      u8      v_mmc_manualSelFplmn                                        |input;|
    a_mmc_psNotAllowedPlmnList[MAX_PLMN_NOT_ALLOWED_GPRS_LEN]   array   u8      a_mmc_psNotAllowedPlmnList                                  |multiedit;|
    a_mmc_serviceNotAllowedTaList[MAX_LAI_NOT_ALLOWED_LEN]      array   u8      a_mmc_serviceNotAllowedTaList                               |multiedit;|
    a_mmc_roamingNotAllowedTaList[MAX_ROAMING_NOT_ALLOWED_LEN]  array   u8      a_mmc_roamingNotAllowedTaList                               |multiedit;|
    v_mmc_nasSigLowPri                                          u8      u8      v_mmc_nasSigLowPri                                          |input;|
    v_mmc_attachWithImsi                                        u8      u8      v_mmc_attachWithImsi                                        |input;|
    v_mmc_minPeriodicSearchLen                                  u8      u8      v_mmc_minPeriodicSearchLen                                  |input;|
    v_mmc_t3245Behaviour                                        u8      u8      v_mmc_t3245Behaviour                                        |input;|
    v_mmc_eabSupport                                            u8      u8      v_mmc_eabSupport                                            |input;|
    v_mmc_smRetryWaitTimerValue                                 u8      u8      v_mmc_smRetryWaitTimerValue                                 |input;|
    v_mmc_uePsmSupport                                          u8      u8      v_mmc_uePsmSupport                                          |input;|
    v_mmc_ueExtendedDrxSupport                                  u8      u8      v_mmc_ueExtendedDrxSupport                                  |input;|
    v_mmc_reqT3412ExtLength                                     u8      u8      v_mmc_reqT3412ExtLength                                     |input;|
    v_mmc_reqT3324Length                                        u8      u8      v_mmc_reqT3324Length                                        |input;|
    v_mmc_reqExtendedDrx                                        u8      u8      v_mmc_reqExtendedDrx                                        |input;|
    v_mmc_simType                                               u8      u8      v_mmc_simType                                               |input;|
    v_mmc_mncLength                                             u8      u8      v_mmc_mncLength                                             |input;|
    v_mmc_SimOperMode                                           u8      u8      v_mmc_SimOperMode                                           |input;|
    a_mmc_simHplmn[MAX_PLMN_LEN]                                array   u8      a_mmc_simHplmn                                              |multiedit;|
    v_mmc_simExistFlag                                          u8      u8      v_mmc_simExistFlag                                          |input;|
    a_mmc_selectedPlmn[MAX_PLMN_LEN]                            array   u8      a_mmc_selectedPlmn                                          |multiedit;|
    s_mmc_imsi                                                  struct  T_Imsi  
    v_mmc_lteOperateMode                                        u8      u8      v_mmc_lteOperateMode                                        |input;|
    a_mmc_plmnCsDomainNotAvailable[16]                          array   u8      a_mmc_plmnCsDomainNotAvailable                              |multiedit;|
    v_mmc_modeBitmap                                            u8      u8      v_mmc_modeBitmap                                            |input;|
    v_mmc_lteVoicePerfer                                        u8      u8      v_mmc_lteVoicePerfer                                        |input;|
    v_mmc_lteSmsPrefer                                          u8      u8      v_mmc_lteSmsPrefer                                          |input;|
    v_mmc_lteUsageSet                                           u8      u8      v_mmc_lteUsageSet                                           |input;|
    v_mmc_dualPriority                                          u8      u8      v_mmc_dualPriority                                          |input;|
    v_mmc_AsDeacted                                             u8      u8      v_mmc_AsDeacted                                             |input;|
    v_mmc_LteRatType                                            u8      u8      v_mmc_LteRatType                                            |input;|
    v_mmc_DataPdnAutoAct                                        u8      u8      v_mmc_DataPdnAutoAct                                        |input;|
    a_mmc_CSLOCI[11]                                            array   u8      a_mmc_CSLOCI                                                |multiedit;|
    a_mmc_EPSLOCI[18]                                           array   u8      a_mmc_EPSLOCI                                               |multiedit;|
    a_mmc_EPSNSC[54]                                            array   u8      a_mmc_EPSNSC                                                |multiedit;|
</sub T_MMC_BakupInfo>


<sub T_EMM_BakupInfo>
    v_emm_currentState                  u16    u16    v_emm_currentState                  |input;|
    v_emm_previousState                 u16    u16    v_emm_previousState                 |input;|
    v_emm_waitPreviousState             u16    u16    v_emm_waitPreviousState             |input;|
    v_emm_psSigConnectFlag              u8     u8     v_emm_psSigConnectFlag              |input;|
    v_emm_addUpdateResult               u8     u8     v_emm_addUpdateResult               |input;|
    v_emm_ESR_PS                        u8     u8     v_emm_ESR_PS                        |input;|
    a_emm_t3346StartPlmn[MAX_PLMN_LEN]  array  u8     a_emm_t3346StartPlmn                |multiedit;|
    v_emm_t3346StartLowPrioInd          u8     u8     v_emm_t3346StartLowPrioInd          |input;|
    v_emm_eUtranNotAllowed              u8     u8     v_emm_eUtranNotAllowed              |input;|
    v_emm_nasMsgLowPriInd               u8     u8     v_emm_nasMsgLowPriInd               |input;|
    v_emm_eabSupport                    u8     u8     v_emm_eabSupport                    |input;|
    v_emm_t3324TimeByte                 u8     u8     v_emm_t3324TimeByte                 |input;|
    v_emm_periodicTauByte               u8     u8     v_emm_periodicTauByte               |input;|
</sub T_EMM_BakupInfo>


<sub T_TRA_BakupInfo>
    log_sn                 u32  u32  log_sn                 |input;|
    psm_sleep_befor_times  u32  u32  psm_sleep_befor_times  |input;|
    psm_sleep_times        u32  u32  psm_sleep_times        |input;|
</sub T_TRA_BakupInfo>


<sub T_NVM_ProcessInfo>
    crcdata                            u16                   u16                   crcdata                            |input;|
    len                                u16                   u16                   len                                |input;|
    s_mmcBakupInfo                     struct                T_MMC_BakupInfo       
    s_emmBakupInfo                     struct                T_EMM_BakupInfo       
    v_defaultPdnType                   u8                    u8                    v_defaultPdnType                   |input;|
    v_defaultApnLen                    u8                    u8                    v_defaultApnLen                    |input;|
    a_defaultApn[MAX_APN_LEN]          array                 u8                    a_defaultApn                       |multiedit;|
    v_defaultPcoLen                    u16                   u16                   v_defaultPcoLen                    |input;|
    a_defaultPco[MAX_PCO_LEN]          array                 u8                    a_defaultPco                       |multiedit;|
    a_glo_simPlmnList[253]             array                 u8                    a_glo_simPlmnList                  |multiedit;|
    a_glo_simForbiddenPlmnList[19]     array                 u8                    a_glo_simForbiddenPlmnList         |multiedit;|
    a_glo_simEhplmnList[31]            array                 u8                    a_glo_simEhplmnList                |multiedit;|
    a_esmBakupInfo[2]                  array                 T_ESM_BakupInfo       a_esmBakupInfo                     |multiedit;|
    s_timerBakupInfo                   struct                T_Timer_BakupInfo     
    errcBackupInfo                     struct                T_ERRC_BackupInfo_wb  
    a_SimBakupInfo[8]                  array                 u8                    a_SimBakupInfo                     |multiedit;|
    a_apiBakupInfo[4]                  array                 u8                    a_apiBakupInfo                     |multiedit;|
    a_AtBakupInfo[MAX_AT_BAKUP_LEN]    array                 u8                    a_AtBakupInfo                      |multiedit;|
    a_CswBakupInfo[MAX_CSW_BAKUP_LEN]  array                 u8                    a_CswBakupInfo                     |multiedit;|
    DurationBeforeShutdown             u32                   u32                   DurationBeforeShutdown             |input;|
    s_traBakupInfo                     struct                T_TRA_BakupInfo       
</sub T_NVM_ProcessInfo>


<sub T_TimeUnit>
    absFn     u32  u32  absFn     |input;|
    fnOffset  u16  u16  fnOffset  |input;|
    hfn       u16  u16  hfn       |input;|
</sub T_TimeUnit>


<sub T_iratGgeMeasResult>
    arfcn  u16  u16  arfcn  |input;|
    rxlev  u16  u16  rxlev  |input;|
</sub T_iratGgeMeasResult>


<sub T_iratLteFreqInfo>
    arfcn         u32  u32  arfcn         |input;|
    measBandwith  u16  u16  measBandwith  |input;|
    reserved      u16  u16  reserved      |input;|
</sub T_iratLteFreqInfo>


<sub T_iratLteCellInfo>
    cellNum                                 u16    u16    cellNum                                 |input;|
    reserved                                u16    u16    reserved                                |input;|
    cellIdList[MAX_IRAT_MEAS_LTE_CELL_NUM]  array  u16    cellIdList                              |multiedit;|
    syncOffset[MAX_IRAT_MEAS_LTE_CELL_NUM]  array  u32    syncOffset                              |multiedit;|
    cellCpType[MAX_IRAT_MEAS_LTE_CELL_NUM]  array  u16    cellCpType                              |multiedit;|
</sub T_iratLteCellInfo>


<sub T_iratLteMeasResult>
    frequecy                                u32    u32    frequecy                                |input;|
    cellNum                                 u16    u16    cellNum                                 |input;|
    reserved                                u16    u16    reserved                                |input;|
    cellIdList[MAX_IRAT_MEAS_LTE_CELL_NUM]  array  u16    cellIdList                              |multiedit;|
    syncOffset[MAX_IRAT_MEAS_LTE_CELL_NUM]  array  u32    syncOffset                              |multiedit;|
    cellCpType[MAX_IRAT_MEAS_LTE_CELL_NUM]  array  u16    cellCpType                              |multiedit;|
    rsrp[MAX_IRAT_MEAS_LTE_CELL_NUM]        array  s16    rsrp                                    |multiedit;|
    rsrq[MAX_IRAT_MEAS_LTE_CELL_NUM]        array  s16    rsrq                                    |multiedit;|
</sub T_iratLteMeasResult>


<sub T_ERLC_WB_DL_PDU_INFO>
    rbIdentity                            u8           u8           rbIdentity                            |input;|
    reserved3[3]                          array        u8           reserved3                             |multiedit;|
    pduLen                                u16          u16          pduLen                                |input;|
    pduOffset                             u16          u16          pduOffset                             |input;|
    pPdschPointer                         Ptr          u8           
    pPdschMapPointer                      Ptr          T_PDSCH_MEM  
    pDlPduNext                            Ptr          T_ERLC_WB_DL_PDU_INFO_Tag
</sub T_ERLC_WB_DL_PDU_INFO>


<sub T_AXIDMA_BLOCK_INFO>
    sourceAddr                     Ptr     u8      
    destAddr                       Ptr     u8      
    length                         u32     u32     length                         |input;|
    length_p                       u32     u32     length_p                       |input;|
    config                         u32     u32     config                         |input;|
    pNext                          Ptr     T_AXIDMA_BLOCK_INFO_Tag
    umPduPtr                       Ptr     u8      
    reserved                       u32     u32     reserved                       |input;|
</sub T_AXIDMA_BLOCK_INFO>


<sub T_RCO_APPLY_IND>
    source  u8  u8  source  |input;|
    cause   u8  u8  cause   |input;|
</sub T_RCO_APPLY_IND>


<0x3041 OP_RCO_APPLY_IND>
    signalHeader   struct           T_MsgHeader      
    RCO_APPLY_IND  struct           T_RCO_APPLY_IND  
</0x3041 OP_RCO_APPLY_IND>


<sub T_RCO_APPLY_RSP>
    cause  u8  u8  cause  |input;|
</sub T_RCO_APPLY_RSP>


<0x3047 OP_RCO_APPLY_RSP>
    signalHeader   struct           T_MsgHeader      
    RCO_APPLY_RSP  struct           T_RCO_APPLY_RSP  
</0x3047 OP_RCO_APPLY_RSP>


<sub T_RCO_APPLY_REJ>
    cause  u8  u8  cause  |input;|
</sub T_RCO_APPLY_REJ>


<0x3048 OP_RCO_APPLY_REJ>
    signalHeader   struct           T_MsgHeader      
    RCO_APPLY_REJ  struct           T_RCO_APPLY_REJ  
</0x3048 OP_RCO_APPLY_REJ>


<sub T_RCO_ABORT_REQ>
    cause  u8  u8  cause  |input;|
</sub T_RCO_ABORT_REQ>


<0x3049 OP_RCO_ABORT_REQ>
    signalHeader   struct           T_MsgHeader      
    RCO_ABORT_REQ  struct           T_RCO_ABORT_REQ  
</0x3049 OP_RCO_ABORT_REQ>


<sub T_RCO_ABORT_CNF>
    cause  u8  u8  cause  |input;|
</sub T_RCO_ABORT_CNF>


<0x3042 OP_RCO_ABORT_CNF>
    signalHeader   struct           T_MsgHeader      
    RCO_ABORT_CNF  struct           T_RCO_ABORT_CNF  
</0x3042 OP_RCO_ABORT_CNF>


<sub T_RCO_ABORT_REJ>
    cause  u8  u8  cause  |input;|
</sub T_RCO_ABORT_REJ>


<0x3043 OP_RCO_ABORT_REJ>
    signalHeader   struct           T_MsgHeader      
    RCO_ABORT_REJ  struct           T_RCO_ABORT_REJ  
</0x3043 OP_RCO_ABORT_REJ>


<sub T_RCO_RELEASE_IND>
    source  u8  u8  source  |input;|
    cause   u8  u8  cause   |input;|
</sub T_RCO_RELEASE_IND>


<0x3044 OP_RCO_RELEASE_IND>
    signalHeader     struct             T_MsgHeader        
    RCO_RELEASE_IND  struct             T_RCO_RELEASE_IND  
</0x3044 OP_RCO_RELEASE_IND>


<0x304a OP_RCO_RESUME_REQ>
    signalHeader  struct       T_MsgHeader  
</0x304a OP_RCO_RESUME_REQ>


<0xffff OP_RCO_PS_NON_PS_DATA_REQ>
    signalHeader  struct       T_MsgHeader  
</0xffff OP_RCO_PS_NON_PS_DATA_REQ>


<0x304c OP_RLC_PS_MSG_TX_CMPL_REQ>
    signalHeader  struct       T_MsgHeader  
</0x304c OP_RLC_PS_MSG_TX_CMPL_REQ>


<sub T_RLC_PS_MSG_TX_CMPL_CNF>
    CmplFlg  u8  u8  CmplFlg  |input;|
</sub T_RLC_PS_MSG_TX_CMPL_CNF>


<0x3045 OP_RLC_PS_MSG_TX_CMPL_CNF>
    signalHeader            struct                    T_MsgHeader               
    RLC_PS_MSG_TX_CMPL_CNF  struct                    T_RLC_PS_MSG_TX_CMPL_CNF  
</0x3045 OP_RLC_PS_MSG_TX_CMPL_CNF>


<sub T_RCO_PS_MSG_TX_CMPL_REQ>
    mode  u8  u8  mode  |input;|
</sub T_RCO_PS_MSG_TX_CMPL_REQ>


<0xffff OP_RCO_PS_MSG_TX_CMPL_REQ>
    signalHeader            struct                    T_MsgHeader               
    RCO_PS_MSG_TX_CMPL_REQ  struct                    T_RCO_PS_MSG_TX_CMPL_REQ  
</0xffff OP_RCO_PS_MSG_TX_CMPL_REQ>


<sub T_RCO_PS_MSG_TX_CMPL_CNF>
    mode      u8  u8  mode      |input;|
    cmplFlag  u8  u8  cmplFlag  |input;|
</sub T_RCO_PS_MSG_TX_CMPL_CNF>


<0xffff OP_RCO_PS_MSG_TX_CMPL_CNF>
    signalHeader            struct                    T_MsgHeader               
    RCO_PS_MSG_TX_CMPL_CNF  struct                    T_RCO_PS_MSG_TX_CMPL_CNF  
</0xffff OP_RCO_PS_MSG_TX_CMPL_CNF>


<sub CSM_InputCallGain>
    tx  s32  s32  tx  |input;|
    rx  s32  s32  rx  |input;|
</sub CSM_InputCallGain>


<sub CSM_ResourceStatus_Ipc>
    callId         s32    s32    callId         |input;|
    audioReady     s32    s32    audioReady     |input;|
    videoReady     s32    s32    videoReady     |input;|
    mbr_ul         u32    u32    mbr_ul         |input;|
    mbr_dl         u32    u32    mbr_dl         |input;|
    gbr_ul         u32    u32    gbr_ul         |input;|
    gbr_dl         u32    u32    gbr_dl         |input;|
    is_final_rslt  s8     s8     is_final_rslt  |input;|
    reserved_1[3]  array  s8     reserved_1     |multiedit;|
</sub CSM_ResourceStatus_Ipc>


<sub CSM_InputCallMix>
    call_index     s32    s32    call_index     |input;|
    callmix_type   u8     u8     callmix_type   |input;|
    reserved_1[3]  array  u8     reserved_1     |multiedit;|
</sub CSM_InputCallMix>


<union CSM_InputCallUnion>
    remoteAddress[129]                            array                   s8                      remoteAddress                                 |multiedit;|
    remoteParticipants[CSM_EVENT_LONG_STRING_SZ]  array                   s8                      remoteParticipants                            |multiedit;|
    errorCode                                     s32                     s32                     errorCode                                     |input;|
    digit                                         s8                      s8                      digit                                         |input;|
    callIndex                                     s32                     s32                     callIndex                                     |input;|
    aecEnable                                     s32                     s32                     aecEnable                                     |input;|
    gain                                          struct                  CSM_InputCallGain       
    resourceStatus                                struct                  CSM_ResourceStatus_Ipc  
    ho_type                                       u8                      u8                      ho_type                                       |input;|
    is_SrvccSupport                               s32                     s32                     is_SrvccSupport                               |input;|
    call_mix                                      struct                  CSM_InputCallMix        
    reserved_1[512]                               array                   s8                      reserved_1                                    |multiedit;|
</union CSM_InputCallUnion>


<sub CSM_InputCall_Ipc>
    type                               u8                  u8                  type                               |input;|
    reason                             u8                  u8                  reason                             |input;|
    reasonDesc[129]                    array               s8                  reasonDesc                         |multiedit;|
    reserved_1                         u8                  u8                  reserved_1                         |input;|
    extraArgument                      s32                 s32                 extraArgument                      |input;|
    isEmergency                        s32                 s32                 isEmergency                        |input;|
    emergencyType                      u8                  u8                  emergencyType                      |input;|
    cidType                            u8                  u8                  cidType                            |input;|
    reserved_2[2]                      array               u8                  reserved_2                         |multiedit;|
    isRsrcReady                        s32                 s32                 isRsrcReady                        |input;|
    negStatus                          u8                  u8                  negStatus                          |input;|
    callSessionType                    u8                  u8                  callSessionType                    |input;|
    reserved_3[2]                      array               u8                  reserved_3                         |multiedit;|
    unionType                          u32                 u32                 unionType                          |input;|
    u                                  union               CSM_InputCallUnion  
    isEncrypted                        s32                 s32                 isEncrypted                        |input;|
    latitude[CSM_LOCATION_STRING_SZ]   array               s8                  latitude                           |multiedit;|
    longitude[CSM_LOCATION_STRING_SZ]  array               s8                  longitude                          |multiedit;|
    islocalhold                        s32                 s32                 islocalhold                        |input;|
</sub CSM_InputCall_Ipc>


<sub CSM_InputSms_Ipc>
    reason                                u8     u8     reason                                |input;|
    type                                  u8     u8     type                                  |input;|
    reasonDesc[129]                       array  s8     reasonDesc                            |multiedit;|
    remoteAddress[129]                    array  s8     remoteAddress                         |multiedit;|
    message[513]                          array  s8     message                               |multiedit;|
    pdu[513]                              array  s8     pdu                                   |multiedit;|
    reserved_1[2]                         array  s8     reserved_1                            |multiedit;|
    msgLen                                s32    s32    msgLen                                |input;|
    smsc[129]                             array  s8     smsc                                  |multiedit;|
    reserved_2[3]                         array  s8     reserved_2                            |multiedit;|
    mr                                    u16    u16    mr                                    |input;|
    error_cause                           s8     s8     error_cause                           |input;|
    isEmergSms                            s8     s8     isEmergSms                            |input;|
</sub CSM_InputSms_Ipc>


<sub CSM_InputServiceUnionCgi>
    type                     u8     u8     type                     |input;|
    reserved_1[3]            array  u8     reserved_1               |multiedit;|
    is_handover              s32    s32    is_handover              |input;|
    id[65]                   array  s8     id                       |multiedit;|
    reserved_2[3]            array  s8     reserved_2               |multiedit;|
</sub CSM_InputServiceUnionCgi>


<sub CSM_InputServiceUnionAka>
    response[CSM_AKA_RESP_STRING_SZ]  array  s8     response                          |multiedit;|
    resLength                         s32    s32    resLength                         |input;|
    auts[CSM_AKA_AUTS_STRING_SZ]      array  s8     auts                              |multiedit;|
    ik[CSM_AKA_IK_STRING_SZ]          array  s8     ik                                |multiedit;|
    ck[CSM_AKA_CK_STRING_SZ]          array  s8     ck                                |multiedit;|
    reserved_1[2]                     array  s8     reserved_1                        |multiedit;|
</sub CSM_InputServiceUnionAka>


<sub CSM_InputServiceUnionIpsec>
    protectedPort        s32  s32  protectedPort        |input;|
    protectedPortPoolSz  s32  s32  protectedPortPoolSz  |input;|
    spi                  s32  s32  spi                  |input;|
    spiPoolSz            s32  s32  spiPoolSz            |input;|
</sub CSM_InputServiceUnionIpsec>


<sub CSM_InputServiceUnionPort>
    sip            s32  s32  sip            |input;|
    audio          s32  s32  audio          |input;|
    audioPoolSize  s32  s32  audioPoolSize  |input;|
    video          s32  s32  video          |input;|
    videoPoolSize  s32  s32  videoPoolSize  |input;|
</sub CSM_InputServiceUnionPort>


<sub CSM_InputServiceUnionCoder>
    coderNum                                                            s32                                                                 s32                                                                 coderNum                                                            |input;|
    coderPayloadType[CSM_CODER_NUM]                                     array                                                               s32                                                                 coderPayloadType                                                    |multiedit;|
    coderName[CSM_CODER_NUM]                                            array                                                               T_coderName                                                         coderName                                                           |multiedit;|
    coderDescription[CSM_CODER_NUM]                                     array                                                               T_coderDescription                                                  coderDescription                                                    |multiedit;|
</sub CSM_InputServiceUnionCoder>


<sub T_coderName
    coderName[CSM_CODER_STRING_SZ+1]                                    array                                                               s8                                                                  coderName                                                           |multiedit;|
</sub T_coderName


<sub T_coderDescription
    coderDescription[CSM_CODER_DESCRIPTION_STRING_SZ+1]                 array                                                               s8                                                                  coderDescription                                                    |multiedit;|
</sub T_coderDescription


<sub CSM_InputServiceUnionMediaProfile>
    profile_id                                         s32    s32    profile_id                                         |input;|
    profile_desc[256]                                  array  s8     profile_desc                                       |multiedit;|
</sub CSM_InputServiceUnionMediaProfile>


<sub CSM_InputServiceUnionSsac>
    voice_barring_factor  s32  s32  voice_barring_factor  |input;|
    voice_barring_time    s32  s32  voice_barring_time    |input;|
    video_barring_factor  s32  s32  video_barring_factor  |input;|
    video_barring_time    s32  s32  video_barring_time    |input;|
</sub CSM_InputServiceUnionSsac>


<sub CSM_ServiceAppObj_Ipc>
    appName[CSM_EVENT_STRING_SZ]        array  s8     appName                             |multiedit;|
    appUri[CSM_FQDN_STRING_SZ]          array  s8     appUri                              |multiedit;|
    appAuthType                         u8     u8     appAuthType                         |input;|
    appAuthName[CSM_EVENT_STRING_SZ]    array  s8     appAuthName                         |multiedit;|
    appAuthSecret[CSM_EVENT_STRING_SZ]  array  s8     appAuthSecret                       |multiedit;|
    appAuthSecretLength                 s32    s32    appAuthSecretLength                 |input;|
</sub CSM_ServiceAppObj_Ipc>


<sub CSM_ServiceAppsProvision_Ipc>
    bsf[CSM_FQDN_STRING_SZ]  array                  s8                     bsf                      |multiedit;|
    reserved_1               s8                     s8                     reserved_1               |input;|
    xcapAppInfo              struct                 CSM_ServiceAppObj_Ipc  
</sub CSM_ServiceAppsProvision_Ipc>


<union CSM_InputServiceUnion>
    cgi                                     struct                             CSM_InputServiceUnionCgi           
    aka                                     struct                             CSM_InputServiceUnionAka           
    ipsec                                   struct                             CSM_InputServiceUnionIpsec         
    port                                    struct                             CSM_InputServiceUnionPort          
    coder                                   struct                             CSM_InputServiceUnionCoder         
    media_profile                           struct                             CSM_InputServiceUnionMediaProfile  
    ssac                                    struct                             CSM_InputServiceUnionSsac          
    pcscf[512]                              array                              s8                                 pcscf                                   |multiedit;|
    domain[129]                             array                              s8                                 domain                                  |multiedit;|
    impi[129]                               array                              s8                                 impi                                    |multiedit;|
    impu[129]                               array                              s8                                 impu                                    |multiedit;|
    password[129]                           array                              s8                                 password                                |multiedit;|
    imeiUri[129]                            array                              s8                                 imeiUri                                 |multiedit;|
    instanceId[65]                          array                              s8                                 instanceId                              |multiedit;|
    audioConfServer[129]                    array                              s8                                 audioConfServer                         |multiedit;|
    videoConfServer[129]                    array                              s8                                 videoConfServer                         |multiedit;|
    appsProvision                           struct                             CSM_ServiceAppsProvision_Ipc       
    volteService                            s32                                s32                                volteService                            |input;|
    extraArgument                           s32                                s32                                extraArgument                           |input;|
    is_smsoverip                            s32                                s32                                is_smsoverip                            |input;|
    serviceType                             s32                                s32                                serviceType                             |input;|
    userAgent[129]                          array                              s8                                 userAgent                               |multiedit;|
</union CSM_InputServiceUnion>


<sub CSM_InputService_Ipc>
    reason                             u8                     u8                     reason                             |input;|
    reasonDesc[129]                    array                  s8                     reasonDesc                         |multiedit;|
    reserved_1[2]                      array                  s8                     reserved_1                         |multiedit;|
    isEmergency                        s32                    s32                    isEmergency                        |input;|
    unionType                          u32                    u32                    unionType                          |input;|
    u                                  union                  CSM_InputServiceUnion  
</sub CSM_InputService_Ipc>


<sub CSM_InputRadio_Ipc>
    reason                             u8     u8     reason                             |input;|
    networkType                        u8     u8     networkType                        |input;|
    ipAddrType                         u8     u8     ipAddrType                         |input;|
    reserved_1                         u8     u8     reserved_1                         |input;|
    address[CSM_IP_ADDRESS_STRING_SZ]  array  s8     address                            |multiedit;|
    nsapi                              s32    s32    nsapi                              |input;|
    infcName[129]                      array  s8     infcName                           |multiedit;|
    reserved_2[3]                      array  s8     reserved_2                         |multiedit;|
    isEmergencyFailoverToCs            s32    s32    isEmergencyFailoverToCs            |input;|
    isEmergencyRegRequired             s32    s32    isEmergencyRegRequired             |input;|
    netdual_sys                        s32    s32    netdual_sys                        |input;|
</sub CSM_InputRadio_Ipc>


<union CSM_SupSrvMode_Ipc>
    cbMode         u8     u8     cbMode         |input;|
    cfMode         u8     u8     cfMode         |input;|
    reserved_1[4]  array  u8     reserved_1     |multiedit;|
</union CSM_SupSrvMode_Ipc>


<union CSM_SupSrvReqStatus_Ipc>
    oirReqStatus   u8     u8     oirReqStatus   |input;|
    genReqStatus   u8     u8     genReqStatus   |input;|
    reserved_1[4]  array  u8     reserved_1     |multiedit;|
</union CSM_SupSrvReqStatus_Ipc>


<sub CSM_Address_Ipc>
    type                            u8     u8     type                            |input;|
    numberType                      u8     u8     numberType                      |input;|
    number[81]                      array  s8     number                          |multiedit;|
    alpha[129]                      array  s8     alpha                           |multiedit;|
</sub CSM_Address_Ipc>


<sub CSM_SupSrvRuleParams_Ipc>
    noReplyTimer                                   s32              s32              noReplyTimer                                   |input;|
    mediaType[CSM_SUPSRV_PARAM_STRING_SZ]          array            s8               mediaType                                      |multiedit;|
    timeRangeOfTheDay[CSM_SUPSRV_PARAM_STRING_SZ]  array            s8               timeRangeOfTheDay                              |multiedit;|
    cfwTarget                                      struct           CSM_Address_Ipc  
</sub CSM_SupSrvRuleParams_Ipc>


<sub CSM_InputSupSrv_Ipc>
    reason                             u8                        u8                        reason                             |input;|
    reasonDesc[129]                    array                     s8                        reasonDesc                         |multiedit;|
    reserved_1[2]                      array                     s8                        reserved_1                         |multiedit;|
    unionType_1                        u32                       u32                       unionType_1                        |input;|
    mode                               union                     CSM_SupSrvMode_Ipc        
    unionType_2                        u32                       u32                       unionType_2                        |input;|
    status                             union                     CSM_SupSrvReqStatus_Ipc   
    unionType_3                        u32                       u32                       unionType_3                        |input;|
    ruleParams                         struct                    CSM_SupSrvRuleParams_Ipc  
    updateStyle                        u8                        u8                        updateStyle                        |input;|
    reserved_2[3]                      array                     u8                        reserved_2                         |multiedit;|
</sub CSM_InputSupSrv_Ipc>


<sub CSM_InputUssd_Ipc>
    reason                             u8     u8     reason                             |input;|
    reasonDesc[129]                    array  s8     reasonDesc                         |multiedit;|
    encType                            u8     u8     encType                            |input;|
    message[1025]                      array  s8     message                            |multiedit;|
</sub CSM_InputUssd_Ipc>


<union CSM_InputEventUnion>
    call     struct                CSM_InputCall_Ipc     
    sms      struct                CSM_InputSms_Ipc      
    service  struct                CSM_InputService_Ipc  
    radio    struct                CSM_InputRadio_Ipc    
    supSrv   struct                CSM_InputSupSrv_Ipc   
    ussd     struct                CSM_InputUssd_Ipc     
</union CSM_InputEventUnion>


<0x1501 OP_CSM_InputEvent>
    ref_count      u8                   u8                   ref_count      |input;|
    type           u8                   u8                   type           |input;|
    reserved_1[2]  array                u8                   reserved_1     |multiedit;|
    unionType      u32                  u32                  unionType      |input;|
    evt            union                CSM_InputEventUnion  
</0x1501 OP_CSM_InputEvent>


<sub CSM_CallSummary_Ipc>
    idx                                            s32    s32    idx                                            |input;|
    direction                                      u8     u8     direction                                      |input;|
    negStatus                                      u8     u8     negStatus                                      |input;|
    status                                         u8     u8     status                                         |input;|
    reserved_1                                     u8     u8     reserved_1                                     |input;|
    state                                          s32    s32    state                                          |input;|
    mode                                           u8     u8     mode                                           |input;|
    isMultiParty                                   u8     u8     isMultiParty                                   |input;|
    numberType                                     u8     u8     numberType                                     |input;|
    number[81]                                     array  s8     number                                         |multiedit;|
    normalizedAddress[129]                         array  s8     normalizedAddress                              |multiedit;|
    type                                           u8     u8     type                                           |input;|
    alpha[129]                                     array  s8     alpha                                          |multiedit;|
    reserved_2                                     s8     s8     reserved_2                                     |input;|
    callSessionType                                s32    s32    callSessionType                                |input;|
    coderSdpMd[256]                                array  s8     coderSdpMd                                     |multiedit;|
    is_srvcc_alerting_support                      s32    s32    is_srvcc_alerting_support                      |input;|
    is_mid_call_support                            s32    s32    is_mid_call_support                            |input;|
    is_srvcc_orig_pre_alerting_support             s32    s32    is_srvcc_orig_pre_alerting_support             |input;|
    is_video_support                               s32    s32    is_video_support                               |input;|
</sub CSM_CallSummary_Ipc>


<sub CSM_CallReport_Ipc>
    numCalls                             s32                  s32                  numCalls                             |input;|
    calls[CSM_EVENT_MAX_CALL_LIST_SIZE]  array                CSM_CallSummary_Ipc  calls                                |multiedit;|
</sub CSM_CallReport_Ipc>


<sub CSM_CallClip_Ipc>
    number[81]                                array  s8     number                                    |multiedit;|
    type                                      u8     u8     type                                      |input;|
    alpha[129]                                array  s8     alpha                                     |multiedit;|
    reserved_1                                s8     s8     reserved_1                                |input;|
    callSessionType                           s32    s32    callSessionType                           |input;|
    direction                                 u8     u8     direction                                 |input;|
    normalizedAddress[129]                    array  s8     normalizedAddress                         |multiedit;|
    reserved_2[2]                             array  s8     reserved_2                                |multiedit;|
</sub CSM_CallClip_Ipc>


<sub CSM_CallSrvcc_Ipc>
    result         u8     u8     result         |input;|
    reserved_1[3]  array  u8     reserved_1     |multiedit;|
    callId         s32    s32    callId         |input;|
</sub CSM_CallSrvcc_Ipc>


<sub CSM_CallHistory_Ipc>
    cause                                     s32    s32    cause                                     |input;|
    hiIndex[CSM_HISTORY_INDEX_STRING_SZ]      array  s8     hiIndex                                   |multiedit;|
    number[81]                                array  s8     number                                    |multiedit;|
    type                                      u8     u8     type                                      |input;|
    alpha[129]                                array  s8     alpha                                     |multiedit;|
    normalizedAddress[129]                    array  s8     normalizedAddress                         |multiedit;|
</sub CSM_CallHistory_Ipc>


<sub CSM_CallSupsrvInfoParticipant>
    status                          u8     u8     status                          |input;|
    number[81]                      array  s8     number                          |multiedit;|
    reserved_1[2]                   array  s8     reserved_1                      |multiedit;|
</sub CSM_CallSupsrvInfoParticipant>


<sub CSM_CallSupsrvInfo_Ipc>
    idx                                       s32                            s32                            idx                                       |input;|
    supsrvNotification                        s32                            s32                            supsrvNotification                        |input;|
    numHistories                              s32                            s32                            numHistories                              |input;|
    callHistories[CSM_HISTORY_MAX_LIST_SIZE]  array                          CSM_CallHistory_Ipc            callHistories                             |multiedit;|
    uniVideoStatus                            u8                             u8                             uniVideoStatus                            |input;|
    reserved_1[3]                             array                          u8                             reserved_1                                |multiedit;|
    participant                               struct                         CSM_CallSupsrvInfoParticipant  
</sub CSM_CallSupsrvInfo_Ipc>


<sub CSM_RadioResourceMedia_Ipc>
    callId        s32  s32  callId        |input;|
    audioRtpPort  s32  s32  audioRtpPort  |input;|
    videoRtpPort  s32  s32  videoRtpPort  |input;|
</sub CSM_RadioResourceMedia_Ipc>


<sub CSM_CallMediaDir_Ipc>
    audioDir  s32  s32  audioDir  |input;|
    videoDir  s32  s32  videoDir  |input;|
</sub CSM_CallMediaDir_Ipc>


<sub CSM_MediaQuality>
    latency      s32  s32  latency      |input;|
    loss         s32  s32  loss         |input;|
    jitter       s32  s32  jitter       |input;|
    rtp_timeout  s32  s32  rtp_timeout  |input;|
</sub CSM_MediaQuality>


<union CSM_OutputCallUnion>
    address[81]                      array                       s8                          address                          |multiedit;|
    report                           struct                      CSM_CallReport_Ipc          
    errorCode                        s32                         s32                         errorCode                        |input;|
    clipReport                       struct                      CSM_CallClip_Ipc            
    srvcc                            struct                      CSM_CallSrvcc_Ipc           
    digit                            s8                          s8                          digit                            |input;|
    supsrvInfo                       struct                      CSM_CallSupsrvInfo_Ipc      
    resourceMedia                    struct                      CSM_RadioResourceMedia_Ipc  
    isEarlyMedia                     s32                         s32                         isEarlyMedia                     |input;|
    isVoiceHD                        s32                         s32                         isVoiceHD                        |input;|
    mediaDir                         struct                      CSM_CallMediaDir_Ipc        
    evtResult                        s32                         s32                         evtResult                        |input;|
    mediaQuality                     struct                      CSM_MediaQuality            
</union CSM_OutputCallUnion>


<sub CSM_OutputCall_Ipc>
    reason                             u8                   u8                   reason                             |input;|
    reasonDesc[129]                    array                s8                   reasonDesc                         |multiedit;|
    reserved_1[2]                      array                s8                   reserved_1                         |multiedit;|
    unionType                          u32                  u32                  unionType                          |input;|
    u                                  union                CSM_OutputCallUnion  
    isConferenceIncoming               s32                  s32                  isConferenceIncoming               |input;|
    callid_Bitmap                      s8                   s8                   callid_Bitmap                      |input;|
    reserved_2[3]                      array                s8                   reserved_2                         |multiedit;|
    callIdx                            s32                  s32                  callIdx                            |input;|
    profile_id                         s8                   s8                   profile_id                         |input;|
    reserved_3[3]                      array                s8                   reserved_3                         |multiedit;|
    isEncrypted                        s32                  s32                  isEncrypted                        |input;|
</sub CSM_OutputCall_Ipc>


<sub CSM_OutputSmsMsg>
    body[513]                    array  s8     body                         |multiedit;|
    reserved_1[3]                array  s8     reserved_1                   |multiedit;|
    len                          s32    s32    len                          |input;|
    numOfMessage                 s32    s32    numOfMessage                 |input;|
    scts[129]                    array  s8     scts                         |multiedit;|
    dcs                          u8     u8     dcs                          |input;|
    smsc[CSM_SMS_SMSC_NUM_SZ]    array  s8     smsc                         |multiedit;|
    smsc_len                     s8     s8     smsc_len                     |input;|
    reserved_2                   s8     s8     reserved_2                   |input;|
</sub CSM_OutputSmsMsg>


<union CSM_OutputSmsUnion>
    msg         struct            CSM_OutputSmsMsg  
    reportType  u8                u8                reportType  |input;|
</union CSM_OutputSmsUnion>


<sub CSM_OutputSms_Ipc>
    reason                             u8                  u8                  reason                             |input;|
    reasonDesc[129]                    array               s8                  reasonDesc                         |multiedit;|
    address[129]                       array               s8                  address                            |multiedit;|
    reserved_1                         u8                  u8                  reserved_1                         |input;|
    mr                                 u16                 u16                 mr                                 |input;|
    errorCode                          u16                 u16                 errorCode                          |input;|
    unionType                          u32                 u32                 unionType                          |input;|
    u                                  union               CSM_OutputSmsUnion  
    isEmergSms                         s8                  s8                  isEmergSms                         |input;|
    reserved_2[3]                      array               u8                  reserved_2                         |multiedit;|
</sub CSM_OutputSms_Ipc>


<sub CSM_OutputServiceAka>
    akaRand[CSM_AKA_RAND_STRING_SZ]  array  s8     akaRand                          |multiedit;|
    akaAutn[CSM_AKA_AUTN_STRING_SZ]  array  s8     akaAutn                          |multiedit;|
</sub CSM_OutputServiceAka>


<sub CSM_OutputServiceIpsec>
    localIpAddress[129]                          array  s8     localIpAddress                               |multiedit;|
    remoteIpAddress[129]                         array  s8     remoteIpAddress                              |multiedit;|
    reserved_1[2]                                array  s8     reserved_1                                   |multiedit;|
    portUc                                       s32    s32    portUc                                       |input;|
    portUs                                       s32    s32    portUs                                       |input;|
    portPc                                       s32    s32    portPc                                       |input;|
    portPs                                       s32    s32    portPs                                       |input;|
    spiUc                                        s32    s32    spiUc                                        |input;|
    spiUs                                        s32    s32    spiUs                                        |input;|
    spiPc                                        s32    s32    spiPc                                        |input;|
    spiPs                                        s32    s32    spiPs                                        |input;|
</sub CSM_OutputServiceIpsec>


<sub CSM_OutputServiceNotify>
    type           u8     u8     type           |input;|
    reserved_1[3]  array  u8     reserved_1     |multiedit;|
</sub CSM_OutputServiceNotify>


<sub CSM_OutputServiceLocalIpAddr>
    address[129]                         array  s8     address                              |multiedit;|
    reserved_1[3]                        array  s8     reserved_1                           |multiedit;|
</sub CSM_OutputServiceLocalIpAddr>


<union CSM_OutputServiceUnion>
    aka             struct                        CSM_OutputServiceAka          
    ipsec           struct                        CSM_OutputServiceIpsec        
    notify          struct                        CSM_OutputServiceNotify       
    localIpAddress  struct                        CSM_OutputServiceLocalIpAddr  
</union CSM_OutputServiceUnion>


<sub CSM_OutputService_Ipc>
    reason                             u8                      u8                      reason                             |input;|
    reasonDesc[129]                    array                   s8                      reasonDesc                         |multiedit;|
    state                              u8                      u8                      state                              |input;|
    reserved_1                         s8                      s8                      reserved_1                         |input;|
    errorCode                          s32                     s32                     errorCode                          |input;|
    isEmergency                        s32                     s32                     isEmergency                        |input;|
    unionType                          u32                     u32                     unionType                          |input;|
    u                                  union                   CSM_OutputServiceUnion  
</sub CSM_OutputService_Ipc>


<union CSM_SupSrvResStatus_Ipc>
    oirResStatus   u8     u8     oirResStatus   |input;|
    genResStatus   u8     u8     genResStatus   |input;|
    reserved_1[4]  array  u8     reserved_1     |multiedit;|
</union CSM_SupSrvResStatus_Ipc>


<union CSM_SupSrvProvision_Ipc>
    oirProv        u8     u8     oirProv        |input;|
    tirProv        u8     u8     tirProv        |input;|
    genProv        u8     u8     genProv        |input;|
    reserved_1[4]  array  u8     reserved_1     |multiedit;|
</union CSM_SupSrvProvision_Ipc>


<union CSM_OutputSupSrvUnion>
    ruleParams[CSM_SUPSRV_MEDIA_TYPE_NUM]                               array                                                               T_ruleParams                                                        ruleParams                                                          |multiedit;|
</union CSM_OutputSupSrvUnion>


<sub T_ruleParams
    ruleParams[CSM_SUPSRV_MAX_QUERY_RESULT]                             array                                                               CSM_SupSrvRuleParams_Ipc                                            ruleParams                                                          |multiedit;|
</sub T_ruleParams


<sub CSM_OutputSupSrv_Ipc>
    reason                                                            u8                                                                u8                                                                reason                                                            |input;|
    reasonDesc[129]                                                   array                                                             s8                                                                reasonDesc                                                        |multiedit;|
    cmdType                                                           u8                                                                u8                                                                cmdType                                                           |input;|
    reserved_1                                                        u8                                                                u8                                                                reserved_1                                                        |input;|
    unionType_1                                                       u32                                                               u32                                                               unionType_1                                                       |input;|
    mode                                                              union                                                             CSM_SupSrvMode_Ipc                                                
    unionType_2                                                       u32                                                               u32                                                               unionType_2                                                       |input;|
    queryEnb[CSM_SUPSRV_MEDIA_TYPE_NUM]                               array                                                             T_queryEnb                                                        queryEnb                                                          |multiedit;|
    unionType_3                                                       u32                                                               u32                                                               unionType_3                                                       |input;|
    prov                                                              union                                                             CSM_SupSrvProvision_Ipc                                           
    errorCode                                                         u16                                                               u16                                                               errorCode                                                         |input;|
    reserved_2[2]                                                     array                                                             u8                                                                reserved_2                                                        |multiedit;|
    unionType_4                                                       u32                                                               u32                                                               unionType_4                                                       |input;|
    u                                                                 union                                                             CSM_OutputSupSrvUnion                                             
</sub CSM_OutputSupSrv_Ipc>


<sub T_queryEnb
    queryEnb[CSM_SUPSRV_MAX_QUERY_RESULT]                             array                                                             CSM_SupSrvResStatus_Ipc                                           queryEnb                                                          |multiedit;|
</sub T_queryEnb


<sub CSM_OutputUssd_Ipc>
    reason                             u8     u8     reason                             |input;|
    reasonDesc[129]                    array  s8     reasonDesc                         |multiedit;|
    encType                            u8     u8     encType                            |input;|
    message[1025]                      array  s8     message                            |multiedit;|
    errorCode                          u16    u16    errorCode                          |input;|
    reserved_1[2]                      array  u8     reserved_1                         |multiedit;|
</sub CSM_OutputUssd_Ipc>


<union CSM_OutputEventUnion>
    call     struct                 CSM_OutputCall_Ipc     
    sms      struct                 CSM_OutputSms_Ipc      
    service  struct                 CSM_OutputService_Ipc  
    supSrv   struct                 CSM_OutputSupSrv_Ipc   
    ussd     struct                 CSM_OutputUssd_Ipc     
</union CSM_OutputEventUnion>


<0x1502 OP_CSM_OutputEvent>
    ref_count      u8                    u8                    ref_count      |input;|
    type           s8                    s8                    type           |input;|
    reserved_1[2]  array                 s8                    reserved_1     |multiedit;|
    unionType      u32                   u32                   unionType      |input;|
    evt            union                 CSM_OutputEventUnion  
</0x1502 OP_CSM_OutputEvent>


<union CSM_SupSrvReqStatus>
    oirReqStatus  struct                    CSM_SupSrvOirEventStatus  
    genReqStatus  struct                    CSM_SupSrvGenReqStatus    
</union CSM_SupSrvReqStatus>


<union CSM_SupSrvMode>
    cbMode  struct            CSM_SupSrvCbMode  
    cfMode  struct            CSM_SupSrvCFMode  
</union CSM_SupSrvMode>


<union CSM_SupSrvResStatus>
    oirResStatus  struct                    CSM_SupSrvOirEventStatus  
    genResStatus  struct                    CSM_SupSrvGenResStatus    
</union CSM_SupSrvResStatus>


<union CSM_SupSrvProvision>
    oirProv  struct                  CSM_SupSrvOirProvision  
    tirProv  struct                  CSM_SupSrvTirProvision  
    genProv  struct                  CSM_SupSrvGenProvision  
</union CSM_SupSrvProvision>


<sub CSM_CallMediaDir>
    audioDir  structint  
    videoDir  structint  
</sub CSM_CallMediaDir>


<sub CSM_Address>
    type                            struct               CSM_CallAddressType  
    numberType                      struct               CSM_CallNumberType   
    number[81]                      array                char                 number                          |multiedit;|
    alpha[129]                      array                char                 alpha                           |multiedit;|
</sub CSM_Address>


<sub CSM_RadioResourceMedia>
    callId        structint  
    audioRtpPort  structint  
    videoRtpPort  structint  
</sub CSM_RadioResourceMedia>


<sub CSM_ResourceStatus>
    callId         struct                int                   
    audioReady     struct                int                   
    videoReady     struct                int                   
    mbr_ul         struct                unsigned              
    mbr_dl         struct                unsigned              
    gbr_ul         struct                unsigned              
    gbr_dl         struct                unsigned              
    PreconType     struct                CSM_PreconditionType  
    is_final_rslt  struct                char                  
</sub CSM_ResourceStatus>


<union gain>
    remoteAddress[129]                            array   char    remoteAddress                                 |multiedit;|
    remoteParticipants[CSM_EVENT_LONG_STRING_SZ]  array   char    remoteParticipants                            |multiedit;|
    errorCode                                     struct  int     
    digit                                         struct  char    
    callIndex                                     struct  int     
    aecEnable                                     struct  int     
    {                                             struct  struct  
    tx                                            struct  int     
    rx                                            struct  int     
</union gain>


<sub call_mix>
    resourceStatus   struct              CSM_ResourceStatus  
    ho_type          struct              CSM_CallHoType      
    is_SrvccSupport  struct              int                 
    {                struct              struct              
    call_index       struct              int                 
    callmix_type     struct              CSM_CallMixType     
</sub call_mix>


<sub mediaQualityCtrl>
    enable       structint  
    latency      structint  
    loss         structint  
    jitter       structint  
    rtp_timeout  structint  
</sub mediaQualityCtrl>


<sub CSM_InputSms>
    reason                                struct         CSM_SmsReason  
    type                                  struct         CSM_SmsType    
    reasonDesc[129]                       array          char           reasonDesc                            |multiedit;|
    remoteAddress[129]                    array          char           remoteAddress                         |multiedit;|
    message[513]                          array          char           message                               |multiedit;|
    pdu[513]                              array          char           pdu                                   |multiedit;|
    msgLen                                struct         int            
    smsc[129]                             array          char           smsc                                  |multiedit;|
    shortmr                               struct         unsigned       
    error_cause                           struct         char           
    isEmergSms                            struct         char           
</sub CSM_InputSms>


<sub CSM_ServiceAppObj>
    appName[CSM_EVENT_STRING_SZ]        array                   char                    appName                             |multiedit;|
    appUri[CSM_FQDN_STRING_SZ]          array                   char                    appUri                              |multiedit;|
    appAuthType                         struct                  CSM_ServiceAppAuthType  
    appAuthName[CSM_EVENT_STRING_SZ]    array                   char                    appAuthName                         |multiedit;|
    appAuthSecret[CSM_EVENT_STRING_SZ]  array                   char                    appAuthSecret                       |multiedit;|
    appAuthSecretLength                 struct                  int                     
</sub CSM_ServiceAppObj>


<sub CSM_ServiceAppsProvision>
    bsf[CSM_FQDN_STRING_SZ]  array              char               bsf                      |multiedit;|
    xcapAppInfo              struct             CSM_ServiceAppObj  
</sub CSM_ServiceAppsProvision>


<union cgi>
    {                        struct                        struct                        
    type                     struct                        CSM_ServiceNetworkAccessType  
    is_handover              struct                        int                           
    id[65]                   array                         char                          id                       |multiedit;|
    is_cs_available          struct                        int                           
</union cgi>


<sub aka>
    response[CSM_AKA_RESP_STRING_SZ]  array char  response                          |multiedit;|
    resLength                         structint   
    auts[CSM_AKA_AUTS_STRING_SZ]      array char  auts                              |multiedit;|
    ik[CSM_AKA_IK_STRING_SZ]          array char  ik                                |multiedit;|
    ck[CSM_AKA_CK_STRING_SZ]          array char  ck                                |multiedit;|
</sub aka>


<sub ipsec>
    protectedPort        structint  
    protectedPortPoolSz  structint  
    spi                  structint  
    spiPoolSz            structint  
</sub ipsec>


<sub port>
    sip            structint  
    audio          structint  
    audioPoolSize  structint  
    video          structint  
    videoPoolSize  structint  
</sub port>


<sub coder>
    coderNum                                         struct                                           int                                              
    coderPayloadType[CSM_CODER_NUM]                  array                                            int                                              coderPayloadType                                 |multiedit;|
    coderName[CSM_CODER_NUM]                         array                                            T_coderName                                      coderName                                        |multiedit;|
    coderDescription[CSM_CODER_NUM]                  array                                            char                                             coderDescription                                 |multiedit;|
    +1]                                              struct                                           [CSM_CODER_DESCRIPTION_STRING_SZ                 
</sub coder>


<sub T_coderName
    coderName[CSM_CODER_STRING_SZ+1]                 array                                            char                                             coderName                                        |multiedit;|
</sub T_coderName


<sub media_profile>
    profile_id                                         structint   
    profile_desc[256]                                  array char  profile_desc                                       |multiedit;|
</sub media_profile>


<sub ssac>
    voice_barring_factor  structint  
    voice_barring_time    structint  
    video_barring_factor  structint  
    video_barring_time    structint  
</sub ssac>


<sub plmn>
    mcc                   struct    int       
    mnc                   struct    int       
    charmnc_digit_number  struct    unsigned  
</sub plmn>


<sub CSM_InputService>
    reason                             struct             CSM_ServiceReason  
    reasonDesc[129]                    array              char               reasonDesc                         |multiedit;|
    isEmergency                        struct             int                
    u                                  struct             CSM_ServiceData    
</sub CSM_InputService>


<sub CSM_InputRadio>
    reason                             struct                CSM_RadioReason       
    networkType                        struct                CSM_RadioNetworkType  
    ipAddrType                         struct                CSM_RadioIPAddrType   
    address[CSM_IP_ADDRESS_STRING_SZ]  array                 char                  address                            |multiedit;|
    nsapi                              struct                int                   
    infcName[129]                      array                 char                  infcName                           |multiedit;|
    isEmergencyFailoverToCs            struct                int                   
    isEmergencyRegRequired             struct                int                   
    netdual_sys                        struct                int                   
</sub CSM_InputRadio>


<sub CSM_SupSrvRuleParams>
    noReplyTimer                                   struct       int          
    mediaType[CSM_SUPSRV_PARAM_STRING_SZ]          array        char         mediaType                                      |multiedit;|
    timeRangeOfTheDay[CSM_SUPSRV_PARAM_STRING_SZ]  array        char         timeRangeOfTheDay                              |multiedit;|
    cfwTarget                                      struct       CSM_Address  
</sub CSM_SupSrvRuleParams>


<sub CSM_InputSupSrv>
    reason                             struct                CSM_SupSrvReason      
    reasonDesc[129]                    array                 char                  reasonDesc                         |multiedit;|
    mode                               union                 CSM_SupSrvMode        
    status                             union                 CSM_SupSrvReqStatus   
    ruleParams                         struct                CSM_SupSrvRuleParams  
</sub CSM_InputSupSrv>


<sub CSM_InputUssd>
    reason                             struct           CSM_UssdReason   
    reasonDesc[129]                    array            char             reasonDesc                         |multiedit;|
    encType                            struct           CSM_UssdEncType  
    message[1025]                      array            char             message                            |multiedit;|
</sub CSM_InputUssd>


<union evt>
    call     struct            CSM_InputCall     
    sms      struct            CSM_InputSms      
    service  struct            CSM_InputService  
    radio    struct            CSM_InputRadio    
    supSrv   struct            CSM_InputSupSrv   
    ussd     struct            CSM_InputUssd     
</union evt>


<sub CSM_CallSummary>
    idx                                            struct               int                  
    direction                                      struct               CSM_CallDirection    
    negStatus                                      struct               CSM_CallNegStatus    
    status                                         struct               CSM_CallStatus       
    state                                          struct               CSM_CallState        
    mode                                           struct               CSM_CallMode         
    isMultiParty                                   struct               CSM_CallMultiParty   
    numberType                                     struct               CSM_CallNumberType   
    number[81]                                     array                char                 number                                         |multiedit;|
    normalizedAddress[129]                         array                char                 normalizedAddress                              |multiedit;|
    type                                           struct               CSM_CallAddressType  
    alpha[129]                                     array                char                 alpha                                          |multiedit;|
    callSessionType                                struct               int                  
    mediaDir                                       struct               CSM_CallMediaDir     
    coderSdpMd[256]                                array                char                 coderSdpMd                                     |multiedit;|
    is_srvcc_alerting_support                      struct               int                  
    is_mid_call_support                            struct               int                  
    is_srvcc_orig_pre_alerting_support             struct               int                  
    is_video_support                               struct               int                  
    charis_televt_support                          struct               unsigned             
</sub CSM_CallSummary>


<sub CSM_CallReport>
    numCalls                             struct           int              
    calls[CSM_EVENT_MAX_CALL_LIST_SIZE]  array            CSM_CallSummary  calls                                |multiedit;|
</sub CSM_CallReport>


<sub CSM_CallClip>
    number[81]                                array                char                 number                                    |multiedit;|
    type                                      struct               CSM_CallAddressType  
    alpha[129]                                array                char                 alpha                                     |multiedit;|
    callSessionType                           struct               int                  
    direction                                 struct               CSM_CallDirection    
    normalizedAddress[129]                    array                char                 normalizedAddress                         |multiedit;|
</sub CSM_CallClip>


<sub CSM_CallSrvcc>
    result  struct           CSM_SrvccResult  
    callId  struct           int              
</sub CSM_CallSrvcc>


<sub CSM_CallHistory>
    cause                                     struct               CSM_CallCauseCode    
    hiIndex[CSM_HISTORY_INDEX_STRING_SZ]      array                char                 hiIndex                                   |multiedit;|
    number[81]                                array                char                 number                                    |multiedit;|
    type                                      struct               CSM_CallAddressType  
    alpha[129]                                array                char                 alpha                                     |multiedit;|
    normalizedAddress[129]                    array                char                 normalizedAddress                         |multiedit;|
</sub CSM_CallHistory>


<sub participant>
    idx                                       struct                    int                       
    supsrvNotification                        struct                    int                       
    numHistories                              struct                    int                       
    callHistories[CSM_HISTORY_MAX_LIST_SIZE]  array                     CSM_CallHistory           callHistories                             |multiedit;|
    uniVideoStatus                            struct                    CSM_SupSrvUniVideoStatus  
    {                                         struct                    struct                    
    status                                    struct                    CSM_ParticipantStatus     
    number[81]                                array                     char                      number                                    |multiedit;|
</sub participant>


<sub CSM_PreconditionInfo>
    PreconType       struct                CSM_PreconditionType  
    isStart          struct                int                   
    callSessionType  struct                int                   
</sub CSM_PreconditionInfo>


<union mediaQuality>
    address[81]                      array                   char                    address                          |multiedit;|
    report                           struct                  CSM_CallReport          
    errorCode                        struct                  int                     
    clipReport                       struct                  CSM_CallClip            
    srvcc                            struct                  CSM_CallSrvcc           
    digit                            struct                  char                    
    supsrvInfo                       struct                  CSM_CallSupsrvInfo      
    resourceMedia                    struct                  CSM_RadioResourceMedia  
    isEarlyMedia                     struct                  int                     
    localToneType                    struct                  CSM_LocalToneType       
    voiceType                        struct                  CSM_CallVoiceType       
    mediaDir                         struct                  CSM_CallMediaDir        
    evtResult                        struct                  int                     
    preconditionInfo                 struct                  CSM_PreconditionInfo    
    {                                struct                  struct                  
    latency                          struct                  int                     
    loss                             struct                  int                     
    jitter                           struct                  int                     
    rtp_timeout                      struct                  int                     
</union mediaQuality>


<union msg>
    {                            struct      struct      
    body[513]                    array       char        body                         |multiedit;|
    len                          struct      int         
    numOfMessage                 struct      int         
    scts[129]                    array       char        scts                         |multiedit;|
    dcs                          struct      CSM_SmsDcs  
    smsc[CSM_SMS_SMSC_NUM_SZ]    array       char        smsc                         |multiedit;|
    smsc_len                     struct      char        
</union msg>


<sub u>
    reportType  struct             CSM_SmsReportType  
</sub u>


<union aka>
    {                                struct  struct  
    akaRand[CSM_AKA_RAND_STRING_SZ]  array   char    akaRand                          |multiedit;|
    akaAutn[CSM_AKA_AUTN_STRING_SZ]  array   char    akaAutn                          |multiedit;|
</union aka>


<sub ipsec>
    {                                            struct  struct  
    localIpAddress[129]                          array   char    localIpAddress                               |multiedit;|
    remoteIpAddress[129]                         array   char    remoteIpAddress                              |multiedit;|
    portUc                                       struct  int     
    portUs                                       struct  int     
    portPc                                       struct  int     
    portPs                                       struct  int     
    spiUc                                        struct  int     
    spiUs                                        struct  int     
    spiPc                                        struct  int     
    spiPs                                        struct  int     
</sub ipsec>


<sub notify>
    type  struct                 CSM_ServiceNotifyType  
</sub notify>


<sub RegIpAddr>
    localAddr[129]                          array char  localAddr                               |multiedit;|
    remoteAddr[129]                         array char  remoteAddr                              |multiedit;|
</sub RegIpAddr>


<union u>
    ruleParams[CSM_SUPSRV_MEDIA_TYPE_NUM]                               array                                                               T_ruleParams                                                        ruleParams                                                          |multiedit;|
</union u>


<sub T_ruleParams
    ruleParams[CSM_SUPSRV_MAX_QUERY_RESULT]                             array                                                               CSM_SupSrvRuleParams                                                ruleParams                                                          |multiedit;|
</sub T_ruleParams


<sub CSM_OutputUssd>
    reason                             struct             CSM_OutputReason   
    reasonDesc[129]                    array              char               reasonDesc                         |multiedit;|
    encType                            struct             CSM_UssdEncType    
    message[1025]                      array              char               message                            |multiedit;|
    errorCode                          struct             CSM_UssdErrorCode  
</sub CSM_OutputUssd>


<union evt>
    call     struct             CSM_OutputCall     
    sms      struct             CSM_OutputSms      
    service  struct             CSM_OutputService  
    supSrv   struct             CSM_OutputSupSrv   
    ussd     struct             CSM_OutputUssd     
</union evt>


<sub T_API_TC_CTRL_IND>
    bTestLoopModeH  u8  u8  bTestLoopModeH  |input;|
    bTestLoopModeB  u8  u8  bTestLoopModeB  |input;|
</sub T_API_TC_CTRL_IND>


<0x1122 OP_API_TC_CTRL_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_API_TC_CTRL_IND  
</0x1122 OP_API_TC_CTRL_IND>


<sub T_API_TC_DATA_REQ>
    DataLen  u16    u16    DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub T_API_TC_DATA_REQ>


<0x1123 OP_API_TC_DATA_REQ>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_API_TC_DATA_REQ  
</0x1123 OP_API_TC_DATA_REQ>


<0x1124 OP_API_TC_DATA_CNF>
    signalHeader  struct       T_MsgHeader  
</0x1124 OP_API_TC_DATA_CNF>


<sub T_API_TC_DATA_IND>
    DataLen  u16    u16    DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub T_API_TC_DATA_IND>


<0x1125 OP_API_TC_DATA_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_API_TC_DATA_IND  
</0x1125 OP_API_TC_DATA_IND>


<sub T_API_TC_PSDATA_REQ>
    pPduData   Ptr          T_ComPduLte  
</sub T_API_TC_PSDATA_REQ>


<0x1130 OP_API_TC_PSDATA_REQ>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_API_TC_PSDATA_REQ  
</0x1130 OP_API_TC_PSDATA_REQ>


<sub T_API_TC_PSDATA_IND>
    ebi        u8           u8           ebi        |input;|
    pSduData   Ptr          T_ComSduLte  
</sub T_API_TC_PSDATA_IND>


<0x1131 OP_API_TC_PSDATA_IND>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_API_TC_PSDATA_IND  
</0x1131 OP_API_TC_PSDATA_IND>


<sub T_RABM_TC_CTRL_IND>
    bTestLoopMode  u8  u8  bTestLoopMode  |input;|
</sub T_RABM_TC_CTRL_IND>


<0x1126 OP_RABM_TC_CTRL_IND>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_CTRL_IND  
</0x1126 OP_RABM_TC_CTRL_IND>


<sub T_RABM_TC_DATA_REQ>
    ebi        u8           u8           ebi        |input;|
    pPduData   Ptr          T_ComPduLte  
</sub T_RABM_TC_DATA_REQ>


<0x1127 OP_RABM_TC_DATA_REQ>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_DATA_REQ  
</0x1127 OP_RABM_TC_DATA_REQ>


<sub T_RABM_TC_DATA_IND>
    ebi        u8           u8           ebi        |input;|
    drbId      u8           u8           drbId      |input;|
    pSduData   Ptr          T_ComSduLte  
</sub T_RABM_TC_DATA_IND>


<0x1128 OP_RABM_TC_DATA_IND>
    signalHeader  struct              T_MsgHeader         
    body          struct              T_RABM_TC_DATA_IND  
</0x1128 OP_RABM_TC_DATA_IND>


<sub T_ESM_TC_PDN_ACT_IND>
    PdnType      u8     u8     PdnType      |input;|
    Ipv4Addr[4]  array  u8     Ipv4Addr     |multiedit;|
</sub T_ESM_TC_PDN_ACT_IND>


<0x1129 OP_ESM_TC_PDN_ACT_IND>
    signalHeader  struct                T_MsgHeader           
    body          struct                T_ESM_TC_PDN_ACT_IND  
</0x1129 OP_ESM_TC_PDN_ACT_IND>


<sub T_EMM_TC_STAT_IND>
    RrcReleased  u8  u8  RrcReleased  |input;|
    PsDetached   u8  u8  PsDetached   |input;|
</sub T_EMM_TC_STAT_IND>


<0x112a OP_EMM_TC_STAT_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_STAT_IND  
</0x112a OP_EMM_TC_STAT_IND>


<sub T_EMM_TC_DATA_REQ>
    DataLen                u16    u16    DataLen                |input;|
    Dummy                  u16    u16    Dummy                  |input;|
    Data[MAX_NAS_MSG_LEN]  array  u8     Data                   |multiedit;|
</sub T_EMM_TC_DATA_REQ>


<0x112b OP_EMM_TC_DATA_REQ>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_DATA_REQ  
</0x112b OP_EMM_TC_DATA_REQ>


<sub T_EMM_TC_DATA_IND>
    DataLen                u16    u16    DataLen                |input;|
    Dummy                  u16    u16    Dummy                  |input;|
    Data[MAX_NAS_MSG_LEN]  array  u8     Data                   |multiedit;|
</sub T_EMM_TC_DATA_IND>


<0x112c OP_EMM_TC_DATA_IND>
    signalHeader  struct             T_MsgHeader        
    body          struct             T_EMM_TC_DATA_IND  
</0x112c OP_EMM_TC_DATA_IND>


<sub T_CPDCP_TC_DATA_REQ>
    rbId       u8           u8           rbId       |input;|
    pPduData   Ptr          T_ComPduLte  
</sub T_CPDCP_TC_DATA_REQ>


<0x112d OP_CPDCP_TC_DATA_REQ>
    signalHeader  struct               T_MsgHeader          
    body          struct               T_CPDCP_TC_DATA_REQ  
</0x112d OP_CPDCP_TC_DATA_REQ>


<0x22c1 OP_EL1C_MEAS_ACTIVE_REQ>
    signalHeader  struct       T_MsgHeader  
</0x22c1 OP_EL1C_MEAS_ACTIVE_REQ>


<0x22c4 OP_EL1C_DCH_IRAT_MEAS_RESUME_REQ>
    signalHeader  struct       T_MsgHeader  
</0x22c4 OP_EL1C_DCH_IRAT_MEAS_RESUME_REQ>


<0x22c7 OP_EL1C_CGI_ABORT_IRAT_SUCC_IND>
    signalHeader  struct       T_MsgHeader  
</0x22c7 OP_EL1C_CGI_ABORT_IRAT_SUCC_IND>


<0x22c8 OP_EL1C_DCH_ABORT_IRAT_SUCC_IND>
    signalHeader  struct       T_MsgHeader  
</0x22c8 OP_EL1C_DCH_ABORT_IRAT_SUCC_IND>


<0x22c2 OP_EL1C_MEAS_RESET_REQ>
    signalHeader  struct       T_MsgHeader  
</0x22c2 OP_EL1C_MEAS_RESET_REQ>


<0x22c5 OP_EL1C_NON_PS_PAGING_REQ>
    signalHeader           struct                   T_MsgHeader              
    EL1C_PAGING_START_REQ  struct                   T_EL1C_PAGING_START_REQ  
</0x22c5 OP_EL1C_NON_PS_PAGING_REQ>


<0x22c6 OP_EL1C_NON_PS_PAGING_IND>
    signalHeader          struct                  T_MsgHeader             
    EL1C_PCH_GAP_END_IND  struct                  T_EL1C_PCH_GAP_END_IND  
</0x22c6 OP_EL1C_NON_PS_PAGING_IND>


<0x22c9 OP_EL1C_DCH_SCHEDULE_MEAS_REQ>
    signalHeader  struct       T_MsgHeader  
</0x22c9 OP_EL1C_DCH_SCHEDULE_MEAS_REQ>


<0x22cb OP_EL1C_IDM_NO_DATA_IND>
    signalHeader  struct       T_MsgHeader  
</0x22cb OP_EL1C_IDM_NO_DATA_IND>


<0x22ca OP_EL1C_IDM_OCCATION_IND>
    signalHeader  struct       T_MsgHeader  
</0x22ca OP_EL1C_IDM_OCCATION_IND>


<sub T_ECPHY_LTE_CELL_SEARCH_REQ>
    u16_freq_channel  U16  U16  u16_freq_channel  |input;|
    u16_cell_id       U16  U16  u16_cell_id       |input;|
    u16_cp_type       U16  U16  u16_cp_type       |input;|
    u16_band_ind      U16  U16  u16_band_ind      |input;|
    u16_antportcount  U16  U16  u16_antportcount  |input;|
    TDD_frameconfig   U16  U16  TDD_frameconfig   |input;|
</sub T_ECPHY_LTE_CELL_SEARCH_REQ>


<sub T_ECPHY_LTE_SYNC_STATUS_IND>
    b_sync_succ_flag  u16  u16  b_sync_succ_flag  |input;|
    u16_reserved      U16  U16  u16_reserved      |input;|
</sub T_ECPHY_LTE_SYNC_STATUS_IND>


<sub T_ECPHY_LTE_UL_PARA_CONFIG_REQ>
    u16_cell_type          U16  U16  u16_cell_type          |input;|
    u16_cell_id            U16  U16  u16_cell_id            |input;|
    u16_cp_type            U16  U16  u16_cp_type            |input;|
    u16_rnti               U16  U16  u16_rnti               |input;|
    u16_tbsize             U16  U16  u16_tbsize             |input;|
    u16_modulate           U16  U16  u16_modulate           |input;|
    u16_prb_num            U16  U16  u16_prb_num            |input;|
    u16_start_prb          U16  U16  u16_start_prb          |input;|
    u16_delta_pucch_shift  U16  U16  u16_delta_pucch_shift  |input;|
    u16_n_rb_2             U16  U16  u16_n_rb_2             |input;|
    u16_n_cs_1             U16  U16  u16_n_cs_1             |input;|
    u16_n_pucch_1          U16  U16  u16_n_pucch_1          |input;|
    u16_preamble_id        U16  U16  u16_preamble_id        |input;|
    u16_logic_root_num     U16  U16  u16_logic_root_num     |input;|
    u16_ncs                U16  U16  u16_ncs                |input;|
    u16_prach_freq_offset  U16  U16  u16_prach_freq_offset  |input;|
    u16_f_ra               U16  U16  u16_f_ra               |input;|
    u16_reserved           U16  U16  u16_reserved           |input;|
</sub T_ECPHY_LTE_UL_PARA_CONFIG_REQ>


<sub T_ECPHY_LTE_UL_TX_REQ>
    u16_freq_channel[MAX_CHANNEL_NUM]    array  U16    u16_freq_channel                     |multiedit;|
    u16_band_indicator[MAX_CHANNEL_NUM]  array  U16    u16_band_indicator                   |multiedit;|
    u16_freq_num                         U16    U16    u16_freq_num                         |input;|
    u16_nop_sf_num                       U16    U16    u16_nop_sf_num                       |input;|
    u16_trigger_sf_num                   U16    U16    u16_trigger_sf_num                   |input;|
    u16_trig_asfn                        U16    U16    u16_trig_asfn                        |input;|
    u16_ul_tx_num                        U16    U16    u16_ul_tx_num                        |input;|
    u16_bandwidth_ind                    U16    U16    u16_bandwidth_ind                    |input;|
    u16_ul_channel_type                  U16    U16    u16_ul_channel_type                  |input;|
    u16_prach_format                     U16    U16    u16_prach_format                     |input;|
    b_calib_flag                         U16    U16    b_calib_flag                         |input;|
    b_dl_sync_maintain_flag              U16    U16    b_dl_sync_maintain_flag              |input;|
    u16_ul_tx_asfn                       U16    U16    u16_ul_tx_asfn                       |input;|
    u16_ul_tx_interval                   U16    U16    u16_ul_tx_interval                   |input;|
    u16_ul_trig_apc                      U16    U16    u16_ul_trig_apc                      |input;|
    u16_ul_trig_channel                  U16    U16    u16_ul_trig_channel                  |input;|
    u16_ul_trig_band_indicator           U16    U16    u16_ul_trig_band_indicator           |input;|
    u16_apc_num[MAX_CHANNEL_NUM]         array  U16    u16_apc_num                          |multiedit;|
    u16_apc_value[MAX_APC_TOTAL_NUM]     array  U16    u16_apc_value                        |multiedit;|
</sub T_ECPHY_LTE_UL_TX_REQ>


<sub T_ECPHY_LTE_DL_PARA_CONFIG_REQ>
    u16_pb            U16            U16            u16_pb            |input;|
    u16_pa            U16            U16            u16_pa            |input;|
    u16_transmode     U16            U16            u16_transmode     |input;|
    u16_reserved      U16            U16            u16_reserved      |input;|
    u32_crnti         U32            U32            u32_crnti         |input;|
    st_servcell_info  struct         T_CellServLte  
    st_phich_cfg      struct         T_PhichConfig  
</sub T_ECPHY_LTE_DL_PARA_CONFIG_REQ>


<sub T_ECPHY_LTE_DL_RX_REQ>
    u16_freq_channel[MAX_CHANNEL_NUM]    array  U16    u16_freq_channel                     |multiedit;|
    u16_band_indicator[MAX_CHANNEL_NUM]  array  U16    u16_band_indicator                   |multiedit;|
    u16_freq_num                         U16    U16    u16_freq_num                         |input;|
    u16_nop_sf_num                       U16    U16    u16_nop_sf_num                       |input;|
    u16_trigger_sf_num                   U16    U16    u16_trigger_sf_num                   |input;|
    u16_trig_asfn                        U16    U16    u16_trig_asfn                        |input;|
    u16_trig_freq_channel                U16    U16    u16_trig_freq_channel                |input;|
    u16_trig_band_indicator              U16    U16    u16_trig_band_indicator              |input;|
    u16_ul_trig_apc                      U16    U16    u16_ul_trig_apc                      |input;|
    u16_dl_rx_sf_num                     U16    U16    u16_dl_rx_sf_num                     |input;|
    u16_rx_mode                          U16    U16    u16_rx_mode                          |input;|
    u16_bandwidth_ind                    U16    U16    u16_bandwidth_ind                    |input;|
    u16_dl_rx_asfn                       U16    U16    u16_dl_rx_asfn                       |input;|
    u16_dl_rx_interval                   U16    U16    u16_dl_rx_interval                   |input;|
    u16_agc_num[MAX_CHANNEL_NUM]         array  U16    u16_agc_num                          |multiedit;|
    u16_agc_value[MAX_AGC_TOTAL_NUM]     array  U16    u16_agc_value                        |multiedit;|
</sub T_ECPHY_LTE_DL_RX_REQ>


<sub T_ECPHY_LTE_DL_RX_CNF>
    u16_rx_calib_type                   U16    U16    u16_rx_calib_type                   |input;|
    u16_reserved                        U16    U16    u16_reserved                        |input;|
    u16_crc_right_cnt[MAX_CHANNEL_NUM]  array  U16    u16_crc_right_cnt                   |multiedit;|
    u32_rssi[MAX_AGC_TOTAL_NUM]         array  U32    u32_rssi                            |multiedit;|
</sub T_ECPHY_LTE_DL_RX_CNF>


<sub T_ECPHY_LTE_NST_RX_COMM_PARA>
    u16_pb         U16            U16            u16_pb         |input;|
    u16_pa         U16            U16            u16_pa         |input;|
    u16_transmode  U16            U16            u16_transmode  |input;|
    b_ssf_rx_flag  U16            U16            b_ssf_rx_flag  |input;|
    u32_crnti      U32            U32            u32_crnti      |input;|
    st_phich_cfg   struct         T_PhichConfig  
</sub T_ECPHY_LTE_NST_RX_COMM_PARA>


<sub T_ECPHY_LTE_NST_DL_PARA>
    u16_rx_radio_frame_num       U16  U16  u16_rx_radio_frame_num       |input;|
    u16_discard_radio_frame_num  U16  U16  u16_discard_radio_frame_num  |input;|
    u16_init_agc                 U16  U16  u16_init_agc                 |input;|
    s16_init_snr                 S16  S16  s16_init_snr                 |input;|
</sub T_ECPHY_LTE_NST_DL_PARA>


<sub T_ECPHY_LTE_NST_UL_PARA>
    u16_tx_radio_frame_num  U16  U16  u16_tx_radio_frame_num  |input;|
    u16_apc                 U16  U16  u16_apc                 |input;|
    u16_tbsize              U16  U16  u16_tbsize              |input;|
    u16_modulate            U16  U16  u16_modulate            |input;|
    u16_prb_num             U16  U16  u16_prb_num             |input;|
    u16_start_prb           U16  U16  u16_start_prb           |input;|
</sub T_ECPHY_LTE_NST_UL_PARA>


<sub T_ECPHY_LTE_NST_FREQ_CFG>
    u16_freq_channel               U16                      U16                      u16_freq_channel               |input;|
    u16_max_radio_frame_num        U16                      U16                      u16_max_radio_frame_num        |input;|
    u16_nst_tx_num                 U16                      U16                      u16_nst_tx_num                 |input;|
    st_lte_nst_rx                  struct                   T_ECPHY_LTE_NST_DL_PARA  
    st_lte_nst_tx[LTE_NST_TX_NUM]  array                    T_ECPHY_LTE_NST_UL_PARA  st_lte_nst_tx                  |multiedit;|
</sub T_ECPHY_LTE_NST_FREQ_CFG>


<sub T_ECPHY_LTE_NST_RTX_REQ>
    u16_freq_num                         U16                           U16                           u16_freq_num                         |input;|
    u16_freq_change_interval             U16                           U16                           u16_freq_change_interval             |input;|
    st_servcell_info                     struct                        T_CellServLte                 
    st_rx_para_comm_para                 struct                        T_ECPHY_LTE_NST_RX_COMM_PARA  
    st_nst_freq_info[LTE_NST_ARFCN_NUM]  array                         T_ECPHY_LTE_NST_FREQ_CFG      st_nst_freq_info                     |multiedit;|
</sub T_ECPHY_LTE_NST_RTX_REQ>


<sub T_ECPHY_LTE_NST_RTX_RESULT_CNF>
    u32_rssi[LTE_NST_ARFCN_NUM]           array  U32    u32_rssi                              |multiedit;|
    u16_rsrp[LTE_NST_ARFCN_NUM]           array  U16    u16_rsrp                              |multiedit;|
    u16_crc_right_cnt[LTE_NST_ARFCN_NUM]  array  U16    u16_crc_right_cnt                     |multiedit;|
</sub T_ECPHY_LTE_NST_RTX_RESULT_CNF>


<sub T_ECPHY_LTE_RFCTRL_REQ>
    *subframe_config)(VOID)   Ptr   VOID  
    *ofdm_config)(VOID)       Ptr   VOID  
</sub T_ECPHY_LTE_RFCTRL_REQ>


<sub T_ECPHY_LTE_CUR_RSSI_CNF>
    rssi  U32  U32  rssi  |input;|
</sub T_ECPHY_LTE_CUR_RSSI_CNF>


<0x6300 OP_ECPHY_LTE_START_CT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x6300 OP_ECPHY_LTE_START_CT_REQ>


<0x6301 OP_ECPHY_LTE_START_CT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x6301 OP_ECPHY_LTE_START_CT_CNF>


<0x6302 OP_ECPHY_LTE_STOP_CT_REQ>
    signalHeader  struct       T_MsgHeader  
</0x6302 OP_ECPHY_LTE_STOP_CT_REQ>


<0x6303 OP_ECPHY_LTE_STOP_CT_CNF>
    signalHeader  struct       T_MsgHeader  
</0x6303 OP_ECPHY_LTE_STOP_CT_CNF>


<0x630a OP_ECPHY_LTE_CELL_SEARCH_REQ>
    signalHeader               struct                       T_MsgHeader                  
    ECPHY_LTE_CELL_SEARCH_REQ  struct                       T_ECPHY_LTE_CELL_SEARCH_REQ  
</0x630a OP_ECPHY_LTE_CELL_SEARCH_REQ>


<0x630b OP_ECPHY_LTE_SYNC_STATUS_IND>
    signalHeader               struct                       T_MsgHeader                  
    ECPHY_LTE_SYNC_STATUS_IND  struct                       T_ECPHY_LTE_SYNC_STATUS_IND  
</0x630b OP_ECPHY_LTE_SYNC_STATUS_IND>


<0x6304 OP_ECPHY_LTE_UL_PARA_CONFIG_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    ECPHY_LTE_UL_PARA_CONFIG_REQ  struct                          T_ECPHY_LTE_UL_PARA_CONFIG_REQ  
</0x6304 OP_ECPHY_LTE_UL_PARA_CONFIG_REQ>


<0x6305 OP_ECPHY_LTE_UL_TX_REQ>
    signalHeader         struct                 T_MsgHeader            
    ECPHY_LTE_UL_TX_REQ  struct                 T_ECPHY_LTE_UL_TX_REQ  
</0x6305 OP_ECPHY_LTE_UL_TX_REQ>


<0x6306 OP_ECPHY_LTE_UL_TX_CNF>
    signalHeader  struct       T_MsgHeader  
</0x6306 OP_ECPHY_LTE_UL_TX_CNF>


<0x6307 OP_ECPHY_LTE_DL_PARA_CONFIG_REQ>
    signalHeader                  struct                          T_MsgHeader                     
    ECPHY_LTE_DL_PARA_CONFIG_REQ  struct                          T_ECPHY_LTE_DL_PARA_CONFIG_REQ  
</0x6307 OP_ECPHY_LTE_DL_PARA_CONFIG_REQ>


<0x6308 OP_ECPHY_LTE_DL_RX_REQ>
    signalHeader         struct                 T_MsgHeader            
    ECPHY_LTE_DL_RX_REQ  struct                 T_ECPHY_LTE_DL_RX_REQ  
</0x6308 OP_ECPHY_LTE_DL_RX_REQ>


<0x6309 OP_ECPHY_LTE_DL_RX_CNF>
    signalHeader         struct                 T_MsgHeader            
    ECPHY_LTE_DL_RX_CNF  struct                 T_ECPHY_LTE_DL_RX_CNF  
</0x6309 OP_ECPHY_LTE_DL_RX_CNF>


<0x630c OP_ECPHY_LTE_NST_CONFIG_REQ>
    signalHeader           struct                   T_MsgHeader              
    ECPHY_LTE_NST_RTX_REQ  struct                   T_ECPHY_LTE_NST_RTX_REQ  
</0x630c OP_ECPHY_LTE_NST_CONFIG_REQ>


<0x630d OP_ECPHY_LTE_NST_SEBLER_CNF>
    signalHeader                  struct                          T_MsgHeader                     
    ECPHY_LTE_NST_RTX_RESULT_CNF  struct                          T_ECPHY_LTE_NST_RTX_RESULT_CNF  
</0x630d OP_ECPHY_LTE_NST_SEBLER_CNF>


<0x630e OP_ECPHY_LTE_RFCTRL_START_REQ>
    signalHeader          struct                  T_MsgHeader             
    ECPHY_LTE_RFCTRL_REQ  struct                  T_ECPHY_LTE_RFCTRL_REQ  
</0x630e OP_ECPHY_LTE_RFCTRL_START_REQ>


<0x630f OP_ECPHY_LTE_RFCTRL_START_CNF>
    signalHeader  struct       T_MsgHeader  
</0x630f OP_ECPHY_LTE_RFCTRL_START_CNF>


<0x6310 OP_ECPHY_LTE_RFCTRL_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x6310 OP_ECPHY_LTE_RFCTRL_STOP_REQ>


<0x6311 OP_ECPHY_LTE_RFCTRL_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x6311 OP_ECPHY_LTE_RFCTRL_STOP_CNF>


<0x6312 OP_ECPHY_LTE_CUR_RSSI_REQ>
    signalHeader  struct       T_MsgHeader  
</0x6312 OP_ECPHY_LTE_CUR_RSSI_REQ>


<0x6313 OP_ECPHY_LTE_CUR_RSSI_CNF>
    signalHeader            struct                    T_MsgHeader               
    ECPHY_LTE_CUR_RSSI_CNF  struct                    T_ECPHY_LTE_CUR_RSSI_CNF  
</0x6313 OP_ECPHY_LTE_CUR_RSSI_CNF>


<0x6314 OP_ECPHY_LTE_RX_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x6314 OP_ECPHY_LTE_RX_STOP_REQ>


<0x6315 OP_ECPHY_LTE_RX_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x6315 OP_ECPHY_LTE_RX_STOP_CNF>


<0x6316 OP_ECPHY_LTE_TX_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x6316 OP_ECPHY_LTE_TX_STOP_REQ>


<0x6317 OP_ECPHY_LTE_TX_STOP_CNF>
    signalHeader  struct       T_MsgHeader  
</0x6317 OP_ECPHY_LTE_TX_STOP_CNF>


<sub api_StackDynCfg_t>
    GprsAccessMeth  u8  u8  GprsAccessMeth  |input;|
    TS10            u8  u8  TS10            |input;|
</sub api_StackDynCfg_t>


<sub api_LtelockFreqInfo_t>
    Type                         u8     u8     Type                         |input;|
    FreqNum                      u8     u8     FreqNum                      |input;|
    FreqList[MAX_LOCK_FREQ_NUM]  array  u32    FreqList                     |multiedit;|
    CellId                       u16    u16    CellId                       |input;|
</sub api_LtelockFreqInfo_t>


<sub api_NwStoreListInd_t>
    Plmn[3]                      array  u8     Plmn                         |multiedit;|
    Count                        u8     u8     Count                        |input;|
    ArfcnL[API_MAX_STORE_COUNT]  array  u16    ArfcnL                       |multiedit;|
</sub api_NwStoreListInd_t>


<sub api_StartReq_t>
    Band                    u8                     u8                     Band                    |input;|
    Plmn[3]                 array                  u8                     Plmn                    |multiedit;|
    bLockArf                u8                     u8                     bLockArf                |input;|
    manualMode              u8                     u8                     manualMode              |input;|
    GsmCGClass              u8                     u8                     GsmCGClass              |input;|
    LteLockFreqInfo         struct                 api_LtelockFreqInfo_t  
    StoreList[STK_MAX_SIM]  array                  api_NwStoreListInd_t   StoreList               |multiedit;|
</sub api_StartReq_t>


<sub api_StopReq_t>
    stopType  u8  u8  stopType  |input;|
</sub api_StopReq_t>


<sub api_QualReportReq_t>
    StartReport  structbool  
</sub api_QualReportReq_t>


<sub api_ImeiInd_t>
    Imei[API_IMEI_SIZE]  array  u8     Imei                 |multiedit;|
    SV[API_SV_SIZE]      array  u8     SV                   |multiedit;|
</sub api_ImeiInd_t>


<sub api_QualReportCnf_t>
    Rssi      u8   u8   Rssi      |input;|
    RxQual    u8   u8   RxQual    |input;|
    Rsrp      s8   s8   Rsrp      |input;|
    Rsrq      s8   s8   Rsrq      |input;|
    RssidBm   s16  s16  RssidBm   |input;|
    reserved  u16  u16  reserved  |input;|
</sub api_QualReportCnf_t>


<sub api_NwkInfoInd_t>
    LocalTimeZoneLen       u8     u8     LocalTimeZoneLen       |input;|
    LocalTimeZone          u8     u8     LocalTimeZone          |input;|
    UniversalTimeZoneLen   u8     u8     UniversalTimeZoneLen   |input;|
    UniversalTimeZone[7]   array  u8     UniversalTimeZone      |multiedit;|
    DaylightSavingTimeLen  u8     u8     DaylightSavingTimeLen  |input;|
    DaylightSavingTime     u8     u8     DaylightSavingTime     |input;|
    NwkFullNameLen         u8     u8     NwkFullNameLen         |input;|
    NwkShortNameLen        u8     u8     NwkShortNameLen        |input;|
    NwkNames[247]          array  u8     NwkNames               |multiedit;|
</sub api_NwkInfoInd_t>


<sub api_NwSelModeReq_t>
    Mode  u8  u8  Mode  |input;|
</sub api_NwSelModeReq_t>


<sub api_NwListReq_t>
    searchMode  u8  u8  searchMode  |input;|
</sub api_NwListReq_t>


<sub api_NwSelReq_t>
    PlmnId[3]  array  u8     PlmnId     |multiedit;|
</sub api_NwSelReq_t>


<sub api_NwCsRegStatusInd_t>
    Currat      u8     u8     Currat      |input;|
    Status      u8     u8     Status      |input;|
    LAI[5]      array  u8     LAI         |multiedit;|
    CellId[4]   array  u8     CellId      |multiedit;|
    Roaming     struct bool   
    respType    u8     u8     respType    |input;|
    SimPresent  struct bool   
</sub api_NwCsRegStatusInd_t>


<sub api_MmtelSsac_t>
    isBarringForVoiceExist  U8   U8   isBarringForVoiceExist  |input;|
    VoiceBarringFactor      U8   U8   VoiceBarringFactor      |input;|
    isBarringForVideoExist  U8   U8   isBarringForVideoExist  |input;|
    VideoBarringFactor      U8   U8   VideoBarringFactor      |input;|
    VoiceBarringTime        U32  U32  VoiceBarringTime        |input;|
    VideoBarringTime        U32  U32  VideoBarringTime        |input;|
</sub api_MmtelSsac_t>


<sub api_NwPsRegStatusInd_t>
    Status      u8               u8               Status      |input;|
    Cause       u8               u8               Cause       |input;|
    RAI[6]      array            u8               RAI         |multiedit;|
    CellId[4]   array            u8               CellId      |multiedit;|
    Roaming     struct           bool             
    NwType      u8               u8               NwType      |input;|
    AutoPdnAct  u8               u8               AutoPdnAct  |input;|
    IMSVoPS     struct           bool             
    EMCBS       struct           bool             
    LteTddFlag  struct           bool             
    respType    u8               u8               respType    |input;|
    RauCmpt     struct           bool             
    Ssac        struct           api_MmtelSsac_t  
    SimPresent  struct           bool             
</sub api_NwPsRegStatusInd_t>


<sub api_NwGsmConnStatusInd_t>
    ConnMode  u8  u8  ConnMode  |input;|
</sub api_NwGsmConnStatusInd_t>


<sub api_qScanFreqCellInfo_t>
    arfcn   u32    u32    arfcn   |input;|
    tac[2]  array  u8     tac     |multiedit;|
    pci     u16    u16    pci     |input;|
    RSRP    s16    s16    RSRP    |input;|
    RSRQ    s16    s16    RSRQ    |input;|
    RSSI    s16    s16    RSSI    |input;|
    band    u16    u16    band    |input;|
</sub api_qScanFreqCellInfo_t>


<sub api_NwListInd_t>
    PlmnNb                        u8                       u8                       PlmnNb                        |input;|
    PlmnL[60]                     array                    u8                       PlmnL                         |multiedit;|
    Restr[API_MAX_AVAIL_PLMN]     array                    u8                       Restr                         |multiedit;|
    cellInfo[API_MAX_AVAIL_PLMN]  array                    api_qScanFreqCellInfo_t  cellInfo                      |multiedit;|
    searchMode                    u8                       u8                       searchMode                    |input;|
</sub api_NwListInd_t>


<sub api_NwListAbortInd_t>
    Cause  u8  u8  Cause  |input;|
</sub api_NwListAbortInd_t>


<union api_SsProblemCodes_t>
    ss_GeneralProblemCode        struct                            api_SsGeneralProblemCodes_t       
    ss_InvokeProblemCode         struct                            api_SsInvokeProblemCodes_t        
    ss_ReturnResultProblemCodes  struct                            api_SsReturnResultProblemCodes_t  
    ss_ReturnErrorProblemCodes   struct                            api_SsReturnErrorProblemCodes_t   
</union api_SsProblemCodes_t>


<sub api_SsRejectComponentTag_t>
    ss_ProblemCodeTag  struct                  api_SsProblemCodeTag_t  
    ss_ProblemCode     union                   api_SsProblemCodes_t    
</sub api_SsRejectComponentTag_t>


<sub api_SsCallWaitingParams_t>
    ss_ServiceCodeCategory  struct                            api_SsBasicServiceCodeCategory_t  
    ss_ServiceCode          u8                                u8                                ss_ServiceCode          |input;|
</sub api_SsCallWaitingParams_t>


<sub api_SsCallForwardingParams_t>
    ss_ServiceCodeCategory                         struct                            api_SsBasicServiceCodeCategory_t  
    ss_ServiceCode                                 u8                                u8                                ss_ServiceCode                                 |input;|
    forwardedToNumber[MAX_FWD_TO_NUM_LEN]          array                             u8                                forwardedToNumber                              |multiedit;|
    forwardedToNumberLen                           u8                                u8                                forwardedToNumberLen                           |input;|
    forwardedtoSubaddress[MAX_FWD_TO_SUBADDR_LEN]  array                             u8                                forwardedtoSubaddress                          |multiedit;|
    forwardedToSubaddressLen                       u8                                u8                                forwardedToSubaddressLen                       |input;|
    bNoReplyConditionTimePresent                   u8                                u8                                bNoReplyConditionTimePresent                   |input;|
    noReplyConditionTime                           u8                                u8                                noReplyConditionTime                           |input;|
</sub api_SsCallForwardingParams_t>


<sub api_SsCallBarringParams_t>
    ss_ServiceCodeCategory                  struct                            api_SsBasicServiceCodeCategory_t  
    ss_ServiceCode                          u8                                u8                                ss_ServiceCode                          |input;|
    bPasswordPresent                        u8                                u8                                bPasswordPresent                        |input;|
    ss_Password[SS_NUM_PSWD_ELEMS]          array                             u8                                ss_Password                             |multiedit;|
    bNewPasswordPresent                     u8                                u8                                bNewPasswordPresent                     |input;|
    ss_newPassword[SS_NUM_PSWD_ELEMS]       array                             u8                                ss_newPassword                          |multiedit;|
    bNewPasswordAgainPresent                u8                                u8                                bNewPasswordAgainPresent                |input;|
    ss_newPasswordAgain[SS_NUM_PSWD_ELEMS]  array                             u8                                ss_newPasswordAgain                     |multiedit;|
</sub api_SsCallBarringParams_t>


<sub api_SsUSSDUserData_t>
    ss_IA5StringLength                                  u8     u8     ss_IA5StringLength                                  |input;|
    ss_IA5String[SS_USSD_USER_DATA_IA5_STRING_MAX_LEN]  array  u8     ss_IA5String                                        |multiedit;|
</sub api_SsUSSDUserData_t>


<sub api_SsUSSDArgs_t>
    ss_USSDDataCodingScheme                    u8     u8     ss_USSDDataCodingScheme                    |input;|
    ss_USSDStringLength                        u8     u8     ss_USSDStringLength                        |input;|
    ss_USSDString[SS_USSD_ARG_STRING_MAX_LEN]  array  u8     ss_USSDString                              |multiedit;|
</sub api_SsUSSDArgs_t>


<union api_SsUSSDErrorSel_t>
    ss_ProcessUSSDataError     struct                           api_SsProcessUSSDataErrors_t     
    ss_ProcessUSSRequestError  struct                           api_SsProcessUSSRequestErrors_t  
    ss_USSRequestError         struct                           api_SsUSSRequestErrors_t         
    ss_USSNotifyError          struct                           api_SsUSSNotifyErrors_t          
</union api_SsUSSDErrorSel_t>


<sub api_SsUSSDErrors_t>
    ss_USSDErrorPresent  struct                    api_SsUSSDErrorPresent_t  
    ss_USSDErrorSel      union                     api_SsUSSDErrorSel_t      
</sub api_SsUSSDErrors_t>


<union api_SsUSSDParamSet_t>
    ss_USSDUserData           struct                      api_SsUSSDUserData_t        
    ss_USSDArgs               struct                      api_SsUSSDArgs_t            
    ss_USSDError              struct                      api_SsUSSDErrors_t          
    ss_ProblemCodeTagandCode  struct                      api_SsRejectComponentTag_t  
</union api_SsUSSDParamSet_t>


<sub api_SsUSSDParams_t>
    ss_USSDMessageType    struct                     api_SsMessageType_t        
    ss_USSDComponentType  struct                     api_SsUSSDComponentType_t  
    TI                    u8                         u8                         TI                    |input;|
    ss_USSDParamSel       union                      api_SsUSSDParamSet_t       
</sub api_SsUSSDParams_t>


<union api_SsActionReqParams_t>
    ss_CallWaitingParams     struct                        api_SsCallWaitingParams_t     
    ss_CallForwardingParams  struct                        api_SsCallForwardingParams_t  
    ss_CallBarringParams     struct                        api_SsCallBarringParams_t     
    ss_USSDParams            struct                        api_SsUSSDParams_t            
</union api_SsActionReqParams_t>


<sub api_SsActionReq_t>
    ss_Operation  struct                   api_SsOperation_t        
    ss_Code       struct                   api_SsCode_t             
    ss_Params     union                    api_SsActionReqParams_t  
</sub api_SsActionReq_t>


<sub api_SsTIInd_t>
    TI            u8                 u8                 TI            |input;|
    ss_Code       struct             api_SsCode_t       
    ss_Operation  struct             api_SsOperation_t  
</sub api_SsTIInd_t>


<sub api_SsBasicServiceGroupListElement_t>
    ss_ServiceCodeCategory  struct                            api_SsBasicServiceCodeCategory_t  
    BasicServiceCode        u8                                u8                                BasicServiceCode        |input;|
</sub api_SsBasicServiceGroupListElement_t>


<sub api_SsCCBSFeatureListElement_t>
    ccbsIndexPresent                      u8                                    u8                                    ccbsIndexPresent                      |input;|
    ccbsIndex                             u8                                    u8                                    ccbsIndex                             |input;|
    bSubcriberNumberPresent               u8                                    u8                                    bSubcriberNumberPresent               |input;|
    numberofSubscriberNumbers             u8                                    u8                                    numberofSubscriberNumbers             |input;|
    b_subscriberNumber[20]                array                                 u8                                    b_subscriberNumber                    |multiedit;|
    bSubscriberSubaddressPresent          u8                                    u8                                    bSubscriberSubaddressPresent          |input;|
    numberofSubscriberSubaddresses        u8                                    u8                                    numberofSubscriberSubaddresses        |input;|
    b_subscriberSubaddress[21]            array                                 u8                                    b_subscriberSubaddress                |multiedit;|
    bBasicServiceGroupListElementPresent  u8                                    u8                                    bBasicServiceGroupListElementPresent  |input;|
    ss_BSGLE                              struct                                api_SsBasicServiceGroupListElement_t  
</sub api_SsCCBSFeatureListElement_t>


<sub api_SsGenericServiceInfo_t>
    Status                           u8                              u8                              Status                           |input;|
    bCliRestrictionOptionPresent     u8                              u8                              bCliRestrictionOptionPresent     |input;|
    cliRestrictionOption             struct                          api_SsCliRestrictionOption_t    
    bMaximumEntitledPriorityPresent  u8                              u8                              bMaximumEntitledPriorityPresent  |input;|
    maximumEntitledPriority          u8                              u8                              maximumEntitledPriority          |input;|
    bDefaultPriorityPresent          u8                              u8                              bDefaultPriorityPresent          |input;|
    defaultPriority                  u8                              u8                              defaultPriority                  |input;|
    bCCBSFeatureListPresent          u8                              u8                              bCCBSFeatureListPresent          |input;|
    numberOfCCBSFeatureListElements  u8                              u8                              numberOfCCBSFeatureListElements  |input;|
    CCBSFeatureListElement[5]        array                           api_SsCCBSFeatureListElement_t  CCBSFeatureListElement           |multiedit;|
    nbrSBPresent                     u8                              u8                              nbrSBPresent                     |input;|
    nbrSB                            u8                              u8                              nbrSB                            |input;|
    nbrUserPresent                   u8                              u8                              nbrUserPresent                   |input;|
    nbrUser                          u8                              u8                              nbrUser                          |input;|
    nbrSNPresent                     u8                              u8                              nbrSNPresent                     |input;|
    nbrSN                            u8                              u8                              nbrSN                            |input;|
</sub api_SsGenericServiceInfo_t>


<sub api_SsBasicServiceGroupList_t>
    numberOfBasicServiceGroupElements  u8                                    u8                                    numberOfBasicServiceGroupElements  |input;|
    ss_BasicServiceGroupElement[13]    array                                 api_SsBasicServiceGroupListElement_t  ss_BasicServiceGroupElement        |multiedit;|
</sub api_SsBasicServiceGroupList_t>


<sub api_SsForwardingFeatureListElement_t>
    ss_bBasicServicePresent                   u8                                u8                                ss_bBasicServicePresent                   |input;|
    ss_serviceCodeCatagory                    struct                            api_SsBasicServiceCodeCategory_t  
    ss_basicServiceCode                       u8                                u8                                ss_basicServiceCode                       |input;|
    ss_bStatusPresent                         u8                                u8                                ss_bStatusPresent                         |input;|
    ss_status                                 u8                                u8                                ss_status                                 |input;|
    ss_bForwardedToNumberPresent              u8                                u8                                ss_bForwardedToNumberPresent              |input;|
    ss_numberOfForwardedToNumberElements      u8                                u8                                ss_numberOfForwardedToNumberElements      |input;|
    ss_forwardedToNumber[20]                  array                             u8                                ss_forwardedToNumber                      |multiedit;|
    ss_bForwardedToSubaddressPresent          u8                                u8                                ss_bForwardedToSubaddressPresent          |input;|
    ss_numberOfForwardedToSubaddressElements  u8                                u8                                ss_numberOfForwardedToSubaddressElements  |input;|
    ss_forwardedToSubaddress[21]              array                             u8                                ss_forwardedToSubaddress                  |multiedit;|
    ss_bForwardingOptionsPresent              u8                                u8                                ss_bForwardingOptionsPresent              |input;|
    ss_forwardingOptions                      u8                                u8                                ss_forwardingOptions                      |input;|
    ss_bNoReplyConditionTimePresent           u8                                u8                                ss_bNoReplyConditionTimePresent           |input;|
    ss_noReplyConditionTime                   u8                                u8                                ss_noReplyConditionTime                   |input;|
</sub api_SsForwardingFeatureListElement_t>


<sub api_SsForwardingFeatureList_t>
    ss_numberOfForwardingFeatureListElements  u8                                    u8                                    ss_numberOfForwardingFeatureListElements  |input;|
    ss_forwardingFeatureListElement[13]       array                                 api_SsForwardingFeatureListElement_t  ss_forwardingFeatureListElement           |multiedit;|
</sub api_SsForwardingFeatureList_t>


<union api_SsIntRsltChoice_t>
    ss_Status  u8                             u8                             ss_Status  |input;|
    ss_BSL     struct                         api_SsBasicServiceGroupList_t  
    ss_GSI     struct                         api_SsGenericServiceInfo_t     
    ss_FFL     struct                         api_SsForwardingFeatureList_t  
</union api_SsIntRsltChoice_t>


<sub api_SsIntRslt_t>
    ss_IntRsltInfoPresent  struct                         api_SsIntRsltChoicePresence_t  
    ss_IntRsltChoice       union                          api_SsIntRsltChoice_t          
</sub api_SsIntRslt_t>


<sub api_SsForwardingInfo_t>
    ss_bSSCodePresent                 u8                             u8                             ss_bSSCodePresent                 |input;|
    ss_code                           struct                         api_SsCode_t                   
    ss_bForwardingFeatureListPresent  u8                             u8                             ss_bForwardingFeatureListPresent  |input;|
    ss_ForwardingFeatureList          struct                         api_SsForwardingFeatureList_t  
</sub api_SsForwardingInfo_t>


<sub api_SsCallBarringFeatureList_t>
    ss_bBasicServicePresent  u8                                u8                                ss_bBasicServicePresent  |input;|
    ss_serviceCodeCatagory   struct                            api_SsBasicServiceCodeCategory_t  
    ss_basicServiceCode      u8                                u8                                ss_basicServiceCode      |input;|
    ss_bStatusPresent        u8                                u8                                ss_bStatusPresent        |input;|
    ss_status                u8                                u8                                ss_status                |input;|
</sub api_SsCallBarringFeatureList_t>


<sub api_SsCallBarringInfo_t>
    ss_bSSCodePresent                          u8                              u8                              ss_bSSCodePresent                          |input;|
    ss_code                                    struct                          api_SsCode_t                    
    ss_bPasswordPresent                        u8                              u8                              ss_bPasswordPresent                        |input;|
    ss_newPassword[SS_NUM_PSWD_ELEMS]          array                           u8                              ss_newPassword                             |multiedit;|
    ss_bCallBarringFeatureListPresent          u8                              u8                              ss_bCallBarringFeatureListPresent          |input;|
    ss_numberOfCallBarringFeatureListElements  u8                              u8                              ss_numberOfCallBarringFeatureListElements  |input;|
    ss_callBarringFeatureList[13]              array                           api_SsCallBarringFeatureList_t  ss_callBarringFeatureList                  |multiedit;|
</sub api_SsCallBarringInfo_t>


<sub api_SsData_t>
    ss_bSSCodePresent                    u8                                    u8                                    ss_bSSCodePresent                    |input;|
    ss_code                              struct                                api_SsCode_t                          
    ss_bSSStatusPresent                  u8                                    u8                                    ss_bSSStatusPresent                  |input;|
    ss_Status                            u8                                    u8                                    ss_Status                            |input;|
    ss_bCliRestrictionOptionPresent      u8                                    u8                                    ss_bCliRestrictionOptionPresent      |input;|
    ss_cliRestrictionOption              struct                                api_SsCliRestrictionOption_t          
    ss_OverrideCategoryPresentPresent    u8                                    u8                                    ss_OverrideCategoryPresentPresent    |input;|
    ss_OverrideCategory                  struct                                api_SsOverrideCategory_t              
    ss_bBasicServiceListPresent          u8                                    u8                                    ss_bBasicServiceListPresent          |input;|
    ss_numberOfBasicServiceListElements  u8                                    u8                                    ss_numberOfBasicServiceListElements  |input;|
    basicServiceElement[13]              array                                 api_SsBasicServiceGroupListElement_t  basicServiceElement                  |multiedit;|
    ss_bDefaultPriorityPresent           u8                                    u8                                    ss_bDefaultPriorityPresent           |input;|
    ss_defaultPriority                   u8                                    u8                                    ss_defaultPriority                   |input;|
    ss_bNbrUserPresent                   u8                                    u8                                    ss_bNbrUserPresent                   |input;|
    ss_nbrUser                           u8                                    u8                                    ss_nbrUser                           |input;|
</sub api_SsData_t>


<union api_SsUSSDNetworkResults_t>
    ss_USSDUserData  struct                api_SsUSSDUserData_t  
    ss_USSDRes       struct                api_SsUSSDRes_t       
</union api_SsUSSDNetworkResults_t>


<sub api_SsUSSDInfo_t>
    ss_USSDNetworkComponentType  struct                            api_SsUSSDNetworkComponentType_t  
    bUSSDResultsPresent          u8                                u8                                bUSSDResultsPresent          |input;|
    ss_USSDNetworkResult         union                             api_SsUSSDNetworkResults_t        
</sub api_SsUSSDInfo_t>


<union api_SsRetRslt_t>
    ss_INT   struct                   api_SsIntRslt_t          
    ss_FI    struct                   api_SsForwardingInfo_t   
    ss_CB    struct                   api_SsCallBarringInfo_t  
    ss_D     struct                   api_SsData_t             
    ss_USSD  struct                   api_SsUSSDInfo_t         
</union api_SsRetRslt_t>


<sub api_SsReturnResultComponent_t>
    ss_RxMessageType        struct                       api_SsMessageType_t          
    ss_RetRsltInfoPresence  struct                       api_SsRetRsltInfoPresence_t  
    ss_RetRslt              union                        api_SsRetRslt_t              
</sub api_SsReturnResultComponent_t>


<sub api_SsActionCnf_t>
    TI               u8                             u8                             TI               |input;|
    ss_Code          struct                         api_SsCode_t                   
    ss_Operation     struct                         api_SsOperation_t              
    ss_ReturnResult  struct                         api_SsReturnResultComponent_t  
    nImsFlag         struct                         bool                           
</sub api_SsActionCnf_t>


<sub api_SsRejectComponentU8Tag_t>
    ss_ProblemCodeTag  u8  u8  ss_ProblemCodeTag  |input;|
    ss_ProblemCode     u8  u8  ss_ProblemCode     |input;|
</sub api_SsRejectComponentU8Tag_t>


<sub api_SsCauseIEInfo_t>
    ss_CauseIECodingStandard  u8  u8  ss_CauseIECodingStandard  |input;|
    ss_CauseIELocation        u8  u8  ss_CauseIELocation        |input;|
    ss_CauseValue             u8  u8  ss_CauseValue             |input;|
</sub api_SsCauseIEInfo_t>


<union api_SsErrors_t>
    ss_ProblemCodeTagandCode  struct                        api_SsRejectComponentU8Tag_t  
    ss_NetworkErrorCode       u8                            u8                            ss_NetworkErrorCode       |input;|
    ss_CauseIEInfo            struct                        api_SsCauseIEInfo_t           
    ss_LocalErrorCode         struct                        api_SsLocalErrorCodes_t       
</union api_SsErrors_t>


<sub api_SsErrorInd_t>
    TI                u8                   u8                   TI                |input;|
    CsRetryFlag       struct               bool                 
    ss_Code           struct               api_SsCode_t         
    ss_Operation      struct               api_SsOperation_t    
    ss_ErrorSource    struct               api_SsErrorSource_t  
    ss_Errors         union                api_SsErrors_t       
    ss_StatusPresent  u8                   u8                   ss_StatusPresent  |input;|
    ss_Status         u8                   u8                   ss_Status         |input;|
</sub api_SsErrorInd_t>


<sub api_CrssChargInfo_t>
    e1  u16  u16  e1  |input;|
    e2  u16  u16  e2  |input;|
    e3  u16  u16  e3  |input;|
    e4  u16  u16  e4  |input;|
    e5  u16  u16  e5  |input;|
    e6  u16  u16  e6  |input;|
    e7  u16  u16  e7  |input;|
</sub api_CrssChargInfo_t>


<union PAA>
    PresentationRestricted        struct  bool    
    NberNotAvaiDueToInterworking  struct  bool    
                                  struct  struct  
    PANLen                        u8      u8      PANLen                        |input;|
    PASALen                       u8      u8      PASALen                       |input;|
    PAN[MAX_FWD_TO_NUM_LEN]       array   u8      PAN                           |multiedit;|
    PASA[MAX_FWD_TO_SUBADDR_LEN]  array   u8      PASA                          |multiedit;|
</union PAA>


<sub PRA>
                                  struct  struct  
    PRNLen                        u8      u8      PRNLen                        |input;|
    PRSALen                       u8      u8      PRSALen                       |input;|
    PRN[MAX_FWD_TO_NUM_LEN]       array   u8      PRN                           |multiedit;|
    PRSA[MAX_FWD_TO_SUBADDR_LEN]  array   u8      PRSA                          |multiedit;|
</sub PRA>


<sub api_CrssNameSet_t>
    LenInChar        u32    u32    LenInChar        |input;|
    NameString[160]  array  u8     NameString       |multiedit;|
</sub api_CrssNameSet_t>


<sub api_CrssNameInd_t>
    PresentationRestricted     struct             bool               
    NameUnavailable            struct             bool               
    NamePresAllowedPresent     struct             bool               
    NamePresRestrictedPresent  struct             bool               
    Nameset                    struct             api_CrssNameSet_t  
</sub api_CrssNameInd_t>


<sub api_CrssDeflec_t>
    DTNLen                        u8     u8     DTNLen                        |input;|
    DTSALen                       u8     u8     DTSALen                       |input;|
    DTN[MAX_FWD_TO_NUM_LEN]       array  u8     DTN                           |multiedit;|
    DTSA[MAX_FWD_TO_SUBADDR_LEN]  array  u8     DTSA                          |multiedit;|
</sub api_CrssDeflec_t>


<sub api_CrssUUS_t>
    ServiceNb  u8    u8    ServiceNb  |input;|
    Required   structbool  
</sub api_CrssUUS_t>


<sub api_CrssErrorInd_t>
    Cause           u8  u8  Cause           |input;|
    Code            u8  u8  Code            |input;|
    ProblemCodeTag  u8  u8  ProblemCodeTag  |input;|
</sub api_CrssErrorInd_t>


<sub api_CrssFacilityIndIE_t>
    StructValid        struct               bool                 
    Status             u8                   u8                   Status             |input;|
    InvokeId           u8                   u8                   InvokeId           |input;|
    ss_Operation       struct               api_SsOperation_t    
    ss_Code            struct               api_SsCode_t         
    crss_ChargInfo     struct               api_CrssChargInfo_t  
    crss_ECTIndicator  struct               api_CrssECTInd_t     
    crss_NameIndcator  struct               api_CrssNameInd_t    
    crss_UUS           struct               api_CrssUUS_t        
    crss_ErrorInd      struct               api_CrssErrorInd_t   
</sub api_CrssFacilityIndIE_t>


<sub UUS>
    StructValid   struct             bool               
    InvokeId      u8                 u8                 InvokeId      |input;|
    ss_Operation  struct             api_SsOperation_t  
    ss_Code       struct             api_SsCode_t       
    crss_Deflec   struct             api_CrssDeflec_t   
    {             struct             struct             
    Status        u8                 u8                 Status        |input;|
    ErrorCode     u8                 u8                 ErrorCode     |input;|
    UUSNb         u8                 u8                 UUSNb         |input;|
    crss_UUS[3]   array              api_CrssUUS_t      crss_UUS      |multiedit;|
</sub UUS>


<sub api_CcEmergCateg_t>
    emerg_categ_present  u8  u8  emerg_categ_present  |input;|
    emerg_categ_value    u8  u8  emerg_categ_value    |input;|
</sub api_CcEmergCateg_t>


<sub api_CcSetupReq_t>
    CallType               u8                       u8                       CallType               |input;|
    CLIRSuppression        struct                   bool                     
    CLIRInvocation         struct                   bool                     
    CPNLen                 u8                       u8                       CPNLen                 |input;|
    CPSALen                u8                       u8                       CPSALen                |input;|
    Bearer1Len             u8                       u8                       Bearer1Len             |input;|
    Bearer2Len             u8                       u8                       Bearer2Len             |input;|
    UserUserLen            u8                       u8                       UserUserLen            |input;|
    Bearer1[14]            array                    u8                       Bearer1                |multiedit;|
    Bearer2[14]            array                    u8                       Bearer2                |multiedit;|
    CalledPartyNb[41]      array                    u8                       CalledPartyNb          |multiedit;|
    CalledPartySubAdd[21]  array                    u8                       CalledPartySubAdd      |multiedit;|
    UserUser[33]           array                    u8                       UserUser               |multiedit;|
    Facility               struct                   api_CrssFacilityReqIE_t  
    emerg_categ            struct                   api_CcEmergCateg_t       
</sub api_CcSetupReq_t>


<sub api_CcCallConfReq_t>
    TI           u8     u8     TI           |input;|
    CauseLen     u8     u8     CauseLen     |input;|
    Bearer1Len   u8     u8     Bearer1Len   |input;|
    Bearer2Len   u8     u8     Bearer2Len   |input;|
    Bearer1[14]  array  u8     Bearer1      |multiedit;|
    Bearer2[14]  array  u8     Bearer2      |multiedit;|
    Cause[30]    array  u8     Cause        |multiedit;|
</sub api_CcCallConfReq_t>


<sub api_CcAlertReq_t>
    TI             u8                       u8                       TI             |input;|
    UserUserLen    u8                       u8                       UserUserLen    |input;|
    UserUser[129]  array                    u8                       UserUser       |multiedit;|
    Facility       struct                   api_CrssFacilityReqIE_t  
</sub api_CcAlertReq_t>


<sub api_CcConnectReq_t>
    TI                   u8                       u8                       TI                   |input;|
    CSALen               u8                       u8                       CSALen               |input;|
    UserUserLen          u8                       u8                       UserUserLen          |input;|
    ConnectedSubAdd[21]  array                    u8                       ConnectedSubAdd      |multiedit;|
    UserUser[129]        array                    u8                       UserUser             |multiedit;|
    Facility             struct                   api_CrssFacilityReqIE_t  
</sub api_CcConnectReq_t>


<sub api_CcDiscReq_t>
    TI             u8                       u8                       TI             |input;|
    CauseLen       u8                       u8                       CauseLen       |input;|
    UserUserLen    u8                       u8                       UserUserLen    |input;|
    Cause[30]      array                    u8                       Cause          |multiedit;|
    UserUser[129]  array                    u8                       UserUser       |multiedit;|
    Facility       struct                   api_CrssFacilityReqIE_t  
</sub api_CcDiscReq_t>


<sub api_CcReleaseReq_t>
    TI             u8     u8     TI             |input;|
    Cause1Len      u8     u8     Cause1Len      |input;|
    Cause2Len      u8     u8     Cause2Len      |input;|
    UserUserLen    u8     u8     UserUserLen    |input;|
    Cause1[30]     array  u8     Cause1         |multiedit;|
    Cause2[30]     array  u8     Cause2         |multiedit;|
    UserUser[129]  array  u8     UserUser       |multiedit;|
</sub api_CcReleaseReq_t>


<sub api_CcReleaseCmpltReq_t>
    TI             u8     u8     TI             |input;|
    CauseLen       u8     u8     CauseLen       |input;|
    UserUserLen    u8     u8     UserUserLen    |input;|
    UserUser[129]  array  u8     UserUser       |multiedit;|
    Cause[30]      array  u8     Cause          |multiedit;|
</sub api_CcReleaseCmpltReq_t>


<sub api_CcStartDTMFReq_t>
    TI          u8  u8  TI          |input;|
    KeyPressed  u8  u8  KeyPressed  |input;|
</sub api_CcStartDTMFReq_t>


<sub api_CcStopDTMFReq_t>
    TI  u8  u8  TI  |input;|
</sub api_CcStopDTMFReq_t>


<sub api_CcCallHoldReq_t>
    TI  u8  u8  TI  |input;|
</sub api_CcCallHoldReq_t>


<sub api_CcCallRetrieveReq_t>
    TI  u8  u8  TI  |input;|
</sub api_CcCallRetrieveReq_t>


<sub api_CcModifyReq_t>
    TI  u8  u8  TI  |input;|
</sub api_CcModifyReq_t>


<sub api_CcModifyCmpltReq_t>
    TI  u8  u8  TI  |input;|
</sub api_CcModifyCmpltReq_t>


<sub api_CcModifyRejReq_t>
    TI         u8     u8     TI         |input;|
    CauseLen   u8     u8     CauseLen   |input;|
    Cause[30]  array  u8     Cause      |multiedit;|
</sub api_CcModifyRejReq_t>


<sub api_CcNotifyReq_t>
    TI         u8  u8  TI         |input;|
    NotifyInd  u8  u8  NotifyInd  |input;|
</sub api_CcNotifyReq_t>


<sub api_CcFacilityReq_t>
    TI        u8                       u8                       TI        |input;|
    Facility  struct                   api_CrssFacilityReqIE_t  
</sub api_CcFacilityReq_t>


<sub api_CcUserInfoReq_t>
    TI             u8     u8     TI             |input;|
    UserUserLen    u8     u8     UserUserLen    |input;|
    MoreData       struct bool   
    UserUser[129]  array  u8     UserUser       |multiedit;|
</sub api_CcUserInfoReq_t>


<sub api_CcTIInd_t>
    TI  u8  u8  TI  |input;|
</sub api_CcTIInd_t>


<sub api_CcSetupInd_t>
    TI                          u8                       u8                       TI                          |input;|
    CPNLen                      u8                       u8                       CPNLen                      |input;|
    CPSALen                     u8                       u8                       CPSALen                     |input;|
    RPNLen                      u8                       u8                       RPNLen                      |input;|
    RPSALen                     u8                       u8                       RPSALen                     |input;|
    Bearer1Len                  u8                       u8                       Bearer1Len                  |input;|
    Bearer2Len                  u8                       u8                       Bearer2Len                  |input;|
    Signal                      u8                       u8                       Signal                      |input;|
    Alert                       u8                       u8                       Alert                       |input;|
    CauseOfNoCLI                u8                       u8                       CauseOfNoCLI                |input;|
    UserUserLen                 u8                       u8                       UserUserLen                 |input;|
    ProgressInd[2]              array                    u8                       ProgressInd                 |multiedit;|
    Bearer1[14]                 array                    u8                       Bearer1                     |multiedit;|
    Bearer2[14]                 array                    u8                       Bearer2                     |multiedit;|
    CallingPartyNb[12]          array                    u8                       CallingPartyNb              |multiedit;|
    CallingPartySubAdd[21]      array                    u8                       CallingPartySubAdd          |multiedit;|
    RedirectingPartyNb[12]      array                    u8                       RedirectingPartyNb          |multiedit;|
    RedirectingPartySubAdd[21]  array                    u8                       RedirectingPartySubAdd      |multiedit;|
    UserUser[33]                array                    u8                       UserUser                    |multiedit;|
    bIms                        u8                       u8                       bIms                        |input;|
    CallingPartyType            u8                       u8                       CallingPartyType            |input;|
    calling_uri[81]             array                    char                     calling_uri                 |multiedit;|
    Facility                    struct                   api_CrssFacilityIndIE_t  
</sub api_CcSetupInd_t>


<sub api_CcCallProcInd_t>
    TI              u8                       u8                       TI              |input;|
    NwkCcCap        u8                       u8                       NwkCcCap        |input;|
    Bearer1Len      u8                       u8                       Bearer1Len      |input;|
    Bearer2Len      u8                       u8                       Bearer2Len      |input;|
    Bearer1[14]     array                    u8                       Bearer1         |multiedit;|
    Bearer2[14]     array                    u8                       Bearer2         |multiedit;|
    ProgressInd[2]  array                    u8                       ProgressInd     |multiedit;|
    Facility        struct                   api_CrssFacilityIndIE_t  
</sub api_CcCallProcInd_t>


<sub api_CcProgressInd_t>
    TI              u8     u8     TI              |input;|
    UserUserLen     u8     u8     UserUserLen     |input;|
    ProgressInd[2]  array  u8     ProgressInd     |multiedit;|
    UserUser[129]   array  u8     UserUser        |multiedit;|
</sub api_CcProgressInd_t>


<sub api_CcAlertInd_t>
    TI              u8                       u8                       TI              |input;|
    UserUserLen     u8                       u8                       UserUserLen     |input;|
    ProgressInd[2]  array                    u8                       ProgressInd     |multiedit;|
    UserUser[129]   array                    u8                       UserUser        |multiedit;|
    Facility        struct                   api_CrssFacilityIndIE_t  
</sub api_CcAlertInd_t>


<sub api_CcConnectInd_t>
    TI                   u8                       u8                       TI                   |input;|
    CNLen                u8                       u8                       CNLen                |input;|
    CSALen               u8                       u8                       CSALen               |input;|
    UserUserLen          u8                       u8                       UserUserLen          |input;|
    UserUser[129]        array                    u8                       UserUser             |multiedit;|
    ProgressInd[2]       array                    u8                       ProgressInd          |multiedit;|
    ConnectedNb[12]      array                    u8                       ConnectedNb          |multiedit;|
    ConnectedSubAdd[21]  array                    u8                       ConnectedSubAdd      |multiedit;|
    Facility             struct                   api_CrssFacilityIndIE_t  
</sub api_CcConnectInd_t>


<sub api_CcConnectAckInd_t>
    TI  u8  u8  TI  |input;|
</sub api_CcConnectAckInd_t>


<sub api_CcDiscInd_t>
    TI              u8                       u8                       TI              |input;|
    CauseLen        u8                       u8                       CauseLen        |input;|
    UserUserLen     u8                       u8                       UserUserLen     |input;|
    ProgressInd[2]  array                    u8                       ProgressInd     |multiedit;|
    Cause[30]       array                    u8                       Cause           |multiedit;|
    UserUser[129]   array                    u8                       UserUser        |multiedit;|
    Facility        struct                   api_CrssFacilityIndIE_t  
</sub api_CcDiscInd_t>


<sub api_CcReleaseInd_t>
    TI             u8                       u8                       TI             |input;|
    Cause1Len      u8                       u8                       Cause1Len      |input;|
    Cause2Len      u8                       u8                       Cause2Len      |input;|
    UserUserLen    u8                       u8                       UserUserLen    |input;|
    Cause1[30]     array                    u8                       Cause1         |multiedit;|
    Cause2[30]     array                    u8                       Cause2         |multiedit;|
    UserUser[129]  array                    u8                       UserUser       |multiedit;|
    Facility       struct                   api_CrssFacilityIndIE_t  
</sub api_CcReleaseInd_t>


<sub api_CcReleaseCmpltInd_t>
    TI             u8                       u8                       TI             |input;|
    CauseLen       u8                       u8                       CauseLen       |input;|
    UserUserLen    u8                       u8                       UserUserLen    |input;|
    Cause[30]      array                    u8                       Cause          |multiedit;|
    UserUser[129]  array                    u8                       UserUser       |multiedit;|
    Facility       struct                   api_CrssFacilityIndIE_t  
</sub api_CcReleaseCmpltInd_t>


<sub api_CcErrorInd_t>
    TI             u8     u8     TI             |input;|
    Cause          u8     u8     Cause          |input;|
    NwkCauseLen    u8     u8     NwkCauseLen    |input;|
    NwkCause[30]   array  u8     NwkCause       |multiedit;|
    CsRetryFlag    u8     u8     CsRetryFlag    |input;|
    NeedEmerRetry  u8     u8     NeedEmerRetry  |input;|
</sub api_CcErrorInd_t>


<sub api_CcCallHoldCnf_t>
    TI  u8  u8  TI  |input;|
</sub api_CcCallHoldCnf_t>


<sub api_CcCallRetrieveCnf_t>
    TI  u8  u8  TI  |input;|
</sub api_CcCallRetrieveCnf_t>


<sub api_CcCallWaitingInd_t>
    TI  u8  u8  TI  |input;|
</sub api_CcCallWaitingInd_t>


<sub api_CcModifyInd_t>
    TI  u8  u8  TI  |input;|
</sub api_CcModifyInd_t>


<sub api_CcModifyCmpltInd_t>
    TI  u8  u8  TI  |input;|
</sub api_CcModifyCmpltInd_t>


<sub api_CcModifyRejInd_t>
    TI         u8     u8     TI         |input;|
    CauseLen   u8     u8     CauseLen   |input;|
    Cause[30]  array  u8     Cause      |multiedit;|
</sub api_CcModifyRejInd_t>


<sub api_CcNotifyInd_t>
    TI         u8  u8  TI         |input;|
    NotifyInd  u8  u8  NotifyInd  |input;|
</sub api_CcNotifyInd_t>


<sub api_CcFacilityInd_t>
    TI           u8                       u8                       TI           |input;|
    Facility[2]  array                    api_CrssFacilityIndIE_t  Facility     |multiedit;|
</sub api_CcFacilityInd_t>


<sub api_CcUserInfoInd_t>
    TI             u8     u8     TI             |input;|
    UserUserLen    u8     u8     UserUserLen    |input;|
    MoreData       struct bool   
    UserUser[129]  array  u8     UserUser       |multiedit;|
</sub api_CcUserInfoInd_t>


<sub api_CcCongCtrlInd_t>
    TI         u8     u8     TI         |input;|
    CongLevel  u8     u8     CongLevel  |input;|
    CauseLen   u8     u8     CauseLen   |input;|
    Cause[30]  array  u8     Cause      |multiedit;|
</sub api_CcCongCtrlInd_t>


<sub api_CcAocCCMInd_t>
    CCM  u32  u32  CCM  |input;|
</sub api_CcAocCCMInd_t>


<sub api_CcChanModeInd_t>
    ChanMode  u32  u32  ChanMode  |input;|
</sub api_CcChanModeInd_t>


<sub api_PdpCtxActivateReq_t>
    SmIndex                             u8     u8     SmIndex                             |input;|
    NSapi                               u8     u8     NSapi                               |input;|
    QoSLen                              u8     u8     QoSLen                              |input;|
    QoS[API_QOS_LEN_MAX]                array  u8     QoS                                 |multiedit;|
    PDPAddLen                           u8     u8     PDPAddLen                           |input;|
    PDPAddress[API_ADDR_LEN_MAX]        array  u8     PDPAddress                          |multiedit;|
    APNLen                              u8     u8     APNLen                              |input;|
    AccessPointName[API_APN_LEN_MAX]    array  u8     AccessPointName                     |multiedit;|
    ProtocolCfgOptionLen                u16    u16    ProtocolCfgOptionLen                |input;|
    ProtocolCfgOption[API_PCO_LEN_MAX]  array  u8     ProtocolCfgOption                   |multiedit;|
    isEmergency                         u8     u8     isEmergency                         |input;|
</sub api_PdpCtxActivateReq_t>


<sub api_EpsCtxAllocateReq_t>
    SmIndex                  u8     u8     SmIndex                  |input;|
    LinkedEbi                u8     u8     LinkedEbi                |input;|
    TFTLen                   u8     u8     TFTLen                   |input;|
    TFT[API_TFT_LEN_MAX]     array  u8     TFT                      |multiedit;|
    EpsQoSLen                u8     u8     EpsQoSLen                |input;|
    EpsQoS[API_EPS_QOS_LEN]  array  u8     EpsQoS                   |multiedit;|
</sub api_EpsCtxAllocateReq_t>


<sub api_EpsCtxAllocateCnf_t>
    SmIndex   u8  u8  SmIndex   |input;|
    respType  u8  u8  respType  |input;|
</sub api_EpsCtxAllocateCnf_t>


<sub api_EpsCtxAllocateRej_t>
    SmIndex  u8  u8  SmIndex  |input;|
    Cause    u8  u8  Cause    |input;|
</sub api_EpsCtxAllocateRej_t>


<sub api_PdpCtxModifyReq_t>
    SmIndex               u8     u8     SmIndex               |input;|
    QoSLen                u8     u8     QoSLen                |input;|
    QoS[API_QOS_LEN_MAX]  array  u8     QoS                   |multiedit;|
</sub api_PdpCtxModifyReq_t>


<sub api_PdpCtxModifyAcc_t>
    SmIndex  u8  u8  SmIndex  |input;|
</sub api_PdpCtxModifyAcc_t>


<sub api_PdpCtxDeactivateReq_t>
    SmIndex  u8  u8  SmIndex  |input;|
    Cause    u8  u8  Cause    |input;|
</sub api_PdpCtxDeactivateReq_t>


<sub api_PdpCtxActivateCnf_t>
    SmIndex                             u8     u8     SmIndex                             |input;|
    PDPAddLen                           u8     u8     PDPAddLen                           |input;|
    PDPAddress[API_ADDR_LEN_MAX]        array  u8     PDPAddress                          |multiedit;|
    APNLen                              u8     u8     APNLen                              |input;|
    AccessPointName[API_APN_LEN_MAX]    array  u8     AccessPointName                     |multiedit;|
    ProtocolCfgOptionLen                u16    u16    ProtocolCfgOptionLen                |input;|
    ProtocolCfgOption[API_PCO_LEN_MAX]  array  u8     ProtocolCfgOption                   |multiedit;|
    QoSLen                              u8     u8     QoSLen                              |input;|
    QoS[API_QOS_LEN_MAX]                array  u8     QoS                                 |multiedit;|
</sub api_PdpCtxActivateCnf_t>


<sub api_PdpCtxDefaultPdn_Info_t>
    Ebi                               u8     u8     Ebi                               |input;|
    Cid                               u8     u8     Cid                               |input;|
    PDPAddLen                         u8     u8     PDPAddLen                         |input;|
    PDPAddress[API_ADDR_LEN_MAX]      array  u8     PDPAddress                        |multiedit;|
    APNLen                            u8     u8     APNLen                            |input;|
    AccessPointName[API_APN_LEN_MAX]  array  u8     AccessPointName                   |multiedit;|
</sub api_PdpCtxDefaultPdn_Info_t>


<sub api_PdpCtxSmIndexInd_t>
    SmIndex  u8  u8  SmIndex  |input;|
    NSapi    u8  u8  NSapi    |input;|
</sub api_PdpCtxSmIndexInd_t>


<sub api_PdpCtxDeactivateCnf_t>
    SmIndex  u8  u8  SmIndex  |input;|
</sub api_PdpCtxDeactivateCnf_t>


<sub api_PdpCtxActivateRej_t>
    SmIndex                             u8     u8     SmIndex                             |input;|
    Cause                               u8     u8     Cause                               |input;|
    ProtocolCfgOptionLen                u16    u16    ProtocolCfgOptionLen                |input;|
    ProtocolCfgOption[API_PCO_LEN_MAX]  array  u8     ProtocolCfgOption                   |multiedit;|
</sub api_PdpCtxActivateRej_t>


<sub api_PdpCtxModifyRej_t>
    SmIndex  u8  u8  SmIndex  |input;|
    Cause    u8  u8  Cause    |input;|
</sub api_PdpCtxModifyRej_t>


<sub api_PdpCtxActivateInd_t>
    SmIndex                           u8     u8     SmIndex                           |input;|
    PDPAddLen                         u8     u8     PDPAddLen                         |input;|
    APNLen                            u8     u8     APNLen                            |input;|
    PDPAddress[API_ADDR_LEN_MAX]      array  u8     PDPAddress                        |multiedit;|
    AccessPointName[API_APN_LEN_MAX]  array  u8     AccessPointName                   |multiedit;|
</sub api_PdpCtxActivateInd_t>


<sub api_PdpCtxModifyCnf_t>
    SmIndex               u8     u8     SmIndex               |input;|
    QoSLen                u8     u8     QoSLen                |input;|
    QoS[API_QOS_LEN_MAX]  array  u8     QoS                   |multiedit;|
</sub api_PdpCtxModifyCnf_t>


<sub api_PdpCtxModifyInd_t>
    SmIndex                             u8     u8     SmIndex                             |input;|
    QoSLen                              u8     u8     QoSLen                              |input;|
    QoS[API_QOS_LEN_MAX]                array  u8     QoS                                 |multiedit;|
    PDPAddLen                           u8     u8     PDPAddLen                           |input;|
    PDPAddress[API_ADDR_LEN_MAX]        array  u8     PDPAddress                          |multiedit;|
    ProtocolCfgOptionLen                u16    u16    ProtocolCfgOptionLen                |input;|
    ProtocolCfgOption[API_PCO_LEN_MAX]  array  u8     ProtocolCfgOption                   |multiedit;|
</sub api_PdpCtxModifyInd_t>


<sub api_PdpCtxDeactivateInd_t>
    SmIndex  u8  u8  SmIndex  |input;|
    Cause    u8  u8  Cause    |input;|
</sub api_PdpCtxDeactivateInd_t>


<sub api_PSDReqCtrl_t>
    NSAPI  u8  u8  NSAPI  |input;|
    Mode   u8  u8  Mode   |input;|
</sub api_PSDReqCtrl_t>


<sub api_PSDataReq_t>
    Ctrl                                                    struct            api_PSDReqCtrl_t  
    Reserved[0]                                             array             u8                Reserved                                                |multiedit;|
    DataLen                                                 u16               u16               DataLen                                                 |input;|
    DataOffset                                              u8                u8                DataOffset                                              |input;|
    Pad                                                     u8                u8                Pad                                                     |input;|
    UserData[1]                                             array             u8                UserData                                                |multiedit;|
</sub api_PSDataReq_t>


<sub api_PSQueueCreateInd_t>
    QueueId  u8  u8  QueueId  |input;|
</sub api_PSQueueCreateInd_t>


<sub api_UlCongestInd_t>
    Status  u8  u8  Status  |input;|
</sub api_UlCongestInd_t>


<sub api_PsSuspendInd_tapi_PsResumeInd_t>
    Pad  u8  u8  Pad  |input;|
</sub api_PsSuspendInd_tapi_PsResumeInd_t>


<sub api_PSDataInd_t>
    Ctrl                                                    struct            api_PSDIndCtrl_t  
    Reserved[0]                                             array             u8                Reserved                                                |multiedit;|
    DataLen                                                 u16               u16               DataLen                                                 |input;|
    DataOffset                                              u8                u8                DataOffset                                              |input;|
    Pad                                                     u8                u8                Pad                                                     |input;|
    UserData[1]                                             array             u8                UserData                                                |multiedit;|
</sub api_PSDataInd_t>


<sub api_SimResetReq_t>
    Pad       u8    u8    Pad       |input;|
    UsimFlag  structBOOL  
</sub api_SimResetReq_t>


<sub api_SimReadBinaryReq_t>
    Pad      u8   u8   Pad      |input;|
    File     u8   u8   File     |input;|
    Offset   u16  u16  Offset   |input;|
    NbBytes  u8   u8   NbBytes  |input;|
</sub api_SimReadBinaryReq_t>


<sub api_SimUpdateBinaryReq_t>
    Pad        u8     u8     Pad        |input;|
    File       u8     u8     File       |input;|
    Offset     u16    u16    Offset     |input;|
    NbBytes    u8     u8     NbBytes    |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimUpdateBinaryReq_t>


<sub api_SimReadRecordReq_t>
    Pad       u8  u8  Pad       |input;|
    File      u8  u8  File      |input;|
    RecordNb  u8  u8  RecordNb  |input;|
    Mode      u8  u8  Mode      |input;|
    NbByte    u8  u8  NbByte    |input;|
</sub api_SimReadRecordReq_t>


<sub api_SimUpdateRecordReq_t>
    Pad        u8     u8     Pad        |input;|
    File       u8     u8     File       |input;|
    RecordNb   u8     u8     RecordNb   |input;|
    Mode       u8     u8     Mode       |input;|
    NbByte     u8     u8     NbByte     |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimUpdateRecordReq_t>


<sub api_SimInvalidateReq_t>
    Pad   u8  u8  Pad   |input;|
    File  u8  u8  File  |input;|
</sub api_SimInvalidateReq_t>


<sub api_SimRehabilitateReq_t>
    Pad   u8  u8  Pad   |input;|
    File  u8  u8  File  |input;|
</sub api_SimRehabilitateReq_t>


<sub api_SimSeekReq_t>
    Pad            u8     u8     Pad            |input;|
    TypeMode       u8     u8     TypeMode       |input;|
    File           u8     u8     File           |input;|
    PatternNbByte  u8     u8     PatternNbByte  |input;|
    Patern[256]    array  u8     Patern         |multiedit;|
</sub api_SimSeekReq_t>


<sub api_SimSeekAllReq_t>
    Pad            u8     u8     Pad            |input;|
    TypeMode       u8     u8     TypeMode       |input;|
    File           u8     u8     File           |input;|
    PatternNbByte  u8     u8     PatternNbByte  |input;|
    Patern[256]    array  u8     Patern         |multiedit;|
</sub api_SimSeekAllReq_t>


<sub api_SimIncreaseReq_t>
    Pad       u8     u8     Pad       |input;|
    Value[3]  array  u8     Value     |multiedit;|
    File      u8     u8     File      |input;|
</sub api_SimIncreaseReq_t>


<sub api_SimVerifyCHVReq_t>
    Pad          u8     u8     Pad          |input;|
    CHVNumber    u8     u8     CHVNumber    |input;|
    CHVValue[8]  array  u8     CHVValue     |multiedit;|
</sub api_SimVerifyCHVReq_t>


<sub api_SimChangeCHVReq_t>
    Pad             u8     u8     Pad             |input;|
    CHVNumber       u8     u8     CHVNumber       |input;|
    OldCHVValue[8]  array  u8     OldCHVValue     |multiedit;|
    NewCHVValue[8]  array  u8     NewCHVValue     |multiedit;|
</sub api_SimChangeCHVReq_t>


<sub api_SimDisableCHVReq_t>
    Pad          u8     u8     Pad          |input;|
    CHVValue[8]  array  u8     CHVValue     |multiedit;|
</sub api_SimDisableCHVReq_t>


<sub api_SimEnableCHVReq_t>
    Pad          u8     u8     Pad          |input;|
    CHVValue[8]  array  u8     CHVValue     |multiedit;|
</sub api_SimEnableCHVReq_t>


<sub api_SimUnblockCHVReq_t>
    Pad                 u8     u8     Pad                 |input;|
    CHVNumber           u8     u8     CHVNumber           |input;|
    UnblockCHVValue[8]  array  u8     UnblockCHVValue     |multiedit;|
    NewCHVValue[8]      array  u8     NewCHVValue         |multiedit;|
</sub api_SimUnblockCHVReq_t>


<sub api_SimElemFileStatusReq_t>
    Pad   u8  u8  Pad   |input;|
    File  u8  u8  File  |input;|
</sub api_SimElemFileStatusReq_t>


<sub api_SimDedicFileStatusReq_t>
    Pad   u8  u8  Pad   |input;|
    File  u8  u8  File  |input;|
</sub api_SimDedicFileStatusReq_t>


<sub api_SimTerminalProfileReq_t>
    Pad               u8     u8     Pad               |input;|
    NbByte            u8     u8     NbByte            |input;|
    ProfileData[256]  array  u8     ProfileData       |multiedit;|
</sub api_SimTerminalProfileReq_t>


<sub api_SimTerminalEnvelopeReq_t>
    Pad                u8     u8     Pad                |input;|
    NbByte             u8     u8     NbByte             |input;|
    EnvelopeData[256]  array  u8     EnvelopeData       |multiedit;|
</sub api_SimTerminalEnvelopeReq_t>


<sub api_SimTerminalResponseReq_t>
    Pad                    u8     u8     Pad                    |input;|
    NbByte                 u8     u8     NbByte                 |input;|
    TerminalRespData[256]  array  u8     TerminalRespData       |multiedit;|
</sub api_SimTerminalResponseReq_t>


<sub api_SimSelectApplicationReq_t>
    Pad         u8     u8     Pad         |input;|
    AID[16]     array  u8     AID         |multiedit;|
    AIDLength   u8     u8     AIDLength   |input;|
    ChannelNum  u8     u8     ChannelNum  |input;|
</sub api_SimSelectApplicationReq_t>


<sub api_SimSetUsimPbkReq_t>
    Pad         u8     u8     Pad         |input;|
    DataLength  u8     u8     DataLength  |input;|
    RecordNum   u8     u8     RecordNum   |input;|
    flag        u8     u8     flag        |input;|
    Data[256]   array  u8     Data        |multiedit;|
</sub api_SimSetUsimPbkReq_t>


<sub api_SimToolkitActivateReq_t>
    Pad       u8    u8    Pad       |input;|
    Activate  structbool  
</sub api_SimToolkitActivateReq_t>


<sub api_SimPollReq_t>
    Pad       u8   u8   Pad       |input;|
    Duration  u32  u32  Duration  |input;|
</sub api_SimPollReq_t>


<sub api_SimResetCnf_t>
    ResetResult  u8     u8     ResetResult  |input;|
    Sw1          u8     u8     Sw1          |input;|
    Sw2          u8     u8     Sw2          |input;|
    Data[256]    array  u8     Data         |multiedit;|
    UsimFlag     u8     u8     UsimFlag     |input;|
</sub api_SimResetCnf_t>


<sub api_SimRetryReq_t>
    Pad  u8  u8  Pad  |input;|
</sub api_SimRetryReq_t>


<sub api_SimManageChannelReq_t>
    Pad         u8  u8  Pad         |input;|
    CmdType     u8  u8  CmdType     |input;|
    ChannelNum  u8  u8  ChannelNum  |input;|
    len         u8  u8  len         |input;|
</sub api_SimManageChannelReq_t>


<sub api_SimSendCmdReq_t>
    Pad         u8     u8     Pad         |input;|
    ChannelNum  u8     u8     ChannelNum  |input;|
    Data[260]   array  u8     Data        |multiedit;|
</sub api_SimSendCmdReq_t>


<sub api_SimStatusErrorInd_t>
    StatusError  u8  u8  StatusError  |input;|
</sub api_SimStatusErrorInd_t>


<sub api_SimReadBinaryCnf_t>
    Sw1        u8     u8     Sw1        |input;|
    Sw2        u8     u8     Sw2        |input;|
    File       u8     u8     File       |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimReadBinaryCnf_t>


<sub api_SimUpdateBinaryCnf_t>
    Sw1   u8  u8  Sw1   |input;|
    Sw2   u8  u8  Sw2   |input;|
    File  u8  u8  File  |input;|
</sub api_SimUpdateBinaryCnf_t>


<sub api_SimReadRecordCnf_t>
    Sw1        u8     u8     Sw1        |input;|
    Sw2        u8     u8     Sw2        |input;|
    File       u8     u8     File       |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimReadRecordCnf_t>


<sub api_SimUpdateRecordCnf_t>
    Sw1   u8  u8  Sw1   |input;|
    Sw2   u8  u8  Sw2   |input;|
    File  u8  u8  File  |input;|
</sub api_SimUpdateRecordCnf_t>


<sub api_SimInvalidateCnf_t>
    Sw1   u8  u8  Sw1   |input;|
    Sw2   u8  u8  Sw2   |input;|
    File  u8  u8  File  |input;|
</sub api_SimInvalidateCnf_t>


<sub api_SimRehabilitateCnf_t>
    Sw1   u8  u8  Sw1   |input;|
    Sw2   u8  u8  Sw2   |input;|
    File  u8  u8  File  |input;|
</sub api_SimRehabilitateCnf_t>


<sub api_SimSeekCnf_t>
    Sw1       u8  u8  Sw1       |input;|
    Sw2       u8  u8  Sw2       |input;|
    File      u8  u8  File      |input;|
    RecordNb  u8  u8  RecordNb  |input;|
</sub api_SimSeekCnf_t>


<sub api_SimSeekAllCnf_t>
    Sw1          u8     u8     Sw1          |input;|
    Sw2          u8     u8     Sw2          |input;|
    File         u8     u8     File         |input;|
    Record[255]  array  u8     Record       |multiedit;|
    length       u8     u8     length       |input;|
</sub api_SimSeekAllCnf_t>


<sub api_SimIncreaseCnf_t>
    Sw1                  u8     u8     Sw1                  |input;|
    Sw2                  u8     u8     Sw2                  |input;|
    File                 u8     u8     File                 |input;|
    IncRecAddedVal[259]  array  u8     IncRecAddedVal       |multiedit;|
</sub api_SimIncreaseCnf_t>


<sub api_SimVerifyCHVCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimVerifyCHVCnf_t>


<sub api_SimChangeCHVCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimChangeCHVCnf_t>


<sub api_SimDisableCHVCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimDisableCHVCnf_t>


<sub api_SimEnableCHVCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimEnableCHVCnf_t>


<sub api_SimUnblockCHVCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimUnblockCHVCnf_t>


<sub api_SimElemFileStatusCnf_t>
    Sw1        u8     u8     Sw1        |input;|
    Sw2        u8     u8     Sw2        |input;|
    File       u8     u8     File       |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimElemFileStatusCnf_t>


<sub api_SimDedicFileStatusCnf_t>
    Sw1        u8     u8     Sw1        |input;|
    Sw2        u8     u8     Sw2        |input;|
    File       u8     u8     File       |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimDedicFileStatusCnf_t>


<sub api_SimTerminalProfileCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimTerminalProfileCnf_t>


<sub api_SimTerminalEnvelopeCnf_t>
    Sw1                u8     u8     Sw1                |input;|
    Sw2                u8     u8     Sw2                |input;|
    NbByte             u8     u8     NbByte             |input;|
    ResponseData[256]  array  u8     ResponseData       |multiedit;|
</sub api_SimTerminalEnvelopeCnf_t>


<sub api_SimTerminalResponseCnf_t>
    Sw1  u8  u8  Sw1  |input;|
    Sw2  u8  u8  Sw2  |input;|
</sub api_SimTerminalResponseCnf_t>


<sub api_SimSelectApplicationCnf_t>
    Sw1        u8     u8     Sw1        |input;|
    Sw2        u8     u8     Sw2        |input;|
    File       u8     u8     File       |input;|
    Data[256]  array  u8     Data       |multiedit;|
</sub api_SimSelectApplicationCnf_t>


<sub api_SimSendCmdCnf_t>
    Sw1        u8     u8     Sw1        |input;|
    Sw2        u8     u8     Sw2        |input;|
    Data[256]  array  u8     Data       |multiedit;|
    length     u16    u16    length     |input;|
</sub api_SimSendCmdCnf_t>


<sub api_SimManageChannelCnf_t>
    Sw1      u8     u8     Sw1      |input;|
    Sw2      u8     u8     Sw2      |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub api_SimManageChannelCnf_t>


<sub api_SimOpenInd_t>
    StoreList[STK_MAX_SIM]  array                 api_NwStoreListInd_t  StoreList               |multiedit;|
    SimStatus               u8                    u8                    SimStatus               |input;|
</sub api_SimOpenInd_t>


<sub api_SimCloseInd_t>
    bPowerOff  u8  u8  bPowerOff  |input;|
</sub api_SimCloseInd_t>


<sub api_SimFetchInd_t>
    Length     u16    u16    Length     |input;|
    Data[260]  array  u8     Data       |multiedit;|
</sub api_SimFetchInd_t>


<sub api_SmsPPSendReq_t>
    Path         u8     u8     Path         |input;|
    Concat       struct bool   
    AddressLen   u8     u8     AddressLen   |input;|
    Address[11]  array  u8     Address      |multiedit;|
    DataLen      u8     u8     DataLen      |input;|
    Data[1]      array  u8     Data         |multiedit;|
</sub api_SmsPPSendReq_t>


<sub api_SmsPPSendMMAReq_t>
    Path  u8  u8  Path  |input;|
</sub api_SmsPPSendMMAReq_t>


<sub api_SmsPPAbortReq_t>
    Path  u8  u8  Path  |input;|
</sub api_SmsPPAbortReq_t>


<sub api_SmsPPAckReq_t>
    Path     u8     u8     Path     |input;|
    DataLen  u8     u8     DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub api_SmsPPAckReq_t>


<sub api_SmsPPErrorReq_t>
    Path      u8     u8     Path      |input;|
    CauseLen  u8     u8     CauseLen  |input;|
    Cause[2]  array  u8     Cause     |multiedit;|
    DataLen   u8     u8     DataLen   |input;|
    Data[1]   array  u8     Data      |multiedit;|
</sub api_SmsPPErrorReq_t>


<sub api_SmsPPAckInd_t>
    DataLen  u8     u8     DataLen  |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub api_SmsPPAckInd_t>


<sub api_SmsPPErrorInd_t>
    ErrorType  u8     u8     ErrorType  |input;|
    CauseLen   u8     u8     CauseLen   |input;|
    Cause[2]   array  u8     Cause      |multiedit;|
    DataLen    u8     u8     DataLen    |input;|
    Data[1]    array  u8     Data       |multiedit;|
</sub api_SmsPPErrorInd_t>


<sub api_SmsPPReceiveInd_t>
    AddressLen   u8     u8     AddressLen   |input;|
    Address[11]  array  u8     Address      |multiedit;|
    bIms         u8     u8     bIms         |input;|
    DataLen      u8     u8     DataLen      |input;|
    Data[1]      array  u8     Data         |multiedit;|
</sub api_SmsPPReceiveInd_t>


<sub api_SmsCBActivateReq_t>
    ItfType                 u8     u8     ItfType                 |input;|
    MIDNb                   u8     u8     MIDNb                   |input;|
    MID[API_SMSCB_MID_LEN]  array  u16    MID                     |multiedit;|
    DCSNb                   u8     u8     DCSNb                   |input;|
    DCS[API_SMSCB_DCS_LEN]  array  u8     DCS                     |multiedit;|
</sub api_SmsCBActivateReq_t>


<sub api_SmsCBDeActivateReq_t>
    Pad  u8  u8  Pad  |input;|
</sub api_SmsCBDeActivateReq_t>


<sub api_SmsCBReceiveInd_t>
    SerNum   u16    u16    SerNum   |input;|
    MId      u16    u16    MId      |input;|
    DataLen  u16    u16    DataLen  |input;|
    DCS      u8     u8     DCS      |input;|
    RAT      u8     u8     RAT      |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub api_SmsCBReceiveInd_t>


<sub api_SmsCBPageInd_t>
    DataLen  u8     u8     DataLen  |input;|
    RAT      u8     u8     RAT      |input;|
    Data[1]  array  u8     Data     |multiedit;|
</sub api_SmsCBPageInd_t>


<sub api_CsdDataReq_t>
    Reserved[API_CSD_RESERVED_LEN]  array  u8     Reserved                        |multiedit;|
    DataLen                         u16    u16    DataLen                         |input;|
    DataOffset                      u8     u8     DataOffset                      |input;|
    Pad                             u8     u8     Pad                             |input;|
    Data[1]                         array  u8     Data                            |multiedit;|
</sub api_CsdDataReq_t>


<sub api_RlpSysPar_t>
    Kim   u8  u8  Kim   |input;|
    Kmi   u8  u8  Kmi   |input;|
    T1    u8  u8  T1    |input;|
    N2    u8  u8  N2    |input;|
    Vers  u8  u8  Vers  |input;|
    T4    u8  u8  T4    |input;|
    T2    u8  u8  T2    |input;|
</sub api_RlpSysPar_t>


<sub api_CsdCrlpSetReq_t>
    BitmapPar  u8               u8               BitmapPar  |input;|
    UsrPar     struct           api_RlpSysPar_t  
</sub api_CsdCrlpSetReq_t>


<sub api_DbgInfoCmd_t>
    Enable  structbool  
</sub api_DbgInfoCmd_t>


<sub api_DbgField_t>
    Id     u16  u16  Id     |input;|
    Value  u16  u16  Value  |input;|
</sub api_DbgField_t>


<sub api_DbgInfoInd_t>
    NbFields  u8              u8              NbFields  |input;|
    Pad[2]    array           u8              Pad       |multiedit;|
    Field[1]  array           api_DbgField_t  Field     |multiedit;|
</sub api_DbgInfoInd_t>


<sub api_CurCellInfoReq_t>
    StartReport  structbool  
</sub api_CurCellInfoReq_t>


<sub api_CurCellInfoInd_t>
    Arfcn         u16    u16    Arfcn         |input;|
    Rla           u8     u8     Rla           |input;|
    Lai[5]        array  u8     Lai           |multiedit;|
    Rac           u8     u8     Rac           |input;|
    CellId[2]     array  u8     CellId        |multiedit;|
    Bsic          u8     u8     Bsic          |input;|
    BcchDec       struct bool   
    Nmo           u8     u8     Nmo           |input;|
    MTxPower      u8     u8     MTxPower      |input;|
    C1            s8     s8     C1            |input;|
    Ber           u8     u8     Ber           |input;|
    Ta            u8     u8     Ta            |input;|
    CCCHconf      u8     u8     CCCHconf      |input;|
    BsPaMfrms     u8     u8     BsPaMfrms     |input;|
    RxQualFull    u8     u8     RxQualFull    |input;|
    RxQualSub     u8     u8     RxQualSub     |input;|
    C2            s16    s16    C2            |input;|
    CurrBand      u8     u8     CurrBand      |input;|
    CurrChanType  u8     u8     CurrChanType  |input;|
    CurrChanMode  u32    u32    CurrChanMode  |input;|
    MaxRetrans    u8     u8     MaxRetrans    |input;|
    BsAgBlkRes    u8     u8     BsAgBlkRes    |input;|
    AC[2]         array  u8     AC            |multiedit;|
    RxLevAccMin   u8     u8     RxLevAccMin   |input;|
    EC            struct bool   
    SI7_8         struct bool   
    ATT           struct bool   
    RxDbm         u8     u8     RxDbm         |input;|
    TxDbm         u8     u8     TxDbm         |input;|
    Maio          u8     u8     Maio          |input;|
    Hsn           u8     u8     Hsn           |input;|
    RxLevSub      u8     u8     RxLevSub      |input;|
    RxLevFull     u8     u8     RxLevFull     |input;|
    RxLev         u8     u8     RxLev         |input;|
    Dtx_used      u8     u8     Dtx_used      |input;|
</sub api_CurCellInfoInd_t>


<sub api_SyncInfoReq_t>
    StartReport  structbool  
</sub api_SyncInfoReq_t>


<sub api_PowerInfo_t>
    Arfcn  u16  u16  Arfcn  |input;|
    Rssi   u16  u16  Rssi   |input;|
</sub api_PowerInfo_t>


<sub api_PowerListInd_t>
    PowerList[API_POWER_LIST_COUNT]  array            api_PowerInfo_t  PowerList                        |multiedit;|
    Count                            u8               u8               Count                            |input;|
</sub api_PowerListInd_t>


<sub api_SyncInfoInd_t>
    Arfcn  u16  u16  Arfcn  |input;|
    Band   u8   u8   Band   |input;|
</sub api_SyncInfoInd_t>


<sub api_AdjCellElem_t>
    Arfcn      u16    u16    Arfcn      |input;|
    CellId[2]  array  u8     CellId     |multiedit;|
    Rla        u8     u8     Rla        |input;|
    Bsic       u8     u8     Bsic       |input;|
    BcchDec    struct bool   
    MTxPower   u8     u8     MTxPower   |input;|
    Ram        u8     u8     Ram        |input;|
    C1         s8     s8     C1         |input;|
    Lai[5]     array  u8     Lai        |multiedit;|
    C2         s16    s16    C2         |input;|
    C31        s16    s16    C31        |input;|
    C32        s16    s16    C32        |input;|
</sub api_AdjCellElem_t>


<sub api_AdjCellInfoInd_t>
    AdjCellNb        u8                 u8                 AdjCellNb        |input;|
    AdjCellElem[10]  array              api_AdjCellElem_t  AdjCellElem      |multiedit;|
</sub api_AdjCellInfoInd_t>


<sub api_FlowCtrInd_t>
    status  u8  u8  status  |input;|
</sub api_FlowCtrInd_t>


<sub api_SimCloseCnf_t>
    status  u8  u8  status  |input;|
    CnfFsm  u8  u8  CnfFsm  |input;|
</sub api_SimCloseCnf_t>


<sub api_PsmConfigReq_t>
    psmStatus      u8  u8  psmStatus      |input;|
    bitmap         u8  u8  bitmap         |input;|
    t3324Value     u8  u8  t3324Value     |input;|
    t3412ExtValue  u8  u8  t3412ExtValue  |input;|
</sub api_PsmConfigReq_t>


<sub api_EdrxConfigReq_t>
    mode       u8  u8  mode       |input;|
    actType    u8  u8  actType    |input;|
    eDrxValue  u8  u8  eDrxValue  |input;|
</sub api_EdrxConfigReq_t>


<sub api_SetEpsModeReq_t>
    LteOpMode  u8  u8  LteOpMode  |input;|
</sub api_SetEpsModeReq_t>


<sub api_SetUsageReq_t>
    setting  structbool  
</sub api_SetUsageReq_t>


<sub api_SetVoiceCfgReq_t>
    setting  structbool  
</sub api_SetVoiceCfgReq_t>


<sub api_SetSrvccReq_t>
    ueSrvcc  structbool  
</sub api_SetSrvccReq_t>


<sub api_ImsStatusReq_t>
    VoiceState  structbool  
    SmsState    structbool  
</sub api_ImsStatusReq_t>


<sub T_EQOS>
    nQci    struct  UINT8   
    nDlGbr  struct  UINT32  
    nUlGbr  struct  UINT32  
    nDlMbr  struct  UINT32  
    nUlMbr  struct  UINT32  
</sub T_EQOS>


<sub api_ImsSrvPrefInd_t>
    VoicePrefer   u8  u8  VoicePrefer   |input;|
    SmsPrefer     u8  u8  SmsPrefer     |input;|
    SrvccSupport  u8  u8  SrvccSupport  |input;|
</sub api_ImsSrvPrefInd_t>


<sub api_ImsSrvStatusReq_t>
    ImsMoVoiceStarted  structbool  
    ImsMoVideoStarted  structbool  
    ImsMoSmsStarted    structbool  
</sub api_ImsSrvStatusReq_t>


<sub api_ImsSetValueReq_t>
    ImsSet  u8  u8  ImsSet  |input;|
</sub api_ImsSetValueReq_t>


<sub api_RunUmtsAlgoReq_t>
    RAND[16]  array  u8     RAND      |multiedit;|
    AUTN[16]  array  u8     AUTN      |multiedit;|
</sub api_RunUmtsAlgoReq_t>


<sub api_RunUmtsAlgoCnf_t>
    Result           u8     u8     Result           |input;|
    ResOrAutsLength  u8     u8     ResOrAutsLength  |input;|
    Response[16]     array  u8     Response         |multiedit;|
    Auts[14]         array  u8     Auts             |multiedit;|
    Ik[16]           array  u8     Ik               |multiedit;|
    Ck[16]           array  u8     Ck               |multiedit;|
</sub api_RunUmtsAlgoCnf_t>


<sub api_EmergencyNumList_t>
    plmn[3]          array  u8     plmn             |multiedit;|
    lenOfNumList     u8     u8     lenOfNumList     |input;|
    listContent[48]  array  u8     listContent      |multiedit;|
</sub api_EmergencyNumList_t>


<sub api_ImsSrvccEndInd_t>
    Result  structbool  
</sub api_ImsSrvccEndInd_t>


<sub api_CcSrvccSetupReq_t>
    TI            u8  u8  TI            |input;|
    CallState     u8  u8  CallState     |input;|
    AuxHoldState  u8  u8  AuxHoldState  |input;|
    AuxMptyState  u8  u8  AuxMptyState  |input;|
</sub api_CcSrvccSetupReq_t>


<sub api_ImsHandShakeReq_t>
    handShakeStart  u8  u8  handShakeStart  |input;|
</sub api_ImsHandShakeReq_t>


<sub api_ImsHandShakeCnf_t>
    handShakeResult  u8  u8  handShakeResult  |input;|
</sub api_ImsHandShakeCnf_t>


<sub api_XcapEnableReq_t>
    XcapCid  u8  u8  XcapCid  |input;|
</sub api_XcapEnableReq_t>


<sub api_TestSpLteDummyPara_t>
    atFuncIndex  u8     u8     atFuncIndex  |input;|
    value        u8     u8     value        |input;|
    rsrp_flag    u8     u8     rsrp_flag    |input;|
    rsrp         u8     u8     rsrp         |input;|
    rsrq_flag    u8     u8     rsrq_flag    |input;|
    rsrq         u8     u8     rsrq         |input;|
    gsmBand      u8     u8     gsmBand      |input;|
    gsmNum       u8     u8     gsmNum       |input;|
    gsmArfcn[3]  array  u16    gsmArfcn     |multiedit;|
    lteNum       u8     u8     lteNum       |input;|
    lteArfcn[8]  array  u32    lteArfcn     |multiedit;|
</sub api_TestSpLteDummyPara_t>


<sub api_TestRrtmParam_t>
    paramIndex  u8   u8   paramIndex  |input;|
    enable      u8   u8   enable      |input;|
    value1      u16  u16  value1      |input;|
    value2      u16  u16  value2      |input;|
</sub api_TestRrtmParam_t>


<sub api_TestGrrLteFreq_t>
    earfcn    u32  u32  earfcn    |input;|
    prior     u8   u8   prior     |input;|
    thresh_h  u8   u8   thresh_h  |input;|
    thresh_l  u8   u8   thresh_l  |input;|
</sub api_TestGrrLteFreq_t>


<sub api_TestRrdmParam_t>
    index  u8  u8  index  |input;|
    value  u8  u8  value  |input;|
</sub api_TestRrdmParam_t>


<sub api_TestL1Param_t>
    index  u16  u16  index  |input;|
    value  u16  u16  value  |input;|
</sub api_TestL1Param_t>


<sub api_TestSpCleanInfo_t>
    type  u8  u8  type  |input;|
</sub api_TestSpCleanInfo_t>


<sub api_timeDuration_t>
    start  u32  u32  start  |input;|
    end    u32  u32  end    |input;|
</sub api_timeDuration_t>


<sub api_GsmCell_t>
    arfcn   u16    u16    arfcn   |input;|
    lai[5]  array  u8     lai     |multiedit;|
    bsic    u8     u8     bsic    |input;|
</sub api_GsmCell_t>


<sub api_BlackCellListSetReq_t>
    LteBlackCellNum                           u16            u16            LteBlackCellNum                           |input;|
    GsmBlackcellnum                           u16            u16            GsmBlackcellnum                           |input;|
    LteBlackCellList[API_MAX_BLACK_CELL_NUM]  array          T_CellDescLte  LteBlackCellList                          |multiedit;|
    GsmBlackCellList[API_MAX_BLACK_CELL_NUM]  array          api_GsmCell_t  GsmBlackCellList                          |multiedit;|
</sub api_BlackCellListSetReq_t>


<sub api_getNetInfoCnf_t>
    netInfo  struct         api_netInfo_t  
</sub api_getNetInfoCnf_t>


<sub api_TjmgbParamGetReq_t>
    id  u8  u8  id  |input;|
    ch  u8  u8  ch  |input;|
</sub api_TjmgbParamGetReq_t>


<sub api_TjmgbParamGetCnf_t>
    errCause                 u8     u8     errCause                 |input;|
    id                       u8     u8     id                       |input;|
    ch                       u8     u8     ch                       |input;|
    open_state               u8     u8     open_state               |input;|
    run_state                u8     u8     run_state                |input;|
    sync                     u8     u8     sync                     |input;|
    ru_num_or_rst_state      u8     u8     ru_num_or_rst_state      |input;|
    rfwarn1_or_up_t_gain     u8     u8     rfwarn1_or_up_t_gain     |input;|
    rfwarn2_or_dw_t_gain     u8     u8     rfwarn2_or_dw_t_gain     |input;|
    rfwarn3_or_up_t_out_pow  u8     u8     rfwarn3_or_up_t_out_pow  |input;|
    rfwarn4_or_dw_t_out_pow  u8     u8     rfwarn4_or_dw_t_out_pow  |input;|
    rfwarn5_or_up_a_gain     u8     u8     rfwarn5_or_up_a_gain     |input;|
    rfwarn6_or_dw_a_gain     u8     u8     rfwarn6_or_dw_a_gain     |input;|
    rfwarn7_or_up_out_pow    u8     u8     rfwarn7_or_up_out_pow    |input;|
    rfwarn8_or_dw_out_pow    u8     u8     rfwarn8_or_dw_out_pow    |input;|
    olpc                     u8     u8     olpc                     |input;|
    special_subframe_cfg     u8     u8     special_subframe_cfg     |input;|
    frame_cfg                u8     u8     frame_cfg                |input;|
    frame_offset             u16    u16    frame_offset             |input;|
    rsrp_5g                  u16    u16    rsrp_5g                  |input;|
    sinr_5g                  u16    u16    sinr_5g                  |input;|
    cellid_5g                u16    u16    cellid_5g                |input;|
    plmn_5g                  u32    u32    plmn_5g                  |input;|
    rsrp_4g                  u16    u16    rsrp_4g                  |input;|
    sinr_4g                  u16    u16    sinr_4g                  |input;|
    cellid_4g                u16    u16    cellid_4g                |input;|
    noise                    u8     u8     noise                    |input;|
    warn                     u8     u8     warn                     |input;|
    lna_bypass               u8     u8     lna_bypass               |input;|
    vco_point                u8     u8     vco_point                |input;|
    mu_up_inpow              u8     u8     mu_up_inpow              |input;|
    mu_down_outpow           u8     u8     mu_down_outpow           |input;|
    NC[16]                   array  u8     NC                       |multiedit;|
</sub api_TjmgbParamGetCnf_t>


<sub api_Tjmgb5gParamSetReq_t>
    id  u8  u8  id  |input;|
    ch  u8  u8  ch  |input;|
</sub api_Tjmgb5gParamSetReq_t>


<sub api_Tjmgb5gParamSetCnf_t>
    errCause  u8  u8  errCause  |input;|
</sub api_Tjmgb5gParamSetCnf_t>


<sub api_Tjmgb5gParamGetReq_t>
    id  u8  u8  id  |input;|
    ch  u8  u8  ch  |input;|
</sub api_Tjmgb5gParamGetReq_t>


<sub api_Tjmgb5gParamGetCnf_t>
    errCause  u8  u8  errCause  |input;|
    id        u8  u8  id        |input;|
    ch        u8  u8  ch        |input;|
    P1        u8  u8  P1        |input;|
    P2        u8  u8  P2        |input;|
    P3        u8  u8  P3        |input;|
</sub api_Tjmgb5gParamGetCnf_t>


<sub api_TjmgbNodeSetReq_t>
    id  u8  u8  id  |input;|
</sub api_TjmgbNodeSetReq_t>


<sub api_TjmgbNodeGetCnf_t>
    errCause                u8     u8     errCause                |input;|
    num                     u8     u8     num                     |input;|
    node[API_IDM_MAX_NODE]  array  u8     node                    |multiedit;|
</sub api_TjmgbNodeGetCnf_t>


<sub api_Tjmgb5gFrameSetReq_t>
    param_type          u16  u16  param_type          |input;|
    specialSubframeCfg  u8   u8   specialSubframeCfg  |input;|
    frameCfg            u8   u8   frameCfg            |input;|
    frameTimeOffset     u16  u16  frameTimeOffset     |input;|
    plmn                u32  u32  plmn                |input;|
</sub api_Tjmgb5gFrameSetReq_t>


<sub api_TjmgbOlpcSetReq_t>
    id        u8     u8     id        |input;|
    num       u8     u8     num       |input;|
    ch[2]     array  u8     ch        |multiedit;|
    value[2]  array  u8     value     |multiedit;|
</sub api_TjmgbOlpcSetReq_t>


<sub api_TjmgbOlpcSetCnf_t>
    errCause  u8  u8  errCause  |input;|
</sub api_TjmgbOlpcSetCnf_t>


<sub api_TjmgbSwitchSetReq_t>
    id        u8     u8     id        |input;|
    num       u8     u8     num       |input;|
    ch[2]     array  u8     ch        |multiedit;|
    value[2]  array  u8     value     |multiedit;|
</sub api_TjmgbSwitchSetReq_t>


<sub api_TjmgbSwitchSetCnf_t>
    errCause  u8  u8  errCause  |input;|
</sub api_TjmgbSwitchSetCnf_t>


<sub api_TjmgbPllSetReq_t>
    id        u8     u8     id        |input;|
    num       u8     u8     num       |input;|
    ch[2]     array  u8     ch        |multiedit;|
    value[2]  array  u8     value     |multiedit;|
</sub api_TjmgbPllSetReq_t>


<sub api_TjmgbPllSetCnf_t>
    errCause  u8  u8  errCause  |input;|
</sub api_TjmgbPllSetCnf_t>


<sub api_TjmgbResetReq_t>
    id  u8  u8  id  |input;|
</sub api_TjmgbResetReq_t>


<sub api_TjVersionGetReq_t>
    id  u8  u8  id  |input;|
</sub api_TjVersionGetReq_t>


<sub api_TjVersionGetCnf_t>
    id       u8   u8   id       |input;|
    sw_ver   u16  u16  sw_ver   |input;|
    mcu_ver  u16  u16  mcu_ver  |input;|
</sub api_TjVersionGetCnf_t>


<sub api_TjmgbUpInPowSetReq_t>
    num        u8     u8     num        |input;|
    ch[2]      array  u8     ch         |multiedit;|
    inPow[2]   array  u8     inPow      |multiedit;|
    outPow[2]  array  u8     outPow     |multiedit;|
</sub api_TjmgbUpInPowSetReq_t>


<sub api_TjmgbRUParamSetReq_t>
    ch            u8   u8   ch            |input;|
    up_t_gain     u8   u8   up_t_gain     |input;|
    dw_t_gain     u8   u8   dw_t_gain     |input;|
    up_t_out_pow  u8   u8   up_t_out_pow  |input;|
    dw_t_out_pow  u8   u8   dw_t_out_pow  |input;|
    up_a_gain     u8   u8   up_a_gain     |input;|
    dw_a_gain     u8   u8   dw_a_gain     |input;|
    up_out_pow    u8   u8   up_out_pow    |input;|
    dw_out_pow    u8   u8   dw_out_pow    |input;|
    opc_value     u8   u8   opc_value     |input;|
    vco_point     u8   u8   vco_point     |input;|
    rf_switch     u8   u8   rf_switch     |input;|
    rf_warn       u8   u8   rf_warn       |input;|
    mcu_ver       u16  u16  mcu_ver       |input;|
</sub api_TjmgbRUParamSetReq_t>


<sub api_TjFreqSetReq_t>
    freq    u32  u32  freq    |input;|
    cellId  u16  u16  cellId  |input;|
</sub api_TjFreqSetReq_t>


<sub api_TjPowSetReq_t>
    RxPow  u8  u8  RxPow  |input;|
    TxPow  u8  u8  TxPow  |input;|
</sub api_TjPowSetReq_t>


<sub api_TjmgbSwitchCfgSetReq_t>
    id            u8     u8     id            |input;|
    ch[2]         array  u8     ch            |multiedit;|
    isAllowed[2]  array  u8     isAllowed     |multiedit;|
</sub api_TjmgbSwitchCfgSetReq_t>


<sub api_TjmgbSwitchCfgGetReq_t>
    id  u8  u8  id  |input;|
</sub api_TjmgbSwitchCfgGetReq_t>


<sub api_TjmgbSwitchCfgGetCnf_t>
    id            u8     u8     id            |input;|
    ch[2]         array  u8     ch            |multiedit;|
    isAllowed[2]  array  u8     isAllowed     |multiedit;|
</sub api_TjmgbSwitchCfgGetCnf_t>


<sub mm_LteStatusInd_t>
    LteDisabled  u8  u8  LteDisabled  |input;|
</sub mm_LteStatusInd_t>


<sub mm_CsfbReq_t>
    CallType  u8  u8  CallType  |input;|
</sub mm_CsfbReq_t>


<sub mm_CsfbInd_t>
    PagingID  u8  u8  PagingID  |input;|
</sub mm_CsfbInd_t>


<sub mm_RatInd_t>
    CurrRat  u8  u8  CurrRat  |input;|
</sub mm_RatInd_t>


<sub mm_CsInfoSync_t>
    SyncFlag                   u8     u8     SyncFlag                   |input;|
    UpdateFlag                 u8     u8     UpdateFlag                 |input;|
    LocUpStatus                u8     u8     LocUpStatus                |input;|
    SimCSInvalid               u8     u8     SimCSInvalid               |input;|
    CKSN                       u8     u8     CKSN                       |input;|
    KC[8]                      array  u8     KC                         |multiedit;|
    Lai[5]                     array  u8     Lai                        |multiedit;|
    Tmsi[4]                    array  u8     Tmsi                       |multiedit;|
    TIN                        u8     u8     TIN                        |input;|
    LTE_GUTI[LTE_GUTI_LENGTH]  array  u8     LTE_GUTI                   |multiedit;|
    NetworkCause               u8     u8     NetworkCause               |input;|
</sub mm_CsInfoSync_t>


<sub mm_PsInfoSync_t>
    SyncFlag                   u8     u8     SyncFlag                   |input;|
    UpdateFlag                 u8     u8     UpdateFlag                 |input;|
    RAUpStatus                 u8     u8     RAUpStatus                 |input;|
    SIMPSInvalid               u8     u8     SIMPSInvalid               |input;|
    RAI[6]                     array  u8     RAI                        |multiedit;|
    PTmsi[4]                   array  u8     PTmsi                      |multiedit;|
    PTmsiSign[3]               array  u8     PTmsiSign                  |multiedit;|
    GprsFPlmnNb                u8     u8     GprsFPlmnNb                |input;|
    GprsFPlmn[12]              array  u8     GprsFPlmn                  |multiedit;|
    GprsCKSN                   u8     u8     GprsCKSN                   |input;|
    CK_Length                  u8     u8     CK_Length                  |input;|
    CK[16]                     array  u8     CK                         |multiedit;|
    IK_Length                  u8     u8     IK_Length                  |input;|
    IK[16]                     array  u8     IK                         |multiedit;|
    KC_Length                  u8     u8     KC_Length                  |input;|
    KC[8]                      array  u8     KC                         |multiedit;|
    PdpCtxStatus[2]            array  u8     PdpCtxStatus               |multiedit;|
    NetworkCause               u8     u8     NetworkCause               |input;|
    TIN                        u8     u8     TIN                        |input;|
    LTE_GUTI[LTE_GUTI_LENGTH]  array  u8     LTE_GUTI                   |multiedit;|
    MmpRauStatus               u8     u8     MmpRauStatus               |input;|
</sub mm_PsInfoSync_t>


<sub mm_StatusReq_t>
    status  u8  u8  status  |input;|
</sub mm_StatusReq_t>


<sub mm_StatusInd_t>
    status         u8  u8  status         |input;|
    connForPaging  u8  u8  connForPaging  |input;|
</sub mm_StatusInd_t>


<sub mm_IratStartInd_t>
    sourceRat        u8  u8  sourceRat        |input;|
    targetRat        u8  u8  targetRat        |input;|
    interratChnType  u8  u8  interratChnType  |input;|
</sub mm_IratStartInd_t>


<sub mm_IratEndInd_t>
    interratChnType  u8  u8  interratChnType  |input;|
    bResult          u8  u8  bResult          |input;|
    bCsConn          u8  u8  bCsConn          |input;|
    bPsConn          u8  u8  bPsConn          |input;|
    curRat           u8  u8  curRat           |input;|
</sub mm_IratEndInd_t>


<sub sm_PdpCtxMappingInd_t>
    SmIndex                       u8     u8     SmIndex                       |input;|
    Nsapi                         u8     u8     Nsapi                         |input;|
    Sapi                          u8     u8     Sapi                          |input;|
    RadioPrio                     u8     u8     RadioPrio                     |input;|
    Pfi                           u8     u8     Pfi                           |input;|
    QoSLen                        u8     u8     QoSLen                        |input;|
    QoS[API_QOS_LEN_MAX]          array  u8     QoS                           |multiedit;|
    EpsQoSLen                     u8     u8     EpsQoSLen                     |input;|
    EpsQoS[9]                     array  u8     EpsQoS                        |multiedit;|
    APNLen                        u8     u8     APNLen                        |input;|
    APN[100]                      array  u8     APN                           |multiedit;|
    PDPAddLen                     u8     u8     PDPAddLen                     |input;|
    PDPAddress[API_ADDR_LEN_MAX]  array  u8     PDPAddress                    |multiedit;|
    lowPrioInd                    u8     u8     lowPrioInd                    |input;|
    origAPNLen                    u8     u8     origAPNLen                    |input;|
    nCid                          u8     u8     nCid                          |input;|
    pcoLen                        u8     u8     pcoLen                        |input;|
    pco[PCO_LEN_FOR_IRAT]         array  u8     pco                           |multiedit;|
</sub sm_PdpCtxMappingInd_t>


<sub T_CAPI_RMI_FIELD_STRENGTH_IND>
    fieldStrength  s8   s8   fieldStrength  |input;|
    rsrq           s8   s8   rsrq           |input;|
    rssi           s16  s16  rssi           |input;|
</sub T_CAPI_RMI_FIELD_STRENGTH_IND>


<0x0001 OP_CAPI_RMI_FIELD_STRENGTH_IND>
    signalHeader                 struct                         T_MsgHeader                    
    CAPI_RMI_FIELD_STRENGTH_IND  struct                         T_CAPI_RMI_FIELD_STRENGTH_IND  
</0x0001 OP_CAPI_RMI_FIELD_STRENGTH_IND>


<sub api_ErrcCapiRmiFieldStrengthInd_t>
    fieldStrength  s8  s8  fieldStrength  |input;|
</sub api_ErrcCapiRmiFieldStrengthInd_t>


<sub T_ERRC_API_TEST_SPLTEDUMMYPARA_REQ>
    atFuncIndex  u8     u8     atFuncIndex  |input;|
    value        u8     u8     value        |input;|
    rsrp_flag    u8     u8     rsrp_flag    |input;|
    rsrp         u8     u8     rsrp         |input;|
    rsrq_flag    u8     u8     rsrq_flag    |input;|
    rsrq         u8     u8     rsrq         |input;|
    gsmBand      u8     u8     gsmBand      |input;|
    gsmNum       u8     u8     gsmNum       |input;|
    gsmArfcn[3]  array  u16    gsmArfcn     |multiedit;|
    lteNum       u8     u8     lteNum       |input;|
    lteArfcn[8]  array  u32    lteArfcn     |multiedit;|
</sub T_ERRC_API_TEST_SPLTEDUMMYPARA_REQ>


<0x2099 OP_ERRC_API_TEST_SPLTEDUMMYPARA_REQ>
    signalHeader                      struct                              T_MsgHeader                         
    ERRC_API_TEST_SPLTEDUMMYPARA_REQ  struct                              T_ERRC_API_TEST_SPLTEDUMMYPARA_REQ  
</0x2099 OP_ERRC_API_TEST_SPLTEDUMMYPARA_REQ>


<0x209a OP_ERRC_API_TEST_SPCLEANINFO_REQ>
    signalHeader  struct       T_MsgHeader  
</0x209a OP_ERRC_API_TEST_SPCLEANINFO_REQ>


<0x0003 OP_API_NET_INFO_TRACE>
    API_NET_INFO  struct         api_netInfo_t  
</0x0003 OP_API_NET_INFO_TRACE>


<0x0004 OP_API_NET_INFO_STATISTICS_TRACE>
    API_NET_INFO_STATISTICS  struct                  api_netinfoStatistic_t  
</0x0004 OP_API_NET_INFO_STATISTICS_TRACE>


<sub T_GsmBalckCell>
    arfcn   u16    u16    arfcn   |input;|
    lai[5]  array  u8     lai     |multiedit;|
    bsic    u8     u8     bsic    |input;|
</sub T_GsmBalckCell>


<sub T_API_ERRC_BLACK_CELL_LIST_SET_REQ>
    LteBlackCellNum                       u16             u16             LteBlackCellNum                       |input;|
    GsmBlackcellnum                       u16             u16             GsmBlackcellnum                       |input;|
    LteBlackCellList[MAX_BLACK_CELL_NUM]  array           T_CellDescLte   LteBlackCellList                      |multiedit;|
    GsmBlackCellList[MAX_BLACK_CELL_NUM]  array           T_GsmBalckCell  GsmBlackCellList                      |multiedit;|
</sub T_API_ERRC_BLACK_CELL_LIST_SET_REQ>


<0x2098 OP_API_ERRC_BLACK_CELL_LIST_SET_REQ>
    signalHeader                      struct                              T_MsgHeader                         
    API_ERRC_BLACK_CELL_LIST_SET_REQ  struct                              T_API_ERRC_BLACK_CELL_LIST_SET_REQ  
</0x2098 OP_API_ERRC_BLACK_CELL_LIST_SET_REQ>


<0x21aa OP_API_ERRC_GET_CELL_INFO_START_REQ>
    signalHeader  struct       T_MsgHeader  
</0x21aa OP_API_ERRC_GET_CELL_INFO_START_REQ>


<0x21ad OP_ERRC_API_GET_CELL_INFO_END_IND>
    signalHeader                    struct          T_MsgHeader     
    ERRC_API_GET_CELL_INFO_END_IND  struct          api_nwCapLte_t  
</0x21ad OP_ERRC_API_GET_CELL_INFO_END_IND>


<0x21ab OP_API_ERRC_GET_CELL_INFO_STOP_REQ>
    signalHeader  struct       T_MsgHeader  
</0x21ab OP_API_ERRC_GET_CELL_INFO_STOP_REQ>


<0x21ae OP_ERRC_API_GET_CELL_INFO_STOP_CNF>
    signalHeader                     struct          T_MsgHeader     
    ERRC_API_GET_CELL_INFO_STOP_CNF  struct          api_nwCapLte_t  
</0x21ae OP_ERRC_API_GET_CELL_INFO_STOP_CNF>


<0x21ac OP_API_ERRC_GET_NET_INFO_REQ>
    signalHeader  struct       T_MsgHeader  
</0x21ac OP_API_ERRC_GET_NET_INFO_REQ>


<0x21af OP_ERRC_API_GET_NET_INFO_CNF>
    signalHeader               struct          T_MsgHeader     
    ERRC_API_GET_NET_INFO_CNF  struct          api_nwCapLte_t  
</0x21af OP_ERRC_API_GET_NET_INFO_CNF>


<0x4081 OP_API_EL1C_IDM_PARA_GET_REQ>
    signalHeader               struct                  T_MsgHeader             
    API_EL1C_IDM_PARA_GET_REQ  struct                  api_TjmgbParamGetReq_t  
</0x4081 OP_API_EL1C_IDM_PARA_GET_REQ>


<0x4091 OP_EL1C_API_IDM_PARA_GET_CNF>
    signalHeader               struct                  T_MsgHeader             
    EL1C_API_IDM_PARA_GET_CNF  struct                  api_TjmgbParamGetCnf_t  
</0x4091 OP_EL1C_API_IDM_PARA_GET_CNF>


<0x4083 OP_API_EL1C_IDM_5G_PARA_SET_REQ>
    signalHeader                  struct                    T_MsgHeader               
    API_EL1C_IDM_5G_PARA_SET_REQ  struct                    api_Tjmgb5gParamSetReq_t  
</0x4083 OP_API_EL1C_IDM_5G_PARA_SET_REQ>


<0x4095 OP_EL1C_API_IDM_5G_PARA_SET_CNF>
    signalHeader                  struct                    T_MsgHeader               
    EL1C_API_IDM_5G_PARA_SET_CNF  struct                    api_Tjmgb5gParamSetCnf_t  
</0x4095 OP_EL1C_API_IDM_5G_PARA_SET_CNF>


<0x4082 OP_API_EL1C_IDM_5G_PARA_GET_REQ>
    signalHeader                  struct                    T_MsgHeader               
    API_EL1C_IDM_5G_PARA_GET_REQ  struct                    api_Tjmgb5gParamGetReq_t  
</0x4082 OP_API_EL1C_IDM_5G_PARA_GET_REQ>


<0x4092 OP_EL1C_API_IDM_5G_PARA_GET_CNF>
    signalHeader                  struct                    T_MsgHeader               
    EL1C_API_IDM_5G_PARA_GET_CNF  struct                    api_Tjmgb5gParamGetCnf_t  
</0x4092 OP_EL1C_API_IDM_5G_PARA_GET_CNF>


<0x4084 OP_API_EL1C_IDM_NODE_SET_REQ>
    signalHeader               struct                 T_MsgHeader            
    API_EL1C_IDM_NODE_SET_REQ  struct                 api_TjmgbNodeSetReq_t  
</0x4084 OP_API_EL1C_IDM_NODE_SET_REQ>


<0x4085 OP_API_EL1C_IDM_NODE_GET_REQ>
    signalHeader               struct                 T_MsgHeader            
    API_EL1C_IDM_NODE_GET_REQ  struct                 api_TjmgbNodeGetReq_t  
</0x4085 OP_API_EL1C_IDM_NODE_GET_REQ>


<0x4094 OP_EL1C_API_IDM_NODE_GET_CNF>
    signalHeader               struct                 T_MsgHeader            
    EL1C_API_IDM_NODE_GET_CNF  struct                 api_TjmgbNodeGetCnf_t  
</0x4094 OP_EL1C_API_IDM_NODE_GET_CNF>


<0x4086 OP_API_EL1C_IDM_5G_FRAM_SET_REQ>
    signalHeader                  struct                    T_MsgHeader               
    API_EL1C_IDM_5G_FRAM_SET_REQ  struct                    api_Tjmgb5gFrameSetReq_t  
</0x4086 OP_API_EL1C_IDM_5G_FRAM_SET_REQ>


<0x4087 OP_API_EL1C_IDM_OLPC_SET_REQ>
    signalHeader               struct                 T_MsgHeader            
    API_EL1C_IDM_OLPC_SET_REQ  struct                 api_TjmgbOlpcSetReq_t  
</0x4087 OP_API_EL1C_IDM_OLPC_SET_REQ>


<0x4096 OP_EL1C_API_IDM_OLPC_SET_CNF>
    signalHeader               struct                 T_MsgHeader            
    EL1C_API_IDM_OLPC_SET_CNF  struct                 api_TjmgbOlpcSetCnf_t  
</0x4096 OP_EL1C_API_IDM_OLPC_SET_CNF>


<0x4088 OP_API_EL1C_IDM_SWITCH_SET_REQ>
    signalHeader                 struct                   T_MsgHeader              
    API_EL1C_IDM_SWITCH_SET_REQ  struct                   api_TjmgbSwitchSetReq_t  
</0x4088 OP_API_EL1C_IDM_SWITCH_SET_REQ>


<0x4097 OP_EL1C_API_IDM_SWITCH_SET_CNF>
    signalHeader                 struct                   T_MsgHeader              
    EL1C_API_IDM_SWITCH_SET_CNF  struct                   api_TjmgbSwitchSetCnf_t  
</0x4097 OP_EL1C_API_IDM_SWITCH_SET_CNF>


<0x4089 OP_API_EL1C_IDM_MGB_PLL_SET_REQ>
    signalHeader                  struct                T_MsgHeader           
    API_EL1C_IDM_MGB_PLL_SET_REQ  struct                api_TjmgbPllSetReq_t  
</0x4089 OP_API_EL1C_IDM_MGB_PLL_SET_REQ>


<0x4098 OP_EL1C_API_IDM_PLL_SET_CNF>
    signalHeader              struct                T_MsgHeader           
    EL1C_API_IDM_PLL_SET_CNF  struct                api_TjmgbPllSetCnf_t  
</0x4098 OP_EL1C_API_IDM_PLL_SET_CNF>


<0x408a OP_API_EL1C_IDM_RESET_REQ>
    signalHeader            struct               T_MsgHeader          
    API_EL1C_IDM_RESET_REQ  struct               api_TjmgbResetReq_t  
</0x408a OP_API_EL1C_IDM_RESET_REQ>


<0x408b OP_API_EL1C_IDM_VERSION_GET_REQ>
    signalHeader                  struct                 T_MsgHeader            
    API_EL1C_IDM_VERSION_GET_REQ  struct                 api_TjVersionGetReq_t  
</0x408b OP_API_EL1C_IDM_VERSION_GET_REQ>


<0x4093 OP_EL1C_API_IDM_VERSION_GET_CNF>
    signalHeader                  struct                 T_MsgHeader            
    EL1C_API_IDM_VERSION_GET_CNF  struct                 api_TjVersionGetCnf_t  
</0x4093 OP_EL1C_API_IDM_VERSION_GET_CNF>


<0x408c OP_API_EL1C_IDM_UPINPOW_SET_REQ>
    signalHeader                  struct                    T_MsgHeader               
    API_EL1C_IDM_UPINPOW_SET_REQ  struct                    api_TjmgbUpInPowSetReq_t  
</0x408c OP_API_EL1C_IDM_UPINPOW_SET_REQ>


<0x408d OP_API_EL1C_IDM_RUPRAM_SET_REQ>
    signalHeader                 struct                    T_MsgHeader               
    API_EL1C_IDM_RUPRAM_SET_REQ  struct                    api_TjmgbRUParamSetReq_t  
</0x408d OP_API_EL1C_IDM_RUPRAM_SET_REQ>


<0x408e OP_API_EL1C_IDM_FREQ_SET_REQ>
    signalHeader               struct              T_MsgHeader         
    API_EL1C_IDM_FREQ_SET_REQ  struct              api_TjFreqSetReq_t  
</0x408e OP_API_EL1C_IDM_FREQ_SET_REQ>


<0x408f OP_API_EL1C_IDM_POW_SET_REQ>
    signalHeader              struct             T_MsgHeader        
    API_EL1C_IDM_POW_SET_REQ  struct             api_TjPowSetReq_t  
</0x408f OP_API_EL1C_IDM_POW_SET_REQ>


<sub T_Adp_GapCtr>
    gapType        u16         u16         gapType        |input;|
    gapStartPoint  struct      T_TimeUnit  
    gapEndPoint    struct      T_TimeUnit  
    gapId          u16         u16         gapId          |input;|
    simFlag        u16         u16         simFlag        |input;|
</sub T_Adp_GapCtr>


<sub T_Adp_PchGapEnd>
    scellRsrp     u16                  u16                  scellRsrp     |input;|
    scellRsrq     u16                  u16                  scellRsrq     |input;|
    scellSinr     u16                  u16                  scellSinr     |input;|
    nextPoTa      u16                  u16                  nextPoTa      |input;|
    syncStatus    u16                  u16                  syncStatus    |input;|
    intraMeasRes  struct               T_IdlMeasResult_EL1  
</sub T_Adp_PchGapEnd>


<sub T_Adp_SignalAction_Set>
    opType  u16  u16  opType  |input;|
    action  u16  u16  action  |input;|
</sub T_Adp_SignalAction_Set>


<sub T_EL1C_ADP_SET_SIGNAL_CTR_IND>
    entryNum      u16                     u16                     entryNum      |input;|
    reserved      u16                     u16                     reserved      |input;|
    setEntry[10]  array                   T_Adp_SignalAction_Set  setEntry      |multiedit;|
</sub T_EL1C_ADP_SET_SIGNAL_CTR_IND>


<sub T_EL1C_ADP_SET_NVM_CTR_IND>
    nvParam1  u16  u16  nvParam1  |input;|
    nvParam2  u16  u16  nvParam2  |input;|
    nvParam3  u16  u16  nvParam3  |input;|
    nvParam4  s8   s8   nvParam4  |input;|
    nvParam5  u8   u8   nvParam5  |input;|
</sub T_EL1C_ADP_SET_NVM_CTR_IND>


<sub T_EL1C_ADP_SET_SCHE_COUNTER_IND>
    enteryNum    u16    u16    enteryNum    |input;|
    reserved     u16    u16    reserved     |input;|
    index[10]    array  u16    index        |multiedit;|
    counter[10]  array  u16    counter      |multiedit;|
</sub T_EL1C_ADP_SET_SCHE_COUNTER_IND>


<sub T_RL1C_CHN_COMM_CONFIG_REQ_ADP>
    servCellInfo        struct               T_CellServLte        
    pCommCfgForComm     struct               T_CommCfgForComm     
    pCommCfgForBlCe     struct               T_CommCfgForBlCe     
    pCommCfgForNonBlCe  struct               T_CommCfgForNonBlCe  
</sub T_RL1C_CHN_COMM_CONFIG_REQ_ADP>


<0xffff OP_RL1C_CHN_COMM_CONFIG_REQ_ADP>
    signalHeader                  struct                          T_MsgHeader                     
    RL1C_CHN_COMM_CONFIG_REQ_ADP  struct                          T_RL1C_CHN_COMM_CONFIG_REQ_ADP  
</0xffff OP_RL1C_CHN_COMM_CONFIG_REQ_ADP>


<0x6214 OP_EL1C_ADP_SET_SCHE_COUNTER_IND>
    signalHeader                   struct                           T_MsgHeader                      
    EL1C_ADP_SET_SCHE_COUNTER_IND  struct                           T_EL1C_ADP_SET_SCHE_COUNTER_IND  
</0x6214 OP_EL1C_ADP_SET_SCHE_COUNTER_IND>


<0x6213 OP_EL1C_ADP_SET_NVM_CTR_IND>
    signalHeader              struct                      T_MsgHeader                 
    EL1C_ADP_SET_NVM_CTR_IND  struct                      T_EL1C_ADP_SET_NVM_CTR_IND  
</0x6213 OP_EL1C_ADP_SET_NVM_CTR_IND>


<0x6211 OP_EL1C_ADP_SET_SIGNAL_CTR_IND>
    signalHeader                 struct                         T_MsgHeader                    
    EL1C_ADP_SET_SIGNAL_CTR_IND  struct                         T_EL1C_ADP_SET_SIGNAL_CTR_IND  
</0x6211 OP_EL1C_ADP_SET_SIGNAL_CTR_IND>


<sub T_Idm_AdpSendMsg>
    firstMsgId   u8  u8  firstMsgId   |input;|
    secondMsgId  u8  u8  secondMsgId  |input;|
    value1       u8  u8  value1       |input;|
    value2       u8  u8  value2       |input;|
    value3       u8  u8  value3       |input;|
</sub T_Idm_AdpSendMsg>


<sub T_EL1C_ADP_IDM_SEND_MSG_REQ>
    msgNum                                    u16               u16               msgNum                                    |input;|
    reserved                                  u16               u16               reserved                                  |input;|
    msgBitStream[EL1C_MAX_IDM_MAX_BLOCK_NUM]  array             T_Idm_AdpSendMsg  msgBitStream                              |multiedit;|
    startTime                                 struct            T_TimeUnit        
    endTime                                   struct            T_TimeUnit        
</sub T_EL1C_ADP_IDM_SEND_MSG_REQ>


<0x6215 OP_EL1C_ADP_IDM_SEND_MSG_REQ>
    signalHeader               struct                       T_MsgHeader                  
    EL1C_ADP_IDM_SEND_MSG_REQ  struct                       T_EL1C_ADP_IDM_SEND_MSG_REQ  
</0x6215 OP_EL1C_ADP_IDM_SEND_MSG_REQ>


<sub T_EL1C_ADP_IDM_RECV_DATA_IND>
    msgNum                                    u16               u16               msgNum                                    |input;|
    lineLoss                                  u16               u16               lineLoss                                  |input;|
    crcResult[EL1C_MAX_IDM_MAX_BLOCK_NUM]     array             u16               crcResult                                 |multiedit;|
    msgBitStream[EL1C_MAX_IDM_MAX_BLOCK_NUM]  array             T_Idm_AdpSendMsg  msgBitStream                              |multiedit;|
</sub T_EL1C_ADP_IDM_RECV_DATA_IND>


<0x6216 OP_EL1C_ADP_IDM_RECV_DATA_IND>
    signalHeader                struct                        T_MsgHeader                   
    EL1C_ADP_IDM_RECV_DATA_IND  struct                        T_EL1C_ADP_IDM_RECV_DATA_IND  
</0x6216 OP_EL1C_ADP_IDM_RECV_DATA_IND>


<sub T_EL1C_ADP_IDM_MSG_FILTER_IND>
    filterType     u16    u16    filterType     |input;|
    msgNum         u16    u16    msgNum         |input;|
    msgIdList[32]  array  u16    msgIdList      |multiedit;|
</sub T_EL1C_ADP_IDM_MSG_FILTER_IND>


<0x6217 OP_EL1C_ADP_IDM_MSG_FILTER_IND>
    signalHeader                 struct                         T_MsgHeader                    
    EL1C_ADP_IDM_MSG_FILTER_IND  struct                         T_EL1C_ADP_IDM_MSG_FILTER_IND  
</0x6217 OP_EL1C_ADP_IDM_MSG_FILTER_IND>


<sub T_Adp_recvDataList>
    msgNum                             u16                         u16                         msgNum                             |input;|
    nodeId[ADP_MAX_IDM_RECV_DATA_NUM]  array                       u8                          nodeId                             |multiedit;|
    data[ADP_MAX_IDM_RECV_DATA_NUM]    array                       H_T_EL1C_IDM_RECV_DATA_IND  data                               |multiedit;|
</sub T_Adp_recvDataList>


<sub T_Adp_RecvDataEvent>
    valid  u16  u16  valid  |input;|
    sfn    u16  u16  sfn    |input;|
</sub T_Adp_RecvDataEvent>


<sub T_EL1C_ADP_IDM_NVM_UPDATE_IND>
    mode            u8  u8  mode            |input;|
    node            u8  u8  node            |input;|
    rxPowFsmu       u8  u8  rxPowFsmu       |input;|
    txPowFsmu       u8  u8  txPowFsmu       |input;|
    occationPeriod  u8  u8  occationPeriod  |input;|
    dlHeartPeriod   u8  u8  dlHeartPeriod   |input;|
    upInPowPeriod   u8  u8  upInPowPeriod   |input;|
    FramePeriod5g   u8  u8  FramePeriod5g   |input;|
    PlmnPeriod5g    u8  u8  PlmnPeriod5g    |input;|
    sCellPeriod     u8  u8  sCellPeriod     |input;|
</sub T_EL1C_ADP_IDM_NVM_UPDATE_IND>


<0x6218 OP_EL1C_ADP_IDM_NVM_UPDATE_IND>
    signalHeader                 struct                         T_MsgHeader                    
    EL1C_ADP_IDM_NVM_UPDATE_IND  struct                         T_EL1C_ADP_IDM_NVM_UPDATE_IND  
</0x6218 OP_EL1C_ADP_IDM_NVM_UPDATE_IND>


