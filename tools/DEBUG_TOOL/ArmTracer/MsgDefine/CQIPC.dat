/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 描述：CQ LTE IPC消息定义文件
// 作者：LaoTan
// 日期：2016-09-11
// 版本：V0.0.1
// 版权：CopyRight(c) 2016.09 By RDA
// 
// 消息定义格式：
//    <MsgID MsgName>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </MsgID MsgName>
//
// 子结构定义
//    <Sub T_Temp>
//         参数名      参数类型      参数基类型        参数含义         参数选项
//    </Sub T_Temp>
//
//  一个参数的bit位定义
//    <Bit T_Var>
//         成员名      在参数中的Bit位起始位置         成员长度(Bit数)         成员含义       成员选项
//    </Bit T_Var>
//
//  指针类型参数定义
//     参数名          Ptr           参数基类型         参数含义
//  e.g:
//      u8   *pPdschPointer;             ===> pPdschPointer      Ptr   u8              pPdschPointer 
//      T_PDSCH_MEM  *pPdschMapPointer;  ===> pPdschMapPointer   Ptr   T_PDSCH_MEM     pPdschMapPointer
//
//
// 选项定义：
//    |input;|                       参数值允许输入
//    |nochange;|                    参数值不允许改变
//    |select;值1:含义;值2:含义;|    参数值只能选择
//    |dismember;名称;|              参数bit定义
//    |multiedit;|                   数组输入
//              
//  注意：
//      1. 不支持union类型
//      2. ..:取值范围定义,e.g: 1..5,表示1到5范围
//      3. 空格符作为各列间的分隔符，如内容中有空格符，使用Tab符代替.
//      4. 参数基类型，支持u8、u16、u32，s8，s16，s32，自定义子结构、数组、指针类型(Ptr)
/////////////////////////////////////////////////////////////////////////////////////////////////////////

// adp_ps.h
#define SIM_MAX_SIZE_BIN_DATA_READ      256

// asn.hec
#define hiPDSCHidentities          1  
#define hiPUSCHidentities          1  
#define hiRM                       256
#define maxAC                      16 
#define maxAdditionalMeas          4  
#define maxASC                     8  
#define maxASCmap                  7  
#define maxASCpersist              6  
#define maxCCTrCH                  1  
#define maxCellMeas                32 
#define maxCellMeas_1              31 
#define maxCNdomains               2  
#define maxCPCHsets                1  
#define maxDPCH_DLchan             8  
#define maxDPDCH_UL                6  
#define maxDRACclasses             1  
#define maxFACHPCH                 8  
#define maxFreq                    8  
#define maxFreqBandsFDD            1  
#define maxFreqBandsTDD            4  
#define maxFreqBandsGSM            1  
#define maxHProcesses              8  
#define maxHSSCCHs                 4  
#define maxInterSysMessages        4  
#define maxLoCHperRLC              2  
#define maxMAC_d_PDUsizes          8  
#define maxMeasEvent               8  
#define maxMeasIntervals           3  
#define maxMeasParEvent            2  
#define maxNumCDMA2000Freqs        1  
#define maxNumGSMFreqRanges        1  
#define maxNumFDDFreqs             1  
#define maxNumTDDFreqs             8  
#define maxNoOfMeas                16 
#define maxOtherRAT                1  
#define maxOtherRAT_16             1  
#define maxPage1                   8  
#define maxPCPCH_APsig             1  
#define maxPCPCH_APsubCh           1  
#define maxPCPCH_CDsig             1  
#define maxPCPCH_CDsubCh           1  
#define maxPCPCH_SF                1  
#define maxPCPCHs                  1  
#define maxPDCPAlgoType            8  
#define maxPDSCH                   1  
#define maxPDSCH_TFCIgroups        1  
#define maxPRACH                   16 
#define maxPRACH_FPACH             8  
#define maxPredefConfig            16 
#define maxPUSCH                   1  
#define maxRABsetup                16 
#define maxQueueIDs                8  
#define maxRAT                     1  
#define maxRB                      10 
#define maxRBallRABs               27 
#define maxRBMuxOptions            4  
#define maxRBperRAB                3  
#define maxReportedGSMCells        8  
#define maxRL                      1  
#define maxRL_1                    1  
#define maxROHC_PacketSizes_r4     16 
#define maxROHC_Profile_r4         16 
#define maxSat                     16 
#define maxSCCPCH                  16 
#define maxSIB                     32 
#define maxSIB_FACH                8  
#define maxSIBperMsg               16 
#define maxSRBsetup                8  
#define maxSystemCapability        1  
#define maxTDD128Carrier           6  
#define maxTF                      24 
#define maxTF_CPCH                 1  

#define MAX_SIB16_INSTANCE         16

//#define maxTFC                     128
#define maxTFC                     32


#define maxTFCsub                  60
#define maxTFCI_2_Combs            1 
#define maxTGPS                    1 

#define maxTrCH                    6 

#define maxTrCHpreconf             6 
#define maxTS                      6 
#define maxTS_1                    5 
#define maxTS_LCR                  6 
#define maxTS_LCR_1                5 
#define maxURA                     8 

#define MAX_TDM_NUM                6


#define maxMacDFlow                8
#define maxBeta                    8
#define maxEagch                   4
#define maxEhich                   4
#define maxPrach                   2
#define maxE_DCHMACdFlow           8
#define maxNumEagch                4
#define maxNumEhich                4
#define maxRlcPduSize              32

#define maxBands     64                                  
#define maxCDMA_BandClass     32
#define maxCellBlack        16
#define maxCellInter        16
#define maxCellIntra        16
#define maxCellMeas        32
#define maxCellReport     8
#define maxDRB          11
#define maxEARFCN       65535
#define maxFreq         8
#define maxGERAN_SI       10
#define maxGNFG         16
#define maxMBSFN_Allocations    8
#define maxMCS_1      16
#define maxMeasId     32                                                                                            
#define maxObjectId     32                                                                                            
#define maxPageRec      16                                                                                   
#define maxPNOffset     511
#define maxRAT_Capabilities     8
#define maxReportConfigId      32                                                                                   
#define maxSIB            32
#define maxSIB_1          31                                                                            
#define maxSI_Message       32
#define maxUTRA_FDD_Carrier     16
#define maxUTRA_TDD_Carrier     16

#define maxMultiBands     8

// cs_types.h
#define MAX_INT8                    127
#define MIN_INT8                    -128
#define MAX_UINT8                   255
#define MIN_UINT8                   0
#define MAX_INT16                   32767
#define MIN_INT16                   -32768
#define MAX_UINT16                  65535
#define MIN_UINT16                  0
#define MAX_INT32                   2147483647L
#define MIN_INT32                   -2147483648
#define MAX_UINT32                  4294967295U
#define MIN_UINT32                  0

/////////////////////////////////////////
#define EAS_MAX_MBSFN_NUM    8
#define EDHI_MAX_LTE_CELL_NUM  96
#define EDHI_MAX_LTE_FREQ_NUM  9

#define  EAS_MAX_LTE_CELL_NUM           96
#define  EAS_MAX_LTE_FREQ_NUM           9
#define  EAS_MAX_N1_PUCCH_NUM           4
#define  EAS_MAX_IDL_BLACKCELL_NUM          16
#define  EAS_MAX_DCH_BLACKCELL_NUM          32
#define  EAS_MAX_SI_DATA_LENGTH         512
#define  EAS_MAX_ICS_CELL_NUM           64
#define  EAS_MAX_SWEEP_POINT            45
#define  EAS_MAX_IDL_UTRA_FREQ_NUM       16
#define  EAS_MAX_DCH_UTRA_FREQ_NUM       12
#define  EAS_MAX_UTRA_CELL_NUM           64
#define  EAS_MAX_GGE_CELL_NUM           32
#define  EAS_MAX_PCH_INFO_LENGTH        256
#define  EAS_MAX_SI_NUM                 32
#define  EAS_MAX_BSIC_CELL_NUM          8
#define  EAS_MAX_SETUP_RB_NUM           16
#define  EAS_MAX_MSG3_LENGTH            12
#define  EAS_MAX_CCCH_DATA_LEN          120
#define  EAS_MAX_CGI_DATA_LENTH         512

#define EAS_MAX_CELL_NUM_EACH_FREQ      32

#define EAS_MAX_MBSFN_NUM               8
#define EAS_MAX_SCELL_NUM               7

#define LTE_TO_TDS_START                  1
#define LTE_TO_GGE_START                  2
#define TDS_TO_LTE_FAIL                   3
#define GGE_TO_LTE_FAIL                   4
#define LTE_TO_TDS_HO_START               5
#define LTE_TO_GGE_HO_START               6
#define LTE_TO_WCDMA_START                7
#define WCDMA_TO_LTE_FAIL                 8
#define LTE_TO_WCDMA_HO_START             9

#define PDSCH_CANNOT_DECODE                 1
#define LOSS_COVERAGE_LTE                   2
#define PCH_CANNOT_DECODE_LTE               3
#define BCH_CANNOT_DECODE_LTE               4
#define PLMN_FINE_PWR_FAILURE               5 
#define NO_GAP_FOR_SERVING_CELL             6

#define NORMAL_ABORT                 0
#define MMC_ABORT                    1
#define SI_CHANGE_ABORT              2
#define ACC_INITIAL_ABORT            3
#define CELL_RES_ABORT               4     
#define POWER_OFF_LTE                5 
#define ABORT_IRAT_PLMN_SERACH       6

#define IRAT_RES_ABORT               7

#define GSM_ABORT_LTE_PLMN           8
#define GSM_ABORT_LTE_MEAS           9
#define TDS_ABORT_LTE_MEAS           10

#define EL1_RELEASE_RF_SOURCE        11

#define ERRC_NO_AVAILIABLE_CELL      0
#define ERRC_POWER_OFF               1
#define ERRC_PSM_DEACT               2  
#define ERRC_EDRX_DEACT              3  

#define T310_EXPIRE               0
#define TAT_EXPIRE                1
#define SR_TRANSCOUNTER_TO_MAX    2

#define CELL_SELECT_LTE                     0
#define CELL_RESELECT_LTE                   1
#define ONLY_MEAS_LTE                       2
#define ONLY_RECEIVED_SIB1_LTE              3  

#define FINE_PWR_RESULT                1
#define PWR_RESULT                     2
#define CELL_SEARCH_FOLLOW_FINE_PWR    3  
#define BA_MEAS_FOR_SEL_FREQ           4
#define BA_MEAS_FOR_SEL_CELL           5
#define MAX_FORBIDDEN_TAI_NUM          5


// tgl.hec
#define CK_LEN                          16 
#define IK_LEN                          16
#define MAX_NAS_MSG_LEN                 1600

#define MAX_TMSI_LEN                    4
#define MAX_PTMSI_LEN                   4
#define MAX_LAC_LEN                     2
#define MAX_LAI_LEN                     5 
#define MAX_RAI_LEN                     6 

#define MAX_PLMN_NUM                    16 
#define MAX_POSSIBLE_PLMNS_NUM          16

#define MAX_STMSI_LEN                   5
#define MAX_MME_ID_LEN                  3
#define KEY_ENB_LEN                     32
#define KEY_ASME_LEN                    32

#define MAX_NAS_RADIO_ACCESS_CAP_LEN    53
#define MAX_AS_RADIO_ACCESS_CAP_LEN     53
#define MAX_NETWORK_CAPABILITY_LEN      10
#define MAX_SUPPORTED_CODECS            10   
                                        
#define MAX_FORBIDDEN_LAI_NUM           50
#define MAX_FORBIDDEN_TAI_NUM           5
#define MAX_RAB_ID_NUM                  255
#define MAX_CELL_PLMN_NUM               6    
                                      
#define MAX_UE_ACC_CLASS_LEN            2

#define  MAX_HSDPA_BUFFER_LEN          0x20000  //128*1024
#define  MAX_HSDPA_BUFFER_LEN_1        0x1FFFF  //128*1024 - 1


#define MAX_RB_NUM                      32   //160 for mbms
                                        
#define MAX_PDCP_DECOMP_HEADER          128  //120 reserved for pdcp head decompress + ppp
                                        
#define MAX_NPDU_NUM                    16 
#define MEM_VALID                       0x01
#define MEM_INVALID                     0x00
#define MEM_OK                          0x00
#define MEM_ERROR                       14


#define TC_CLOSE_UE_TEST_LOOP                              0x40
#define TC_CLOSE_UE_TEST_LOOP_COMPLETE                     0x41
#define TC_OPEN_UE_TEST_LOOP                               0x42
#define TC_OPEN_UE_TEST_LOOP_COMPLETE                      0x43
#define TC_ACTIVATE_RB_TEST_MODE                           0X44
#define TC_ACTIVATE_RB_TEST_MODE_COMPLETE                  0X45
#define TC_DEACTIVATE_RB_TEST_MODE                         0x46 
#define TC_DEACTIVATE_RB_TEST_MODE_COMPLETE                0x47
#define TC_TEST_MODE3_RLC_COUNTER_REQ                      0x49
#define TC_TEST_MODE3_RLC_COUNTER_RESPONCE                 0x4a
 
#define TC_NO_ERROR                                        0x00
#define TC_NO_RADIO_BEAR                                   0x01
 
//define for double card
#define PS_ONE_CARD                        0x01
#define PS_TWO_CARD                        0x02


//20100111 FOR LTE  AS
#define MAX_BA_LIST_NUM_LTE              64  //CR_D_PS_LTE_EIDL_V1.3.14_0001
#define MAX_POSSIBLE_CELL_NUM            10

//for flowControl,20110314 
#define MAX_UL_IP_DATA_NUM              737  //(1M+128K)/1600  

#define CLASSMARK_NO_MODE         0x00
#define CLASSMARK_TDL_MODE        0x01
#define CLASSMARK_TDS_MODE        0x02
#define CLASSMARK_GGE_MODE        0x04
#define CLASSMARK_LTEFDD_MODE     0x08
#define CLASSMARK_WCDMA_MODE      0x10


#define MAX_RB_NUM_LTE            35  //SRB1 Id(0) + DRB Id(1~32)  + SRB1,SRB2 Id(33,34)

#define MAX_FREQ_NUM              9


// NVM-iot.hec
#define MAX_PLMN_LEN                  3
#define MAX_IMSI_LEN                  9

#define MAX_EQU_PLMNS_NUM             20

//optimize  process for sim and nv
#define MAX_PREV_USED_LTE_FREQ_LEN    20

// for nb-iot
#define MAX_BAINFO_LEN                300
#define MAX_POWER_ON_FREQ_LEN         10

#define MAX_APN_LEN                    100
#define MAX_PCO_LEN                    251
#define MAX_ADDRESSINFOR_LEN           20
#define MAX_PACKETFILTERLIST_LEN       254

#define MAX_PLMN_NOT_ALLOWED_GPRS_LEN  31 
#define MAX_LAI_NOT_ALLOWED_LEN        26
#define MAX_ROAMING_NOT_ALLOWED_LEN    26

 //moved from tgl_ps.hec
#define MAX_PLMN_NUM_MULTIMODE          16
#define MAX_TAILIST_LEN                 16
#define MAX_SEC_KEY_LEN                 16
#define MAX_TAI_LEN                     5

#define MAX_NSAPI_NUM                   16 
#define MAX_EBI_NUM                     16


#define MAX_PLMN_LEN                  3
#define SIM_LEN_CHV                   8
#define SIM_MAX_SIZE_AUTH_REQ_DATA    255
#define SIM_MAX_SIZE_AUTH_RSP_DATA    256
#define SIM_MAX_LEN_SEARCH_PATTERN    16
#define SIM_MAX_LEN_STATUS            100
#define MAX_SIZE_SEEK_RECORD_NUM      254
#define SIM_MAX_FILES_IN_LIST         50
#define SIM_MAX_SIZE_RECORD_DATA      255
#define MAX_SIZE_VALUE_ADD_RECORD       3 
#define MAX_SIZE_INCREASED_RECORD       3
#define SIM_MAX_SIZE_BIN_DATA_READ    256
#define SIM_MAX_SIZE_BIN_DATA_UPDATE  255
#define MAX_SIZE_ENV_PARAM_STK        255
#define MAX_SIZE_ACK_DATA_STK         256
#define MAX_SIZE_TERM_PROF_STK        29
#define MAX_SIZE_TERM_RESP_STK        256
#define MAX_SIZE_POACT_CMD_STK        256
#define SAP_MAX_AID_LEN               16
#define SIM_MAX_SIZE_SEND_DATA_ATCMD  255
#define SIM_MAX_PATH_DATA_LEN         16
#define SIM_MAX_SIZE_RECEIVE_DATA_ATCMD   256
#define SIM_MAX_SIZE_AUTH_REQ_DATA    255
#define SIM_MAX_SIZE_AUTH_RSP_DATA    256
#define SAP_MAX_DATA_ORIENTED_TAG_LEN  3
#define SIM_MAX_SIZE_DATA_RETRIEVE    256
#define SIM_MAX_SIZE_DATA_SET         255
#define SIM_MAX_SIZE_SEND_DATA_ATCMD  255
#define SIM_MAX_SIZE_RECEIVE_DATA_ATCMD  256

#define MAX_APN_LEN                   100
#define MAX_PCO_LEN                   251






// 子结构定义
<Sub T_MsgHeader>
{
    len                  u16         u16              len
    txName               u8          u8               txName
    txIns                u8          u8               txIns
    rxName               u8          u8               rxName
    rxIns                u8          u8               rxIns
    opType               u16         u16              opType
    simFlag              u8          u8               simFlag       |select;1:for_SIM1;2:for_SIM2;|
    reserved[3]          array       u8               reserved[3]
</Sub T_MsgHeader>


<sub T_EMMESM_ESTABLISH_REQ>
    pti                            u8     u8        pti          |input;|
    ebi                            u8     u8        ebi          |input;|
    length                         u16    u16       length       |input;|
    esmMessage[MAX_NAS_MSG_LEN]    array    u8      esmMessage
</sub T_EMMESM_ESTABLISH_REQ>


<sub T_EMMESM_ESTABLISH_CNF>
    pti                            u8     u8        pti          |input;|
    ebi                            u8     u8        ebi          |input;|
</sub T_EMMESM_ESTABLISH_CNF>



<sub T_EMMESM_RELEASE_IND>
  pti        u8     u8        pti      |input;|
  ebi        u8     u8        ebi      |input;|
  cause      u8     u8       cause     |input;|
</sub T_EMMESM_RELEASE_IND>



<sub T_EMMESM_EPS_STATUS_IND>
    pti                            u8     u8        pti          |input;|
    ebi                            u8     u8        ebi          |input;|
</sub T_EMMESM_EPS_STATUS_IND>


<sub T_EMMESM_DATA_REQ>
   length                      u16      u16       length               |input;|
   dummy                       u16      u16       dummy                |input;|
   message[MAX_NAS_MSG_LEN]    array    u8        message
</sub T_EMMESM_DATA_REQ>


<sub T_EMMESM_DATA_IND>

   length                      u16    u16       length               |input;|
   protFlag                    u8     u8        protFlag             |input;|
   dummy                       u8     u8        dummy                |input;|
   message[MAX_NAS_MSG_LEN]    array    u8      message

</sub T_EMMESM_DATA_IND>


<sub T_EMMESM_EPS_DELETE_REQ>

  pti        u8     u8        pti      |input;|
  ebi        u8     u8        ebi      |input;|
  cause      u8     u8       cause     |input;|

</sub T_EMMESM_EPS_DELETE_REQ>


<sub T_EMMESM_LOOP_TEST_REQ>
  ipType        u8     u8        ipType      |select;0x00:vaild_ip0x01:vaild_ip|
</sub T_EMMESM_LOOP_TEST_REQ>


<sub T_EMMESM_LOOP_TEST_IND>
  command      u8     u8        command      |input;|
</sub T_EMMESM_LOOP_TEST_IND>


                                                     
<sub T_EMMESM_DATA_CNF>

  esmMsgType   u8     u8      esmMsgType     |input;|
  result       u8     u8      result         |input;|
  ebi          u8     u8      ebi            |input;|
  pti          u8     u8      pti            |input;|

</sub T_EMMESM_DATA_CNF>



<sub T_EMMESM_PDN_CON_IND>
  withoutPdnInd   u8     u8      withoutPdnInd     |input;|
</sub T_EMMESM_PDN_CON_IND>


<sub T_EMMESM_STATUS_REQ>
  status   u8     u8      status     |input;|
</sub T_EMMESM_STATUS_REQ>


<sub T_EMMSMS_ERROR_IND>
  mtOrMo   u8     u8      mtOrMo     |input;|
  cause    u8     u8      cause      |input;|
</sub T_EMMSMS_ERROR_IND>


<sub T_SMS_UNITDATA_REQ>
  length   u16    u16      length     |input;|
  cause    u8     u8       cause      |input;|
  message[MAX_NAS_MSG_LEN]   array  u8    message
</sub T_SMS_UNITDATA_REQ>




<sub T_SMS_UNITDATA_IND>
  length                      u16    u16      length     |input;|
  fillByte                    u8     u8       fillByte   |input;|
  message[MAX_NAS_MSG_LEN]   array   u8       message
</sub T_SMS_UNITDATA_IND>


<sub T_EMMSMS_REL_REQ>
  mtOrMo    u8     u8      mtOrMo         |input;|
</sub T_EMMSMS_REL_REQ>



<sub T_EMMSMS_REG_STATE_CNF>
  attachTye     u8     u8      attachTye          |input;|
  csRegState    u8     u8      csRegState         |input;|
  psRegState    u8     u8      psRegState         |input;|
</sub T_EMMSMS_REG_STATE_CNF>



<sub T_EMM_LOOP_TEST_REQ>
  command     u8     u8      command         |input;|
  cause       u8     u8      cause           |input;|
</sub T_EMM_LOOP_TEST_REQ>


<sub T_EMM_STATUS_REQ>
  status     u8     u8      status         |input;|
</sub T_EMM_STATUS_REQ>


<sub T_EMM_LOOP_TEST_IND>
  command                         u8        u8      command         |input;|
  nasMessage[MAX_NAS_MSG_LEN]     array     u8      nasMessage      |input;|
</sub T_EMM_LOOP_TEST_IND>


<sub T_EMM_COMBINED_IND>
  status                         u8        u8      status         |input;|
</sub T_EMM_COMBINED_IND>



<sub T_EMM_AUTH_IND>
  status                         u8        u8      status         |input;|
</sub T_EMM_AUTH_IND>



<sub T_EMM_STATUS_IND>
  status                         u8        u8      status         |input;|
</sub T_EMM_STATUS_IND>



<sub T_EMM_BAR_ALLEVIATE_IND>
  barAlleviateType             u8        u8      barAlleviateType         |input;|
</sub T_EMM_BAR_ALLEVIATE_IND>



<sub T_EMMRABM_REESTABLISH_REQ>
  dataStatus             u16        u16      dataStatus         |input;|
</sub T_EMMRABM_REESTABLISH_REQ>


<sub T_EMMRABM_REESTABLISH_ERR>
  cause             u8        u8      cause         |input;|
</sub T_EMMRABM_REESTABLISH_ERR>



<sub T_EMMRABM_STATUS_IND>
  statusInd             u8        u8      statusInd         |input;|
</sub T_EMMRABM_STATUS_IND>



<sub T_RABMESM_ACTIVATE_IND>
  ebi             u8        u8      ebi         |input;|
  cpOnlyInd       u8        u8      cpOnlyInd   |input;|
</sub T_RABMESM_ACTIVATE_IND>


<sub T_RABMESM_ACTIVATE_RSP>
  ebi             u8        u8      ebi         |input;|
  cause           u8        u8      cause       |input;|
</sub T_RABMESM_ACTIVATE_RSP>



<sub T_RABMESM_DEACTIVATE_IND>
  ebi             u8        u8      ebi         |input;|
</sub T_RABMESM_DEACTIVATE_IND>



<sub T_RABMESM_DEACTIVATE_REQ>
  ebi             u8        u8      ebi         |input;|
</sub T_RABMESM_DEACTIVATE_REQ>



<sub T_RABMESM_DATA_REQ>
  ebi                    u8        u8      ebi                  |input;|
  RelAssistInd           u8        u8      RelAssistInd         |input;|
  length                 u16       u16     length               |input;|
  data[MAX_NAS_MSG_LEN]  array     u8      data                 |multiedit;|
</sub T_RABMESM_DATA_REQ>


<sub T_RABMESM_DATA_IND>
  ebi                    u8        u8      ebi                  |input;|
  dummy                  u8        u8      dummy                |input;|
  length                 u16       u16     length               |input;|
  data[MAX_NAS_MSG_LEN]  array     u8      data                 |multiedit;|
</sub T_RABMESM_DATA_IND>



<sub T_RABMESM_DATA_CNF>
  ebi                    u8        u8      ebi                   |input;|
  result                 u8        u8      result                |input;|
</sub T_RABMESM_DATA_CNF>



<sub T_RABMESM_DATA_CNF>
  ebi                    u8        u8               ebi                  |input;|
  dataPointer            ptr       T_ComPduLte      dataPointer
</sub T_RABMESM_DATA_CNF>



<sub T_RABMESM_DATA_CNF>
  ebi                    u8        u8               ebi                  |input;|
  pdata                  ptr       T_ComSduLte      dataPointer 
</sub T_RABMESM_DATA_CNF>
 

<sub T_RABMAS_ESTABLISH_IND>
  rabNum                 u8        u8               rabNum              |input;|
  rabList[maxRABsetup]   array     T_RabAndRbInfo   rabList             |multiedit;|
</sub T_RABMAS_ESTABLISH_IND>


<sub T_RabAndRbInfo>
    rabId    u8    u8     rabId    |input;|
    rbId     u8    u8     rbId     |input;|   
</sub T_RabAndRbInfo>


<sub T_RABMAS_ESTABLISH_RSP>
  rabNum                 u8        u8               rabNum              |input;|
  rabList[maxRABsetup]   array     T_RabAndRbInfo   rabList
</sub T_RABMAS_ESTABLISH_RSP>




<sub T_RABMAS_RELEASE_IND>
  rabNum                 u8        u8               rabNum              |input;|
  epsRelFlag             u8        u8               epsRelFlag          |input;|
  rabList[maxRABsetup]   array     T_RabAndRbInfo   rabList
  
</sub T_RABMAS_RELEASE_IND>



<sub T_RABMAS_STATUS_IND>
  cause                 u8        u8               cause              |input;|  
</sub T_RABMAS_STATUS_IND>



<sub T_EMMAS_SYNC_IND>
  syncCause          u8        u8          syncCause             |input;|  
</sub T_EMMAS_SYNC_IND>



<sub T_EMMAS_DATA_IND>
   length                        u16        u16          length             |input;|  
   dummy                         u16        u16          dummy              |input;|  
   nasMessage[MAX_NAS_MSG_LEN]   array      u8           nasMessage         |multiedit;||
</sub T_EMMAS_DATA_IND>


<sub T_EMMAS_DATA_CNF>
  stateFlag          u8        u8          stateFlag          |select;0x00:sucess0x01:failure|
  cnfNum             u8        u8          cnfNum             |input;|  
  nasMsgSn           u8        u8          nasMsgSn           |input;|   
</sub T_EMMAS_DATA_CNF>



<sub T_EMMAS_PAGE_IND>
  ueIdType          u8        u8          ueIdType           |input;|
  pagingCause       u8        u8          pagingCause        |input;|  
</sub T_EMMAS_PAGE_IND>



<sub T_EMMAS_ESTABLISH_CNF>
  resumeFallbackedFlag          u8        u8          resumeFallbackedFlag           |input;|
</sub T_EMMAS_ESTABLISH_CNF>



<sub T_EMMAS_ESTABLISH_REQ>
   establishCause          u8        u8          establishCause           |input;|
   callType                u8        u8          callType                 |input;|
   length                  u16       u16         length                   |input;|
   registFlag              u8        u8          registFlag               |input;|
   nasMsgSn                u8        u8          nasMsgSn                 |input;|
   
   // #ifdef LTE_CATM_SUPPORT
   eabFlag                      u8        u8          eabFlag                 |input;|
   campInd                      u8        u8          campInd                 |input;|
   piggybackeOnResumeFlag       u8        u8          piggybackeOnResumeFlag  |input;|     
   nasMessage[MAX_NAS_MSG_LEN]  array     u8          nasMessage
</sub T_EMMAS_ESTABLISH_REQ>


<sub T_EMMAS_RELEASE_REQ>
  cause          u8        u8          cause           |input;|
</sub T_EMMAS_RELEASE_REQ>


<sub T_EMMAS_DATA_REQ>
   length                       u16        u16          length          |input;|  
   dummy                        u8         u8           dummy           |input;|
   nasMsgSn                     u8         u8           nasMsgSn        |input;|
   nasMessage[MAX_NAS_MSG_LEN]  array      u8           nasMessage
</sub T_EMMAS_DATA_REQ>



<sub T_EMMAS_CEMODE_IND>
  ceMode          u8        u8          ceMode           |input;|
</sub T_EMMAS_CEMODE_IND>


<sub T_CMAC_RANDOM_ACC_REQ>
   pCmax                     s8        s8          pCmax                    |input;|
   serverCellRsrp            u8        u8          serverCellRsrp           |input;|
   puschMaxNumCEModeA        u8        u8          puschMaxNumCEModeA       |input;|
   puschMaxNumCEModeB        u8        u8          puschMaxNumCEModeB       |input;|
   msg3Len                   u8        u8          msg3Len                  |input;|
   deltaPreambleMsg3         u8        u8          deltaPreambleMsg3        |input;|
   resumeFlag                u8        u8          resumeFlag               |input;|
   reserved                  u8        u8          reserved                 |input;|
   msg3Data[12]              array     u8          msg3Data                 |multiedit;|                           
   servCellInfo              struct    T_CellServLte           servCellInfo
   rachCommInfo              struct    T_Rach_CommInfo         rachCommInfo
   prachInfo                 struct    T_Prach_Config          rachCommInfo
   prachInfoR13              struct    T_Prach_Config_R13      rachCommInfo
   validSfn                  struct    T_BLValidSubfBitMap     rachCommInfo
   macMainCfg                struct    T_MacMainInfo           macMainCfg
</sub T_CMAC_RANDOM_ACC_REQ>

<sub T_CellServLte>
     frequency	          u16         u16      frequency	         |input;|
     phyCellId	          u16         u16      phyCellId	         |input;|
     cellType	            u16         u16      cellType	           |input;|
     dlBandWidth          u16         u16      dlBandWidth         |input;|
     ulBandWidth	        u16         u16      ulBandWidth	       |input;|
     dlCpType	            u16         u16      dlCpType	           |input;|
     ulCpType             u16         u16      ulCpType            |input;|
     sfAssigment          u16         u16      sfAssigment         |input;|
     specialSfPatern	    u16         u16      specialSfPatern     |input;|
     antennaPortsCount	  u16         u16      antennaPortsCount   |input;|
</sub T_CellServLte> 


<sub T_RachCe_Info>
    firstPreamble                   u8      u8      firstPreamble                   |input;|
    lastPreamble	                  u8      u8      lastPreamble	                  |input;|
    rarHoppingConfig                u8      u8      rarHoppingConfig                |input;|
    raResponseWindowSize	          u8      u8      raResponseWindowSize	          |input;|
    macContentionResolutionTimer    u8      u8      macContentionResolutionTimer    |input;|
    reserved[3]                     array   u8      reserved[3]                     |multiedit;|
</sub T_RachCe_Info>

<sub T_PreamblesGroupAConfig>
    validFlag                      u16     u16     validFlag            |input;|
    sizeOfRA_PreamblesGroupA       u16     u16     sizeOfRA_PreamblesGroupA              |input;|
    messageSizeGroupA              u16     u16     messageSizeGroupA                     |input;|   
    messagePowerOffsetGroupB       u16     u16     messagePowerOffsetGroupB                     |input;|
</sub T_PreamblesGroupAConfig>

<sub T_PreambleInfo>
    numberOfRA_Preambles            u16     u16     numberOfRA_Preambles            |input;|
    reserved                        u16     u16     reserved                        |input;|
    preamblesGroupAConfig           struct  T_PreamblesGroupAConfig   
</sub T_PreambleInfo>

<sub T_Rach_CommInfo>
      powerRampingStep	         u8          u8               powerRampingStep	          |input;|
      preambleInitTargetPower    u8          u8               preambleInitTargetPower     |input;|
      preambleTransMax	         u8          u8               preambleTransMax	          |input;|
      rachCeNum	                 u8          u8               rachCeNum	                  |input;|
      rachCeLevel[4]             array       T_RachCe_Info    rachCeLevel[4]              |multiedit;|
      preambleInfo               struct      T_PreambleInfo     
</sub T_Rach_CommInfo>

<sub T_PRACH_ParametersListCE>
     prachConfigIndex             	     u16         u16      prachConfigIndex             	            |input;|    
     prachFreqOffset	                   u16         u16      prachFreqOffset	                          |input;|
     prachStartingSubframe	             u16         u16      prachStartingSubframe	                    |input;|  
     maxNumPreambleAttemptCE	           u16         u16      maxNumPreambleAttemptCE	                  |input;|
     numRepetitionPerPreambleAttemp	     u16         u16      numRepetitionPerPreambleAttemp            |input;|
     mpdcchNbsNum	                       u16         u16      mpdcchNbsNum	                            |input;| 
     mpdcchNbsToMonitor[2]               array       u16      mpdcchNbsToMonitor[2]                     |multiedit;|
     mpdcchNumRepetitionRA               u16         u16      mpdcchNumRepetitionRA                     |input;|  
     prachHopConfig                      u16         u16      prachHopConfig                            |input;|
</sub T_PRACH_ParametersListCE>

<sub T_Prach_ConfigInfo>
   prachConfigIndex	                u16        u16      prachConfigIndex	             |input;|
   highSpeedFlag	                  u16        u16      highSpeedFlag	                 |input;|   
   zeroCorrelationZoneConfig        u16        u16      zeroCorrelationZoneConfig      |input;|
   prachFreqOffset	                u16        u16      prachFreqOffset	               |input;|
</sub T_Prach_ConfigInfo>

<sub T_Prach_Config_R13>
    rsrpThresholdNum	                   u16           u16                           rsrpThresholdNum	                   |input;|
    rsrpThresholdsPrachInfoList[3]	     array         u16                           rsrpThresholdsPrachInfoList[3]      |multiedit;|
    mpdcchStartSFCssRAType	             u16           u16                           mpdcchStartSFCssRAType	             |input;|
    mpdcchStartSFCssRA	                 u16           u16                           mpdcchStartSFCssRA	                 |input;|
    prachHoppingOffset	                 u16           u16                           prachHoppingOffset	                 |input;|
    prachParameterNum	                   u16           u16                           prachParameterNum	                 |input;|
    prachParametersListCE[4]             array         T_PRACH_ParametersListCE      prachParametersListCE[4]            |multiedit;|
    initialCeLevel	                     u16            u16                          initialCeLevel	                     |input;|
    reserved	                           u16            u16                          reserved	                           |input;|
</sub T_Prach_Config_R13>


<sub T_BLValidSubfBitMap>
    validMapBitNum                    u16     u16   validMapBitNum                   |input;|
    fddDownOrTddSubframeBitmap[3]     array   u16   fddDownOrTddSubframeBitmap[3]    |multiedit;|
    fddUplinkSubframeBitmapLC         u16     u16   fddUplinkSubframeBitmapLC        |input;|
    Reserved                          u16     u16   Reserved                         |input;|
</sub T_BLValidSubfBitMap>


<sub T_MbsfnConfigInfo>
   	 radioframeAllocatPeriod     u16   u16       radioframeAllocatPeriod      |input;|
   	 radioframeAllocatOffset     u16   u16       radioframeAllocatOffset      |input;|
   	 subframeAllocationInfo      u32   u32       subframeAllocationInfo       |input;|
</sub T_MbsfnConfigInfo>


<sub T_MacMainInfo>
	maxHarqTx                u8      u8         maxHarqTx                |input;|
	periodBsrTimer           u8      u8         periodBsrTimer           |input;|
	retxBsrTimer             u8      u8         retxBsrTimer             |input;|
  ttiBundlingFlag          u8      u8         ttiBundlingFlag          |select;0:not_set1:set|
	timeAlignTimer           u8      u8         timeAlignTimer            |input;| 
	srProhibitTimer          u8	     u8	        srProhibitTimer          |input;|
	logichSrProhibitTimer    u8      u8         logichSrProhibitTimer    |input;|
	reserved                 u8      u8         reserved                 |input;|
	drxConfig                struct      T_DrxConfigInfo
	phrCofig                 struct      T_PhrConfig
</sub T_MacMainInfo>


<sub T_DrxConfigInfo>
     validFlag              u16      u16         validFlag                   |input;|
     onDurationTimer        u16      u16         onDurationTimer             |input;|
   	 inactiveTimer          u16	     u16	       inactiveTimer               |input;|
   	 dlReTranTimer          u16	     u16	       dlReTranTimer               |input;|
   	 ulRetranTimer          u16	     u16	       ulRetranTimer               |input;|
   	 longDrxCycle           u16	     u16	       longDrxCycle                |input;|
   	 longDrxStartOffset     u16	     u16	       longDrxStartOffset          |input;|
   	 shortDrxCycle          u16	     u16	       shortDrxCycle               |input;|
   	 shortCycleTimer        u16	     u16	       shortCycleTimer             |input;|
   	 reserved               u16	     u16	       reserved                    |input;|
</sub T_DrxConfigInfo>

<sub T_PhrConfig>
    validFlag           u8          u8          validFlag               |input;|
    periodPhrTimer      u8          u8          periodPhrTimer          |input;|
    prohibitPhrTimer    u8          u8          prohibitPhrTimer        |input;|
    dlPathLossChang     u8          u8          dlPathLossChang         |input;|
</sub T_PhrConfig>


<sub T_CMAC_ACC_STATUS_IND>
     resultFlag     u16        u16     resultFlag     |select;0x00:ACC_failed0x01:ACC_success|
     dataLenth      u16        u16     dataLenth      |input;|
     cRnti          u32        u32     cRnti          |input;|
     data[128]      array      u8      data[128]      |multiedit;|
</sub T_CMAC_ACC_STATUS_IND>


<sub T_CMAC_MAC_CONFIG_REQ>
		 rbNum                 u8 	      u8 	             rbNum               |input;| 
     ceMode                u8         u8               ceMode              |input;| 
     pucchRepformat1       u8         u8               pucchRepformat1     |input;| 
   
     reserved              u8         u8               reserved            |input;|

 		 servCellInfo          struct     T_CellServLte   
     rbInfoSetupList[16]   array      T_RbInforSetup
 		 mainInfo              struct     T_MacMainInfo      		   
     srConfig	             struct     T_SrConfigInfo
     spsConfig             struct     T_SpsConfigInfo
</sub T_CMAC_MAC_CONFIG_REQ>



<sub T_RbInforSetup>
     rbIdentity                 u8     u8      rbIdentity                  |input;| 
     serviceType                u8     u8      serviceType                 |select;0x00:signal0x01:data|
     epsBearerId                u8     u8      epsBearerId                 |input;|
     ulRlcMode                  u8     u8      ulRlcMode                   |input;|
     logicalChID                u8     u8      logicalChID                 |input;|
     logicalPriority            u8     u8      logicalPriority             |input;|
     pbr                        u8     u8      pbr                         |input;|
     bsd                        u8     u8      bsd                         |input;|
     logicalChGroup             u8     u8      logicalChGroup              |input;|
     logicalChannelSrMask       u8     u8      logicalChannelSrMask        |input;|
     logicalChannelSrProhibit   u8     u8      logicalChannelSrProhibit    |input;|
     reserved                   u8     u8      reserved                    |input;| 
</sub T_RbInforSetup>



<sub T_SrConfigInfo>
     srPucchResourIndex       u16     u16     srPucchResourIndex        |input;|
     srConfigIndex            u8      u8      srConfigIndex             |input;|
     srTranMax                u8      u8      srTranMax                 |input;|
</sub T_SrConfigInfo>


<sub T_p0Persistent>
     p0PersisTentFlag       u16      u16      p0PersisTentFlag        |input;|
     p0UePusch              s16      s16      p0UePusch               |input;|
     p0NomiPusch            s16      s16      p0NomiPusch             |input;|
     reserved               u16      u16      reserved                |input;|
</sub T_p0Persistent>

<sub T_SpsConfigUl>
    spsUlFlag                  u16        u16       spsUlFlag                   |input;|
    spsIntervalUl              u16        u16       spsIntervalUl               |input;|
    implicitReleaseAfter       u16        u16       implicitReleaseAfter        |input;|
    reserved                   u16        u16       reserved                    |input;|
    p0Persistent               struct     T_p0Persistent         p0Persistent
    twoIntervalFlag            u16        u16       twoIntervalFlag             |input;|
    numUlProcess               u16        u16       numUlProcess                |input;|
</sub T_SpsConfigUl>
    
<sub T_SpsConfigDl>
    spsDlFlag          u16        u16       spsDlFlag           |input;|
    spsIntervalDl      u16        u16       spsIntervalDl       |input;|
    numDlProcess       u16        u16       numDlProcess        |input;|
    nlPucchNum         u16        u16       nlPucchNum          |input;|
    nlPucchNumP1       u16        u16       nlPucchNumP1        |input;|
    reserved           u16        u16       reserved            |input;|
    n1Pucch[4]         array      u16       n1Pucch[4]          |multiedit;|
    nlPucchP1[4]       array      u16       nlPucchP1[4]        |multiedit;|
</sub T_SpsConfigDl>

<sub T_SpsConfigInfo>
    spsRnti                  u32                     u32            spsRnti      |input;|
    spsConfigDl              struct                  T_SpsConfigDl               spsConfigDl
    spsConfigUl              struct                  T_SpsConfigUl               spsConfigUl
</sub T_SpsConfigInfo>

<sub T_CMAC_HANDOVER_ACC_REQ>
     pCmax                       s8                      s8                        pCmax                     |input;|
     raPreambleIndex	           u8                      u8                        raPreambleIndex	         |input;|
     raPrachMaskIndex            u8                      u8                        raPrachMaskIndex          |input;|
     targetCellRsrp	             u8                      u8                        targetCellRsrp	           |input;|
     puschMaxNumCEModeA          u8                      u8                        puschMaxNumCEModeA        |input;|
     puschMaxNumCEModeB          u8                      u8                        puschMaxNumCEModeB        |input;|
     reserved                    u8                      u8                        reserved                  |input;|
     deltaPreambleMsg3           s8                      s8                        deltaPreambleMsg3         |input;|
     cRnti                       u32                     u32                       cRnti                     |input;|
     targetCellInfo              struct                  T_CellServLte             targetCellInfo
     rachCommInfo	               struct                  T_Rach_CommInfo           rachCommInfo
     prachInfo	                 struct                  T_Prach_Config            prachInfo
     prachInfoR13                struct                  T_Prach_Config_R13        prachInfoR13
     validSfn                    struct                  T_BLValidSubfBitMap       validSfn
</sub T_CMAC_HANDOVER_ACC_REQ>



<sub T_MAC_DATA_REQ_LTE>
     rbIdentity          u8          u8              rbIdentity        |input;|
     reserved3[3]        array       u8              reserved3         |multiedit;|
     pdu                 ptr         T_ERLC_UL_PDU   pdu
</sub T_MAC_DATA_REQ_LTE>



<sub T_ERLC_UL_PDU>
    pduLen            u16      u16        pduLen         |input;|
    sduLen            u16      u16        sduLen         |input;|    
    data[125]         array    u8         data[125]      |multiedit;|
    
    //T_L1DMA_BLOCK_INFO*       head    
    //T_L1DMA_BLOCK_INFO*       tail    
    
    next             ptr        T_ERLC_UL_PDU       next  
</sub T_ERLC_UL_PDU>


<sub T_MAC_STATUS_IND_LTE>
    rbIdentity       u8      u8         rbIdentity       |input;|
    flagLastPdu      u8      u8         flagLastPdu      |input;|
    pduSize          u16     u16        pduSize          |input;|
    
    head_buff        ptr     T_L1DMA_BUFF_INFO     head_buff  
</sub T_MAC_STATUS_IND_LTE>


// #if  (defined  EAS_UNIT_TEST) ||  (defined  TEST_INTEGRATE) || (defined   TEST_EMAC_ARM_TTCN)  
// #ifdef  SUPPORT_LTE_CAT4
<sub T_L1DMA_BUFF_INFO>
    used_len         u16      u16         used_len          |input;|
    total_len        u16      u16         total_len         |input;|
    
    buff[300]        array    u8          buff              |multiedit;|
    buff[512]        array    u8          buff              |multiedit;|
    
</sub T_L1DMA_BUFF_INFO>



<sub T_MAC_DATA_IND_LTE>
     rbIdentity          u8          u8                 rbIdentity        |input;|
     reserved3[3]        array       u8                 reserved3         |multiedit;|
     pPduPointer         ptr         T_ERLC_DlPduInfo   pdu
</sub T_MAC_DATA_IND_LTE>


<sub T_ERLC_DlPduInfo>
     rbIdentity          u8          u8                 rbIdentity        |input;|
     reserved3[3]        array       u8                 reserved3         |multiedit;|
     pduLen              u16         u16                pduLen            |input;|
     pduOffset           u16         u16                pduOffset         |input;|
     
     pPdschPointer       ptr         u8                 pPdschPointer 
     pPdschMapPointer    ptr         T_PDSCH_MEM        pPdschPointer
     
     pDlPduNext          ptr         T_ERLC_DlPduInfo_Tag   pDlPduNext 
</sub T_ERLC_DlPduInfo>


<sub T_ERLC_DlPduInfo_Tag>
     rbIdentity          u8          u8                 rbIdentity        |input;|
     reserved3[3]        array       u8                 reserved3         |multiedit;|
     pduLen              u16         u16                pduLen            |input;|
     pduOffset           u16         u16                pduOffset         |input;|
     
     pPdschPointer       ptr         u8                 pPdschPointer 
     pPdschMapPointer    ptr         T_PDSCH_MEM        pPdschPointer     
</sub T_ERLC_DlPduInfo_Tag>



<sub T_PDSCH_MEM>
     remain_len         u16       u16       remain_len            |input;|
     pdsch_data         ptr       u8        pdsch_data        
</sub T_PDSCH_MEM>



<sub T_MAC_REGULAR_BSR_REQ_LTE>
     lcid          u8          u8        lcid        |input;|
</sub T_MAC_REGULAR_BSR_REQ_LTE>


<sub T_ML1C_PRACH_SEND_REQ>
     cellDesc            struct              T_CellServLte         cellDesc      
     prachType           u16                  u16                  prachType          |input;|
     preamblIndex        u16                  u16                  preamblIndex       |input;|
     prachMaskIndex      u16                  u16                  prachMaskIndex     |input;|
     rarHopping          u16                  u16                  rarHopping         |input;|
     preambRepNum        u16                  u16                  preambRepNum       |input;|
     rarWinLen           u16                  u16                  rarWinLen          |input;|
     targetTransPower    s16                  s16                  targetTransPower   |input;|
     ceLevel             u16                  u16                  ceLevel            |input;|         
</sub T_ML1C_PRACH_SEND_REQ>


<sub T_ML1C_RAR_RESULT_IND>
    rarSfn             u16     u16          rarSfn               |input;|
    successFlag        u16     u16          successFlag          |input;|
    rarData[128]       array   u8           rarData[128]         |multiedit;|
</sub T_ML1C_RAR_RESULT_IND>

<sub T_ML1C_SEND_MSG3_REQ>
    msg3Sfn         u16          u16                        msg3Sfn          |input;|
    transType       u16          u16                        transType        |input;|
    ceMode          u16          u16                        ceMode           |input;|
    mpdcchNbIndex   u16          u16                        mpdcchNbIndex    |input;|
    grantInfo       struct       T_ResourceInfo             grantInfo 
    tempCrnti       u32          u32                        tempCrnti        |input;|
    crnti           u32          u32                        crnti            |input;|
    msg3            ptr          u8                         msg3      
</sub T_ML1C_SEND_MSG3_REQ>


<sub T_RarResourceInfo>
    ceMode              u16     u16       ceMode                 |input;|
    msg3NbIndex         u16     u16       msg3NbIndex            |input;|
    startRB             u16     u16       startRB                |input;|
    lcrb                u16     u16       lcrb                   |input;|
    msg3RepNum          u16     u16       msg3RepNum             |input;|
    modulationOrder     u16     u16       modulationOrder        |input;|
    tbSize              u16     u16       tbSize                 |input;|
    tpcCommond          u16     u16       tpcCommond             |input;|
    csiFlag             u16     u16       csiFlag                |input;|
    uldelay             u16     u16       uldelay                |input;|
    mpdcchNbIndex       u16     u16       mpdcchNbIndex          |input;|
    reserved            u16     u16       reserved               |input;|
</sub T_RarResourceInfo>

<sub T_ResourceInfo>
       dciType           u16       u16        dciType            |input;|
       hoppingFlag       u16       u16        hoppingFlag        |input;|
       startRB           u16       u16        startRB            |input;|
       lcrb              u16       u16        lcrb               |input;|
       nb_index          u16       u16        nb_index           |input;|
       tranRepNum        u16       u16        tranRepNum         |input;|
       harqId            u16       u16        harqId             |input;|
       ndiValue          u16       u16        ndiValue           |input;|
       redundancyVers    u16       u16        redundancyVers     |input;|
       tpcCommond        u16       u16        tpcCommond         |input;|
       ulIndex           u16       u16        ulIndex            |input;|
       dai               u16       u16        dai                |input;|
       csiFlag           u16       u16        csiFlag            |input;|
       srsFlag           u16       u16        srsFlag            |input;|
       dciRepNum         u16       u16        dciRepNum          |input;|
       spsFlag           u16       u16        spsFlag            |input;|
       modulationOrder   u16       u16        modulationOrder    |input;|
       tbsize            u16       u16        tbsize             |input;|
       dmrsValue         u16       u16        dmrsValue          |input;|
       ulDelay           u16       u16        ulDelay            |input;|
</sub T_ResourceInfo>                                                                                                  

<sub T_ML1C_PDCCH_ORDER_IND>
       raPreamblIndex   u16      u16       raPreamblIndex        |input;|
       prachMaskIndex   u16      u16       prachMaskIndex        |input;|
       startCeLevel     u16      u16       startCeLevel          |input;|
       reserved         u16      u16       reserved              |input;| 
</sub T_ML1C_PDCCH_ORDER_IND>


<sub T_ML1C_PRACH_END_REQ>
       crnti      u32          u32       crnti      |input;|
</sub T_ML1C_PRACH_END_REQ>



<sub T_ML1C_DL_HARQ_INFO_IND>
     dciRecvSfn     u16        u16        dciRecvSfn        |input;|
     pdschEndSfn    u16        u16        pdschEndSfn       |input;|
     harqId         u16        u16        harqId            |input;|
     dataType       u16        u16        dataType          |input;|
</sub T_ML1C_DL_HARQ_INFO_IND>

<sub T_ML1C_PDSCH_DLSCH_READ_IND>
     dataSfn      u16        u16        dataSfn           |input;|
     crcFlag      u16        u16        crcFlag           |input;|
     tbSize       u16        u16        tbSize            |input;|
     harqId       u16        u16        harqId            |input;|
     data         ptr        u8         data
</sub T_ML1C_PDSCH_DLSCH_READ_IND>


<sub T_ML1C_ADJUST_TA_REQ>
     sfn           u16     u16         sfn              |input|
     ta            u16     u16         ta               |input|
     rarTaFlag     u16     u16         rarTaFlag        |input|
     reserved      u16     u16         reserved         |input|
</sub T_ML1C_ADJUST_TA_REQ>


<sub T_ML1C_SR_SEND_REQ>
     srPeriod          u16      u16       srPeriod         |input;|
     srOffset          u16      u16       srOffset         |input;|
     srMaxNum          u16      u16       srMaxNum         |input;|
     srProhibitTimer   u16      u16       srProhibitTimer  |input;|
     srResourceIndex   u16      u16       srResourceIndex  |input;|
     reserved          u16      u16       reserved         |input;|   
</sub T_ML1C_SR_SEND_REQ>


<sub T_ML1C_PUSCH_SEND_REQ>
      sendSfn        u16        u16               sendSfn       |input;|
      transType      u16        u16               transType     |input;|
      rnti           u16        u16               rnti          |input;|
      reserved       u16        u16               reserved      |input;| 
      resourInfo     struct     T_ResourceInfo    resourInfo
      data           ptr        u8                data
</sub T_ML1C_PUSCH_SEND_REQ>
             

<sub T_ML1C_DRX_STATUS_REQ>
      cause        u16        u16         cause       |input;|
      reserved     u16        u16         reserved    |input;|
</sub T_ML1C_DRX_STATUS_REQ>


<sub T_RL1C_IDL_CONFIG_REQ>
     cellDescInfo            struct       T_CellServLte
     measId                  u16          u16      measId                 |input;|
     pCmax                   s16          s16      pCmax                  |input;|
     qualMin                 s16          s16      qualMin                |input;|
     qRxLevMin               s16          s16      qRxLevMin              |input;|
     intraSearchP            u16          u16      intraSearchP           |input;|
     intraSearchQ            u16          u16      intraSearchQ           |input;|
     nonIntraSearchP         u16          u16      nonIntraSearchP        |input;|
     nonIntraSearchQ         u16          u16      nonIntraSearchQ        |input;|
     lteHighPriorFreqNum     u16          u16      lteHighPriorFreqNum    |input;|
     lteLowPriorFreqNum      u16          u16      lteLowPriorFreqNum     |input;|
     nValue                  u16          u16      nValue                 |input;|
     pagingPeriod            u16          u16      pagingPeriod           |input;|
     ueIdPo                  u16          u16      ueIdPo                 |input;|
     reserved                u16          u16      reserved               |input;|
     siModiPeriod            u32          u32      siModiPeriod           |input;|
     lteMeasFreqInfo[9]      array        T_IdlMeasFreqInfo      lteMeasFreqInfo    |multiedit;|
     lteMeasCellIdList[96]   array        u16      lteMeasCellIdList      |multiedit;|
     pdschCommInfo           struct       T_Pdsch_CommInfo
     idlConfigType           u16          u16      idlConfigType          |select;0:normal_config;1:psm_resume_config;2:edrx_resume_config;|
     ueIdPtw                 u16          u16      ueIdPtw                |input;|
     edrxPeriod              u32          u32      edrxPeriod             |input;|
     ptwLen                  u32          u32      ptwLen                 |input;|
     maxMpdcchRepNum         u16          u16      maxMpdcchRepNum        |input;|
     numOfPagingNb           u16          u16      numOfPagingNb          |input;|
     siHoppingConfigComm     u16          u16      siHoppingConfigComm    |input;|
     startSymbolLC           u16          u16      startSymbolLC          |input;|  
     validSfn                struct       T_BLValidSubfBitMap
     freqHoppingParam        struct       T_FreqHoppingParameters
</sub T_RL1C_IDL_CONFIG_REQ>


<sub T_IdlMeasFreqInfo>
     frequency               u16         u16          frequency             |input;|
     measBandWith            u16         u16          measBandWith          |input;|
     presenceAntennaPort1    u16         u16          presenceAntennaPort1  |input;|
     neighCellConfig         u16         u16          neighCellConfig       |input;|
     cellNum                 u16         u16          cellNum               |input;|
     priority                u16         u16          priority              |input;|
     blackCellNum            u16         u16          blackCellNum          |input;|
     reserved                u16         u16          reserved              |input;|
     blackPhyId[16]           array       u16          blackPhyId[16]         |multiedit;|
     blackPhyIdRange[16]      array       u16          blackPhyIdRange[16]    |multiedit;|
</sub T_IdlMeasFreqInfo> 



<sub T_Pdsch_CommInfo>
    referenceSignalPower               s16      s16       referenceSignalPower                 |input;|
    pb                                 u16      u16       pb                                   |input;|
    pdschMaxNumRepetitionCEmodeAR13    u16      u16       pdschMaxNumRepetitionCEmodeAR13      |input;|
    pdschMaxNumRepetitionCEmodeBR13    u16      u16       pdschMaxNumRepetitionCEmodeBR13      |input;| 
</sub T_Pdsch_CommInfo>



<sub T_FreqHoppingParameters>
     mpdcchPdschHoppingNB               u16    u16   mpdcchPdschHoppingNB               |input;|
     dlModeAType                        u16    u16   dlModeAType                        |select;0:interval-FDD-r13;1:interval-TDD-r13;|
     intervalDlHoppingConfigCommModeA   u16    u16   intervalDlHoppingConfigCommModeA   |input;|
     dlModeBType                        u16    u16   dlModeBType                        |select;0:interval-FDD-r13;1:interval-TDD-r13;|
     intervalDlHoppingConfigCommModeB   u16    u16   intervalDlHoppingConfigCommModeB   |input;|
     ulModeAType                        u16    u16   ulModeAType                        |select;0:interval-FDD-r13;1:interval-TDD-r13;|
     intervalUlHoppingConfigCommModeA   u16    u16   intervalUlHoppingConfigCommModeA   |input;|
     ulModeBType                        u16    u16   ulModeBType                        |select;0:interval-FDD-r13;1:interval-TDD-r13;|
     intervalUlHoppingConfigCommModeB   u16    u16   intervalUlHoppingConfigCommModeB   |input;|
     mpdcchPdschHoppingOffset           u16    u16   mpdcchPdschHoppingOffset           |input;|
</sub T_FreqHoppingParameters>


<sub T_RL1C_FREQ_MEAS_REQ>                             
   freqMeasId      u16         u16         freqMeasId             |input;|
   freqNum         u16         u16         freqNum                |input;|
   freq[18]        array       u16         freq[18]               |multiedit;|
</sub T_RL1C_FREQ_MEAS_REQ>


<sub T_RL1C_FREQ_MEAS_CNF>
   freqMeasId      u16         u16         freqMeasId             |input;|
   freqNum         u16         u16         freqNum                |input;|
   freq[18]        array       u16         freq[18]               |multiedit;|
</sub T_RL1C_FREQ_MEAS_CNF>

<sub T_RL1C_SI_READ_REQ>
{
     siCellDesc              struct     T_CellServLte
     plmnSearchFlag          u16        u16        plmnSearchFlag         |select;0:no_plmn_serach;1:plmn_serach;|
     useSysModPeriodFlag     u16        u16        useSysModPeriodFlag    |select;1:use_system_modity;0:not_use_system_modity;|
     syncOffset              u32        u32        syncOffset             |input|
     siWindowLenth           u16        u16        siWindowLenth          |input|
     siType                  u16        u16        siType                 |input|
     siNum                   u16        u16        siNum                  |input|
     reserved                u16        u16        reserved               |input|
     siNvalue[32]            array      u16        siNvalue[32]           |multiedit|
     siPeriod[32]            array      u16        siPeriod[32]           |multiedit|
     sib1SchedulIndex        u16        u16        sib1SchedulIndex       |input|
     siRepPatten             u16        u16        siRepPatten            |input|
     siHoppingComCfg         u16        u16        siHoppingComCfg        |input|
     startSymbolLC           u16        u16        startSymbolLC          |input|                                                              
     validSubFrameConfig     struct     T_BLValidSubfBitMap
     freqHoppingParam        struct     T_FreqHoppingParameters
     siNbIndex[32]           array      u16        siNbIndex[32]          |multiedit|
     siTBS[32]               array      u16        siTBS[32]              |multiedit|
</sub T_RL1C_SI_READ_REQ>

<sub T_RL1C_CELL_SEARCH_REQ>
      cellSearchId     u16     u16      cellSearchId           |input|
      freq             u16     u16      freq                   |input|
      plmnSearchFlag   u16		 u16		  plmnSearchFlag         |select;0:no_plmn_serach;1:plmn serach;|
      pwrFlag          u16     u16      pwrFlag                |select;0:NOT_PWR_CELL_SERACH;1:PWR_CELL_SEARCH;|
</sub T_RL1C_CELL_SEARCH_REQ>


<sub T_RL1C_CELL_SYNC_REQ>
     syncId          u16     u16      syncId           |input|
     reserved        u16     u16      reserved         |input|
     cellInfo        struct  T_CellServLte
     syncOffset     u32    u32       syncOffset      |input|
     syncType       u16    u16       syncType        |select;0:res;1:ho;3:for_l1c_wake_from_deep_sleep;|
     syncBackFlag   u16    u16       syncBackFlag    |select;0:not_need_to_backoff_syncoffset;1:need_to_backoff_syncOffset;|
</sub T_RL1C_CELL_SYNC_REQ>



<sub T_RL1C_DEACT_REQ>
    cause     u16      u16     cause   |select;1:power_off;2:psm;3:EDRX;4:lost_cover;|
</sub T_RL1C_DEACT_REQ>


<sub T_FreqBandLte>
     startPoint       u16     u16      startPoint           |input|
     endPoint         u16     u16      endPoint             |input|
</sub T_FreqBandLte>


<sub T_RL1C_PWR_SWEEP_REQ>
     sweepId         u16     u16      sweepId             |input| 
     freqBandNum     u16     u16      freqBandNum         |input|
     plmnSearchFlag  u16     u16      plmnSearchFlag      |select;0:no_plmn_serach;1:plmn_serach;|
     reserved        u16     u16      reserved            |input|
     freqBand[10]    array   T_FreqBandLte                 freqBand
</sub T_RL1C_PWR_SWEEP_REQ>


<sub T_RL1C_MIB_DATA_IND>
      crcFlag                 u16       u16    crcFlag             |select;1:crc_success;0:crc_error;|
      rsrp                    u16       u16    rsrp                |input|
      rsrq                    u16       u16    rsrq                |input|
      antennaPortsCount       u16       u16    antennaPortsCount   |input|
      sfn_low2bit             u16       u16    sfn_low2bit         |input|
      reserved                u16       u16    reserved            |input|
      data[4]                 array     u8    data[4]              |multiedit|
</sub T_RL1C_MIB_DATA_IND>


<sub T_RL1C_SIB1_DATA_IND>
      crcFlag       u16       u16     crcFlag         |select;1:crc_success;0:crc_error;|
      dataLen       u16       u16     dataLen         |input|
      data[120]     ayyar     u8      data[120]       |multiedit|
</sub T_RL1C_SIB1_DATA_IND>


<sub T_RL1C_SI_DATA_IND>
      dataLen                u16       u16      dataLen         |input;|
      reserved               u16       u16      reserved        |input;|
      data[120]              array     u8       data[120]       |multiedit|
</sub T_RL1C_SI_DATA_IND>


<sub T_RL1C_PWR_SWEEP_CNF>
      sweepId           u16        u16          sweepId           |input;|
      freqPointNum      u16        u16          freqPointNum      |input;|
      freq[64]          array      u16          freq[64]          |multiedit|
</sub T_RL1C_PWR_SWEEP_CNF>


 <sub T_RL1C_CELL_SEARCH_CNF>
       cellSearchId        u16        u16      cellSearchId       |input;|
       cellNum             u16        u16      cellNum            |input;|
       frequency           u16        u16      frequency          |input;|
       reserved            u16        u16      reserved           |input;|
       phyCellId[3]        array      u16      phyCellId[3]       |multiedit;|
       dlCpType[3]         array      u16      dlCpType[3]        |multiedit;|
       syncOff[3]          array      u32      syncOff[3]         |multiedit;|
</sub T_RL1C_CELL_SEARCH_CNF>


<sub T_RL1C_CELL_SYNC_CNF>
     syncId            u16       u16     syncId              |input;|
     successfulFlag    u16       u16     successfulFlag      |select;0:fail;1:success;|
     dlCpType          u16       u16     dlCpType            |input;|
     reserved          u16       u16     reserved            |input;|
</sub T_RL1C_CELL_SYNC_CNF>


<sub T_RL1C_PAGING_DATA_IND>
      result        u16      u16        result        |select;0:decode_err;1:decode_success;|
      dataLen       u16      u16        dataLen       |input;|
      data[120]     array    u8         data[120]     |multiedit;|
</sub T_RL1C_PAGING_DATA_IND>


<sub T_RL1C_DIRECT_IND>
    data            u16      u16     data          |input;|
    reserved        u16      u16     reserved      |input;|  
</sub T_RL1C_DIRECT_IND>



<sub T_RL1C_EDRX_SLEEP_IND>
    sleepLen     u8     u8     sleepLen      |input;|
</sub T_RL1C_EDRX_SLEEP_IND>


<sub T_RL1C_IDL_MEAS_IND>
     measId                   u16           u16        measId                    |input;|
     lteFreqNum               u16           u16        lteFreqNum                |input;|
     serveRsrp                u16           u16        serveRsrp                 |input;|
     serveRsrq                u16           u16        serveRsrq                 |input;|
     lteMeasResult[9]         array         T_IdlMeasFreqResult
     lteMeasCellIdList[96]    array         u16        lteMeasCellIdList[96]     |multiedit;| 
     rsrp[96]                 array         u16        rsrp[96]                  |multiedit;|
     rsrq[96]                 array         u16        rsrq[96]                  |multiedit;|
     syncOffset[96]           array         u32        syncOffset[96]            |multiedit;|
     cellCpType[96]           array         u16        cellCpType[96]            |multiedit;|
</sub T_RL1C_IDL_MEAS_IND>


<sub T_IdlMeasFreqResult>
    intraCellNum       u16     u16       intraCellNum            |input;|
    resultTypeFlag     u16     u16       resultTypeFlag          |input;|
    frequency          u16     u16       frequency               |input;|
    reserved           u16     u16       reserved                |input;|
</sub T_IdlMeasFreqResult>


<sub T_RL1C_CGI_MEAS_REQ>
      cgiCellInfo     struct  T_CellDescLte
      syncOffset            u32         u32          syncOffset              |input;|
      cellCpType            u16         u16          cellCpType              |input;|
      autoGapFlag           u16         u16          autoGapFlag             |input;|
      presenceAntennaPort1  u16         u16          presenceAntennaPort1    |input;|
      reserved              u16         u16          reserved                |input;|
</sub T_RL1C_CGI_MEAS_REQ>


<sub T_RL1C_DCH_MEAS_REQ>
      measId                 u16       u16         measId               |input;|
      gapType                u16       u16         gapType              |input;|
      gapOffset              u16       u16         gapOffset            |input;|
      filterCoefRsrp         u16       u16         filterCoefRsrp       |input;|
      filterCoefRsrq         u16       u16         filterCoefRsrq       |input;|
      lteFreqNum             u16       u16         lteFreqNum           |input;|
      blackListCellNum       u16       u16         blackListCellNum     |input;|
      reserved               u16       u16         reserved             |input;|
      serveInfo              struct    T_CellDescLte
      lteMeasFreqInfo[9]     array     T_DchMeasFreqInfo
      blackPhyId[32]         array     u16         blackPhyId[32]       |multiedit|
      blackPhyIdRange[32]    array     u16         blackPhyIdRange[32]  |multiedit|
      rsrqOnAllSymbol        u16       u16          rsrqOnAllSymbol      |input;|
      filterCoefSinr         u16       u16          filterCoefSinr       |input;|
</sub T_RL1C_DCH_MEAS_REQ>



<sub T_CellDescLte>
    frequency      u16     u16         frequency        |input;|
    phyCellId      u16     u16         phyCellId        |input;|
</sub T_CellDescLte>


<sub T_PL1C_IDL_MEAS_IND>

      measId                         u16        u16                  measId                      |input;|       
      lteFreqNum                     u16        u16                  lteFreqNum                  |input;|
      serverRsrp                     u16        u16                  serverRsrp                  |input;|
      serverRsrq                     u16        u16                  serverRsrq                  |input;|
                                                                                                
      lteMeasResult[9]               array      T_MeasFreqResult     lteMeasResult               |multiedit|
      rsrp[96]                       array      u16                  rsrp                        |multiedit|
      rsrq[96]                       array      u16                  rsrq                        |multiedit|
      lteSyncOffset[96]              array      u32                  lteSyncOffset               |multiedit|
      cellCpType[96]                 array      u16                  cellCpType                  |multiedit|
      lteBlindMeasCellIdList[28]     array      u16                  lteBlindMeasCellIdList      |multiedit|
      blindMeasRsrp[28]              array      u16                  blindMeasRsrp               |multiedit|
      blindMeasRsrq[28]              array      u16                  blindMeasRsrq               |multiedit|
      lteBlindSyncOffset[28]         array      u32                  lteBlindSyncOffset          |multiedit|
      lteBlindCpType[28]             array      u16                  lteBlindCpType              |multiedit|
</sub T_PL1C_IDL_MEAS_IND>

<sub T_MeasSubframePatternR10>
     subframePatternIndex        u16      u16        subframePatternIndex       |input;|
     subframePattern[7]          array    u16        subframePattern[7]         |multiedit;|
</sub T_MeasSubframePatternR10>

<sub T_DchMeasFreqInfo>
     frequency                u16       u16          frequency                |input;|
     measBandWith             u16       u16          measBandWith             |input;|
     presenceAntennaPort1     u16       u16          presenceAntennaPort1     |input;|
     neighCellConfig          u16       u16          neighCellConfig          |input;|
     measUpdateType           u16       u16          measUpdateType           |input;|
     blackCellNum             u16       u16          blackCellNum             |input;|
     reserved                 u16       u16          reserved                 |input;|
     measSubframeCellNum      u16       u16          measSubframeCellNum      |input;|
     measSubframePattern      struct    T_MeasSubframePatternR10
     startPhyCellId[32]       array     u16          startPhyCellId[32]       |multiedit;|
     phyCellIdRange[32]       array     u16          phyCellIdRange[32]       |multiedit;|
</sub T_DchMeasFreqInfo>


<sub T_RL1C_CGI_MEAS_IND>
     cgiData[120]      array    u8         cgiData[120]     |multiedit;|
     cgiDataLen        u16      u16        cgiDataLen       |input;|
     reserved          u16      u16        reserved         |input;|
</sub T_RL1C_CGI_MEAS_IND>


<sub T_RL1C_RLF_STATUS_IND>
     statusInd        u32      u32        statusInd       |input;|
</sub T_RL1C_RLF_STATUS_IND>


<sub T_RL1C_DCH_MEAS_IND>
     measId                    u16         u16        measId                    |input;|
     lteFreqNum                u16         u16        lteFreqNum                |input;|
     measStatus                u16         u16        measStatus                |select;0:only_serving_cell_measurement;1:including_inter_FREQ_meas;|
     serverCellRsrp            u16         u16        serverCellRsrp            |input;|
     serverCellRsrq            u16         u16        serverCellRsrq            |input;|
     reserved                  u16         u16        reserved                  |input;|
     lteMeasResult[9]          array       T_MeasFreqResult
     lteMeasCellIdList[96]     array       u16        lteMeasCellIdList[96]     |multiedit;|
     rsrp[96]                  array       u16        rsrp[96]                  |multiedit;|
     rsrq[96]                  array       u16        rsrq[96]                  |multiedit;|
     syncOffset[96]            array       u32        syncOffset[96]            |multiedit;|
     cellCpType[96]            array       u16        cellCpType[96]            |multiedit;|
     serverCellRxTxDiff        u16         u16        serverCellRxTxDiff        |input;|
     serverCellSinr            u16         u16        serverCellSinr            |input;|
     sinr[96]                  array       u16        sinr[96]                  |multiedit;|
</sub T_RL1C_DCH_MEAS_IND>


<sub T_MeasFreqResult>
     frequency            u16    u16       frequency          |input;|
     intraCellMeasNum     u16    u16       intraCellMeasNum   |input;|
     blindMeasNum         u16    u16       blindMeasNum       |input;|
     reserved2            u16    u16       reserved2          |input;|
</sub T_MeasFreqResult>


<sub T_Pucch_CommInfo>
     deltaPucchShift                     u16       u16       deltaPucchShift                   |input;|
     cqiNrb                              u16       u16       cqiNrb                            |input;|
     nCsAn                               u16       u16       nCsAn                             |input;|
     n1pucchAnNum                        u16       u16       n1pucchAnNum                      |input;|
     n1pucchAnList[4]                    array     u16       n1pucchAnList[4]                  |multiedit;|
     pucchNumRepetitionCEMsg4Level0      u16       u16       pucchNumRepetitionCEMsg4Level0    |input;|
     pucchNumRepetitionCEMsg4Level1      u16       u16       pucchNumRepetitionCEMsg4Level1    |input;|
     pucchNumRepetitionCEMsg4Level2      u16       u16       pucchNumRepetitionCEMsg4Level2    |input;|
     pucchNumRepetitionCEMsg4Level3      u16       u16       pucchNumRepetitionCEMsg4Level3    |input;|
</sub T_Pucch_CommInfo>

  T_CellServLte      servCellInfo;
  s16                pcmax;
  u16				 reserved;
  T_Prach_Config     prachCfg;
  T_Pdsch_CommInfo   pdschCommCfg;
  T_Pusch_CommInfo   puschCommCfg;
  T_Pucch_CommInfo   pucchCommCfg;
  T_UlSrsCommInfo    ulSrsCommInfo;
  T_UlPowerCtlCommInfo    ulPowerCtrCommInfo;
  u16                     startSymbolLC;
  u16					  reserved1;
  T_Prach_Config_R13      prachCfg_R13;
  T_FreqHoppingParameters freqHoppingParam;
  T_BLValidSubfBitMap     validSfn;


<sub T_RL1C_CHN_COMM_CONFIG_REQ>
   servCellInfo        struct    T_CellServLte                   
   pcmax               s16       s16                         pcmax               |input;|
   reserved            u16       u16                         reserved            |input;|                   
   prachCfg            struct    T_Prach_Config              prachCfg                 
   pdschCommCfg        struct    T_Pdsch_CommInfo            pdschCommCfg      
   puschCommCfg        struct    T_Pusch_CommInfo            puschCommCfg      
   pucchCommCfg        struct    T_Pucch_CommInfo            pucchCommCfg      
   ulSrsCommInfo       struct    T_UlSrsCommInfo             ulSrsCommInfo     
   ulPowerCtrCommInfo  struct    T_UlPowerCtlCommInfo        ulPowerCtrCommInfo
   startSymbolLC       u16       u16                         startSymbolLC       |input;|
   reserved1           u16       u16                         reserved1           |input;|
   prachCfg_R13        struct    T_Prach_Config_R13          prachCfg_R13
   freqHoppingParam    struct    T_FreqHoppingParameters     freqHoppingParam  
   validSfn            struct    T_BLValidSubfBitMap         validSfn            
</sub T_RL1C_CHN_COMM_CONFIG_REQ>


<sub T_Prach_Config>
    rootSequenceIndex  u16       u16                   rootSequenceIndex    |input;|
    reserved           u16       u16                   reserved             |input;|
    prachConfigInfo    struct    T_Prach_ConfigInfo
</sub T_Prach_Config>


<sub T_Pusch_CommInfo>
    puschRs     struct     T_PuschRsInfo
    puschMaxNumCEModeA     u16      u16       puschMaxNumCEModeA    |input;|
    puschMaxNumCEModeB     u16      u16       puschMaxNumCEModeB    |input;|
    puschHoppingOffset     u16      u16       puschHoppingOffset    |input;|
    reserved               u16      u16       reserved              |input;|
</sub T_Pusch_CommInfo> 


<sub T_PuschRsInfo>
     groupHopFlag      u16     u16       groupHopFlag         |input;|
     groupAssign       u16     u16       groupAssign          |input;|
     sequenceHopFlag   u16     u16       sequenceHopFlag      |input;|
     cyclicShift       u16     u16       cyclicShift          |input;|
</sub T_PuschRsInfo> 


<sub T_UlSrsCommInfo>
     ulSrsCommInfoFlag   u16    u16     ulSrsCommInfoFlag    |input;|
     srsBandWidth        u16    u16     srsBandWidth         |input;|
     srsSubFrameType     u16    u16     srsSubFrameType      |input;|
     ackNackSimulFlag    u16    u16     ackNackSimulFlag     |input;|
     uptsRecofigFlag     u16    u16     uptsRecofigFlag      |input;|
     reserved            u16    u16     reserved             |input;|
</sub T_UlSrsCommInfo>


<sub T_PucchDeltaFList>
     format1         u16    u16     format1          |input;|
     format1b        u16    u16     format1b         |input;|
     format2         u16    u16     format2          |input;|
     format2a        u16    u16     format2a         |input;|
     format2b        u16    u16     format2b         |input;|
     reserved        u16    u16     reserved         |input;|
</sub T_PucchDeltaFList>

<sub T_UlPowerCtlCommInfo>
      p0NomiPusch          s16      s16          p0NomiPusch           |input;|
      alpha                u16      u16          alpha                 |input;|
      p0NomiPucch          s16      s16          p0NomiPucch           |input;|
      deltaPreambleMsg3    s16      s16          deltaPreambleMsg3     |input;|      
      pucchDeltaFlist      struct   T_PucchDeltaFList
</sub T_UlPowerCtlCommInfo>

<sub T_RL1C_CHN_DED_CONFIG_REQ>
     servCellInfo        struct      T_CellServLte                
     crnti               u32         u32          crnti           |input;|
     n310                u16         u16          n310            |input;|
     n311                u16         u16          n311            |input;|
     t310                u16         u16          t310            |input;|
     reserved            u16         u16          reserved        |input;|
     pucchDedInfo        struct      T_Pucch_DedInfo
     cqiReportConf       struct      T_CqiReportConf
     cqiReportConfR10    struct      T_CqiReportConfR10
     antennalInfo        struct      T_AntennaInfo
     pdschDedInfo        struct      T_PdschConfigDedicated
     puschDedCfg         struct      T_PuschDediInfo
     tpcPusch            struct      T_TpcConfig
     tpcPucch            struct      T_TpcConfig
     srsDedInfo          struct      T_UlSrsDediInfo
     srsApInfo           struct      T_UlSrsDediInfoAperiodicR10
     spsConfig           struct      T_SpsConfigInfo
     ulPowerCtrlDediInfo struct      T_UlPowerCtrDediInfo
     drxConfig           struct      T_DrxConfigInfo
     ceMode              u16         u16          ceMode          |input;|
     reserved1           u16         u16          reserved1       |input;|
     epdcchInfo          struct      T_EpdcchConfigR11
</sub T_RL1C_CHN_DED_CONFIG_REQ>


<sub T_Pucch_Param_R13>
    validF              u16      u16         validF           |input;|
  	nPucchIdentity      u16      u16         nPucchIdentity   |input;|
  	n1PucchAN           u16      u16         n1PucchAN        |input;|
  	reserved            u16      u16         reserved         |input;|
</sub T_Pucch_Param_R13> 



<sub T_Pucch_NumRepetitionCe>
  	validF            u16      u16       validF           |input;|
  	modeType          u16      u16       modeType         |input;|
  	repNumFormat1     u16      u16       repNumFormat1    |input;|
  	repNumFormat2     u16      u16       repNumFormat2    |input;|
</sub T_Pucch_NumRepetitionCe>

<sub T_Pucch_DedInfo>
     tddAckNackFeedbackMode         u16      u16        tddAckNackFeedbackMode     |input;|
     reserved                       u16      u16        reserved                   |input;|
     pucchParamR13                   struct             T_Pucch_Param_R13
     pucchNumRepInfo                 struct             T_Pucch_NumRepetitionCe
</sub T_Pucch_DedInfo>

<sub T_CqiReportConf>
    cqiReportFlag                u16      u16        cqiReportFlag                 |input;|
    reportModeAp                 u16      u16        reportModeAp                  |input;|
    nomPdschRsEpreOff            s16      s16        nomPdschRsEpreOff             |input;|
    cqiRepPeriodFlag             u16      u16        cqiRepPeriodFlag              |input;|
    simulFlag                    u16      u16        simulFlag                     |input;|
    cqiPucchRescIndex            u16      u16        cqiPucchRescIndex             |input;|
    pmiConfIndex                 u16      u16        pmiConfIndex                  |input;|
    cqiFormatInd                 u16      u16        cqiFormatInd                  |input;|
    k                            u16      u16        k                             |input;|
    riIndex                      u16      u16        riIndex                       |input;|
    pmiRiReportFlag              u16      u16        pmiRiReportFlag               |input;|
    cqiMaskFlag                  u16      u16        cqiMaskFlag                   |input;|
</sub T_CqiReportConf>

<sub T_CqiReportConfR10>
    cqiReportR10Flag             u16      u16        cqiReportR10Flag              |input;|
    nomPdschRsEpreOffset         s16      s16        nomPdschRsEpreOffset          |input;|
    cqiReportAperiodicR10        struct              T_CqiReportAperiodicR10
    cqiReportPeriodicR10         struct              T_CqiReportPeriodicR10
    pmiRIReportR9                u16      u16        pmiRIReportR9                 |input;|
    reserved                     u16      u16        reserved                      |input;|
</sub T_CqiReportConfR10>

<sub T_CqiReportAperiodicR10>
    aperiodicCqiFlag             u16      u16        aperiodicCqiFlag              |input;|
    cqiReportModeAperiodic       u16      u16        cqiReportModeAperiodic        |input;|
    aperiodicCSITrigger1R10      u16      u16        aperiodicCSITrigger1R10       |input;|
    aperiodicCSITrigger2R10      u16      u16        aperiodicCSITrigger2R10       |input;|
</sub T_CqiReportAperiodicR10>

<sub T_CqiReportPeriodicR10>
    periodicCqiFlag                u16      u16        periodicCqiFlag              |input;|
    cqiPucchResourceIndexR10       u16      u16        cqiPucchResourceIndexR10        |input;|
    cqiPucchResourceP1IndexR10     u16      u16        cqiPucchResourceP1IndexR10       |input;|
    cqiPmiConfigIndex              u16      u16        cqiPmiConfigIndex       |input;|
    cqiFormatIndFlag               u16      u16        cqiFormatIndFlag              |input;|
    csiReportMode                  u16      u16        csiReportMode        |input;|
    k                              u16      u16        k       |input;|
    periodicityFactorR10           u16      u16        periodicityFactorR10       |input;|
    riConfigIndex                  u16      u16        riConfigIndex              |input;|
    simultaneousAckNackAndCQI      u16      u16        simultaneousAckNackAndCQI        |input;|
    cqiMaskFlag                    u16      u16        cqiMaskFlag       |input;|
    csiConfigFlag                  u16      u16        csiConfigFlag       |input;|
    cqiPmiConfigIndex2R10          u16      u16        cqiPmiConfigIndex2R10              |input;|
    riConfigIndex2R10              u16      u16        riConfigIndex2R10        |input;|
</sub T_CqiReportPeriodicR10>

<sub T_AntennaInfo>
    transMode             u16      u16        transMode              |input;|
    codBkSubSetNum        u16      u16        codBkSubSetNum         |input;|
    codBkSubsetRest[8]    array    u16        codBkSubsetRest[8]     |input;|
    ueTransAntSel         u16      u16        ueTransAntSel          |input;|
    reserved              u16      u16        reserved               |input;|
</sub T_AntennaInfo>


<sub T_PdschConfigDedicated>
     pa            u16       u16     pa             |input;|
     reserved      u16       u16     reserved       |input;|
</sub T_PdschConfigDedicated>


<sub T_MpdcchConfigR13>
    validF                        u16      u16       validF                     |input;|
    csiNumRepetitionCE            u16      u16       csiNumRepetitionCE         |input;|
    mpdcchPdschHoppingConfig      u16      u16       mpdcchPdschHoppingConfig   |input;|
    mpdcchStartSFUESS             u16      u16       mpdcchStartSFUESS          |input;|
    mpdcchNumRepetition           u16      u16       mpdcchNumRepetition        |input;|
    mpdcchNarrowband              u16      u16       mpdcchNarrowband           |input;|
</sub T_MpdcchConfigR13>


<sub T_EpdcchSetConfigR11>
    transmissionType               u16      u16       transmissionType               |input;|
    numberPbrPais                  u16      u16       numberPbrPais                  |input;|
    resBlockAssignBitNum           u16      u16       resBlockAssignBitNum           |input;|
    resourceBlockAssignment[3]     array    u16       resourceBlockAssignment[3]     |input;|
    dmrsScramblingSequenceInt      u16      u16       dmrsScramblingSequenceInt      |input;|
    pucchResourceStartOffset       u16      u16       pucchResourceStartOffset       |input;|
    csiRSConfigZPId2               u16      u16       csiRSConfigZPId2               |input;|
    reserved                       u16      u16       reserved                       |input;|
    mpdcchConfigR13                struct             T_MpdcchConfigR13
</sub T_EpdcchSetConfigR11>

<sub T_EpdcchConfigR11>
    startSymbolR11             u16       u16                     startSymbolR11      |input;|
    EpdcchSetNum               u16       u16                     EpdcchSetNum        |input;|
    EpdcchSetConfigR11[2]      array     T_EpdcchSetConfigR11    EpdcchSetConfigR11
</sub T_EpdcchConfigR11>


<sub T_PuschDediInfo>
    ackIndexBetaOffset          u16     u16      ackIndexBetaOffset         |input;|
    riIndexBetaOffset           u16     u16      riIndexBetaOffset          |input;|
    cqiIndexBetaOffset          u16     u16      cqiIndexBetaOffset         |input;|
    puschHoppingConfig          u16     u16      puschHoppingConfig         |input;|
</sub T_PuschDediInfo>


<sub T_TpcConfig>
     tpcRnti          u32      u32         tpcRnti              |input;|
     formatType       u16      u16         formatType           |input;|
     IndexFormat3     u16      u16         IndexFormat3         |input;|
     IndexFormat3A    u16      u16         IndexFormat3A        |input;|
     reserved         u16      u16         reserved             |input;|
</sub T_TpcConfig>


<sub T_UlSrsDediInfo>
     ulSrsDediFlag            u16      u16       ulSrsDediFlag             |input;|
     srsBandWidth             u16      u16       srsBandWidth              |input;|
     srsHopBand               u16      u16       srsHopBand                |input;|
     freqDomainPos            u16      u16       freqDomainPos             |input;|
     duration                 u16      u16       duration                  |input;|
     srsConfIndex             u16      u16       srsConfIndex              |input;|
     transComb                u16      u16       transComb                 |input;|
     cyclicShift              u16      u16       cyclicShift               |input;|
     srsAntennaPortR10        u16      u16       srsAntennaPortR10         |input;|
     transmissionCombNumR13   u16      u16       transmissionCombNumR13    |input;|
</sub T_UlSrsDediInfo>


<sub T_UlSrsDediInfoAperiodicR10>
     confFlag               u16    u16     confFlag                 |input;|
     srsConfigIndexApR10    u16    u16     srsConfigIndexApR10      |input;|
</sub T_UlSrsDediInfoAperiodicR10>

<sub T_UlPowerCtrDediInfo>
      p0UePusch          s16     s16       p0UePusch          |input;|
      deltaMcsFlag	     u16     u16       deltaMcsFlag       |input;|
      accumFlag          u16     u16       accumFlag          |input;|
      p0UePucch          s16     s16       p0UePucch          |input;|
      pSrsOffset         u16     u16       pSrsOffset         |input;|
      filterCoeff        u16     u16       filterCoeff        |input;|
</sub T_UlPowerCtrDediInfo>


<sub T_CRLC_CONFIG_REQ_LTE>
      rbIdentity     u8      u8          rbIdentity           |input;|      
      configCause    u8      u8          configCause          |input;|      
      upMode         u8      u8          upMode               |input;|      
      dwMode         u8      u8          dwMode               |select;0:tm;1:um;2:am;|
      ctrlOrUsr      u8      u8          ctrlOrUsr            |input;|      
      suspendResume  u8      u8          suspendResume        |input;|      
      reserved2[2]   array   u8          reserved2[2]         |multiedit;|      
  
      umParas        struct    T_UmParasLte
      amUpParas      struct    T_AmUpParasLte
      amDwParas      struct    T_AmDwParasLte
</sub T_CRLC_CONFIG_REQ_LTE>



<sub T_UmParasLte>
     ulSnFieldLength    u8         u8        ulSnFieldLength        |input;|
     dlTimerReordering  u8         u8        dlTimerReordering      |input;|    
     dlSnFieldLength    u8         u8        dlSnFieldLength        |input;|    
     reserved1          u8         u8        reserved1              |input;|    
</sub T_UmParasLte>                         


<sub T_AmUpParasLte>
     maxRetxThreshold         u8     u8      maxRetxThreshold         |input;|
     timerPollRetransmit      u8     u8      timerPollRetransmit      |input;|
     pollPdu                  u8     u8      pollPdu                  |input;|
     pollByte                 u8     u8      pollByte                 |input;|
     pLastEpdcPduPos          u32    u32     pLastEpdcPduPos          |input;|
</sub T_AmUpParasLte>


<sub T_AmDwParasLte>
     timerStatusProhibit    u8        u8     timerStatusProhibit    |input;|
     timerReordering        u8        u8     timerReordering        |input;|
     reserved2[2]           array     u8     reserved2[2]           |multiedit;|      
</sub T_AmDwParasLte>


<sub T_CRLC_DEACT_REQ_LTE>
     rbIdentity      u8       u8       rbIdentity       |input;| 
     reserved3[3]    array    u8       reserved3[3]     |multiedit;|
</sub T_CRLC_DEACT_REQ_LTE>



<sub T_RLC_AM_DATA_IND_LTE>
      rbIdentity       u8        u8     rbIdentity       |select;0x00:normal_data;0x01:re-est_data;0x02:it_means_that_no data_transmit_to_pdcp_when_re-est;|
      reestFlag        u8        u8     reestFlag        |input;|     
      reserved2[2]     array     u8     reserved2[2]     |multiedit;|
            
      sdu_list    ptr     T_ERLC_DL_SDU
</sub T_RLC_AM_DATA_IND_LTE>


<sub T_ERLC_DL_SDU>
     count          u32    u32           count      |input;|
     seg            ptr    T_ERLC_SDU_SEG
     next           ptr    T_ERLC_DL_SDU_tag
<sub T_ERLC_DL_SDU>



<sub T_ERLC_SDU_SEG>
  fi            u8       u8         fi            |input;|
  len           u16      u16        len           |input;|
  
  data          ptr      u8         data
  pdsch_mem     ptr      T_PDSCH_MEM          pdsch_mem   
  next          ptr      T_ERLC_SDU_SEG_tag   next
</sub T_ERLC_SDU_SEG>



<sub T_ERLC_DL_SDU_tag>
     count          u32    u32           count      |input;|
     
     seg            ptr    T_ERLC_SDU_SEG
     next           ptr    T_ERLC_DL_SDU_tag
</sub T_ERLC_DL_SDU_tag>


<sub T_RLC_UM_DATA_IND_LTE>
     rbIdentity       u8      u8          rbIdentity
     reestFlag        u8      u8          reestFlag       |select;0x00:normal_data;0x01:re-est_data;|
  
     reserved2[2]    array     u8     reserved2[2]           |multiedit;|      

     sdu_list   ptr    T_ERLC_DL_SDU
</sub T_RLC_UM_DATA_IND_LTE>


<sub T_RLC_AM_DATA_CNF_LTE>
     rbIdentity      u8       u8       rbIdentity       |input;|
     reserved3[3]    array    u8       reserved3[3]     |multiedit;|
     firstCnfSn      u16      u16      firstCnfSn       |input;|
     cnfPduNum       u16      u16      cnfPduNum        |input;|
</sub T_RLC_AM_DATA_CNF_LTE>



<sub T_CRLC_STATUS_IND_LTE>
     statusCode      u8       u8       statusCode       |input;|
     reserved3[3]    array    u8       reserved3[3]     |multiedit;|
</sub T_CRLC_STATUS_IND_LTE>


<sub T_RLC_STATUS_IND_LTE>
     rbIdentity     u8    u8       rbIdentity     |input;|
</sub T_RLC_STATUS_IND_LTE>



<sub T_RLC_AM_DATA_REQ_LTE>
     rbIdentity      u8       u8       rbIdentity       |input;|
     reserved3[3]    array    u8       reserved3[3]     |multiedit;|
     pDataPointer    ptr      T_ComPduLte
</sub T_RLC_AM_DATA_REQ_LTE>


<sub T_ComPduLte>

    ebi              u16    u16       ebi            |input;|
    pdcpSn           u16    u16       pdcpSn         |input;|
    pduType          u16    u16       pduType        |input;|
    maxExpireCnt     u16    u16       maxExpireCnt   |input;|
    count            u32    u32       count          |input;|
    sduOffset        u16    u16       sduOffset      |input;|
    li               u16    u16       li             |input;|
    pduLen           u16    u16       pduLen         |input;|
    pdcpHeaderLen    u16    u16       pdcpHeaderLen  |input;|
  
    pPduData     ptr    u8                  pPduData
    pFreeQE      ptr    void                pFreeQE 
    pNext        ptr    T_ComPduLte_Tag     pNext   
</sub T_ComPduLte>


<sub T_RLC_UM_DATA_REQ_LTE>
    rbIdentity      u8       u8       rbIdentity       |input;|
    reserved3[3]    array    u8       reserved3[3]     |multiedit;|
    
    pDataPointer     ptr    T_ComPduLte
  
</sub T_RLC_UM_DATA_REQ_LTE>
 

<sub T_CPDCP_CONFIG_REQ_LTE>
    rbId                    u8         u8           rbId                    |input;|        
    configCause             u8         u8           configCause             |input;|        
    discardTimer            u8         u8           discardTimer            |input;|        
    rlcMode                 u8         u8           rlcMode                 |input;|        
    snSize                  u8         u8           snSize                  |input;|        
    statusReportRequried    u8         u8           statusReportRequried    |input;|        
    heaComFlag              u8         u8           heaComFlag              |input;|        
    loopTestMode            u8         u8           loopTestMode            |input;|
                           
    headComInfo             struct     T_headComInfo            
    securityAlgorithm       struct     T_securityAlgorithm      
    securityKey             struct     T_securityKey
              
    pduSize                 u16        u16          pduSize                |input;|
    
    reserved2[2]            array      u8           reserved2[2]           |multiedit;|      
    
    pCurrentErlcSduPos      u32        u32          pCurrentErlcSduPos     |input;|       
</sub T_CPDCP_CONFIG_REQ_LTE>


<sub T_headComInfo>
    maxCid      u16    u16      maxCid           |input;|
    profiles    u16    u16      profiles         |input;|
</sub T_headComInfo>



<sub T_securityAlgorithm>
    integrityAlgorithm      u8         u8           integrityAlgorithm    |input;|
    ciperAlgorithm          u8         u8           ciperAlgorithm        |input;|
    reserved2[2]            array      u8           reserved2[2]          |multiedit;|      
</sub T_securityAlgorithm>

<sub T_securityKey>
    keyRrcInt[16]            array      u8           keyRrcInt[16]          |multiedit;|
    keyRrcEnc[16]            array      u8           keyRrcEnc[16]          |multiedit;|
    keyUpEnc[16]             array      u8           keyUpEnc[16]           |multiedit;|
    keyEnb[32]               array      u8           keyEnb[32]             |multiedit;|
</sub T_securityKey>


<sub T_CPDCP_RELEASE_REQ_LTE>
    rbId    u8   u8   rbId    |input;|
</sub T_CPDCP_RELEASE_REQ_LTE>



<sub T_CPDCP_DATA_REQ_LTE>

    rbId           u8        u8        rbId             |input;| 
    cipherFlag     u8        u8        cipherFlag       |input;| 
    
    reserved2[2]   array     u8        reserved2[2]     |multiedit;|      
    pduData        ptr       T_ComPduLte
</sub T_CPDCP_DATA_REQ_LTE>



<sub T_CPDCP_INTEGRITY_IND_LTE>
     rbId             u8     u8         rbId               |input;|
     integrityFlag    u8     u8         integrityFlag      |input;|
     mess[5]          array  u8         mess[5]            |multiedit;|
    
     reserved1        u8     u8         reserved1          |input;|
</sub T_CPDCP_INTEGRITY_IND_LTE>


<sub T_CPDCP_DATA_CNF_LTE>
    stateFlag    u8        u8      stateFlag         |input;|
    cnfNum       u8        u8      cnfNum            |input;|
    nasMsgSn     u8        u8      nasMsgSn          |input;|
    
    reserved1   u8     u8         reserved1          |input;|
</sub T_CPDCP_DATA_CNF_LTE>



<sub T_CPDCP_DATA_IND_LTE>
    rbId              u8     u8     rbId              |input;|
    pdcpHeaderLen     u8     u8     pdcpHeaderLen     |input;|
    pduLen            u16    u16    pduLen            |input;|
    
    pduData           struct  T_ComSduLte
</sub T_CPDCP_DATA_IND_LTE>


<sub T_ComSduLte>
    pdcpSn         u16    u16      pdcpSn            |input;|
    diacardFlag    u16    u16      diacardFlag       |input;|
    sduLen         u16    u16      sduLen            |input;|
    pdcpHeaderLen  u16    u16      pdcpHeaderLen     |input;|
    dhcpFlag       u32    u32      dhcpFlag          |input;|
  
    pSduData       ptr    u8
    pSduDataFree   ptr    void
    
    pNext          ptr    T_ComSduLte_Tag 
</sub T_ComSduLte>



<sub T_ComSduLte_Tag>
    pdcpSn         u16    u16      pdcpSn            |input;|
    diacardFlag    u16    u16      diacardFlag       |input;|
    sduLen         u16    u16      sduLen            |input;|
    pdcpHeaderLen  u16    u16      pdcpHeaderLen     |input;|
    dhcpFlag       u32    u32      dhcpFlag          |input;|
  
    pSduData       ptr    u8
    pSduDataFree   ptr    void
    
</sub T_ComSduLte_Tag>



<sub T_PDCP_FLOW_ALLOWANCE_IND>
     rbIdentity     u8       u8       rbIdentity           |input;|
     allowedIpNum   u16      u16      allowedIpNum         |input;|
</sub T_PDCP_FLOW_ALLOWANCE_IND>



<sub T_ML1C_UL_HARQ_INFO_IND>
     dciRecvSfn          u16         u16      dciRecvSfn         |input;| 
     resourceType        u16         u16      resourceType       |input;|
     crntiResInfoNum     u16         u16      crntiResInfoNum    |input;|
     spsResInfoNum       u16         u16      spsResInfoNum      |input;|
     crntiResInfo[2]   array       T_ResourceInfo       crntiResInfo    |multiedit;|
     spsResInfo[2]     array       T_ResourceInfo       spsResInfo      |multiedit;|
</sub T_ML1C_UL_HARQ_INFO_IND>



<sub T_PL1C_SYNC_STATUS_IND>
     successFlag         u8        u8         successFlag        |input;|
     mibPresent          u8        u8         mibPresent         |input;|
     reserved            u16       u16        reserved           |input;|
     
     mibData[4]          array     u8         mibData[4]         |multiedit;| 
</sub T_PL1C_SYNC_STATUS_IND>


<sub T_PL1C_RL_SYNC_IND>
     status      u16    u16  status      |input;|
     reserved    u16    u16  reserved    |input;|
</sub T_PL1C_RL_SYNC_IND>


<sub T_PL1C_IDL_MEAS_IND>
       measId                        u16     u16        measId            |input;|
       lteFreqNum                    u16     u16        lteFreqNum        |input;|
       serverRsrp                    u16     u16        serverRsrp        |input;|
       serverRsrq                    u16     u16        serverRsrq        |input;|
                                    
       lteMeasResult[9]              array   T_MeasFreqResult             |multiedit;|
  
       rsrp[96]                      array   u16  rsrp                    |multiedit;|
       rsrq[96]                      array   u16  rsrq                    |multiedit;|
       lteSyncOffset[96]             array   u32  lteSyncOffset           |multiedit;|
       cellCpType[96]                array   u16  cellCpType              |multiedit;|
       lteBlindMeasCellIdList[28]    array   u16  lteBlindMeasCellIdList  |multiedit;|
       blindMeasRsrp[28]             array   u16  blindMeasRsrp           |multiedit;|
       blindMeasRsrq[28]             array   u16  blindMeasRsrq           |multiedit;|
       lteBlindSyncOffset[28]        array   u32  lteBlindSyncOffset      |multiedit;|
       lteBlindCpType[28]            array   u16  lteBlindCpType          |multiedit;|
</sub T_PL1C_IDL_MEAS_IND>


<sub T_EPCM_LOOP_TEST_IND>
        command            u8     u8        command           |input;|
        ipPduDelayTimer    u8     u8        ipPduDelayTimer   |input;|
        reserved[2]        array  u8        reserved[2]       |multiedit;|
</sub T_EPCM_LOOP_TEST_IND>


<sub T_ERR_BAR_ALLEVIATE_IND>
        barAlleviateType   u8     u8     barAlleviateType     |input;|
</sub T_ERR_BAR_ALLEVIATE_IND>               



<sub T_ERR_ACT_IND>
        tac[2]                           array           u8              tac                                |multiedit;|                        
        servCellPlmnNum                  u8              u8              servCellPlmnNum                    |input;|
        servCellPlmn[MAX_CELL_PLMN_NUM]  array           T_Plmn          servCellPlmn[MAX_CELL_PLMN_NUM]    |multiedit;|
        plmn                             struct          T_Plmn          plmn                           
        servAttachWithoutPDN             u8              u8              servAttachWithoutPDN               |input;|
        cellIdentity[4]                  array           u8              cellIdentity[4]                    |multiedit;|      
        neighbouringFreqNum              u8              u8              neighbouringFreqNum            
        neighbourFreq[MAX_FREQ_NUM]      array           T_CellDescLte   neighbourFreq[MAX_FREQ_NUM]        |multiedit;| 
        cellNum                          u8              u8              cellNum                            |input;|
        cellInfo[MAX_POSSIBLE_CELL_NUM]  array           T_EPossPlmn     cellInfo[MAX_POSSIBLE_CELL_NUM]    |multiedit;|
</sub T_ERR_ACT_IND>



<sub T_Plmn>
     mcc[2]       array    u8       mcc[2]        |multiedit;|
     mnc          u8       u8       mnc           |input;|  
</sub T_Plmn>        



<sub T_EPossPlmn>
    cellInfo         struct           T_CellDescLte       cellInfo
        
    tac[2]           array            u8                  tac             |multiedit;|
    rsrpValue        u8               u8                  rsrpValue       |input;|
    plmnNum          u8               u8                  plmnNum         |input;|
    possiblePlmn[6]  array            T_Plmn              possiblePlmn    |multiedit;|
</sub T_EPossPlmn>



<sub T_ERR_LOOP_TEST_CNF>
      command      u8      u8        command           |input;|
      cause        u8      u8        cause             |input;|
</sub T_ERR_LOOP_TEST_CNF>


<sub T_ERR_GET_PLMN_CNF>
    cellNum                            u8       u8               cellNum    |input;|
    cellInfo[MAX_POSSIBLE_CELL_NUM]    array    T_EPossPlmn      cellInfo
</sub T_ERR_GET_PLMN_CNF>



<sub T_ERR_ACT_REQ>
       imsi                                      struct          T_Imsi        imsi
       plmnSelected                              struct          T_Plmn        plmnSelected

       equivalentPlmnNum                         u8              u8            equivalentPlmnNum       |input;|
       nFreqNum                                  u8              u8            nFreqNum                |input;|
       
       equivalentPlmn[MAX_EQU_PLMNS_NUM]         array           T_Plmn        equivalentPlmn
       neighbourFreq[MAX_FREQ_NUM]               array           T_CellDescLte neighbourFreq
       accessControlClass[MAX_UE_ACC_CLASS_LEN]  array           u8            accessControlClass
       
       actType                                   u8              u8            actType                 |select;0:normal;1:after_psm;2:after_edrx;|
</sub T_ERR_ACT_REQ>


<sub T_Imsi>
    length                   u8       u8      length          |input;|       
    
    // KEY_ASME_LEN - 1
    imsiCon[8]  array        u8      imsiCon         |multiedit;|
    fillByte                 u8       u8      fillByte        |input;|        
    reserved                 u16      u16     reserved        |input;|        
</sub T_Imsi>



<sub T_ERR_GET_PLMN_REQ>
       hplmnFlag       u8    u8       hplmnFlag       |select;1:Search_for_hplmn;0:Normal_plmn_Search;|
</sub T_ERR_GET_PLMN_REQ>


<sub T_ERR_LOOP_TEST_REQ>
     command                 u8           u8           command       |input;|
     rbNum                   u8           u8           rbNum         |input;|
     rbList[MAX_RB_NUM_LTE]  array        T_rbParaLte  rbList        |multiedit;|
</sub T_ERR_LOOP_TEST_REQ>



<sub T_rbParaLte>
    rbId       u8     u8    rbId             |input;|
    sduSize    u16    u16   sduSize          |input;|
</sub T_rbParaLte>


<sub T_ERR_SET_STATE_REQ>
      stateFlag        u8        u8       stateFlag       |input;| 
      plmnSelected     struct    T_Plmn   plmnSelected
</sub T_ERR_SET_STATE_REQ>


<sub T_ERR_NEW_PARAM_REQ>
        equivalentPlmnNum                      u8           u8         equivalentPlmnNum            |input;|     
        equivaHplmnNum                         u8           u8         equivaHplmnNum               |input;|    
        k                                      u8           u8         k                            |input;|    
        forbiddenTaiNum                        u8           u8         forbiddenTaiNum              |input;|    
        stmsiValid                             u8           u8         stmsiValid                   |input;|    
        lteKeyValid                            u8           u8         lteKeyValid                  |input;|    
                                                                                                        
        regTai[MAX_TAI_LEN]                    array        u8         regTai[MAX_TAI_LEN]           |multiedit;|   
        mmeid[MAX_MME_ID_LEN]                  array        u8         mmeid[MAX_MME_ID_LEN]         |multiedit;|   
        stmsi[MAX_STMSI_LEN]                   array        u8         stmsi[MAX_STMSI_LEN]          |multiedit;|   
                                                                                                        
        selectedPlmn                           struct       T_Plmn     selectedPlmn                     
        simHplmn                               struct       T_Plmn     simHplmn
                                 
        equEhplmn[MAX_EQU_PLMNS_NUM]           array        T_Plmn     equEhplmn[MAX_EQU_PLMNS_NUM]         |multiedit;|
        equivalentPlmn[MAX_EQU_PLMNS_NUM]      array        T_Plmn     equivalentPlmn[MAX_EQU_PLMNS_NUM]    |multiedit;|
                                                                                                        
        forbiddenTaiForNationalRoam_0[5]       array          u8       forbiddenTaiForNationalRoam_0[5]     |multiedit;|
        forbiddenTaiForNationalRoam_1[5]       array          u8       forbiddenTaiForNationalRoam_1[5]     |multiedit;|
        forbiddenTaiForNationalRoam_2[5]       array          u8       forbiddenTaiForNationalRoam_2[5]     |multiedit;|
        forbiddenTaiForNationalRoam_3[5]       array          u8       forbiddenTaiForNationalRoam_3[5]     |multiedit;|
        forbiddenTaiForNationalRoam_4[5]       array          u8       forbiddenTaiForNationalRoam_4[5]     |multiedit;|
                                                                                                        
        kEnb[KEY_ENB_LEN]                      array          u8       kEnb[KEY_ENB_LEN]              |multiedit;|   
        kAsme[KEY_ASME_LEN]                    array          u8       kAsme[KEY_ASME_LEN]            |multiedit;|   
</sub T_ERR_NEW_PARAM_REQ>



<sub T_ERR_DEACT_REQ>
    deactCause    u8      u8      deactCause    |input;|
<sub T_ERR_DEACT_REQ>



<sub T_ERR_EDRX_PARAM_REQ>
     eDrxStatus    u8     u8     eDrxStatus    |select;0:disable_edrx;1:enable_edrx;|
     edrxPeriod    u32    u32    edrxPeriod    |input;|
     ptw           u32    u32    ptw           |input;|
</sub T_ERR_EDRX_PARAM_REQ>



<sub T_ERR_EDRX_IND>
      edrxSleepTime   u32    u32   edrxSleepTime    |input;|
</sub T_ERR_EDRX_IND>



<sub T_PDCP_DATA_IND_LTE>
    rbIdentity   u8    u8   rbIdentity        |input;|
  
    reserved3]3]    array   u8   RESERVED3    |multiedit;|
 
    pdata    ptr   T_ComSduLte
</sub T_PDCP_DATA_IND_LTE>


<sub T_L1cIdleFreqInfo>
      frequecy              u16      u16      frequecy                |input;|  
      measBandWith          u8       u8       measBandWith            |input;|
      presenceAntennaPort1  u8       u8       presenceAntennaPort1    |input;|
      neighCellConfig       u8       u8       neighCellConfig         |input;|
      cellNum               u8       u8       cellNum                 |input;|
      measUpdateType        u8       u8       measUpdateType          |input;| 
      reserved              u8       u8       reserved                |input;|  
</sub T_L1cIdleFreqInfo>


<sub T_FL1C_PAGING_START_REQ>
      servCellInfo       struct      T_CellServLte 
  
      firstPoSfn             u16      u16       firstPoSfn               |input;|                     
      pagingHfn              u16      u16       pagingHfn                |input;|                      
      reserved               u16      u16       reserved                 |input;|                      
      
      siHoppingConfigComm    u8       u8        siHoppingConfigComm      |input;|                      
      startSymbolLC          u8       u8        startSymbolLC            |input;|                      
  
      pagingInfo             struct    T_PagingInfo
      pdschCommInfo          struct    T_Pdsch_CommInfo
      validSubFrameConfig    struct    T_BLValidSubfBitMap
      freqHoppingParam       struct    T_FreqHoppingParameters

</sub T_FL1C_PAGING_START_REQ>


<sub T_PagingInfo>
      pagingPeriod      u16     u16        pagingPeriod            |input;|
      pagingFrame       u16     u16        pagingFrame             |input;|
      pagingOccation    u16     u16        pagingOccation          |input;|
      pagingNbIndex     u16     u16        pagingNbIndex           |input;|
      maxMpdcchRepNum   u16     u16        maxMpdcchRepNum         |input;|
      reserved          u16     u16        reserved                |input;|
</sub T_PagingInfo>


// SIM 相关


<sub T_CAPI_RMI_FIELD_STRENGTH_IND>
    fieldStrength     u8    u8   fieldStrength      |input;|
</sub T_CAPI_RMI_FIELD_STRENGTH_IND>



<sub T_CAPI_L3_TRACE_DATA_IND>
    logicalChanelType     u8       u8             logicalChanelType       |input;|
    messageType           u8       u8             messageType             |input;|
    messageLength         u16      u16            messageLength           |input;|
    data[256]             array    u8             data[256]               |multiedit;|
</sub T_CAPI_L3_TRACE_DATA_IND>



<sub T_CAPI_REG_MM_INFO_IND>
   localTimeZone[2]              array       u8       localTimeZone[2]           |multiedit;|
   univTimeLocalTimeZone[8]      array       u8       univTimeLocalTimeZone[8]   |multiedit;|
   netDaylightSavingTime[2]      array       u8       netDaylightSavingTime[2]   |multiedit;|
   fullNameForNetwork[115]       array       u8       fullNameForNetwork[115]    |multiedit;|
   shortNameForNetwork[115]      array       u8       shortNameForNetwork[115]   |multiedit;|
</sub T_CAPI_REG_MM_INFO_IND>



<sub T_CAPI_REG_REGISTRATION_REQ>
       attachType    u8     u8        attachType     |input;| 
       simType       u8     u8        simType        |input;| 
       airMode       u8     u8        airMode        |input;| 
</sub T_CAPI_REG_REGISTRATION_REQ>



<sub T_CAPI_REG_REGISTRATION_CNF>
    psRegState              u8        u8     psRegState              |input;| 
    cause                   u8        u8     cause                   |input;| 
    cellIdentity[4]        array      u8     cellIdentity[4]         |multiedit;|
    plmn[MAX_PLMN_LEN]     array      u8     plmn[MAX_PLMN_LEN]      |multiedit;|
    tac[2]                 array      u8     tac[2]                  |multiedit;|
    roaming                 u8        u8     roaming                 |select;1:roaming;0:not_roaming;|
    aireMode                u8        u8     aireMode                |input;|    
</sub T_CAPI_REG_REGISTRATION_CNF>



<sub T_CAPI_REG_DEREGISTRATION_REQ>
      deregType    u8   u8  deregType      |select;0:normal_shoutdown;2:airmode;|
</sub T_CAPI_REG_DEREGISTRATION_REQ>                 


<sub T_CAPI_REG_DEREGISTRATION_CNF>
     aireMode    u8     u8   aireMode      |input;|
</sub T_CAPI_REG_DEREGISTRATION_CNF>


<sub T_CAPI_REG_AVAIL_PLMN_CNF>
      plmnNum                         u8         u8       plmnNum                      |input;|
      plmnList[60]                  array        u8       plmnList[MAX_PLMN_LEN*20]    |multiedit;|
      plmnListStatus[20]            array        u8       plmnListStatus[20]           |multiedit;|
</sub T_CAPI_REG_AVAIL_PLMN_CNF>



<sub T_CAPI_REG_SET_PLMN_REQ>
      mode                    u8      u8     mode   |select;0:auto;1:manual;|
      plmn[MAX_PLMN_LEN]     array    u8     plmn   |multiedit;|
</sub T_CAPI_REG_SET_PLMN_REQ>         


<sub T_CAPI_REG_REGISTRATION_CNF>
     csRegState                  u8       u8      csRegState           |input;| 
     psRegState                  u8       u8      psRegState           |input;|
     cause                       u8       u8      cause                |input;|
     cellIdentity[4]             array    u8      cellIdentity[4]      |multiedit;|
     plmn[MAX_PLMN_LEN]          array    u8      plmn[MAX_PLMN_LEN]   |multiedit;|
     tac[2]                      array    u8      tac[2]               |multiedit;|
     roaming                     u8       u8      roaming              |select;1:roaming;0:not_roaming;|
     aireMode                    u8       u8      aireMode             |input;|              
</sub T_CAPI_REG_REGISTRATION_CNF>


<sub T_CAPI_REG_SET_PLMN_CNF>
    CAPI_REG_SET_PLMN_CNF   struct    T_CAPI_REG_REGISTRATION_CNF
</sub T_CAPI_REG_SET_PLMN_CNF>


<sub T_CAPI_REG_SIM_ERROR_IND>
      index         u16    u16     index              |input;|
      causeSelect   u8     u8      causeSelect        |input;|
      sw1           u8     u8      sw1                |input;|
      sw2           u8     u8      sw2                |input;|
</sub T_CAPI_REG_SIM_ERROR_IND>



<sub T_CAPI_REG_PSM_CONFIG_REQ>
    psmStatus        u8      u8       psmStatus             |input;|
    t3324Value       u8      u8       t3324Value            |input;|
    t3412ExtValue    u8      u8       t3412ExtValue         |input;|
</sub T_CAPI_REG_PSM_CONFIG_REQ>


<sub T_CAPI_SMS_TRANSMIT_REQ>
     smsFinalFlag              u8     u8     smsFinalFlag             |input;|
     moSmsServiceSel           u8     u8     moSmsServiceSel          |input;|
     length                    u8     u8     length                   |input;|
     rpDestinationAddr[12]     array  u8     rpDestinationAddr[12]    |multiedit;| 
     smsData[175]              array  u8     smsData[175]             |multiedit;| 
</sub T_CAPI_SMS_TRANSMIT_REQ>  



<sub T_CAPI_SMS_TRANSMIT_CNF>
     causeSelect         u8    u8          causeSelect         |input;| 
     cause               u8    u8          cause               |input;| 
     smsData[165]       array  u8          smsData[165]        |multiedit;|
</sub T_CAPI_SMS_TRANSMIT_CNF>      



<sub T_CAPI_SMS_RECEIVE_IND>
     length                u8      u8    length                 |input;|   
     rpOriginatAddr[10]    array   u8    rpOriginatAddr[10]     |multiedit;|
     smsData[163]          rray    u8    smsData[163]           |multiedit;|
</sub T_CAPI_SMS_RECEIVE_IND>   


<sub T_CAPI_SMS_RECEIVE_RSP>
      causeSelect    u8       u8       causeSelect         |input;|    
      cause          u8       u8       cause               |input;|    
      smsData[165]  array     u8       smsData[165]        |multiedit;|
</sub T_CAPI_SMS_RECEIVE_RSP>   


<sub T_CAPI_SMS_MEMORY_AVAIL_REQ>
      moSmsServiceSel    u8       u8       moSmsServiceSel     |input;| 
</sub T_CAPI_SMS_MEMORY_AVAIL_REQ>



<sub T_CAPI_SMS_MEMORY_AVAIL_CNF>
     causeSelect        u8     u8        causeSelect      |input;|
     cause              u8     u8        cause            |input;|
</sub T_CAPI_SMS_MEMORY_AVAIL_CNF>



<sub T_CAPI_SMS_REL_IND>
     causeSelect    u8     u8         causeSelect      |input;|
     cause          u8     u8         cause            |input;|
</sub T_CAPI_SMS_REL_IND>



<sub T_MOBI_SAP_SIM_CARD_IN_IND>
      uPinInfo      u8     u8    uPinInfo     |dismember;T_uPinInfo;| 
</sub T_MOBI_SAP_SIM_CARD_IN_IND>                                                                                               


<bit T_uPinInfo>
    bit0    0    1       UPIN     |select;0:UPIN_do_not_used;1:UPIN used;|
    bit1    1    1       UPIN     |select;0:UPIN_do_not_exist;1:UPIN_exist;|                                                                                                                                                                                                                                      
</bit T_uPinInfo>



<sub T_MOBI_SAP_SIM_CARD_OUT_IND>
    causeSelect    u8    u8        causeSelect      |input;|
    cause          u8    u8        cause            |input;|
</sub T_MOBI_SAP_SIM_CARD_OUT_IND>



<sub T_MOBI_SAP_ERROR_IND>
    causeSelect     u8     u8      causeSelect     |input;|
    cause           u8     u8      cause           |input;|
</sub T_MOBI_SAP_ERROR_IND>               



<sub T_MOBI_SAP_PIN_VERIFY_REQ>
      pinId          u8        u8       pinId         |input;|        
      pinCode[9]     array     u8       pinCode       |multiedit;|
</sub T_MOBI_SAP_PIN_VERIFY_REQ>                          



<sub T_MOBI_SAP_PIN_UNBLOCK_REQ>
     pukId             u8          u8         pukId         |input;|    
     pukCode[9]        array       u8         pukCode[9]    |multiedit;|
     pinCode[9]        array       u8         pinCode[9]    |multiedit;|
</sub T_MOBI_SAP_PIN_UNBLOCK_REQ>                      



<sub T_MobiErr>
     indexId          u16         u16        indexId          |input;| 
     causeSelect      u8          u8         causeSelect      |input;| 
     sw1              u8          u8         sw1              |input;| 
     sw2              u8          u8         sw2              |input;| 
</sub T_MobiErr>                        



<sub T_MOBI_SAP_PIN_CHANGE_REQ>
     pinId;              u8         u8      pinId;           |input;|                 
     pinCode[9]          array      u8      pinCode[9]       |multiedit;| 
     newPinCode[9]       array      u8      newPinCode[9]    |multiedit;| 
</sub T_MOBI_SAP_PIN_CHANGE_REQ>                             



<sub T_MOBI_SAP_PIN_ENABLE_REQ>
       pinId         u8       u8      pinId         |input;|    
       pinCode[9]    array    u8      pinCode[9]    |multiedit;|
</sub T_MOBI_SAP_PIN_ENABLE_REQ>                      


<sub T_MOBI_SAP_PIN_DISABLE_REQ>
      pinId          u8        u8       pinId         |input;|        
      pinCode[9]     array     u8       pinCode       |multiedit;|
</sub T_MOBI_SAP_PIN_DISABLE_REQ>                          


<sub T_MOBI_SAP_AUTHENTICATE_REQ>
      authContextId                           u8      u8    |input;| 
      length                                  u8      u8    |input;|    
      authData[SIM_MAX_SIZE_AUTH_REQ_DATA]    array   u8    |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_REQ>



<sub T_MOBI_SAP_AUTHENTICATE_CNF>
      length                                  u16        u16       |input;|    
      authData[SIM_MAX_SIZE_AUTH_RSP_DATA]    array      u8        |multiedit;|
</sub T_MOBI_SAP_AUTHENTICATE_CNF>                                         
                                                                        

<sub T_MOBI_SAP_FILE_ENQUIRE_REQ>
     indexId                                   u16     u16     indexId                                   |input;|
     offsetVal                                 u8      u8      offsetVal                                 |input;|    
     lengthPattern                             u8      u8      lengthPattern                             |input;|    
     seekPattern[SIM_MAX_LEN_SEARCH_PATTERN]   array   u8      seekPattern[SIM_MAX_LEN_SEARCH_PATTERN]   |multiedit;|  
</sub T_MOBI_SAP_FILE_ENQUIRE_REQ>



<sub T_MOBI_SAP_FILE_ENQUIRE_CNF>
   indexId                             u16       u16       indexId                              |input;|                
   lengthInfo                          u8        u8        lengthInfo                           |input;|    
   fileInfo[SIM_MAX_LEN_STATUS]        array     u8        fileInfo[SIM_MAX_LEN_STATUS]         |multiedit;|
   seekNumber                          u8        u8        seekNumber                           |input;|    
   seekInfo[MAX_SIZE_SEEK_RECORD_NUM]  array     u8        seekInfo[MAX_SIZE_SEEK_RECORD_NUM]   |multiedit;|
</sub T_MOBI_SAP_FILE_ENQUIRE_CNF>                                              



<sub T_MOBI_SAP_FILE_INVALIDATE_REQ>
      indexId     u16          u16       indexId            |input;| 
</sub T_MOBI_SAP_FILE_INVALIDATE_REQ>



<sub T_MOBI_SAP_FILE_INVALIDATE_CNF>
       indexId   u16      u16      indexId     |input;| 
</sub T_MOBI_SAP_FILE_INVALIDATE_CNF>


<sub T_MOBI_SAP_FILE_REHABILITATE_REQ>
   indexId    u16       u16       indexId     |input;|
</sub T_MOBI_SAP_FILE_REHABILITATE_REQ>


<sub T_MOBI_SAP_FILE_REHABILITATE_CNF>
   indexId    u16       u16       indexId     |input;|
</sub T_MOBI_SAP_FILE_REHABILITATE_CNF>



<sub T_MOBI_SAP_FILL_SST_REQ>
   indexId    u16       u16       indexId     |input;|
</sub T_MOBI_SAP_FILL_SST_REQ>



<sub T_MOBI_SAP_FILL_SST_CNF>
   indexId    u16       u16       indexId     |input;|
</sub T_MOBI_SAP_FILL_SST_CNF>



<sub T_MOBI_SAP_FILES_STATUS_REQ>
     nbOfFileId                          u8      u8              nbOfFileId    |input;|
     fileList[SIM_MAX_FILES_IN_LIST]   array     T_FileListReq   fileList      |multiedit;|
</sub T_MOBI_SAP_FILES_STATUS_REQ>



<sub T_FileListReq>
     indexId       u16      u16          indexId         |input;| 
     moreInfo      u8       u8           moreInfo        |input;| 
</sub T_FileListReq>


<sub T_MOBI_SAP_FILES_STATUS_CNF>
    nbOfFileId                          u8       u8              nbOfFileId    |input;|
     fileList[SIM_MAX_FILES_IN_LIST]   array     T_FileListReq   fileList      |multiedit;|
</sub T_MOBI_SAP_FILES_STATUS_CNF>



<sub T_MOBI_SAP_RECORD_READ_REQ>
      indexId         u16      u16        indexId          |input;| 
      recordNumber    u8       u8         recordNumber     |input;| 
</sub T_MOBI_SAP_RECORD_READ_REQ>


<sub T_MOBI_SAP_RECORD_READ_CNF>
      indexId                                 u16      u16        indexId                                 |input;|
      recordNumber                            u8       u8         recordNumber                            |input;|
      lengthOfRecord                          u8       u8         lengthOfRecord                          |input;|
      recordData[SIM_MAX_SIZE_RECORD_DATA]   array     u8         recordData[SIM_MAX_SIZE_RECORD_DATA]    |multiedit;|
</sub T_MOBI_SAP_RECORD_READ_CNF>



<sub T_MOBI_SAP_RECORD_UPDATE_REQ>
      indexId                                 u16      u16        indexId                                 |input;|
      recordNumber                            u8       u8         recordNumber                            |input;|
      lengthOfRecord                          u8       u8         lengthOfRecord                          |input;|
      recordData[SIM_MAX_SIZE_RECORD_DATA]   array     u8         recordData[SIM_MAX_SIZE_RECORD_DATA]    |multiedit;|
</sub T_MOBI_SAP_RECORD_UPDATE_REQ>



<sub T_MOBI_SAP_RECORD_UPDATE_CNF>
    indexId          u16         u16         indexId              |input;|
    recordNumber      u8          u8         recordNumber         |input;|
</sub T_MOBI_SAP_RECORD_UPDATE_CNF>


<sub T_MOBI_SAP_RECORD_INCREASE_REQ>
    indexId                                u16       u16         indexId                             |input;|  
    length                                 u8        u8          length                              |input;| 
    valueAdd[MAX_SIZE_VALUE_ADD_RECORD]   array      u8          valueAdd[MAX_SIZE_VALUE_ADD_RECORD] |multiedit;|
</sub T_MOBI_SAP_RECORD_INCREASE_REQ>


<sub T_MOBI_SAP_RECORD_INCREASE_CNF>
      indexId                                        u16        u16         indexId                                     |input;|       
      length                                         u8         u8          length                                      |input;|    
      valueAdd[MAX_SIZE_VALUE_ADD_RECORD]            array      u8          valueAdd[MAX_SIZE_VALUE_ADD_RECORD]         |multiedit;|
      lengthOfRecord                                 u8         u8          lengthOfRecord                              |input;|    
      recordIncreased[MAX_SIZE_INCREASED_RECORD]     array      u8          recordIncreased[MAX_SIZE_INCREASED_RECORD]  |multiedit;|
</sub T_MOBI_SAP_RECORD_INCREASE_CNF>


<sub T_MOBI_SAP_BINARY_READ_REQ>
      indexId           u16        u16        indexId         |input;|
      offsetVal         u16        u16        offsetVal       |input;|
      excpDataLen       u8         u8         excpDataLen     |input;|
</sub T_MOBI_SAP_BINARY_READ_REQ>


<sub T_MOBI_SAP_BINARY_READ_CNF>                                                                           
      indexId                                   u16      u16       indexId                                 |input;| 
      lengthData                                u16      u16       lengthData                              |input;| 
      binaryData[SIM_MAX_SIZE_BIN_DATA_READ]    array    u8        binaryData[SIM_MAX_SIZE_BIN_DATA_READ]  |multiedit;|
</sub T_MOBI_SAP_BINARY_READ_CNF>


<sub T_MOBI_SAP_BINARY_UPDATE_REQ>
    indexId                                      u16       u16      indexId           |input;|    
    offsetVal                                    u16       u16      offsetVal         |input;|    
    lengthData                                   u8        u8       lengthData        |input;|    
    binaryData[SIM_MAX_SIZE_BIN_DATA_UPDATE]     array     u8       binaryData        |multiedit;|
</sub T_MOBI_SAP_BINARY_UPDATE_REQ>



<sub T_MOBI_SAP_BINARY_UPDATE_CNF>
    indexId     u16     u16      indexId   |input;|
</sub T_MOBI_SAP_BINARY_UPDATE_CNF>



<sub T_MOBI_SAP_ENVELOPE_REQ>
     lengthData                             u8      u8      lengthData          |input;|    
     envParam[MAX_SIZE_ENV_PARAM_STK]      array    u8      envParam            |multiedit;|
     receiveRsp                             u8      u8      receiveRsp          |select;0:no_rsp;1:receive_rsp;|
</sub T_MOBI_SAP_ENVELOPE_REQ>



<sub T_MOBI_SAP_ENVELOPE_CNF>
      sw1                               u8       u8       sw1                |input;|                
      sw2                               u8       u8       sw2                |input;|                
      lengthData                        u16      u16      lengthData         |input;|    
      ackData[MAX_SIZE_ACK_DATA_STK]    array    u8       ackData            |multiedit;|
</sub T_MOBI_SAP_ENVELOPE_CNF>



<sub T_MOBI_SAP_TERMINAL_PROFILE_REQ>
    lengthData                                  u8        u8     lengthData         |input;|    
    terminalProfile[MAX_SIZE_TERM_PROF_STK]     array     u8     terminalProfile    |multiedit;|
</sub T_MOBI_SAP_TERMINAL_PROFILE_REQ>


<sub T_MOBI_SAP_TERMINAL_PROFILE_CNF>
     proactiveSession      u8    u8    proactiveSession     |input;|
</sub T_MOBI_SAP_TERMINAL_PROFILE_CNF>


<sub T_MOBI_SAP_TERMINAL_RESPONSE_REQ>
      lengthData                                  u8      u8       lengthData           |input;|    
      terminalResponse[MAX_SIZE_TERM_RESP_STK]   array    u8       terminalResponse     |multiedit;|
</sub T_MOBI_SAP_TERMINAL_RESPONSE_REQ>


<sub T_MOBI_SAP_TERMINAL_RESPONSE_CNF>
     proactiveSession        u8         u8      proactiveSession       |input;|
</sub T_MOBI_SAP_TERMINAL_RESPONSE_CNF>             


<sub T_MOBI_SAP_PROACTIVE_POLLING_REQ>
    timeInTicks     u32     u32     timeInTicks   |input;|
</sub T_MOBI_SAP_PROACTIVE_POLLING_REQ>


<sub T_MOBI_SAP_SIM_SESSION_REQ>
    sessionType       u8        u8      sessionType     |input;|
</sub T_MOBI_SAP_SIM_SESSION_REQ>



<sub T_MOBI_SAP_PRESENCE_DETE_REQ>
    detectiveStatus       u8        u8      detectiveStatus     |input;|
</sub T_MOBI_SAP_PRESENCE_DETE_REQ>


<sub T_MOBI_SAP_INIT_REQ>
   startUpInfo            u8        u8      startUpInfo     |input;|
</sub T_MOBI_SAP_INIT_REQ>



<sub T_MOBI_SAP_SIM_TOOLKIT_IND>
      lengthData                             u16      u16        lengthData        |input;|    
      toolkitCmd[MAX_SIZE_POACT_CMD_STK]     array    u8         toolkitCmd        |multiedit;|
</sub T_MOBI_SAP_SIM_TOOLKIT_IND>



<sub T_MOBI_SAP_OPEN_CHANNEL_REQ>
     length                       u8         u8      length     |input;|    
     dfName[SAP_MAX_AID_LEN]     array       u8      dfName     |multiedit;|
</sub T_MOBI_SAP_OPEN_CHANNEL_REQ>



<sub T_MOBI_SAP_OPEN_CHANNEL_CNF>
     sessionId         u8         u8      sessionId     |input;|    
</sub T_MOBI_SAP_OPEN_CHANNEL_CNF>



<sub T_MOBI_SAP_CLOSE_CHANNEL_REQ>
     sessionId         u8         u8      sessionId     |input;|    
</sub T_MOBI_SAP_CLOSE_CHANNEL_REQ>



<sub T_MOBI_SAP_CLOSE_CHANNEL_CNF>
     sessionId         u8         u8      sessionId     |input;|    
</sub T_MOBI_SAP_CLOSE_CHANNEL_CNF>


<sub T_MOBI_SAP_SEND_USIM_CMD_REQ>
      sessionId                                   u8        u8      sessionId        |input;|                       
      command                                     u8        u8      command          |input;|                      
      fileId                                      u16       u16     fileId           |input;|                      
      p1                                          u8        u8      p1               |input;|                    
      p2                                          u8        u8      p2               |input;|                       
      p3                                          u8        u8      p3               |input;|                       
      dataLength                                  u8        u8      dataLength       |input;|                       
      sendData[SIM_MAX_SIZE_SEND_DATA_ATCMD]     array      u8      sendData         |multiedit;|
      pathLength                                  u8        u8      pathLength       |input;|                        
      pathId[SIM_MAX_PATH_DATA_LEN]              array      u8      pathId           |multiedit;|
</sub T_MOBI_SAP_SEND_USIM_CMD_REQ>



<sub T_MOBI_SAP_SEND_USIM_CMD_CNF>
     causeSelect                                  u8        u8        causeSelect     |input;|    
     sw1                                          u8        u8        sw1             |input;|    
     sw2                                          u8        u8        sw2             |input;|    
     dataLength                                   u16       u16       dataLength      |input;|    
     rspData[SIM_MAX_SIZE_RECEIVE_DATA_ATCMD]    array      u8        rspData         |multiedit;|
</sub T_MOBI_SAP_SEND_USIM_CMD_CNF>


<sub T_MOBI_SAP_ODD_AUTHENTICATE_REQ>
      authContextId                          u8     u8     authContextId        |input;|
      lastSegmentId                          u8     u8     lastSegmentId        |select;0:not_last_segment;1:last_segment;|
      length                                 u8     u8     length               |input;|    
      authData[SIM_MAX_SIZE_AUTH_REQ_DATA]   array  u8     authData             |multiedit;|
</sub T_MOBI_SAP_ODD_AUTHENTICATE_REQ>


<sub T_MOBI_SAP_ODD_AUTHENTICATE_CNF>
     authRspFlag                             u8     u8       authRspFlag         |select;0:auth_rsp_without_data;1:else;|
     lastSegmentId                           u8     u8       lastSegmentId       |select;0:not_last_segment;1:last_segment;|
     length                                  u16    u16      length              |input;|     
     authData[SIM_MAX_SIZE_AUTH_RSP_DATA]   array   u8       authData            |multiedit;| 
</sub T_MOBI_SAP_ODD_AUTHENTICATE_CNF>


<sub T_MOBI_SAP_PIN_REPLACE_REQ>
        pinCode[9]    array     u8      pinCode     |multiedit;|
</sub T_MOBI_SAP_PIN_REPLACE_REQ>



<sub T_MOBI_SAP_RETRIEVE_DATA_REQ>
     indexId                                u16       u16       indexId            |input;|
     expcDataLen                            u8        u8        expcDataLen        |input;|    
     tag[SAP_MAX_DATA_ORIENTED_TAG_LEN]     array     u8        tag                |multiedit;|
</sub T_MOBI_SAP_RETRIEVE_DATA_REQ>


<sub T_MOBI_SAP_RETRIEVE_DATA_CNF>
     indexId                                       u16      u16    indexId         |input;|                        
     lastBlockId                                   u8       u8     lastBlockId     |select;0:not_the_last_block;1:the_last_block;|
     lengthData                                    u16      u16    lengthData      |input;|                             
     retrieveData[SIM_MAX_SIZE_DATA_RETRIEVE]     array     u8     retrieveData    |multiedit;|
</sub T_MOBI_SAP_RETRIEVE_DATA_CNF>


<sub T_MOBI_SAP_SET_DATA_REQ>
     indexId                           u16      u16     indexId              |input;|           
     firstBlockFlag                    u8       u8      firstBlockFlag       |select;0:not_the_first_block;1:the_first_block;|
     lengthData                        u8       u8      lengthData           |input;|               
     setData[SIM_MAX_SIZE_DATA_SET]   array     u8      setData              |multiedit;|
</sub T_MOBI_SAP_SET_DATA_REQ>


<sub T_MOBI_SAP_SET_DATA_CNF>
     indexId        u16      u16       indexId           |input;| 
     lastBlockId    u8       u8        lastBlockId       |select;0:not_the_last_block;1:the_last_block;|
</sub T_MOBI_SAP_SET_DATA_CNF>


<sub T_MOBI_SAP_ENTRANS_CMD_REQ>
    sessionId           u8       u8          sessionId          |input;| 
    cmdLength           u16      u16         cmdLength          |input;|    
    sendData[260]      array     u8          sendData[260]      |multiedit;|
</sub T_MOBI_SAP_ENTRANS_CMD_REQ>



<sub T_MOBI_SAP_ENTRANS_CMD_CNF>
    causeSelect         u8         u8       causeSelect         |input;|    
    rspLength           u16        u16      rspLength           |input;|    
    rspData[258]       array       u8       rspData[258]        |multiedit;|
</sub T_MOBI_SAP_ENTRANS_CMD_CNF> 



<sub T_SMREG_EPS_ACTIVATE_REQ>
      InstIndex                u8           u8              InstIndex             |input;| 
      ebi                      u8           u8              ebi                   |input;|     
      linkedEbi                u8           u8              linkedEbi             |input;|       
      pdnAddress               struct       T_PdnAddress 
      tfa                      struct       T_Tft          
      epsQos                   struct       T_EpsQos      
      apnLen                   u8           u8              apnLen                |input;|
      apn[MAX_APN_LEN]         array        u8              apn[MAX_APN_LEN]      |multiedit;|  
      pcoLen                   u8           u8              pcoLen                |input;|
      pco[MAX_PCO_LEN]         array        u8              pco[MAX_PCO_LEN]      |multiedit;| 
      flag                     u8           u8              flag                  |select;0:only_pdn_connection;1:pdn_connecion_with_attach process;|
      nsapi                    u8           u8              nsapi                 |input;|
</sub T_SMREG_EPS_ACTIVATE_REQ>




<sub T_PdnAddress>
    pdnType                                 u8      u8       pdnType            |input;|                   
    addressLen                              u8      u8       addressLen         |input;|                   
    addressInfor[MAX_ADDRESSINFOR_LEN]     array    u8       addressInfor       |multiedit;|
</sub T_PdnAddress>


<sub T_EpsQos>
    qci              u8       u8       qci               |input;| 
    flag             u8       u8       flag              |input;| 
    ulMBR            u8       u8       ulMBR             |input;| 
    dlMBR            u8       u8       dlMBR             |input;| 
    ulGBR            u8       u8       ulGBR             |input;| 
    dlGBR            u8       u8       dlGBR             |input;| 
    extendFlag       u8       u8       extendFlag        |input;| 
    ulMBRExtend      u8       u8       ulMBRExtend       |input;| 
    dlMBRExtend      u8       u8       dlMBRExtend       |input;| 
    ulGBRExtend      u8       u8       ulGBRExtend       |input;| 
    dlGBRExtend      u8       u8       dlGBRExtend       |input;|
</sub T_EpsQos>


<sub T_Tft>
      packetFiltersNum                                 u8       u8      packetFiltersNum        |input;|                   
      eBit                                             u8       u8      eBit                    |input;|                   
      tftOperationCode                                 u8       u8      tftOperationCode        |input;|                   
      packetFilterListLen                              u8       u8      packetFilterListLen     |input;|                   
      packetFilterList[MAX_PACKETFILTERLIST_LEN]      array     u8      packetFilterList        |multiedit;|
</sub T_Tft>



<sub T_SMREG_EPS_ACTIVATE_CNF>
     InstIndex          u8              u8               InstIndex             |input;|
     ebi                u8              u8               ebi                   |input;|
     linkedEbi          u8              u8               linkedEbi             |input;|
     pdnAddress         struct          T_PdnAddress 
     pcoLen             u8              u8               pcoLen                |input;|
     pco[MAX_PCO_LEN]   array           u8               pco[MAX_PCO_LEN]      |multiedit;|
     epsQos             struct          T_EpsQos
</sub T_SMREG_EPS_ACTIVATE_CNF>



<sub T_SMREG_EPS_ACTIVATE_ERR>
     InstIndex              u8           u8     InstIndex            |input;|
     cause                  u8           u8     cause                |input;|
     pcoLen                 u8           u8     pcoLen               |input;|
     pco[MAX_PCO_LEN]      array         u8     pco[MAX_PCO_LEN]     |multiedit;|
</sub T_SMREG_EPS_ACTIVATE_ERR>



<sub T_SMREG_EPS_DEACTIVATE_REQ>
       InstIndex             u8         u8      InstIndex         |input;|    
       ebi                   u8         u8      ebi               |input;|    
       linkedEbi             u8         u8      linkedEbi         |input;|    
       pcoLen                u8         u8      pcoLen            |input;|    
       pco[MAX_PCO_LEN]      array      u8      pco[MAX_PCO_LEN]  |multiedit;|
       cause                 u8         u8      cause             |input;|
</sub T_SMREG_EPS_DEACTIVATE_REQ>


<sub T_SMREG_EPS_DEACTIVATE_CNF>
      InstIndex        u8          u8       InstIndex       |input;|
      ebi              u8          u8       ebi             |input;|
      linkedEbi        u8          u8       linkedEbi       |input;|
<sub T_SMREG_EPS_DEACTIVATE_CNF>


<sub T_SMREG_EPS_MT_DEACTIVATE_IND>
     InstIndex             u8        u8       InstIndex            |input;|    
     ebi                   u8        u8       ebi                  |input;|    
     cause                 u8        u8       cause                |input;|    
     pcoLen                u8        u8       pcoLen               |input;|    
     pco[MAX_PCO_LEN]      array     u8       pco[MAX_PCO_LEN]     |multiedit;|
</sub T_SMREG_EPS_MT_DEACTIVATE_IND>


<sub T_SMREG_EPS_MT_MODIFY_IND>
       InstIndex              u8            u8            InstIndex     |input;| 
       ebi                    u8            u8            ebi           |input;| 
       qosFlag                u8            u8            qosFlag       |input;| 
       epsQos                 struct        T_EpsQos      
       tftFlag                u8            u8            tftFlag       |input;|
       tft                    struct         T_Tft        
       pcoLen                 u8            u8            pcoLen        |input;|
       pco[MAX_PCO_LEN]       array         u8            pco           |multiedit;|
</sub T_SMREG_EPS_MT_MODIFY_IND>



<sub T_SMREG_EPS_MODIFY_REQ>
      InstIndex              u8          u8          InstIndex          |input;|
      ebi                    u8          u8          ebi                |input;|
      ebiForPF               u8          u8          ebiForPF           |input;|
      tfa                    struct      T_Tft      
      qosFlag                u8          u8          qosFlag            |input;|
      epsQos                 struct      T_EpsQos
      causeFlag              u8          u8          causeFlag          |input;|
      cause                  u8          u8          cause              |input;|
      pcoLen                 u8          u8          pcoLen             |input;|
      pco[MAX_PCO_LEN]       array       u8          pco[MAX_PCO_LEN]   |multiedit;|
</sub T_SMREG_EPS_MODIFY_REQ>


<sub T_SMREG_EPS_MODIFY_CNF>
      InstIndex          u8             u8           InstIndex        |input;|
      ebi                u8             u8           ebi              |input;|
      linkedEbi          u8             u8           linkedEbi        |input;|
      qosFlag            u8             u8           qosFlag          |input;|
      epsQos             struct         T_EpsQos  
</sub T_SMREG_EPS_MODIFY_CNF>



<sub T_SMREG_EPS_MODIFY_ERR>
      InstIndex              u8          u8     InstIndex            |input;|
      ebi                    u8          u8     ebi                  |input;|
      cause                  u8          u8     cause                |input;|
      pcoLen                 u8          u8     pcoLen               |input;|
      pco[MAX_PCO_LEN]       array       u8     pco[MAX_PCO_LEN]     |multiedit;|
</sub T_SMREG_EPS_MODIFY_ERR>


<sub T_SMREG_EPS_MODIFY_RSP>
      InstIndex               u8          u8        InstIndex           |input;|    
      ebi                     u8          u8        ebi                 |input;|    
      pcoLen                  u8          u8        pcoLen              |input;|    
      pco[MAX_PCO_LEN]        array       u8        pco[MAX_PCO_LEN]    |multiedit;|
</sub T_SMREG_EPS_MODIFY_RSP>



<sub T_SMREG_EPS_MODIFY_REJ>
      InstIndex               u8          u8       InstIndex           |input;|    
      ebi                     u8          u8       ebi                 |input;|    
      cause                   u8          u8       cause               |input;|    
      pcoLen                  u8          u8       pcoLen              |input;|    
      pco[MAX_PCO_LEN]       array        u8       pco[MAX_PCO_LEN]    |multiedit;|
</sub T_SMREG_EPS_MODIFY_REJ>



<sub T_SMREG_EPS_DEFAULT_CONFIG_REQ>
      pdnType                  u8         u8      pdnType               |select;0x01:IPv4;0x02:IPv6;0x03:IPv4v6;0x05:non-IP;|
      apnLen                   u8         u8      apnLen                |input;|     
      apn[MAX_APN_LEN]         array      u8      apn[MAX_APN_LEN]      |multiedit;| 
      pcoLen;                  u8         u8      pcoLen                |input;|     
      pco[MAX_PCO_LEN]         array      u8      pco[MAX_PCO_LEN]      |multiedit;| 
</sub T_SMREG_EPS_DEFAULT_CONFIG_REQ>


<sub T_SMREG_EPS_ESMINDEX_IND>
     instIndex       u8           u8         instIndex        |input;|
     nsapi           u16          u16        nsapi            |input;|
</sub T_SMREG_EPS_ESMINDEX_IND>



<sub T_FL1C_IDL_MEAS_REQ>
         measId                    u16         u16                 |input;| 
         lteFreqNum                u16         u16                 |input;| 
         lteMeasFreqInfo[9]        array       T_L1cIdleFreqInfo   |multiedit;|
         lteMeasCellIdList[96]     array       u16                 |multiedit;|
         lteSyncOffset[96]         array       u32                 |multiedit;|
         cellCpType[96]            array       u8                  |multiedit;|
</sub T_FL1C_IDL_MEAS_REQ>



<sub T_L1cIdleFreqInfo>
      frequecy                u16         u16       frequecy                |input;|
      measBandWith            u8          u8        measBandWith            |input;|
      presenceAntennaPort1    u8          u8        presenceAntennaPort1    |input;|
      neighCellConfig         u8          u8        neighCellConfig         |input;|
      cellNum                 u8          u8        cellNum                 |input;|
      measUpdateType          u8          u8        measUpdateType          |input;|
      reserved                u8          u8        reserved                |input;|
</sub T_L1cIdleFreqInfo>






/// CQ IPC Message define

// 删除
<0x1000 OP_PS_NAS_SYS_START>
     signalHeader           struct     T_MsgHeader
</0x1000 OP_PS_NAS_SYS_START>


// EMM-SMS
<0x1000 OP_EMMSMS_EST_REQ>
    signalHeader      struct    T_MsgHeader
</0x1000 OP_EMMSMS_EST_REQ>


<0x1001 OP_EMMSMS_EST_CNF>
    signalHeader      struct    T_MsgHeader
</0x1001 OP_EMMSMS_EST_CNF>


<0x1002 OP_EMMSMS_ERROR_IND>
    signalHeader      struct    T_MsgHeader
    EMMSMS_ERROR_IND  struct    T_EMMSMS_ERROR_IND
</0x1002 OP_EMMSMS_ERROR_IND>


<0x1003 OP_EMMSMS_UNITDATA_REQ>
    signalHeader      struct    T_MsgHeader
    SMS_UNITDATA_REQ  struct    T_SMS_UNITDATA_REQ
</0x1003 OP_EMMSMS_UNITDATA_REQ>


<0x1004 OP_EMMSMS_UNITDATA_IND>
    signalHeader      struct    T_MsgHeader
    SMS_UNITDATA_IND  struct    T_SMS_UNITDATA_IND
</0x1004 OP_EMMSMS_UNITDATA_IND>


<0x1005 OP_EMMSMS_REL_REQ>
    signalHeader      struct    T_MsgHeader
    EMMSMS_REL_REQ    struct    T_EMMSMS_REL_REQ  
</0x1005 OP_EMMSMS_REL_REQ>


<0x1006 OP_EMMSMS_REG_STATE_REQ>
    signalHeader      struct    T_MsgHeader
</0x1006 OP_EMMSMS_REG_STATE_REQ>


<0x1007 OP_EMMSMS_REG_STATE_CNF>
    signalHeader            struct      T_MsgHeader
    EMMSMS_REG_STATE_CNF    struct      T_EMMSMS_REG_STATE_CNF
</0x1007 OP_EMMSMS_REG_STATE_CNF>


// EMM-ESM
<0x1020 OP_EMMESM_ESTABLISH_REQ>
    signalHeader            struct    T_MsgHeader     
    EMMESM_ESTABLISH_REQ    struct    T_EMMESM_ESTABLISH_REQ    
</0x1020 OP_EMMESM_ESTABLISH_REQ>



<0x1021 OP_EMMESM_ESTABLISH_CNF>
    signalHeader            struct    T_MsgHeader     
    EMMESM_ESTABLISH_CNF    struct    T_EMMESM_ESTABLISH_CNF
</0x1021 OP_EMMESM_ESTABLISH_CNF>


// 删除
<0x1022 OP_EMMESM_ESTABLISH_ERR>
    signalHeader            struct    T_MsgHeader     
</0x1022 OP_EMMESM_ESTABLISH_ERR>



<0x1023 OP_EMMESM_RELEASE_IND>
    signalHeader            struct    T_MsgHeader
    EMMESM_RELEASE_IND      struct    T_EMMESM_RELEASE_IND
</0x1023 OP_EMMESM_RELEASE_IND>



<0x1024 OP_EMMESM_EPS_STATUS_IND>
    signalHeader            struct    T_MsgHeader     
    EMMESM_EPS_STATUS_IND   struct    T_EMMESM_EPS_STATUS_IND
</0x1024 OP_EMMESM_EPS_STATUS_IND>



<0x1025 OP_EMMESM_DATA_REQ>
    signalHeader            struct    T_MsgHeader     
    EMMESM_DATA_REQ         struct b  T_EMMESM_DATA_REQ  
</0x1025 OP_EMMESM_DATA_REQ>



<0x1026 OP_EMMESM_DATA_IND>
    signalHeader            struct    T_MsgHeader     
    EMMESM_DATA_IND         struct    T_EMMESM_DATA_IND  
</0x1026 OP_EMMESM_DATA_IND>



<0x1027 OP_EMMESM_EPS_DELETE_REQ>
    signalHeader            struct    T_MsgHeader     
    EMMESM_EPS_DELETE_REQ   struct    T_EMMESM_EPS_DELETE_REQ
</0x1027 OP_EMMESM_EPS_DELETE_REQ>



<0x1028 OP_EMMESM_LOOP_TEST_REQ>
    signalHeader             struct   T_MsgHeader     
    EMMESM_LOOP_TEST_REQ     struct   T_EMMESM_LOOP_TEST_REQ
</0x1028 OP_EMMESM_LOOP_TEST_REQ>



<0x1029 OP_EMMESM_LOOP_TEST_IND>
    signalHeader             struct   T_MsgHeader     
    EMMESM_LOOP_TEST_IND     struct   T_EMMESM_LOOP_TEST_IND
</0x1029 OP_EMMESM_LOOP_TEST_IND>



<0x102a OP_EMMESM_DATA_CNF>
    signalHeader             struct   T_MsgHeader     
    EMMESM_DATA_CNF          struct   T_EMMESM_DATA_CNF
</0x102a OP_EMMESM_DATA_CNF>



<0x102b OP_EMMESM_ABORT_REQ>
    signalHeader             struct   T_MsgHeader     
</0x102b OP_EMMESM_ABORT_REQ>



<0x102c OP_EMMESM_PDN_CON_IND>
    signalHeader            struct    T_MsgHeader
    EMMESM_PDN_CON_IND      struct    T_EMMESM_PDN_CON_IND
</0x102c OP_EMMESM_PDN_CON_IND>



<0x102d OP_EMMESM_STATUS_REQ>
    signalHeader            struct    T_MsgHeader
    EMMESM_STATUS_REQ       struct    T_EMMESM_STATUS_REQ
</0x102d OP_EMMESM_STATUS_REQ>



// MMC-EMM
<0x1040 OP_EMM_CELL_INFO_REQ>
    signalHeader            struct    T_MsgHeader
</0x1040 OP_EMM_CELL_INFO_REQ>



<0x1041 OP_EMM_DETACH_REQ>
    signalHeader            struct    T_MsgHeader
</0x1041 OP_EMM_DETACH_REQ>



<0x1042 OP_EMM_LOOP_TEST_REQ>
    signalHeader            struct    T_MsgHeader
    EMM_LOOP_TEST_REQ       struct    T_EMM_LOOP_TEST_REQ
</0x1042 OP_EMM_LOOP_TEST_REQ>



<0x1043 OP_EMM_STATUS_REQ>
    signalHeader            struct    T_MsgHeader
    EMM_STATUS_REQ          struct    T_EMM_STATUS_REQ
</0x1043 OP_EMM_STATUS_REQ>



<0x1044 OP_EMM_LOOP_TEST_IND>
    signalHeader            struct    T_MsgHeader
    EMM_LOOP_TEST_IND       struct    T_EMM_LOOP_TEST_IND
</0x1044 OP_EMM_LOOP_TEST_IND>



<0x1045 OP_EMM_COMBINED_IND>
    signalHeader            struct    T_MsgHeader
    EMM_COMBINED_IND        struct    T_EMM_COMBINED_IND
</0x1045 OP_EMM_COMBINED_IND>



<0x1046 OP_EMM_AUTH_IND>
    signalHeader            struct    T_MsgHeader
    EMM_AUTH_IND            struct    T_EMM_AUTH_IND
</0x1046 OP_EMM_AUTH_IND>



<0x1047 OP_EMM_SERV_REJ_IND>
    signalHeader            struct    T_MsgHeader
</0x1047 OP_EMM_SERV_REJ_IND>



<0x1048 OP_EMM_TAU_IND>
    signalHeader            struct    T_MsgHeader
</0x1048 OP_EMM_TAU_IND>



<0x1049 OP_EMM_ATTACH_IND>
    signalHeader            struct    T_MsgHeader
</0x1049 OP_EMM_ATTACH_IND>



<0x104a OP_EMM_DETACH_IND>
    signalHeader            struct    T_MsgHeader
</0x104a OP_EMM_DETACH_IND>



<0x104b OP_EMM_GUTI_IND>
    signalHeader            struct    T_MsgHeader
</0x104b OP_EMM_GUTI_IND>



<0x104c OP_EMM_IMSI_PAGE_IND>
    signalHeader            struct    T_MsgHeader
</0x104c OP_EMM_IMSI_PAGE_IND>



<0x104d OP_EMM_STATUS_IND>
    signalHeader            struct    T_MsgHeader
    EMM_STATUS_IND          struct    T_EMM_STATUS_IND
</0x104d OP_EMM_STATUS_IND>



<0x104e OP_EMM_KENB_IND>
    signalHeader            struct    T_MsgHeader
</0x104e OP_EMM_KENB_IND>



<0x104f OP_EMM_BAR_ALLEVIATE_IND>
    signalHeader            struct    T_MsgHeader
    EMM_BAR_ALLEVIATE_IND   struct    T_EMM_BAR_ALLEVIATE_IND
</0x104f OP_EMM_BAR_ALLEVIATE_IND>



<0x1050 OP_EMM_SET_STATE_REQ>
    signalHeader            struct    T_MsgHeader
</0x1050 OP_EMM_SET_STATE_REQ>



// used by EMM-RABM
<0x1060 OP_EMMRABM_REESTABLISH_CNF>
    signalHeader            struct    T_MsgHeader
</0x1060 OP_EMMRABM_REESTABLISH_CNF>



<0x1061 OP_EMMRABM_REESTABLISH_REQ>
    signalHeader               struct    T_MsgHeader
     EMMRABM_REESTABLISH_REQ   struct    T_EMMRABM_REESTABLISH_REQ
</0x1061 OP_EMMRABM_REESTABLISH_REQ>



<0x1062 OP_EMMRABM_REESTABLISH_ERR>
    signalHeader               struct    T_MsgHeader
    EMMRABM_REESTABLISH_ERR    struct    T_EMMRABM_REESTABLISH_ERR
</0x1062 OP_EMMRABM_REESTABLISH_ERR>



<0x1063 OP_EMMRABM_STATUS_IND>
    signalHeader               struct    T_MsgHeader
    EMMRABM_STATUS_IND         struct    T_EMMRABM_STATUS_IND
</0x1063 OP_EMMRABM_STATUS_IND>



// used by RABM-ESM
<0x1080 OP_RABMESM_ACTIVATE_IND>
    signalHeader               struct    T_MsgHeader
    RABMESM_ACTIVATE_IND       struct    T_RABMESM_ACTIVATE_IND
</0x1080 OP_RABMESM_ACTIVATE_IND>



<0x1081 OP_RABMESM_ACTIVATE_RSP>
    signalHeader               struct    T_MsgHeader
    RABMESM_ACTIVATE_RSP        struct   T_RABMESM_ACTIVATE_RSP
</0x1081 OP_RABMESM_ACTIVATE_RSP>



<0x1082 OP_RABMESM_DEACTIVATE_IND>
    signalHeader               struct    T_MsgHeader
    RABMESM_DEACTIVATE_IND     struct    T_RABMESM_DEACTIVATE_IND
</0x1082 OP_RABMESM_DEACTIVATE_IND>


// 删除
<0x1083 OP_RABMESM_DEACTIVATE_RSP>
    signalHeader               struct    T_MsgHeader
</0x1083 OP_RABMESM_DEACTIVATE_RSP>



<0x1084 OP_RABMESM_DEACTIVATE_REQ>
    signalHeader               struct    T_MsgHeader
    RABMESM_DEACTIVATE_REQ     struct    T_RABMESM_DEACTIVATE_REQ
</0x1084 OP_RABMESM_DEACTIVATE_REQ>


// 删除
<0x1085 OP_RABMESM_STATUS_REQ>
    signalHeader               struct    T_MsgHeader
</0x1085 OP_RABMESM_STATUS_REQ>



<0x1086 OP_RABMESM_DATA_REQ>
    signalHeader               struct    T_MsgHeader
    RABMESM_DATA_REQ           struct    T_RABMESM_DATA_REQ
</0x1086 OP_RABMESM_DATA_REQ>



<0x1087 OP_RABMESM_DATA_IND>
    signalHeader               struct    T_MsgHeader
    RABMESM_DATA_IND           struct    T_RABMESM_DATA_IND
</0x1087 OP_RABMESM_DATA_IND>



<0x1088 OP_RABMESM_DATA_CNF>
    signalHeader               struct    T_MsgHeader
    RABMESM_DATA_CNF           struct    T_RABMESM_DATA_CNF
</0x1088 OP_RABMESM_DATA_CNF>



// MMC-Timer
<0x10a0 OP_T_MMC_periodicHplmnSearchTimer>
    signalHeader               struct    T_MsgHeader
</0x10a0 OP_T_MMC_periodicHplmnSearchTimer>



<0x10a1 OP_T_MMC_forbiddenListTimer>
    signalHeader               struct    T_MsgHeader
</0x10a1 OP_T_MMC_forbiddenListTimer>



<0x10a2 OP_T_MMC_powerOffTimer>
    signalHeader               struct    T_MsgHeader
</0x10a2 OP_T_MMC_powerOffTimer>



<0x10a3 OP_T_MMC_limitTimer>
    signalHeader               struct    T_MsgHeader
</0x10a3 OP_T_MMC_limitTimer>



<0x10a4 OP_T_MMC_lossCov>
    signalHeader               struct    T_MsgHeader
</0x10a4 OP_T_MMC_lossCov>



<0x10a5 OP_T_MMC_plmnSearchTimer>
    signalHeader               struct    T_MsgHeader
</0x10a5 OP_T_MMC_plmnSearchTimer>



<0x10a6 OP_T_MMC_plmnSearchReuseTimer>
    signalHeader               struct    T_MsgHeader
</0x10a6 OP_T_MMC_plmnSearchReuseTimer>



<0x10a7 OP_T_MMC_T3245>
    signalHeader               struct    T_MsgHeader
</0x10a7 OP_T_MMC_T3245>



<0x10a8 OP_T_MMC_T3247>
    signalHeader               struct    T_MsgHeader
</0x10a8 OP_T_MMC_T3247>



<0x10a9 OP_T_MMC_EDRX_WAKEUP>
    signalHeader               struct    T_MsgHeader
</0x10a9 OP_T_MMC_EDRX_WAKEUP>



<0x10c0 OP_T_GMS_TC1M>
    signalHeader               struct    T_MsgHeader
</0x10c0 OP_T_GMS_TC1M>



<0x10c1 OP_T_GMS_TR1M>
    signalHeader               struct    T_MsgHeader
</0x10c1 OP_T_GMS_TR1M>



<0x10c2 OP_T_GMS_TR2M>
    signalHeader               struct    T_MsgHeader
</0x10c2 OP_T_GMS_TR2M>



<0x10c3 OP_T_GMS_TRAM>
    signalHeader               struct    T_MsgHeader
</0x10c3 OP_T_GMS_TRAM>



<0x10c4 OP_T_GMS_reEstablishTimer>
    signalHeader               struct    T_MsgHeader
</0x10c4 OP_T_GMS_reEstablishTimer>



<0x10e0 OP_T_ESM_T3480>
    signalHeader               struct    T_MsgHeader
</0x10e0 OP_T_ESM_T3480>



<0x10e1 OP_T_ESM_T3481>
    signalHeader               struct    T_MsgHeader
</0x10e1 OP_T_ESM_T3481>



<0x10e2 OP_T_ESM_T3482>
    signalHeader               struct    T_MsgHeader
</0x10e2 OP_T_ESM_T3482>



<0x10e3 OP_T_ESM_T3492>
    signalHeader               struct    T_MsgHeader
</0x10e3 OP_T_ESM_T3492>



<0x10e4 OP_T_ESM_T3396>
    signalHeader               struct    T_MsgHeader
</0x10e4 OP_T_ESM_T3396>



// EMM Timer
<0x1100 OP_T_EMM_T3410>
    signalHeader               struct    T_MsgHeader
</0x1100 OP_T_EMM_T3410>



<0x1101 OP_T_EMM_T3411>
    signalHeader               struct    T_MsgHeader
</0x1101 OP_T_EMM_T3411>



<0x1102 OP_T_EMM_T3416>
    signalHeader               struct    T_MsgHeader
</0x1102 OP_T_EMM_T3416>



<0x1103 OP_T_EMM_T3418>
    signalHeader               struct    T_MsgHeader
</0x1103 OP_T_EMM_T3418>



<0x1104 OP_T_EMM_T3420>
    signalHeader               struct    T_MsgHeader
</0x1104 OP_T_EMM_T3420>



<0x1105 OP_T_EMM_T3421>
    signalHeader               struct    T_MsgHeader
</0x1105 OP_T_EMM_T3421>



<0x1106 OP_T_EMM_T3430>
    signalHeader               struct    T_MsgHeader
</0x1106 OP_T_EMM_T3430>



<0x1107 OP_T_EMM_T3402>
    signalHeader               struct    T_MsgHeader
</0x1107 OP_T_EMM_T3402>



<0x1108 OP_T_EMM_T3412>
    signalHeader               struct    T_MsgHeader
</0x1108 OP_T_EMM_T3412>



<0x1109 OP_T_EMM_T3417>
    signalHeader               struct    T_MsgHeader
</0x1109 OP_T_EMM_T3417>



<0x110a OP_T_EMM_localRelTimer>
    signalHeader               struct    T_MsgHeader
</0x110a OP_T_EMM_localRelTimer>



<0x110b OP_T_EMM_T3440>
    signalHeader               struct    T_MsgHeader
</0x110b OP_T_EMM_T3440>



<0x110c OP_T_EMM_T3442>
    signalHeader               struct    T_MsgHeader
</0x110c OP_T_EMM_T3442>



<0x110d OP_T_EMM_T3423>
    signalHeader               struct    T_MsgHeader
</0x110d OP_T_EMM_T3423>



<0x110e OP_T_EMM_T3417_ext>
    signalHeader               struct    T_MsgHeader
</0x110e OP_T_EMM_T3417_ext>



<0x110f OP_T_EMM_T3346>
    signalHeader               struct    T_MsgHeader
</0x110f OP_T_EMM_T3346>



<0x1110 OP_T_EMM_T3324>
    signalHeader               struct    T_MsgHeader
</0x1110 OP_T_EMM_T3324>



<0x1111 OP_T_EMM_ACCESS_BAR>
    signalHeader               struct    T_MsgHeader
</0x1111 OP_T_EMM_ACCESS_BAR>



//optype of NAS-EPCM, range from 0x1a00-------0x1fff
<0x1120 OP_RABM_EPCM_DATA_REQ>
    signalHeader            struct    T_MsgHeader     
    RABMEPCM_DATA_REQ_EXT   struct    T_RABMEPCM_DATA_REQ_EXT
</0x1120 OP_RABM_EPCM_DATA_REQ>



<0x1121 OP_RABM_EPCM_DATA_IND>
    signalHeader            struct    T_MsgHeader     
    RABMEPCM_DATA_IND_EXT   struct    T_RABMEPCM_DATA_IND_EXT
</0x1121 OP_RABM_EPCM_DATA_IND>



<0x1122 OP_EPCM_LOOP_TEST_IND>
    signalHeader            struct    T_MsgHeader    
    RABMEPCM_DATA_IND_EXT   struct    T_RABMEPCM_DATA_IND_EXT
</0x1122 OP_EPCM_LOOP_TEST_IND>



<0x1123 OP_EPCM_LOOP_TEST_RSP>
    signalHeader            struct    T_MsgHeader     
    EPCM_LOOP_TEST_IND      struct    T_EPCM_LOOP_TEST_IND
</0x1123 OP_EPCM_LOOP_TEST_RSP>
          

// 删除
<0x11ff OP_PS_NAS_SYS_END>
    signalHeader            struct    T_MsgHeader     
</0x11ff OP_PS_NAS_SYS_END>



// optype of  EAS,range from 0x1200-------0x13FF
<0x1200 OP_PS_EAS_SYS_START>
    signalHeader            struct    T_MsgHeader     
</0x1200 OP_PS_EAS_SYS_START>



// used by  ERR&NAS(MM layer/RABM)
<0x1200 OP_ERABMAS_ESTABLISH_IND>
    signalHeader            struct    T_MsgHeader     
    RABMAS_ESTABLISH_IND    struct    T_RABMAS_ESTABLISH_IND
</0x1200 OP_ERABMAS_ESTABLISH_IND>



<0x1201 OP_ERABMAS_ESTABLISH_RSP>
    signalHeader            struct    T_MsgHeader     
    RABMAS_ESTABLISH_RSP    struct    T_RABMAS_ESTABLISH_RSP
</0x1201 OP_ERABMAS_ESTABLISH_RSP>



<0x1202 OP_ERABMAS_RELEASE_IND>
    signalHeader            struct    T_MsgHeader
    RABMAS_RELEASE_IND      struct    T_RABMAS_RELEASE_IND
</0x1202 OP_ERABMAS_RELEASE_IND>



<0x1203 OP_ERABMAS_RELEASE_RSP>
    signalHeader            struct    T_MsgHeader
</0x1203 OP_ERABMAS_RELEASE_RSP>



<0x1204 OP_ERABMAS_STATUS_IND>
    signalHeader            struct    T_MsgHeader
    RABMAS_STATUS_IND       struct    T_RABMAS_STATUS_IND
</0x1204 OP_ERABMAS_STATUS_IND>

<sub T_EMMAS_RELEASE_IND>
  releaseCause        u8     u8        releaseCause      |input;|
  rrcSuspendFlag      u8     u8        rrcSuspendFlag    |input;|
  rrcSuspendFlag      u16     u16      rrcSuspendFlag    |input;|
</sub T_EMMAS_RELEASE_IND>

<0x1205 OP_EMMAS_RELEASE_IND>
    signalHeader            struct    T_MsgHeader     
    EMMAS_RELEASE_IND       struct    T_EMMAS_RELEASE_IND    
</0x1205 OP_EMMAS_RELEASE_IND>



<0x1206 OP_EMMAS_SYNC_IND>
    signalHeader            struct    T_MsgHeader     
    EMMAS_SYNC_IND          struct    T_EMMAS_SYNC_IND
</0x1206 OP_EMMAS_SYNC_IND>



<0x1207 OP_EMMAS_DATA_IND>
    signalHeader            struct    T_MsgHeader     
    EMMAS_DATA_IND          struct    T_EMMAS_DATA_IND
</0x1207 OP_EMMAS_DATA_IND>



<0x1208 OP_EMMAS_DATA_CNF>
    signalHeader            struct    T_MsgHeader     
    EMMAS_DATA_CNF          struct    T_EMMAS_DATA_CNF
</0x1208 OP_EMMAS_DATA_CNF>



<0x1209 OP_EMMAS_PAGE_IND>
    signalHeader            struct    T_MsgHeader     
    EMMAS_PAGE_IND          struct    T_EMMAS_PAGE_IND
</0x1209 OP_EMMAS_PAGE_IND>



<0x120a OP_EMMAS_ESTABLISH_CNF>
    signalHeader            struct    T_MsgHeader     
    EMMAS_ESTABLISH_CNF     struct    T_EMMAS_ESTABLISH_CNF
</0x120a OP_EMMAS_ESTABLISH_CNF>



<0x120b OP_EMMAS_ESTABLISH_REQ>
    signalHeader            struct    T_MsgHeader 
    EMMAS_ESTABLISH_REQ     struct    T_EMMAS_ESTABLISH_REQ       
</0x120b OP_EMMAS_ESTABLISH_REQ>



<0x120c OP_EMMAS_RELEASE_REQ>
    signalHeader            struct    T_MsgHeader 
    EMMAS_RELEASE_REQ       struct    T_EMMAS_RELEASE_REQ
</0x120c OP_EMMAS_RELEASE_REQ>



<0x120d OP_EMMAS_DATA_REQ>
    signalHeader            struct    T_MsgHeader 
    EMMAS_DATA_REQ          struct    T_EMMAS_DATA_REQ
</0x120d OP_EMMAS_DATA_REQ>



<0x120e OP_EMMAS_CEMODE_IND>
    signalHeader            struct    T_MsgHeader 
    EMMAS_CEMODE_IND        struct    T_EMMAS_CEMODE_IND
</0x120e OP_EMMAS_CEMODE_IND>



<0x1220 OP_ERR_BAR_ALLEVIATE_IND>
    signalHeader              struct    T_MsgHeader
    ERR_BAR_ALLEVIATE_IND     struct    T_ERR_BAR_ALLEVIATE_IND
</0x1220 OP_ERR_BAR_ALLEVIATE_IND>



<0x1221 OP_ERR_ACT_IND>
    signalHeader              struct    T_MsgHeader
    ERR_ACT_IND               struct    T_ERR_ACT_IND
</0x1221 OP_ERR_ACT_IND>



<0x1222 OP_ERR_ACT_ERR>
    signalHeader              struct    T_MsgHeader
</0x1222 OP_ERR_ACT_ERR>



<0x1223 OP_ERR_LOOP_TEST_CNF>
    signalHeader              struct    T_MsgHeader
    ERR_LOOP_TEST_CNF         struct    T_ERR_LOOP_TEST_CNF
</0x1223 OP_ERR_LOOP_TEST_CNF>



// 删除
<0x1224 OP_ERR_GET_HPLMN_CNF>
    signalHeader              struct    T_MsgHeader
</0x1224 OP_ERR_GET_HPLMN_CNF>



<0x1225 OP_ERR_GET_PLMN_CNF>
    signalHeader              struct    T_MsgHeader
    ERR_GET_PLMN_CNF          struct    T_ERR_GET_PLMN_CNF
</0x1225 OP_ERR_GET_PLMN_CNF>



<0x1226 OP_ERR_ACT_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_ACT_REQ               struct    T_ERR_ACT_REQ
</0x1226 OP_ERR_ACT_REQ>



<0x1227 OP_ERR_GET_PLMN_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_GET_PLMN_REQ          struct    T_ERR_GET_PLMN_REQ
</0x1227 OP_ERR_GET_PLMN_REQ>


// 删除
<0x1228 OP_ERR_GET_HPLMN_REQ>
    signalHeader              struct    T_MsgHeader
</0x1228 OP_ERR_GET_HPLMN_REQ>



<0x1229 OP_ERR_LOOP_TEST_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_LOOP_TEST_REQ         struct    T_ERR_LOOP_TEST_REQ
</0x1229 OP_ERR_LOOP_TEST_REQ>



<0x122a OP_ERR_SET_STATE_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_SET_STATE_REQ         struct    T_ERR_SET_STATE_REQ
</0x122a OP_ERR_SET_STATE_REQ>



<0x122b OP_ERR_NEW_PARAM_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_NEW_PARAM_REQ         struct    T_ERR_NEW_PARAM_REQ
</0x122b OP_ERR_NEW_PARAM_REQ>
           


<0x122c OP_ERR_DEACT_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_DEACT_REQ             struct    T_ERR_DEACT_REQ
</0x122c OP_ERR_DEACT_REQ>
    


<0x122d OP_ERR_ABORT_PLMN_REQ>
    signalHeader              struct    T_MsgHeader
</0x122d OP_ERR_ABORT_PLMN_REQ>



<0x122e OP_ERR_EDRX_PARAM_REQ>
    signalHeader              struct    T_MsgHeader
    ERR_EDRX_PARAM_REQ        struct    T_ERR_EDRX_PARAM_REQ
</0x122e OP_ERR_EDRX_PARAM_REQ>



<0x122f OP_ERR_EDRX_IND>
    signalHeader              struct    T_MsgHeader
    ERR_EDRX_IND              struct    T_ERR_EDRX_IND
</0x122f OP_ERR_EDRX_IND>



<0x1230 OP_ERR_ABORT_PLMN_CNF>
    signalHeader              struct    T_MsgHeader
</0x1230 OP_ERR_ABORT_PLMN_CNF>



<0x1231 OP_ERR_GET_PLMN_REJ>
    signalHeader              struct    T_MsgHeader
</0x1231 OP_ERR_GET_PLMN_REJ>



<0x1232 OP_ERR_DEACT_CNF>
    signalHeader              struct    T_MsgHeader
</0x1232 OP_ERR_DEACT_CNF>



// used by EMAC
<0x1240 OP_CMAC_RANDOM_ACC_REQ>
    signalHeader             struct    T_MsgHeader 
    CMAC_RANDOM_ACC_RE       struct    T_CMAC_RANDOM_ACC_REQ
</0x1240 OP_CMAC_RANDOM_ACC_REQ>



<0x1241 OP_CMAC_ACC_STATUS_IND>
    signalHeader             struct     T_MsgHeader 
    CMAC_ACC_STATUS_IND      struct     T_CMAC_ACC_STATUS_IND
</0x1241 OP_CMAC_ACC_STATUS_IND>



<0x1242 OP_CMAC_RESET_REQ>
    signalHeader             struct     T_MsgHeader 
</0x1242 OP_CMAC_RESET_REQ>



<0x1243 OP_CMAC_TA_TIME_OUT_IND>
    signalHeader             struct     T_MsgHeader 
</0x1243 OP_CMAC_TA_TIME_OUT_IND>



<0x1244 OP_CMAC_MAC_CONFIG_REQ>
    signalHeader             struct     T_MsgHeader 
    CMAC_MAC_CONFIG_REQ      struct     T_CMAC_MAC_CONFIG_REQ
</0x1244 OP_CMAC_MAC_CONFIG_REQ>



<0x1245 OP_CMAC_HANDOVER_ACC_REQ>
    signalHeader             struct     T_MsgHeader 
    CMAC_HANDOVER_ACC_REQ    struct     T_CMAC_HANDOVER_ACC_REQ
</0x1245 OP_CMAC_HANDOVER_ACC_REQ>



<0x1246 OP_MAC_DRX_EVENT_IND_LTE>
    signalHeader             struct     T_MsgHeader 
</0x1246 OP_MAC_DRX_EVENT_IND_LTE>



<0x1247 OP_MAC_SPS_SCHEDULE_IND>
    signalHeader             struct     T_MsgHeader 
</0x1247 OP_MAC_SPS_SCHEDULE_IND>



<0x1248 OP_MAC_STATUS_IND>
    signalHeader              struct     T_MsgHeader 
    MAC_STATUS_IND_LTE        struct     T_MAC_STATUS_IND_LTE
</0x1248 OP_MAC_STATUS_IND>



<0x1249 OP_MAC_DATA_REQ>
     signalHeader             struct     T_MsgHeader 
     MAC_DATA_REQ_LTE         struct     T_MAC_DATA_REQ_LTE
</0x1249 OP_MAC_DATA_REQ>



<0x124a OP_MAC_DATA_IND>
     signalHeader             struct     T_MsgHeader 
     MAC_DATA_IND_LTE         struct     T_MAC_DATA_IND_LTE
</0x124a OP_MAC_DATA_IND>



<0x124b OP_MAC_REGULAR_BSR_REQ>
     signalHeader             struct     T_MsgHeader 
     MAC_REGULAR_BSR_REQ_LTE  struct     T_MAC_REGULAR_BSR_REQ_LTE
</0x124b OP_MAC_REGULAR_BSR_REQ>



<0x124c OP_ML1C_PRACH_SEND_REQ>
     signalHeader             struct     T_MsgHeader 
     sigInfo                  struct     T_ML1C_PRACH_SEND_REQ
</0x124c OP_ML1C_PRACH_SEND_REQ>



<0x124d OP_ML1C_RAR_RESULT_IND>
     signalHeader             struct     T_MsgHeader 
     sigInfo                  struct     T_ML1C_RAR_RESULT_IND         
</0x124d OP_ML1C_RAR_RESULT_IND>



<0x124e OP_ML1C_SEND_MSG3_REQ>
     signalHeader             struct     T_MsgHeader 
     sigInfo                  struct     T_ML1C_SEND_MSG3_REQ
</0x124e OP_ML1C_SEND_MSG3_REQ>



<0x124f OP_ML1C_CONTENTION_SUCCESS_IND>
     signalHeader             struct     T_MsgHeader 
</0x124f OP_ML1C_CONTENTION_SUCCESS_IND>



<0x1250 OP_ML1C_PDCCH_ORDER_IND>
     signalHeader           struct     T_MsgHeader 
     sigInfo                struct     T_ML1C_PDCCH_ORDER_IND
</0x1250 OP_ML1C_PDCCH_ORDER_IND>



<0x1251 OP_ML1C_PRACH_END_REQ>
     signalHeader           struct     T_MsgHeader 
     sigInfo                struct     T_ML1C_PRACH_END_REQ
</0x1251 OP_ML1C_PRACH_END_REQ>



<0x1252 OP_ML1C_DL_HARQ_INFO_IND>
     signalHeader           struct     T_MsgHeader 
     sigInfo                struct     T_ML1C_DL_HARQ_INFO_IND
</0x1252 OP_ML1C_DL_HARQ_INFO_IND>



<0x1253 OP_ML1C_UL_HARQ_INFO_IND>
     signalHeader           struct     T_MsgHeader                   
     sigInfo                struct     T_ML1C_UL_HARQ_INFO_IND       
</0x1253 OP_ML1C_UL_HARQ_INFO_IND>



<0x1254 OP_ML1C_PDSCH_DLSCH_READ_IND>
     signalHeader           struct     T_MsgHeader
     sigInfo                struct     T_ML1C_PDSCH_DLSCH_READ_IND

</0x1254 OP_ML1C_PDSCH_DLSCH_READ_IND>



<0x1255 OP_ML1C_ADJUST_TA_REQ>
     signalHeader           struct     T_MsgHeader                   
     sigInfo                struct     T_ML1C_ADJUST_TA_REQ       

</0x1255 OP_ML1C_ADJUST_TA_REQ>



<0x1256 OP_ML1C_SR_SEND_REQ>
     signalHeader           struct     T_MsgHeader                   
     sigInfo                struct     T_ML1C_SR_SEND_REQ       

</0x1256 OP_ML1C_SR_SEND_REQ>



<0x1257 OP_ML1C_SR_STOP_REQ>
     signalHeader           struct     T_MsgHeader                   
</0x1257 OP_ML1C_SR_STOP_REQ>



<0x1258 OP_ML1C_PUSCH_SEND_REQ>
     signalHeader           struct     T_MsgHeader                   
     sigInfo                struct     T_ML1C_PUSCH_SEND_REQ       

</0x1258 OP_ML1C_PUSCH_SEND_REQ>



<0x1259 OP_ML1C_INITIAL_CR_SUCCESS_REQ>
     signalHeader           struct     T_MsgHeader                   
</0x1259 OP_ML1C_INITIAL_CR_SUCCESS_REQ>



<0x125a OP_ML1C_DRX_STATUS_REQ>
     signalHeader           struct     T_MsgHeader                   
     sigInfo                struct     T_ML1C_DRX_STATUS_REQ       

</0x125a OP_ML1C_DRX_STATUS_REQ>



<0x125b OP_ML1C_SR_MAXNUM_IND>
     signalHeader           struct     T_MsgHeader                   
</0x125b OP_ML1C_SR_MAXNUM_IND>



<0x125c OP_RL1C_SI_STOP_REQ>
     signalHeader           struct     T_MsgHeader
</0x125c OP_RL1C_SI_STOP_REQ>



<0x125d OP_RL1C_IDL_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
     RL1C_IDL_CONFIG_REQ    struct     T_RL1C_IDL_CONFIG_REQ
</0x125d OP_RL1C_IDL_CONFIG_REQ>



<0x125e OP_RL1C_FREQ_MEAS_REQ>
     signalHeader           struct     T_MsgHeader
     RL1C_FREQ_MEAS_REQ     struct     T_RL1C_FREQ_MEAS_REQ
</0x125e OP_RL1C_FREQ_MEAS_REQ>

 

<0x125f OP_RL1C_FREQ_MEAS_CNF>
     signalHeader           struct     T_MsgHeader
     RL1C_FREQ_MEAS_CNF     struct     T_RL1C_FREQ_MEAS_CNF
</0x125f OP_RL1C_FREQ_MEAS_CNF>

 

<0x1260 OP_RL1C_SI_READ_REQ>
     signalHeader           struct     T_MsgHeader
     RL1C_SI_READ_REQ       struct     T_RL1C_SI_READ_REQ
 
</0x1260 OP_RL1C_SI_READ_REQ>



<0x1261 OP_RL1C_PLMN_SEARCH_STOP_REQ>
     signalHeader           struct     T_MsgHeader
</0x1261 OP_RL1C_PLMN_SEARCH_STOP_REQ>



<0x1262 OP_RL1C_CELL_SEARCH_REQ>
     signalHeader               struct     T_MsgHeader
     RL1C_CELL_SEARCH_REQ       struct     T_RL1C_CELL_SEARCH_REQ 
</0x1262 OP_RL1C_CELL_SEARCH_REQ>



<0x1263 OP_RL1C_CELL_SYNC_REQ>
     signalHeader               struct     T_MsgHeader
     RL1C_CELL_SYNC_REQ         struct     T_RL1C_CELL_SYNC_REQ 
</0x1263 OP_RL1C_CELL_SYNC_REQ>



<0x1264 OP_RL1C_DEACT_REQ>
     signalHeader               struct     T_MsgHeader
     RL1C_DEACT_REQ             struct     T_RL1C_DEACT_REQ 
</0x1264 OP_RL1C_DEACT_REQ>

    

<0x1265 OP_RL1C_PWR_SWEEP_REQ>
     signalHeader               struct     T_MsgHeader
     RL1C_PWR_SWEEP_REQ         struct     T_RL1C_PWR_SWEEP_REQ 
</0x1265 OP_RL1C_PWR_SWEEP_REQ>

  
// 删除
<0x1266 OP_RL1C_FINE_PWR_SWEEP_REQ>
     signalHeader               struct     T_MsgHeader
</0x1266 OP_RL1C_FINE_PWR_SWEEP_REQ>


// 删除
<0x1267 OP_RL1C_MIB_DATA_IND>
     signalHeader               struct     T_MsgHeader
     RL1C_MIB_DATA_IND          struct     T_RL1C_MIB_DATA_IND 
</0x1267 OP_RL1C_MIB_DATA_IND>

  

<0x1268 OP_RL1C_SIB1_DATA_IND>
     signalHeader               struct     T_MsgHeader
     RL1C_SIB1_DATA_IND         struct     T_RL1C_SIB1_DATA_IND 

</0x1268 OP_RL1C_SIB1_DATA_IND>

 

<0x1269 OP_RL1C_SI_DATA_IND>
     signalHeader               struct     T_MsgHeader
     RL1C_SI_DATA_IND           struct     T_RL1C_SI_DATA_IND 

</0x1269 OP_RL1C_SI_DATA_IND>

  

<0x126a OP_RL1C_PWR_SWEEP_CNF>
     signalHeader               struct     T_MsgHeader
     RL1C_PWR_SWEEP_CNF         struct     T_RL1C_PWR_SWEEP_CNF 
</0x126a OP_RL1C_PWR_SWEEP_CNF>

 
// 删除
<0x126b OP_RL1C_FINE_PWR_SWEEP_CNF>
     signalHeader               struct     T_MsgHeader
</0x126b OP_RL1C_FINE_PWR_SWEEP_CNF>



<0x126c OP_RL1C_CELL_SEARCH_CNF>
     signalHeader               struct     T_MsgHeader
     RL1C_CELL_SEARCH_CNF       struct     T_RL1C_CELL_SEARCH_CNF 
</0x126c OP_RL1C_CELL_SEARCH_CNF>

  

<0x126d OP_RL1C_CELL_SYNC_CNF>
     signalHeader               struct     T_MsgHeader
     RL1C_CELL_SYNC_CNF         struct     T_RL1C_CELL_SYNC_CNF 
</0x126d OP_RL1C_CELL_SYNC_CNF>

  

<0x126e OP_RL1C_DEACT_CNF>
     signalHeader               struct     T_MsgHeader
</0x126e OP_RL1C_DEACT_CNF>



<0x126f OP_RL1C_OUT_OF_SERVICE_IND>
     signalHeader               struct     T_MsgHeader
</0x126f OP_RL1C_OUT_OF_SERVICE_IND>



<0x1270 OP_RL1C_PAGING_DATA_IND>
     signalHeader               struct     T_MsgHeader
     RL1C_PAGING_DATA_IND       struct     T_RL1C_PAGING_DATA_IND 
</0x1270 OP_RL1C_PAGING_DATA_IND>

  

<0x1271 OP_RL1C_DIRECT_IND>
     signalHeader               struct     T_MsgHeader
     RL1C_DIRECT_IND            struct     T_RL1C_DIRECT_IND 
</0x1271 OP_RL1C_DIRECT_IND>

  

<0x1272 OP_RL1C_EDRX_SLEEP_IND>
    signalHeader               struct     T_MsgHeader
    RL1C_EDRX_SLEEP_IND        struct     T_RL1C_EDRX_SLEEP_IND 
</0x1272 OP_RL1C_EDRX_SLEEP_IND>

  

<0x1273 OP_RL1C_IDL_MEAS_IND>
    signalHeader               struct     T_MsgHeader
    RL1C_IDL_MEAS_IND          struct     T_RL1C_IDL_MEAS_IND 
</0x1273 OP_RL1C_IDL_MEAS_IND>

  

<0x1274 OP_RL1C_CGI_MEAS_REQ>
    signalHeader               struct     T_MsgHeader
    RL1C_CGI_MEAS_REQ          struct     T_RL1C_CGI_MEAS_REQ 
</0x1274 OP_RL1C_CGI_MEAS_REQ>



<0x1275 OP_RL1C_CGI_MEAS_IND>
    signalHeader               struct     T_MsgHeader
    RL1C_CGI_MEAS_IND          struct     T_RL1C_CGI_MEAS_IND 
</0x1275 OP_RL1C_CGI_MEAS_IND>

 

<0x1276 OP_RL1C_STOP_CGI_REQ>
    signalHeader               struct     T_MsgHeader
</0x1276 OP_RL1C_STOP_CGI_REQ>



<0x1277 OP_RL1C_DCH_MEAS_REQ>
    signalHeader               struct     T_MsgHeader
    RL1C_DCH_MEAS_REQ          struct     T_RL1C_DCH_MEAS_REQ 
</0x1277 OP_RL1C_DCH_MEAS_REQ>



<0x1278 OP_RL1C_DCH_MEAS_IND>
    signalHeader               struct     T_MsgHeader
    RL1C_DCH_MEAS_IND          struct     T_RL1C_DCH_MEAS_IND 
</0x1278 OP_RL1C_DCH_MEAS_IND>



<0x1279 OP_RL1C_RLF_STATUS_IND>
    signalHeader               struct     T_MsgHeader
    RL1C_RLF_STATUS_IND        struct     T_RL1C_RLF_STATUS_IND
</0x1279 OP_RL1C_RLF_STATUS_IND>



<0x127a OP_RL1C_CHN_COMM_CONFIG_REQ>
    signalHeader               struct     T_MsgHeader
    RL1C_CHN_COMM_CONFIG_REQ   struct     T_RL1C_CHN_COMM_CONFIG_REQ 
</0x127a OP_RL1C_CHN_COMM_CONFIG_REQ>


<0x127b OP_RL1C_CHN_DED_CONFIG_REQ>
    signalHeader               struct     T_MsgHeader
    RL1C_CHN_DED_CONFIG_REQ    struct     T_RL1C_CHN_DED_CONFIG_REQ 
</0x127b OP_RL1C_CHN_DED_CONFIG_REQ>



<0x127c OP_RL1C_PHY_RESET_REQ>
    signalHeader               struct     T_MsgHeader
</0x127c OP_RL1C_PHY_RESET_REQ>



<0x127d OP_RL1C_PLMN_SEARCH_STOP_CNF>
    signalHeader               struct     T_MsgHeader
</0x127d OP_RL1C_PLMN_SEARCH_STOP_CNF>



// used by ERLC
<0x1280 OP_CRLC_CONFIG_REQ_LTE>
    signalHeader               struct     T_MsgHeader
    CRLC_CONFIG_REQ_LTE        struct     T_CRLC_CONFIG_REQ_LTE
</0x1280 OP_CRLC_CONFIG_REQ_LTE>

        

<0x1281 OP_CRLC_DEACT_REQ_LTE>
    signalHeader               struct     T_MsgHeader
    CRLC_DEACT_REQ_LTE         struct     T_CRLC_DEACT_REQ_LTE
</0x1281 OP_CRLC_DEACT_REQ_LTE>



// 删除
<0x1282 OP_RLC_TM_DATA_REQ_LTE>
    signalHeader               struct     T_MsgHeader
</0x1282 OP_RLC_TM_DATA_REQ_LTE>



<0x1283 OP_RLC_AM_DATA_IND_LTE>
    signalHeader            struct     T_MsgHeader
    RLC_AM_DATA_IND_LTE     struct     T_RLC_AM_DATA_IND_LTE
</0x1283 OP_RLC_AM_DATA_IND_LTE>



<0x1284 OP_RLC_UM_DATA_IND_LTE>
    signalHeader               struct     T_MsgHeader
    RLC_UM_DATA_IND_LTE        struct     T_RLC_UM_DATA_IND_LTE
</0x1284 OP_RLC_UM_DATA_IND_LTE>



<0x1285 OP_RLC_AM_DATA_CNF_LTE>
    signalHeader               struct     T_MsgHeader
    RLC_AM_DATA_CNF_LTE        struct     T_RLC_AM_DATA_CNF_LTE
</0x1285 OP_RLC_AM_DATA_CNF_LTE>



<0x1286 OP_CRLC_STATUS_IND_LTE>
    signalHeader               struct     T_MsgHeader
    CRLC_STATUS_IND_LTE        struct     T_CRLC_STATUS_IND_LTE
</0x1286 OP_CRLC_STATUS_IND_LTE>


// 删除
<0x1287 OP_RLC_TM_DATA_IND_LTE>
    signalHeader               struct     T_MsgHeader
</0x1287 OP_RLC_TM_DATA_IND_LTE>



<0x1288 OP_CRLC_STOP_IND_LTE>
    signalHeader               struct     T_MsgHeader
</0x1288 OP_CRLC_STOP_IND_LTE>



<0x1289 OP_CRLC_CONTINUE_IND_LTE>
    signalHeader               struct     T_MsgHeader
</0x1289 OP_CRLC_CONTINUE_IND_LTE>



<0x128a OP_RLC_STATUS_IND_LTE>
    signalHeader               struct     T_MsgHeader
    RLC_STATUS_IND_LTE         struct     T_RLC_STATUS_IND_LTE
</0x128a OP_RLC_STATUS_IND_LTE>



<0x128b OP_RLC_AM_DATA_REQ_LTE>
    signalHeader               struct     T_MsgHeader
    RLC_AM_DATA_REQ_LTE        struct     T_RLC_AM_DATA_REQ_LTE
</0x128b OP_RLC_AM_DATA_REQ_LTE>


<0x128c OP_RLC_UM_DATA_REQ_LTE>
    signalHeader              struct     T_MsgHeader
    RLC_UM_DATA_REQ_LT        struct     T_RLC_UM_DATA_REQ_LTE
</0x128c OP_RLC_UM_DATA_REQ_LTE>



<0x128d OP_RLC_DISDATA_REQ_LTE>
    signalHeader              struct     T_MsgHeader
</0x128d OP_RLC_DISDATA_REQ_LTE>



// used by EPDCP
<0x12a0 OP_CPDCP_CONFIG_REQ_LTE>
    signalHeader              struct     T_MsgHeader
    CPDCP_CONFIG_REQ_LTE      struct     T_CPDCP_CONFIG_REQ_LTE
</0x12a0 OP_CPDCP_CONFIG_REQ_LTE>



<0x12a1 OP_CPDCP_RELEASE_REQ_LTE>
    signalHeader              struct     T_MsgHeader
    CPDCP_RELEASE_REQ_LTE     struct     T_CPDCP_RELEASE_REQ_LTE
</0x12a1 OP_CPDCP_RELEASE_REQ_LTE>


// 删除
<0x12a2 OP_CPDCP_SECURITY_REQ_LTE>
    signalHeader              struct     T_MsgHeader
</0x12a2 OP_CPDCP_SECURITY_REQ_LTE>



<0x12a3 OP_CPDCP_DATA_REQ_LTE>
    signalHeader           struct     T_MsgHeader
    CPDCP_DATA_REQ_LTE     struct     T_CPDCP_DATA_REQ_LTE
</0x12a3 OP_CPDCP_DATA_REQ_LTE>



<0x12a4 OP_CPDCP_INTEGRITY_IND_LTE>
    signalHeader                struct     T_MsgHeader
    CPDCP_INTEGRITY_IND_LTE     struct     T_CPDCP_INTEGRITY_IND_LTE
</0x12a4 OP_CPDCP_INTEGRITY_IND_LTE>



<0x12a5 OP_CPDCP_DATA_CNF_LTE>
    signalHeader                struct     T_MsgHeader
    CPDCP_DATA_CNF_LTE          struct     T_CPDCP_DATA_CNF_LTE
</0x12a5 OP_CPDCP_DATA_CNF_LTE>



<0x12a6 OP_CPDCP_DATA_IND_LTE>
    signalHeader                struct     T_MsgHeader
    CPDCP_DATA_IND_LTE          struct     T_CPDCP_DATA_IND_LTE
</0x12a6 OP_CPDCP_DATA_IND_LTE>



<0x12a7 OP_PDCP_DATA_IND_LTE>
    signalHeader                struct     T_MsgHeader
    CPDCP_DATA_IND_LTE          struct     T_CPDCP_DATA_IND_LTE
</0x12a7 OP_PDCP_DATA_IND_LTE>



<0x12a8 OP_PDCP_DATA_REQ_LTE>
    signalHeader                struct     T_MsgHeader
    CPDCP_DATA_REQ_LTE          struct     T_CPDCP_DATA_REQ_LTE
</0x12a8 OP_PDCP_DATA_REQ_LTE>



<0x12a9 OP_PDCP_FLOW_ALLOWANCE_IND>
    signalHeader                     struct     T_MsgHeader
    PDCP_FLOW_ALLOWANCE_IND          struct     T_PDCP_FLOW_ALLOWANCE_IND
</0x12a9 OP_PDCP_FLOW_ALLOWANCE_IND>



<0x12aa OP_PDCP_RELEASE_FLOW_CTR_IND>
    signalHeader                     struct     T_MsgHeader
</0x12aa OP_PDCP_RELEASE_FLOW_CTR_IND>



<0x12ab OP_PDCP_ENTER_FLOW_CTR_IND>
    signalHeader                     struct     T_MsgHeader
</0x12ab OP_PDCP_ENTER_FLOW_CTR_IND>



<0x12ac OP_T_PDCP_Discard>
    signalHeader                     struct     T_MsgHeader
</0x12ac OP_T_PDCP_Discard>


// typedef  T_ML1C_RAR_RESULT_IND  T_DL1C_RAR_RESULT_IND;
<0x12c0 OP_DL1C_RAR_RESULT_IND>
    signalHeader      struct     T_MsgHeader
    sigInfo           struct     T_ML1C_RAR_RESULT_IND
</0x12c0 OP_DL1C_RAR_RESULT_IND>

  

// 删除
<0x12c1 OP_DL1C_PDCCH_ORDER_IND>
    signalHeader      struct     T_MsgHeader
    //sigInfo           struct     T_DL1C_PDCCH_ORDER_IND
</0x12c1 OP_DL1C_PDCCH_ORDER_IND>

  

<0x12c2 OP_DL1C_DL_HARQ_INFO_IND>
    signalHeader      struct     T_MsgHeader
    sigInfo           struct     T_ML1C_DL_HARQ_INFO_IND
</0x12c2 OP_DL1C_DL_HARQ_INFO_IND>



<0x12c3 OP_DL1C_UL_HARQ_INFO_IND>
     signalHeader           struct     T_MsgHeader
     sigInfo                struct     T_ML1C_UL_HARQ_INFO_IND
</0x12c3 OP_DL1C_UL_HARQ_INFO_IND>



// typedef  T_ML1C_PDSCH_DLSCH_READ_IND  T_DL1C_PDSCH_DLSCH_READ_IND;
<0x12c4 OP_DL1C_PDSCH_DLSCH_READ_IND>
     signalHeader           struct     T_MsgHeader
     sigInfo                struct     T_DL1C_PDSCH_DLSCH_READ_IND
</0x12c4 OP_DL1C_PDSCH_DLSCH_READ_IND>



<0x12c5 OP_PL1C_SR_MAXNUM_IND>
     signalHeader           struct     T_MsgHeader
</0x12c5 OP_PL1C_SR_MAXNUM_IND>


// 删除
<0x12c6 OP_PL1C_FREQ_MEAS_CNF>
     signalHeader           struct     T_MsgHeader
    // sigInfo                struct     T_PL1C_FREQ_MEAS_CNF
</0x12c6 OP_PL1C_FREQ_MEAS_CNF>


// 删除
<0x12c7 OP_DL1C_MIB_DATA_IND>
     signalHeader           struct     T_MsgHeader
     //sigInfo                struct     T_DL1C_MIB_DATA_IND
</0x12c7 OP_DL1C_MIB_DATA_IND>



<0x12c8 OP_DL1C_SIB1_DATA_IND>
     signalHeader           struct     T_MsgHeader
     sigInfo                struct     T_RL1C_SIB1_DATA_IND
</0x12c8 OP_DL1C_SIB1_DATA_IND>


// 删除
<0x12c9 OP_DL1C_SI_DATA_IND>
     signalHeader           struct     T_MsgHeader
     sigInfo                struct     T_DL1C_SI_DATA_IND
</0x12c9 OP_DL1C_SI_DATA_IND>


// 删除
<0x12ca OP_PL1C_PWR_SWEEP_CNF>
     signalHeader           struct     T_MsgHeader

</0x12ca OP_PL1C_PWR_SWEEP_CNF>


// 删除
<0x12cb OP_PL1C_FINE_PWR_SWEEP_CNF>
     signalHeader           struct     T_MsgHeader

</0x12cb OP_PL1C_FINE_PWR_SWEEP_CNF>


// 删除
<0x12cc OP_PL1C_CELL_SEARCH_CNF>
     signalHeader           struct     T_MsgHeader

</0x12cc OP_PL1C_CELL_SEARCH_CNF>


// 删除
<0x12cd OP_PL1C_CELL_SYNC_CNF>
     signalHeader           struct     T_MsgHeader

</0x12cd OP_PL1C_CELL_SYNC_CNF>


// 删除
<0x12ce OP_DL1C_PAGING_DATA_IND>
     signalHeader           struct     T_MsgHeader

</0x12ce OP_DL1C_PAGING_DATA_IND>


// 删除
<0x12cf OP_DL1C_DIRECT_IND>
     signalHeader           struct     T_MsgHeader

</0x12cf OP_DL1C_DIRECT_IND>



<0x12d0 OP_PL1C_IDL_MEAS_IND>
     signalHeader           struct     T_MsgHeader
     PL1C_IDL_MEAS_IND      struct     T_PL1C_IDL_MEAS_IND
</0x12d0 OP_PL1C_IDL_MEAS_IND>



// 删除
<0x12d1 OP_PL1C_CGI_MEAS_IND>
     signalHeader           struct     T_MsgHeader

</0x12d1 OP_PL1C_CGI_MEAS_IND>


// 删除
<0x12d2 OP_PL1C_DCH_MEAS_IND>
     signalHeader           struct     T_MsgHeader
     sigInfo                struct     T_PL1C_DCH_MEAS_IND
</0x12d2 OP_PL1C_DCH_MEAS_IND>



<0x12d3 OP_PL1C_SYNC_STATUS_IND>
     signalHeader           struct     T_MsgHeader
     PL1C_SYNC_STATUS_IND   struct     T_PL1C_SYNC_STATUS_IND
</0x12d3 OP_PL1C_SYNC_STATUS_IND>



<0x12d4 OP_PL1C_PAGING_END_IND>
     signalHeader           struct     T_MsgHeader
</0x12d4 OP_PL1C_PAGING_END_IND>


<0x12d5 OP_PL1C_DEACTIVE_ALL_BE_CNF>
     signalHeader           struct     T_MsgHeader
</0x12d5 OP_PL1C_DEACTIVE_ALL_BE_CNF>



<0x12d6 OP_PL1C_RL_SYNC_IND>
     signalHeader           struct     T_MsgHeader
     PL1C_RL_SYNC_IND       struct     T_PL1C_RL_SYNC_IND
</0x12d6 OP_PL1C_RL_SYNC_IND>


// 删除
<0x12d7 OP_PL1C_PLMN_SEARCH_STOP_CNF>
     signalHeader           struct     T_MsgHeader
</0x12d7 OP_PL1C_PLMN_SEARCH_STOP_CNF>



// the timer used by EAS
<0x1300 OP_T_ERRC_readSi>
     signalHeader           struct     T_MsgHeader
</0x1300 OP_T_ERRC_readSi>



<0x1301 OP_T_ERRC_reselection>
     signalHeader           struct     T_MsgHeader
</0x1301 OP_T_ERRC_reselection>



<0x1302 OP_T_ERRC_barred>
     signalHeader           struct     T_MsgHeader
</0x1302 OP_T_ERRC_barred>



<0x1303 OP_T_ERRC_crmax>
     signalHeader           struct     T_MsgHeader
</0x1303 OP_T_ERRC_crmax>



<0x1304 OP_T_ERRC_siThreeHours>
     signalHeader           struct     T_MsgHeader
</0x1304 OP_T_ERRC_siThreeHours>



<0x1305 OP_T_ERRC_totalResTime>
     signalHeader           struct     T_MsgHeader
</0x1305 OP_T_ERRC_totalResTime>



<0x1306 OP_T_ERRC_T300>
     signalHeader           struct     T_MsgHeader
</0x1306 OP_T_ERRC_T300>



<0x1307 OP_T_ERRC_T301>
     signalHeader           struct     T_MsgHeader
</0x1307 OP_T_ERRC_T301>



<0x1308 OP_T_ERRC_T302>
     signalHeader           struct     T_MsgHeader
</0x1308 OP_T_ERRC_T302>



<0x1309 OP_T_ERRC_T303>
     signalHeader           struct     T_MsgHeader
</0x1309 OP_T_ERRC_T303>



<0x130a OP_T_ERRC_T304>
     signalHeader           struct     T_MsgHeader
</0x130a OP_T_ERRC_T304>



<0x130b OP_T_ERRC_T305>
     signalHeader           struct     T_MsgHeader
</0x130b OP_T_ERRC_T305>



<0x130c OP_T_ERRC_T306>
     signalHeader           struct     T_MsgHeader
</0x130c OP_T_ERRC_T306>



<0x130d OP_T_ERRC_T311>
     signalHeader           struct     T_MsgHeader
</0x130d OP_T_ERRC_T311>



<0x130e OP_T_ERRC_T320>
     signalHeader           struct     T_MsgHeader
</0x130e OP_T_ERRC_T320>



<0x130f OP_T_ERRC_T321>
     signalHeader           struct     T_MsgHeader
</0x130f OP_T_ERRC_T321>



<0x1310 OP_T_ERRC_Trelease>
     signalHeader           struct     T_MsgHeader
</0x1310 OP_T_ERRC_Trelease>



<0x1311 OP_T_ERRC_T40ms>
     signalHeader           struct     T_MsgHeader
</0x1311 OP_T_ERRC_T40ms>



<0x1312 OP_T_ERRC_T64ms>
     signalHeader           struct     T_MsgHeader
</0x1312 OP_T_ERRC_T64ms>



<0x1313 OP_T_ERRC_T120ms>
     signalHeader           struct     T_MsgHeader
</0x1313 OP_T_ERRC_T120ms>



<0x1314 OP_T_ERRC_crMax>
     signalHeader           struct     T_MsgHeader
</0x1314 OP_T_ERRC_crMax>



<0x1315 OP_T_ERRC_crMaxHyst>
     signalHeader           struct     T_MsgHeader
</0x1315 OP_T_ERRC_crMaxHyst>



<0x1316 OP_T_ERRC_cellSearch>
     signalHeader           struct     T_MsgHeader
</0x1316 OP_T_ERRC_cellSearch>



<0x1317 OP_T_ERRC_t320Timer>
     signalHeader           struct     T_MsgHeader
</0x1317 OP_T_ERRC_t320Timer>



<0x1318 OP_T_ERRC_waitTimer>
     signalHeader           struct     T_MsgHeader
</0x1318 OP_T_ERRC_waitTimer>



// for LTE  MAC TIMER 20100120
<0x1340 OP_T_EMAC_TimeALign>
     signalHeader           struct     T_MsgHeader
</0x1340 OP_T_EMAC_TimeALign>



<0x1341 OP_T_EMAC_ContentionResolution>
     signalHeader           struct     T_MsgHeader
</0x1341 OP_T_EMAC_ContentionResolution>



<0x1342 OP_T_EMAC_retxBSR>
     signalHeader           struct     T_MsgHeader
</0x1342 OP_T_EMAC_retxBSR>



<0x1343 OP_T_EMAC_periodicBSR>
     signalHeader           struct     T_MsgHeader
</0x1343 OP_T_EMAC_periodicBSR>



<0x1344 OP_T_EMAC_phrohitbitPHR>
     signalHeader           struct     T_MsgHeader
</0x1344 OP_T_EMAC_phrohitbitPHR>



<0x1345 OP_T_EMAC_periodicPHR>
     signalHeader           struct     T_MsgHeader
</0x1345 OP_T_EMAC_periodicPHR>



<0x1346 OP_T_EMAC_discardPeriocTimer>
     signalHeader           struct     T_MsgHeader
</0x1346 OP_T_EMAC_discardPeriocTimer>



<0x1347 OP_T_EMAC_loghSrProhibit>
     signalHeader           struct     T_MsgHeader
</0x1347 OP_T_EMAC_loghSrProhibit>



<0x1348 OP_T_L1C_T310>
     signalHeader           struct     T_MsgHeader
</0x1348 OP_T_L1C_T310>



<0x1349 OP_T_EMAC_abnormalTimer>
     signalHeader           struct     T_MsgHeader
</0x1349 OP_T_EMAC_abnormalTimer>



<0x1360 OP_T_ERLC_Reordering>
     signalHeader           struct     T_MsgHeader
</0x1360 OP_T_ERLC_Reordering>



<0x1361 OP_T_ERLC_PollRetransmit>
     signalHeader           struct     T_MsgHeader
</0x1361 OP_T_ERLC_PollRetransmit>



<0x1362 OP_T_ERLC_StatusProhibit>
     signalHeader           struct     T_MsgHeader
</0x1362 OP_T_ERLC_StatusProhibit>


// 删除
<0x13ff OP_PS_EAS_SYS_END>
     signalHeader           struct     T_MsgHeader
</0x13ff OP_PS_EAS_SYS_END>



<0x6001 OP_CPHY_CHANNEL_SCAN_REQ>
     signalHeader           struct     T_MsgHeader
</0x6001 OP_CPHY_CHANNEL_SCAN_REQ>



<0x6002 OP_CPHY_ACQ_REQ>
     signalHeader           struct     T_MsgHeader
</0x6002 OP_CPHY_ACQ_REQ>



<0x6003 OP_CPHY_CHANNEL_SCAN_STOP_REQ>
     signalHeader           struct     T_MsgHeader
</0x6003 OP_CPHY_CHANNEL_SCAN_STOP_REQ>



<0x6004 OP_CPHY_INTRAFREQ_CELLLIST_REQ>
     signalHeader           struct     T_MsgHeader
</0x6004 OP_CPHY_INTRAFREQ_CELLLIST_REQ>



<0x6005 OP_CPHY_INTERFREQ_CELLLIST_REQ>
     signalHeader           struct     T_MsgHeader
</0x6005 OP_CPHY_INTERFREQ_CELLLIST_REQ>



<0x6006 OP_PHY_ACCESS_REQ>
     signalHeader           struct     T_MsgHeader
</0x6006 OP_PHY_ACCESS_REQ>



<0x6007 OP_PHY_DATA_REQ>
     signalHeader           struct     T_MsgHeader
</0x6007 OP_PHY_DATA_REQ>



<0x6008 OP_CPHY_ASU_REQ>
     signalHeader           struct     T_MsgHeader
</0x6008 OP_CPHY_ASU_REQ>



<0x6009 OP_CPHY_SIB_UPDATE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6009 OP_CPHY_SIB_UPDATE_REQ>



<0x600a OP_CPHY_IRAT_CELLLIST_REQ>
     signalHeader           struct     T_MsgHeader
</0x600a OP_CPHY_IRAT_CELLLIST_REQ>



<0x600b OP_CPHY_CHANNEL_SCAN_CNF>
     signalHeader           struct     T_MsgHeader
</0x600b OP_CPHY_CHANNEL_SCAN_CNF>



<0x600c OP_CPHY_ACQ_CNF>
     signalHeader           struct     T_MsgHeader
</0x600c OP_CPHY_ACQ_CNF>



<0x600d OP_CPHY_CELL_MEAS_IND>
     signalHeader           struct     T_MsgHeader
</0x600d OP_CPHY_CELL_MEAS_IND>



<0x600e OP_PHY_ACCESS_CNF>
     signalHeader           struct     T_MsgHeader
</0x600e OP_PHY_ACCESS_CNF>



<0x600f OP_PHY_DATA_IND>
     signalHeader           struct     T_MsgHeader
</0x600f OP_PHY_DATA_IND>



<0x6010 OP_PHY_TX_READY_IND>
     signalHeader           struct     T_MsgHeader
</0x6010 OP_PHY_TX_READY_IND>



<0x6011 OP_PHY_TX_UPA_INTR_IND>
     signalHeader           struct     T_MsgHeader
</0x6011 OP_PHY_TX_UPA_INTR_IND>



<0x6012 OP_PHY_HS_INTR_IND>
     signalHeader           struct     T_MsgHeader
</0x6012 OP_PHY_HS_INTR_IND>



<0x6013 OP_PHY_TX_DEACTIVATE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6013 OP_PHY_TX_DEACTIVATE_REQ>



<0x6014 OP_PHY_TX_ACTIVATE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6014 OP_PHY_TX_ACTIVATE_REQ>



<0x6015 OP_PHY_TX_COMMON_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6015 OP_PHY_TX_COMMON_CONFIG_REQ>



<0x6016 OP_PHY_TX_DEDICATED_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6016 OP_PHY_TX_DEDICATED_CONFIG_REQ>



<0x6017 OP_PHY_TX_HSDPA_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6017 OP_PHY_TX_HSDPA_CONFIG_REQ>



<0x6018 OP_PHY_TX_HSUPA_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6018 OP_PHY_TX_HSUPA_CONFIG_REQ>



<0x6019 OP_PHY_TX_ENCODE_ON_REQ>
     signalHeader           struct     T_MsgHeader
</0x6019 OP_PHY_TX_ENCODE_ON_REQ>



<0x601a OP_PHY_TX_ENCODE_OFF_REQ>
     signalHeader           struct     T_MsgHeader
</0x601a OP_PHY_TX_ENCODE_OFF_REQ>



<0x601b OP_PHY_TX_SFN_UPDATE_REQ>
     signalHeader           struct     T_MsgHeader
</0x601b OP_PHY_TX_SFN_UPDATE_REQ>



<0x601c OP_PHY_TX_PREAMBLE_REQ>
     signalHeader           struct     T_MsgHeader
</0x601c OP_PHY_TX_PREAMBLE_REQ>



<0x601d OP_PHY_TX_MEAS_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x601d OP_PHY_TX_MEAS_CONFIG_REQ>



<0x601e OP_PHY_TX_COMMON_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x601e OP_PHY_TX_COMMON_RELEASE_REQ>



<0x601f OP_PHY_TX_DEDICATED_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x601f OP_PHY_TX_DEDICATED_RELEASE_REQ>



<0x6020 OP_PHY_TX_PDSCH_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6020 OP_PHY_TX_PDSCH_RELEASE_REQ>



<0x6021 OP_PHY_TX_INTERNAL_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6021 OP_PHY_TX_INTERNAL_RELEASE_REQ>



<0x6022 OP_PHY_TX_ULDPCH_PARA_CHANGE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6022 OP_PHY_TX_ULDPCH_PARA_CHANGE_REQ>



<0x6023 OP_PHY_TX_PREAMBLE_CNF>
     signalHeader           struct     T_MsgHeader
</0x6023 OP_PHY_TX_PREAMBLE_CNF>



<0x6024 OP_PHY_RX_DEACTIVATE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6024 OP_PHY_RX_DEACTIVATE_REQ>



<0x6025 OP_PHY_RX_PCCPCH_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6025 OP_PHY_RX_PCCPCH_CONFIG_REQ>



<0x6026 OP_PHY_RX_PCCPCH_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6026 OP_PHY_RX_PCCPCH_RELEASE_REQ>



<0x6027 OP_PHY_RX_LINK_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6027 OP_PHY_RX_LINK_CONFIG_REQ>



<0x6028 OP_PHY_RX_COMMON_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6028 OP_PHY_RX_COMMON_CONFIG_REQ>



<0x6029 OP_PHY_RX_ACTIVATE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6029 OP_PHY_RX_ACTIVATE_REQ>



<0x602a OP_PHY_RX_DEDICATED_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x602a OP_PHY_RX_DEDICATED_CONFIG_REQ>



<0x602b OP_PHY_RX_HSDPA_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x602b OP_PHY_RX_HSDPA_CONFIG_REQ>



<0x602c OP_PHY_RX_HSUPA_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x602c OP_PHY_RX_HSUPA_CONFIG_REQ>



<0x602d OP_PHY_RX_DECODE_ON_REQ>
     signalHeader           struct     T_MsgHeader
</0x602d OP_PHY_RX_DECODE_ON_REQ>



<0x602e OP_PHY_RX_DECODE_OFF_REQ>
     signalHeader           struct     T_MsgHeader
</0x602e OP_PHY_RX_DECODE_OFF_REQ>



<0x602f OP_PHY_RX_TM_MEASURE_REQ>
     signalHeader           struct     T_MsgHeader
</0x602f OP_PHY_RX_TM_MEASURE_REQ>



<0x6030 OP_PHY_RX_LOOP_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6030 OP_PHY_RX_LOOP_CONFIG_REQ>



<0x6031 OP_PHY_RX_MEAS_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6031 OP_PHY_RX_MEAS_CONFIG_REQ>



<0x6032 OP_PHY_RX_COMMON_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6032 OP_PHY_RX_COMMON_RELEASE_REQ>



<0x6033 OP_PHY_RX_DEDICATED_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6033 OP_PHY_RX_DEDICATED_RELEASE_REQ>



<0x6034 OP_PHY_RX_PDSCH_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6034 OP_PHY_RX_PDSCH_RELEASE_REQ>



<0x6035 OP_PHY_RX_QUALITY_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6035 OP_PHY_RX_QUALITY_RELEASE_REQ>



<0x6036 OP_PHY_RX_LINK_CONFIG_CNF>
     signalHeader           struct     T_MsgHeader
</0x6036 OP_PHY_RX_LINK_CONFIG_CNF>



<0x6037 OP_PHY_RX_TM_MEASURE_CNF>
     signalHeader           struct     T_MsgHeader
</0x6037 OP_PHY_RX_TM_MEASURE_CNF>



<0x6038 OP_PHY_RX_ESTABLISH_CNF>
     signalHeader           struct     T_MsgHeader
</0x6038 OP_PHY_RX_ESTABLISH_CNF>



<0x6039 OP_PHY_RX_IN_SYNC_IND>
     signalHeader           struct     T_MsgHeader
</0x6039 OP_PHY_RX_IN_SYNC_IND>



<0x603a OP_PHY_RX_OUT_OF_SYNC_IND>
     signalHeader           struct     T_MsgHeader
</0x603a OP_PHY_RX_OUT_OF_SYNC_IND>



<0x603b OP_PHY_TX_ULDPSCH_PARA_CHANGE_REQ>
     signalHeader           struct     T_MsgHeader
</0x603b OP_PHY_TX_ULDPSCH_PARA_CHANGE_REQ>



<0x603c OP_CPHY_TEST_IN_SYNC>
     signalHeader           struct     T_MsgHeader
</0x603c OP_CPHY_TEST_IN_SYNC>



<0x603d OP_CPHY_DCH_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x603d OP_CPHY_DCH_CONFIG_REQ>



//prf add for hspa
<0x603e OP_PHY_EDPDCH_SEND_REQ>
     signalHeader           struct     T_MsgHeader
</0x603e OP_PHY_EDPDCH_SEND_REQ>



<0x603f OP_PHY_GRANT_INFO_IND>
     signalHeader           struct     T_MsgHeader
</0x603f OP_PHY_GRANT_INFO_IND>



<0x6040 OP_PHY_HSPDSCH_READ_IND>
     signalHeader           struct     T_MsgHeader
</0x6040 OP_PHY_HSPDSCH_READ_IND>



<0x6041 OP_CPHY_HSDSCH_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6041 OP_CPHY_HSDSCH_CONFIG_REQ>



<0x6042 OP_CPHY_HSDSCH_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6042 OP_CPHY_HSDSCH_RELEASE_REQ>



<0x6043 OP_CPHY_EDCH_CONFIG_REQ>
     signalHeader           struct     T_MsgHeader
</0x6043 OP_CPHY_EDCH_CONFIG_REQ>



<0x6044 OP_CPHY_EDCH_RELEASE_REQ>
     signalHeader           struct     T_MsgHeader
</0x6044 OP_CPHY_EDCH_RELEASE_REQ>



<0x6045 OP_PHY_SLP_WAKEUP_REQ>
     signalHeader           struct     T_MsgHeader
</0x6045 OP_PHY_SLP_WAKEUP_REQ>



<0x6046 OP_PHY_SLP_WAKEUP_IND>
     signalHeader           struct     T_MsgHeader
</0x6046 OP_PHY_SLP_WAKEUP_IND>



<0x6047 OP_PHY_SLP_SLEEP_REQ>
     signalHeader           struct     T_MsgHeader
</0x6047 OP_PHY_SLP_SLEEP_REQ>



<0x6048 OP_T_ADP_phyTxReadyTimer>
     signalHeader           struct     T_MsgHeader
</0x6048 OP_T_ADP_phyTxReadyTimer>


// 删除
<0x007c OP_ADP_XML_PARA_IND>
     signalHeader           struct     T_MsgHeader
</0x007c OP_ADP_XML_PARA_IND>


// 删除
<0x007d OP_ADP_AT_CMD_MODIFY_IND>
     signalHeader           struct     T_MsgHeader
</0x007d OP_ADP_AT_CMD_MODIFY_IND>


// 删除
<0x007e OP_ADP_SystemInformation_Modify_IND>
     signalHeader           struct     T_MsgHeader
</0x007e OP_ADP_SystemInformation_Modify_IND>


<0x12d8 OP_FL1C_PAGING_START_REQ>
   signalHeader               struct     T_MsgHeader
   T_FL1C_PAGING_START_REQ   struct  T_FL1C_PAGING_START_REQ
</0x12d8 OP_FL1C_PAGING_START_REQ>


<0x0000 OP_NAS_PA_SYS_START>
    signalHeader               struct     T_MsgHeader

</0x0000 OP_NAS_PA_SYS_START>



<0x0001 OP_CAPI_RMI_FIELD_STRENGTH_IND>
    signalHeader                  struct     T_MsgHeader
    CAPI_RMI_FIELD_STRENGTH_IND   STRUCT     T_CAPI_RMI_FIELD_STRENGTH_IND
</0x0001 OP_CAPI_RMI_FIELD_STRENGTH_IND>



<0x0002 OP_CAPI_L3_TRACE_DATA_IND>
    signalHeader               struct     T_MsgHeader
    CAPI_L3_TRACE_DATA_IND     struct     T_CAPI_L3_TRACE_DATA_IND
</0x0002 OP_CAPI_L3_TRACE_DATA_IND>



// optype for MMC_SPN
<0x0100 OP_CAPI_REG_MM_INFO_IND>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_MM_INFO_IND
</0x0100 OP_CAPI_REG_MM_INFO_IND>



<0x0101 OP_CAPI_REG_REGISTRATION_REQ>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_REGISTRATION_REQ
</0x0101 OP_CAPI_REG_REGISTRATION_REQ>



<0x0102 OP_CAPI_REG_REGISTRATION_CNF>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_REGISTRATION_CNF
</0x0102 OP_CAPI_REG_REGISTRATION_CNF>



<0x0103 OP_CAPI_REG_DEREGISTRATION_REQ>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_DEREGISTRATION_REQ
</0x0103 OP_CAPI_REG_DEREGISTRATION_REQ>



<0x0104 OP_CAPI_REG_DEREGISTRATION_CNF>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_DEREGISTRATION_CNF
</0x0104 OP_CAPI_REG_DEREGISTRATION_CNF>



<0x0105 OP_CAPI_REG_ATTACH_REQ>
    signalHeader               struct     T_MsgHeader

</0x0105 OP_CAPI_REG_ATTACH_REQ>



//<0x0106 OP_CAPI_REG_ATTACH_CNF>
//    signalHeader               struct     T_MsgHeader
//</0x0106 OP_CAPI_REG_ATTACH_CNF>



<0x0106 OP_CAPI_REG_DETACH_REQ>
    signalHeader               struct     T_MsgHeader

</0x0106 OP_CAPI_REG_DETACH_REQ>



//<0x0108 OP_CAPI_REG_DETACH_CNF>
//    signalHeader               struct     T_MsgHeader
//
//</0x0108 OP_CAPI_REG_DETACH_CNF>



<0x0107 OP_CAPI_REG_AVAIL_PLMN_REQ>
    signalHeader               struct     T_MsgHeader

</0x0107 OP_CAPI_REG_AVAIL_PLMN_REQ>



<0x0108 OP_CAPI_REG_AVAIL_PLMN_CNF>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_AVAIL_PLMN_CNF
</0x0108 OP_CAPI_REG_AVAIL_PLMN_CNF>



<0x0109 OP_CAPI_REG_SET_PLMN_REQ>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_SET_PLMN_REQ
</0x0109 OP_CAPI_REG_SET_PLMN_REQ>



<0x010a OP_CAPI_REG_SET_PLMN_CNF>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_SET_PLMN_CNF
</0x010a OP_CAPI_REG_SET_PLMN_CNF>



<0x010b OP_CAPI_REG_ABORT_PLMN_REQ>
    signalHeader               struct     T_MsgHeader

</0x010b OP_CAPI_REG_ABORT_PLMN_REQ>



//<0x010e OP_CAPI_REG_START_IND>
//    signalHeader               struct     T_MsgHeader
//</0x010e OP_CAPI_REG_START_IND>



<0x010c OP_CAPI_REG_STATE_IND>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_STATE_IND
</0x010c OP_CAPI_REG_STATE_IND>



<0x010d OP_CAPI_REG_SIM_ERROR_IND>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_SIM_ERROR_IND
</0x010d OP_CAPI_REG_SIM_ERROR_IND>



//<0x0111 OP_CAPI_REG_PREF_RAT_REQ>
//    signalHeader               struct     T_MsgHeader
//
//</0x0111 OP_CAPI_REG_PREF_RAT_REQ>



//<0x0112 OP_CAPI_REG_PREF_RAT_CNF>
//    signalHeader               struct     T_MsgHeader
//
//</0x0112 OP_CAPI_REG_PREF_RAT_CNF>



<0x010e OP_CAPI_REG_SHUTDOWN_REQ>
    signalHeader               struct     T_MsgHeader

</0x010e OP_CAPI_REG_SHUTDOWN_REQ>



<0x010f OP_CAPI_REG_PSM_CONFIG_REQ>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_REG_PSM_CONFIG_REQ
</0x010f OP_CAPI_REG_PSM_CONFIG_REQ>



<0x0110 OP_CAPI_REG_EDRX_CONFIG_REQ>
    signalHeader               struct     T_MsgHeader

</0x0110 OP_CAPI_REG_EDRX_CONFIG_REQ>



<0x0111 OP_CAPI_REG_LOSSCOV_EXPIRE_REQ>
    signalHeader               struct     T_MsgHeader

</0x0111 OP_CAPI_REG_LOSSCOV_EXPIRE_REQ>



// optype for GMS_SPM
<0x0200 OP_CAPI_SMS_TRANSMIT_REQ>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_TRANSMIT_REQ  
</0x0200 OP_CAPI_SMS_TRANSMIT_REQ>



<0x0201 OP_CAPI_SMS_TRANSMIT_CNF>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_TRANSMIT_CNF
</0x0201 OP_CAPI_SMS_TRANSMIT_CNF>



<0x0202 OP_CAPI_SMS_RECEIVE_IND>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_RECEIVE_IND
</0x0202 OP_CAPI_SMS_RECEIVE_IND>



<0x0203 OP_CAPI_SMS_RECEIVE_RSP>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_RECEIVE_RSP
</0x0203 OP_CAPI_SMS_RECEIVE_RSP>



<0x0204 OP_CAPI_SMS_MEMORY_AVAIL_REQ>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_MEMORY_AVAIL_REQ
</0x0204 OP_CAPI_SMS_MEMORY_AVAIL_REQ>



<0x0205 OP_CAPI_SMS_MEMORY_AVAIL_CNF>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_MEMORY_AVAIL_CNF
</0x0205 OP_CAPI_SMS_MEMORY_AVAIL_CNF>



<0x0206 OP_CAPI_SMS_REL_IND>
    signalHeader               struct     T_MsgHeader
    body                       struct     T_CAPI_SMS_REL_IND
</0x0206 OP_CAPI_SMS_REL_IND>



<0x0207 OP_CAPI_SMS_ABORT_REQ>
    signalHeader               struct     T_MsgHeader

</0x0207 OP_CAPI_SMS_ABORT_REQ>



//optype  for mobi
// mobi_sap.het
<0x0300 OP_MOBI_SAP_AUTHENTICATE_REQ>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_AUTHENTICATE_REQ  struct     T_MOBI_SAP_AUTHENTICATE_REQ
</0x0300 OP_MOBI_SAP_AUTHENTICATE_REQ>



<0x0301 OP_MOBI_SAP_AUTHENTICATE_CNF>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_AUTHENTICATE_CNF  struct     T_MOBI_SAP_AUTHENTICATE_CNF
</0x0301 OP_MOBI_SAP_AUTHENTICATE_CNF>



<0x0302 OP_MOBI_SAP_AUTHENTICATE_ERR>
    signalHeader               struct     T_MsgHeader
    MobiErr                    struct     T_MobiErr

</0x0302 OP_MOBI_SAP_AUTHENTICATE_ERR>





<0x0303 OP_MOBI_SAP_RECORD_READ_REQ>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_RECORD_READ_REQ   struct     T_MOBI_SAP_RECORD_READ_REQ
</0x0303 OP_MOBI_SAP_RECORD_READ_REQ>



<0x0304 OP_MOBI_SAP_RECORD_READ_CNF>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_RECORD_READ_CNF   struct     T_MOBI_SAP_RECORD_READ_CNF
</0x0304 OP_MOBI_SAP_RECORD_READ_CNF>



<0x0305 OP_MOBI_SAP_RECORD_READ_ERR>
    signalHeader               struct     T_MsgHeader
    MobiErr                    struct     T_MobiErr
</0x0305 OP_MOBI_SAP_RECORD_READ_ERR>



<0x0306 OP_MOBI_SAP_RECORD_UPDATE_REQ>
    signalHeader                 struct      T_MsgHeader
    MOBI_SAP_RECORD_UPDATE_REQ   struct      T_MOBI_SAP_RECORD_UPDATE_REQ
</0x0306 OP_MOBI_SAP_RECORD_UPDATE_REQ>



<0x0307 OP_MOBI_SAP_RECORD_UPDATE_CNF>
    signalHeader                struct     T_MsgHeader
    MOBI_SAP_RECORD_UPDATE_CNF  struct     T_MOBI_SAP_RECORD_UPDATE_CNF
</0x0307 OP_MOBI_SAP_RECORD_UPDATE_CNF>



<0x0308 OP_MOBI_SAP_RECORD_UPDATE_ERR>
    signalHeader               struct     T_MsgHeader
    MobiErr                    struct     T_MobiErr
</0x0308 OP_MOBI_SAP_RECORD_UPDATE_ERR>





<0x0309 OP_MOBI_SAP_BINARY_READ_REQ>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_BINARY_READ_REQ   struct     T_MOBI_SAP_BINARY_READ_REQ
</0x0309 OP_MOBI_SAP_BINARY_READ_REQ>



<0x030a OP_MOBI_SAP_BINARY_READ_CNF>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_BINARY_READ_CNF   struct     T_MOBI_SAP_BINARY_READ_CNF 
</0x030a OP_MOBI_SAP_BINARY_READ_CNF>



<0x030b OP_MOBI_SAP_BINARY_READ_ERR>
    signalHeader               struct     T_MsgHeader
    MobiErr                    struct     T_MobiErr
</0x030b OP_MOBI_SAP_BINARY_READ_ERR>



<0x030c OP_MOBI_SAP_BINARY_UPDATE_REQ>
    signalHeader                   struct     T_MsgHeader
    MOBI_SAP_BINARY_UPDATE_REQ     struct     T_MOBI_SAP_BINARY_UPDATE_REQ
</0x030c OP_MOBI_SAP_BINARY_UPDATE_REQ>



<0x030d OP_MOBI_SAP_BINARY_UPDATE_CNF>
    signalHeader               struct     T_MsgHeader
    MOBI_SAP_BINARY_UPDATE_CNF struct     T_MOBI_SAP_BINARY_UPDATE_CNF
</0x030d OP_MOBI_SAP_BINARY_UPDATE_CNF>



<0x030e OP_MOBI_SAP_BINARY_UPDATE_ERR>
    signalHeader               struct     T_MsgHeader
    MobiErr                    struct     T_MobiErr
</0x030e OP_MOBI_SAP_BINARY_UPDATE_ERR>




//optype  for ESM_SSM
// nas_api.het
<0x0400 OP_SMREG_EPS_ACTIVATE_REQ>
    signalHeader               struct     T_MsgHeader    
    SMREG_EPS_ACTIVATE_REQ    struct      T_SMREG_EPS_ACTIVATE_REQ
</0x0400 OP_SMREG_EPS_ACTIVATE_REQ>



<0x0401 OP_SMREG_EPS_ACTIVATE_CNF>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_ACTIVATE_CNF     struct     T_SMREG_EPS_ACTIVATE_CNF
</0x0401 OP_SMREG_EPS_ACTIVATE_CNF>



<0x0402 OP_SMREG_EPS_ACTIVATE_ERR>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_ACTIVATE_ERR     struct     T_SMREG_EPS_ACTIVATE_ERR
</0x0402 OP_SMREG_EPS_ACTIVATE_ERR>



<0x0403 OP_SMREG_EPS_DEACTIVATE_REQ>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_DEACTIVATE_REQ   struct     T_SMREG_EPS_DEACTIVATE_REQ
</0x0403 OP_SMREG_EPS_DEACTIVATE_REQ>



<0x0404 OP_SMREG_EPS_DEACTIVATE_CNF>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_DEACTIVATE_CNF   struct     T_SMREG_EPS_DEACTIVATE_CNF
</0x0404 OP_SMREG_EPS_DEACTIVATE_CNF>



<0x0405 OP_SMREG_EPS_MT_DEACTIVATE_IND>
    signalHeader                  struct     T_MsgHeader
    SMREG_EPS_MT_DEACTIVATE_IND   struct     T_SMREG_EPS_MT_DEACTIVATE_IND
</0x0405 OP_SMREG_EPS_MT_DEACTIVATE_IND>



<0x0406 OP_SMREG_EPS_MT_MODIFY_IND>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_MT_MODIFY_IND   struct      T_SMREG_EPS_MT_MODIFY_IND
</0x0406 OP_SMREG_EPS_MT_MODIFY_IND>



<0x0407 OP_SMREG_EPS_MODIFY_REQ>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_MODIFY_REQ       struct     T_SMREG_EPS_MODIFY_REQ
</0x0407 OP_SMREG_EPS_MODIFY_REQ>



<0x0408 OP_SMREG_EPS_MODIFY_CNF>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_MODIFY_CNF       struct     T_SMREG_EPS_MODIFY_CNF
</0x0408 OP_SMREG_EPS_MODIFY_CNF>



<0x0409 OP_SMREG_EPS_MODIFY_ERR>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_MODIFY_ERR       struct     T_SMREG_EPS_MODIFY_ERR
</0x0409 OP_SMREG_EPS_MODIFY_ERR>



<0x040a OP_SMREG_EPS_MODIFY_RSP>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_MODIFY_RSP       struct     T_SMREG_EPS_MODIFY_RSP
</0x040a OP_SMREG_EPS_MODIFY_RSP>



<0x040b OP_SMREG_EPS_MODIFY_REJ>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_MODIFY_REJ       struct     T_SMREG_EPS_MODIFY_REJ
</0x040b OP_SMREG_EPS_MODIFY_REJ>



<0x040c OP_SMREG_EPS_DEFAULT_CONFIG_REQ>
    signalHeader                   struct     T_MsgHeader
    SMREG_EPS_DEFAULT_CONFIG_REQ   struct     T_SMREG_EPS_DEFAULT_CONFIG_REQ
</0x040c OP_SMREG_EPS_DEFAULT_CONFIG_REQ>



<0x040d OP_SMREG_EPS_ESMINDEX_IND>
    signalHeader               struct     T_MsgHeader
    SMREG_EPS_ESMINDEX_IND     struct     T_SMREG_EPS_ESMINDEX_IND
</0x040d OP_SMREG_EPS_ESMINDEX_IND>



<0x0fff OP_NAS_PA_SYS_END>
    signalHeader               struct     T_MsgHeader
</0x0fff OP_NAS_PA_SYS_END>



<0x12da OP_FL1C_DEACTIVE_ALL_BE_REQ>
     signalHeader               struct     T_MsgHeader
</0x12da OP_FL1C_DEACTIVE_ALL_BE_REQ>


<0x12d9 OP_FL1C_IDL_MEAS_REQ>
     signalHeader               struct     T_MsgHeader
     FL1C_IDL_MEAS_REQ          struct     T_FL1C_IDL_MEAS_REQ
</0x12d9 OP_FL1C_IDL_MEAS_REQ>



