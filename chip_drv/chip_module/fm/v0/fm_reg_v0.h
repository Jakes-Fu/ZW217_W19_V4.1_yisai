/******************************************************************************
 ** Copyright (c) 2011 @ Spreadtrum Communication Inc.
 ** Spreadtrum Confidential Property. All rights are reserved.
 ******************************************************************************
 ** Module Name: <BT_FM>.<FM>.<FM>
 ** Author     : gary.gao 
 ** Date       : 2011-09-08 @ 13:35:18
 ** Description: the register C header file of Module FM .
 ** Version    : 
 **      ** V0.1 - First draft at 2011.07.25 
 **      ** V0.2 - Modified for SC6530 ASIC version at 2011.08.03 
 **      ** V0.3 - Added an UPD_CTRL register, remove some XX_SWT_CNT registers at 2011.08.07
 **      ** V0.4 - Added a DEPHA_SCAL register at 2011.08.09
 **      ** V0.5 - Based on the 8th released C code and data logger removed at 2011.08.19
 ******************************************************************************/
 
/******************************************************************************
 **                        Edit History                                       *
 ** ------------------------------------------------------------------------- *
 ** DATE        NAME                DESCRIPTION                               *
 ** 2011-09-08  gary.gao            Auto-Generated by RegsBuilder.            *
 **                                                                           *
 ******************************************************************************/

#ifndef _FM_REG_V_0_H_
#define _FM_REG_V_0_H_

#include "arm_reg.h"
#include "chip_drv_config.h"
#ifdef __cplusplus
extern "C"
{
#endif

/**---------------------------------------------------------------------------*
 **                        Macro Definition                                   *
 **---------------------------------------------------------------------------*/

//------------------------- Registers Define ----------------------------------
#define REG_FM_CTRL           (FM_REG_BASE + 0x0000)
#define REG_FM_EN             (FM_REG_BASE + 0x0004)
#define REG_RF_INIT_GAIN      (FM_REG_BASE + 0x0008)
#define REG_CHAN              (FM_REG_BASE + 0x000c)
#define REG_AGC_TBL_CLK       (FM_REG_BASE + 0x0010)
#define REG_SEEK_LOOP         (FM_REG_BASE + 0x0014)
#define REG_FMCTL_STI         (FM_REG_BASE + 0x0018)
#define REG_BAND_LMT          (FM_REG_BASE + 0x001C)
#define REG_BAND_SPACE        (FM_REG_BASE + 0x0020)
#define REG_INT_EN            (FM_REG_BASE + 0x0030)
#define REG_INT_CLR           (FM_REG_BASE + 0x0034)
#define REG_INT_STS           (FM_REG_BASE + 0x0038)
#define REG_SEEK_CH_TH        (FM_REG_BASE + 0x0040)
#define REG_AGC_TBL_RFRSSI0   (FM_REG_BASE + 0x0044)
#define REG_AGC_TBL_RFRSSI1   (FM_REG_BASE + 0x0048)
#define REG_AGC_TBL_WBRSSI    (FM_REG_BASE + 0x004C)
#define REG_AGC_IDX_TH        (FM_REG_BASE + 0x0050)
#define REG_AGC_RSSI_TH       (FM_REG_BASE + 0x0054)
#define REG_SEEK_ADPS         (FM_REG_BASE + 0x0058)
#define REG_STER_PWR          (FM_REG_BASE + 0x005C)
#define REG_AGC_CTRL          (FM_REG_BASE + 0x0060)
#define REG_AGC_ITV_TH        (FM_REG_BASE + 0x0064)
#define REG_AGC_ADPS0         (FM_REG_BASE + 0x0068)
#define REG_AGC_ADPS1         (FM_REG_BASE + 0x006C)
#define REG_PDP_TH            (FM_REG_BASE + 0x0070)
#define REG_PDP_DEV           (FM_REG_BASE + 0x0074)
#define REG_ADP_ST_CONF       (FM_REG_BASE + 0x0078)
#define REG_ADP_LPF_CONF      (FM_REG_BASE + 0x007C)
#define REG_DEPHA_SCAL        (FM_REG_BASE + 0x0080)
#define REG_HW_MUTE           (FM_REG_BASE + 0x0084)
#define REG_SW_MUTE           (FM_REG_BASE + 0x0088)
#define REG_UPD_CTRL          (FM_REG_BASE + 0x008C)
#define REG_AUD_BLD0          (FM_REG_BASE + 0x0090)
#define REG_AUD_BLD1          (FM_REG_BASE + 0x0094)
#define REG_AGC_HYS           (FM_REG_BASE + 0x0098)
#define REG_MONO_PWR          (FM_REG_BASE + 0x009C)
#define REG_RF_CFG_DLY        (FM_REG_BASE + 0x00A0)
#define REG_AGC_TBL_STS       (FM_REG_BASE + 0x00A4)
#define REG_ADP_BIT_SFT       (FM_REG_BASE + 0x00A8)
#define REG_SEEK_CNT          (FM_REG_BASE + 0x00AC)
#define REG_RSSI_STS          (FM_REG_BASE + 0x00B0)
#define REG_CHAN_FREQ_STS     (FM_REG_BASE + 0x00B8)
#define REG_FREQ_OFF_STS      (FM_REG_BASE + 0x00BC)
#define REG_INPWR_STS         (FM_REG_BASE + 0x00C0)
#define REG_RF_RSSI_STS       (FM_REG_BASE + 0x00C4)
#define REG_NO_LPF_STS        (FM_REG_BASE + 0x00C8)
#define REG_SMUTE_STS         (FM_REG_BASE + 0x00CC)
#define REG_WBRSSI_STS        (FM_REG_BASE + 0x00D0)
#define REG_AGC_BITS_TBL0     (FM_REG_BASE + 0x100 )
#define REG_AGC_BITS_TBL1     (FM_REG_BASE + 0x104 )
#define REG_AGC_BITS_TBL2     (FM_REG_BASE + 0x108 )
#define REG_AGC_BITS_TBL3     (FM_REG_BASE + 0x10c )
#define REG_AGC_BITS_TBL4     (FM_REG_BASE + 0x110 )
#define REG_AGC_BITS_TBL5     (FM_REG_BASE + 0x114 )
#define REG_AGC_BITS_TBL6     (FM_REG_BASE + 0x118 )
#define REG_AGC_BITS_TBL7     (FM_REG_BASE + 0x11c )
#define REG_AGC_BITS_TBL8     (FM_REG_BASE + 0x120 )
#define REG_AGC_BITS_TBL9     (FM_REG_BASE + 0x124 )
#define REG_AGC_BITS_TBL10    (FM_REG_BASE + 0x128 )
#define REG_AGC_BITS_TBL11    (FM_REG_BASE + 0x12c )
#define REG_AGC_BITS_TBL12    (FM_REG_BASE + 0x130 )
#define REG_AGC_BITS_TBL13    (FM_REG_BASE + 0x134 )
#define REG_AGC_BITS_TBL14    (FM_REG_BASE + 0x138 )
#define REG_AGC_BITS_TBL15    (FM_REG_BASE + 0x13c )
#define REG_AGC_BITS_TBL16    (FM_REG_BASE + 0x140 )
#define REG_AGC_BITS_TBL17    (FM_REG_BASE + 0x144 )
#define REG_AGC_VAL_TBL0      (FM_REG_BASE + 0x200 )
#define REG_AGC_VAL_TBL1      (FM_REG_BASE + 0x204 )
#define REG_AGC_VAL_TBL2      (FM_REG_BASE + 0x208 )
#define REG_AGC_VAL_TBL3      (FM_REG_BASE + 0x20c )
#define REG_AGC_VAL_TBL4      (FM_REG_BASE + 0x210 )
#define REG_AGC_VAL_TBL5      (FM_REG_BASE + 0x214 )
#define REG_AGC_VAL_TBL6      (FM_REG_BASE + 0x218 )
#define REG_AGC_VAL_TBL7      (FM_REG_BASE + 0x21c )
#define REG_AGC_VAL_TBL8      (FM_REG_BASE + 0x220 )
#define REG_AGC_VAL_TBL9      (FM_REG_BASE + 0x224 )
#define REG_AGC_VAL_TBL10     (FM_REG_BASE + 0x228 )
#define REG_AGC_VAL_TBL11     (FM_REG_BASE + 0x22c )
#define REG_AGC_VAL_TBL12     (FM_REG_BASE + 0x230 )
#define REG_AGC_VAL_TBL13     (FM_REG_BASE + 0x234 )
#define REG_AGC_VAL_TBL14     (FM_REG_BASE + 0x238 )
#define REG_AGC_VAL_TBL15     (FM_REG_BASE + 0x23c )
#define REG_AGC_VAL_TBL16     (FM_REG_BASE + 0x240 )
#define REG_AGC_VAL_TBL17     (FM_REG_BASE + 0x244 )
#define REG_AGC_BOND_TBL0     (FM_REG_BASE + 0x300 )
#define REG_AGC_BOND_TBL1     (FM_REG_BASE + 0x304 )
#define REG_AGC_BOND_TBL2     (FM_REG_BASE + 0x308 )
#define REG_AGC_BOND_TBL3     (FM_REG_BASE + 0x30c )
#define REG_AGC_BOND_TBL4     (FM_REG_BASE + 0x310 )
#define REG_AGC_BOND_TBL5     (FM_REG_BASE + 0x314 )
#define REG_AGC_BOND_TBL6     (FM_REG_BASE + 0x318 )
#define REG_AGC_BOND_TBL7     (FM_REG_BASE + 0x31c )
#define REG_AGC_BOND_TBL8     (FM_REG_BASE + 0x320 )
#define REG_AGC_BOND_TBL9     (FM_REG_BASE + 0x324 )
#define REG_SPI_CTRL          (FM_REG_BASE + 0x0810)
#define REG_SPI_WD0           (FM_REG_BASE + 0x0814)
#define REG_SPI_WD1           (FM_REG_BASE + 0x0818)
#define REG_SPI_RD            (FM_REG_BASE + 0x081C)
#define REG_SPI_FIFO_STS      (FM_REG_BASE + 0x0820)


//------------------------- Memory Define -------------------------------------
#define AGC_DB_TBL_BASE   (FM_REG_BASE + 0x0500)

//-----------------------------------------------------------------------------
// Register name             : FM_CTRL
// Register offset           : 0x0000
// Register description      : FM Control Register
// Register field description:
//    fld_seek_up          : [     19] Seek loop up or donw.
//                                     1: seek up
//                                     0: seek down 
//    fld_ster_swap        : [     18] Stereo channel swap.
//                                     0: no swap
//                                     1: left/right channel swap 
//    fld_pol_dcon         : [     17] Polarity of down converter.
//                                     0: cos/sin 
//                                     1: cos/(-sin) 
//    fld_rxm              : [     16] Stereo or Mono RX mode.
//                                     0: stereo mode
//                                     1: mono mode 
//    fld_dem              : [ 5 :  4] De-emphasis type.
//                                     0: No de-emphasis
//                                     1: 75us for US 
//                                     2: 50us for EU 
//    fld_no_lpf           : [ 1 :  0] ADC decimation LPF control 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define FM_CTRL_NO_LPF_SHIFT                     0
#define FM_CTRL_NO_LPF_MSK                       (0x3 << FM_CTRL_NO_LPF_SHIFT)
#define FM_CTRL_DEM_SHIFT                        4
#define FM_CTRL_DEM_MSK                          (0x3 << FM_CTRL_DEM_SHIFT)
#define FM_CTRL_RXM                              BIT_16
#define FM_CTRL_POL_DCON                         BIT_17
#define FM_CTRL_STER_SWAP                        BIT_18
#define FM_CTRL_SEEK_UP                          BIT_19
//------------------------- Data Prototype ------------------------------------
typedef union _fm_ctrl_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _fm_ctrl_map
    {
        volatile unsigned int no_lpf               :  2 ; // [ 1 :  0] 
        volatile unsigned int reserved_2           :  2 ; // [ 3 :  2] 
        volatile unsigned int dem                  :  2 ; // [ 5 :  4] 
        volatile unsigned int reserved_6           : 10 ; // [15 :  6] 
        volatile unsigned int rxm                  :  1 ; // [     16] 
        volatile unsigned int pol_dcon             :  1 ; // [     17] 
        volatile unsigned int ster_swap            :  1 ; // [     18] 
        volatile unsigned int seek_up              :  1 ; // [     19] 
        volatile unsigned int reserved_20          : 12 ; // [31 : 20] 
    } mBits ;

#else

    struct _fm_ctrl_map
    {
        volatile unsigned int reserved_20          : 12 ; // [31 : 20] 
        volatile unsigned int seek_up              :  1 ; // [     19] 
        volatile unsigned int ster_swap            :  1 ; // [     18] 
        volatile unsigned int pol_dcon             :  1 ; // [     17] 
        volatile unsigned int rxm                  :  1 ; // [     16] 
        volatile unsigned int reserved_6           : 10 ; // [15 :  6] 
        volatile unsigned int dem                  :  2 ; // [ 5 :  4] 
        volatile unsigned int reserved_2           :  2 ; // [ 3 :  2] 
        volatile unsigned int no_lpf               :  2 ; // [ 1 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} FM_CTRL_U ;


//-----------------------------------------------------------------------------
// Register name             : FM_EN
// Register offset           : 0x0004
// Register description      : FM Enable Control Register
// Register field description:
//    fld_glben            : [     31] FM Global Enable bit. 
//    fld_adc_1bit         : [     13] ADC valid bits
//                                     0: 1.5bit
//                                     1: 1bit 
//    fld_aud_bld          : [     12] Audio blend enable 
//    fld_sw_mute          : [     11] Software mute enable 
//    fld_hw_mute          : [     10] Hardware mute enable. 
//    fld_adp_lpf          : [      9] Adaptive configuration ADC decimation LPF enable 
//    fld_plt_dect         : [      7] Pilot Detect enable 
//    fld_foc              : [      6] Frequency Offset Cancel enable 
//    fld_fom              : [      5] Frequency Offset Measure enable 
//    fld_agc_adps         : [      4] AGC Adaptive scaling pre-demodulation enable 
//    fld_agc              : [      3] AGC enable 
//    fld_rssi             : [      2] RSSI enable 
//    fld_dcc              : [      1] DC Offset Cancel enable 
//    fld_seek_adps        : [      0] Seek Adaptive scaling pre-demodulation enable 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define FM_EN_SEEK_ADPS                          BIT_0
#define FM_EN_DCC                                BIT_1
#define FM_EN_RSSI                               BIT_2
#define FM_EN_AGC                                BIT_3
#define FM_EN_AGC_ADPS                           BIT_4
#define FM_EN_FOM                                BIT_5
#define FM_EN_FOC                                BIT_6
#define FM_EN_PLT_DECT                           BIT_7
#define FM_EN_ADP_LPF                            BIT_9
#define FM_EN_HW_MUTE                            BIT_10
#define FM_EN_SW_MUTE                            BIT_11
#define FM_EN_AUD_BLD                            BIT_12
#define FM_EN_ADC_1BIT                           BIT_13
#define FM_EN_GLBEN                              BIT_31

//------------------------- Data Prototype ------------------------------------
typedef union _fm_en_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _fm_en_map
    {
        volatile unsigned int seek_adps            :  1 ; // [      0] 
        volatile unsigned int dcc                  :  1 ; // [      1] 
        volatile unsigned int rssi                 :  1 ; // [      2] 
        volatile unsigned int agc                  :  1 ; // [      3] 
        volatile unsigned int agc_adps             :  1 ; // [      4] 
        volatile unsigned int fom                  :  1 ; // [      5] 
        volatile unsigned int foc                  :  1 ; // [      6] 
        volatile unsigned int plt_dect             :  1 ; // [      7] 
        volatile unsigned int reserved_8           :  1 ; // [      8] 
        volatile unsigned int adp_lpf              :  1 ; // [      9] 
        volatile unsigned int hw_mute              :  1 ; // [     10] 
        volatile unsigned int sw_mute              :  1 ; // [     11] 
        volatile unsigned int aud_bld              :  1 ; // [     12] 
        volatile unsigned int adc_1bit             :  1 ; // [     13] 
        volatile unsigned int reserved_14          : 17 ; // [30 : 14] 
        volatile unsigned int glben                :  1 ; // [     31] 
    } mBits ;

#else

    struct _fm_en_map
    {
        volatile unsigned int glben                :  1 ; // [     31] 
        volatile unsigned int reserved_14          : 17 ; // [30 : 14] 
        volatile unsigned int adc_1bit             :  1 ; // [     13] 
        volatile unsigned int aud_bld              :  1 ; // [     12] 
        volatile unsigned int sw_mute              :  1 ; // [     11] 
        volatile unsigned int hw_mute              :  1 ; // [     10] 
        volatile unsigned int adp_lpf              :  1 ; // [      9] 
        volatile unsigned int reserved_8           :  1 ; // [      8] 
        volatile unsigned int plt_dect             :  1 ; // [      7] 
        volatile unsigned int foc                  :  1 ; // [      6] 
        volatile unsigned int fom                  :  1 ; // [      5] 
        volatile unsigned int agc_adps             :  1 ; // [      4] 
        volatile unsigned int agc                  :  1 ; // [      3] 
        volatile unsigned int rssi                 :  1 ; // [      2] 
        volatile unsigned int dcc                  :  1 ; // [      1] 
        volatile unsigned int seek_adps            :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} FM_EN_U ;


//-----------------------------------------------------------------------------
// Register name             : RF_INIT_GAIN
// Register offset           : 0x0008
// Register description      : RF Initial Gain register
// Register field description:
//    fld_val            : [15 :  0] RF initial gain value. 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define RF_INIT_GAIN_VAL_SHIFT                 0
#define RF_INIT_GAIN_VAL_MSK                   (0xFFFF << RF_INIT_GAIN_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _rf_init_gain_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _rf_init_gain_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _rf_init_gain_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} RF_INIT_GAIN_U ;


//-----------------------------------------------------------------------------
// Register name             : CHAN
// Register offset           : 0x000c
// Register description      : Channel selection frequency
// Register field description:
//    fld_freq           : [15 :  0] Channel selection frequency  which is used for SEEK,Tune or directly play 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define CHAN_FREQ_SHIFT                        0
#define CHAN_FREQ_MSK                          (0xFFFF << CHAN_FREQ_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _chan_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _chan_map
    {
        volatile unsigned int freq               : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _chan_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int freq               : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} CHAN_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_TBL_CLK
// Register offset           : 0x0010
// Register description      : AGC DB Table clock control
// Register field description:
//    fld_ind            : [17 : 16] Clock indicator.
//                                   [17]: 1 to indicate the APB clock is selected.
//                                   [16]: 1 to indicate the FM 26M clock is selected. 
//    fld_sel            : [      0] Clock select.
//                                   0: Slect FM 26M clock for AGC DB table
//                                   1: Select APB clock for AGC DB table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_TBL_CLK_SEL                        BIT_0
#define AGC_TBL_CLK_IND_SHIFT                  16
#define AGC_TBL_CLK_IND_MSK                    (0x3 << AGC_TBL_CLK_IND_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_tbl_clk_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_tbl_clk_map
    {
        volatile unsigned int sel                :  1 ; // [      0] 
        volatile unsigned int reserved_1         : 15 ; // [15 :  1] 
        volatile unsigned int ind                :  2 ; // [17 : 16] 
        volatile unsigned int reserved_18        : 14 ; // [31 : 18] 
    } mBits ;

#else

    struct _agc_tbl_clk_map
    {
        volatile unsigned int reserved_18        : 14 ; // [31 : 18] 
        volatile unsigned int ind                :  2 ; // [17 : 16] 
        volatile unsigned int reserved_1         : 15 ; // [15 :  1] 
        volatile unsigned int sel                :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_TBL_CLK_U ;


//-----------------------------------------------------------------------------
// Register name             : SEEK_LOOP
// Register offset           : 0x0014
// Register description      : Seek loop config register
// Register field description:
//    fld_val            : [ 9 :  0] Seek loop config value. 
//                                   Seek_loop=(band_lmt_high-band_lmt_low)/band_space when the seek mode is set. 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SEEK_LOOP_VAL_SHIFT                    0
#define SEEK_LOOP_VAL_MSK                      (0x3FF << SEEK_LOOP_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _seek_loop_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _seek_loop_map
    {
        volatile unsigned int val                : 10 ; // [ 9 :  0] 
        volatile unsigned int reserved_10        : 22 ; // [31 : 10] 
    } mBits ;

#else

    struct _seek_loop_map
    {
        volatile unsigned int reserved_10        : 22 ; // [31 : 10] 
        volatile unsigned int val                : 10 ; // [ 9 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SEEK_LOOP_U ;


//-----------------------------------------------------------------------------
// Register name             : FMCTL_STI
// Register offset           : 0x0018
// Register description      : Seek/Tune mode indicator register.
// Register field description:
//    fld_val           : [ 1 :  0] Seek/Tune indicator config value.
//                                  0: NORMAL
//                                  1: SEEK
//                                  2: TUNE 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define FMCTL_STI_VAL_SHIFT                   0
#define FMCTL_STI_VAL_MSK                     (0x3 << FMCTL_STI_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _fmctl_sti_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _fmctl_sti_map
    {
        volatile unsigned int val               :  2 ; // [ 1 :  0] 
        volatile unsigned int reserved_2        : 30 ; // [31 :  2] 
    } mBits ;

#else

    struct _fmctl_sti_map
    {
        volatile unsigned int reserved_2        : 30 ; // [31 :  2] 
        volatile unsigned int val               :  2 ; // [ 1 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} FMCTL_STI_U ;


//-----------------------------------------------------------------------------
// Register name             : BAND_LMT
// Register offset           : 0x001C
// Register description      : Frequence band limit for seek.
// Register field description:
//    fld_high        : [31 : 16] High band limit for seek 
//    fld_low         : [15 :  0] Low band limit for seek 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define BAND_LMT_LOW_SHIFT                  0
#define BAND_LMT_LOW_MSK                    (0xFFFF << BAND_LMT_LOW_SHIFT)
#define BAND_LMT_HIGH_SHIFT                 16
#define BAND_LMT_HIGH_MSK                   (0xFFFF << BAND_LMT_HIGH_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _band_lmt_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _band_lmt_map
    {
        volatile unsigned int low             : 16 ; // [15 :  0] 
        volatile unsigned int high            : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _band_lmt_map
    {
        volatile unsigned int high            : 16 ; // [31 : 16] 
        volatile unsigned int low             : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} BAND_LMT_U ;


//-----------------------------------------------------------------------------
// Register name             : BAND_SPACE
// Register offset           : 0x0020
// Register description      : Channel spacing. 
// Register field description:
//    fld_val            : [15 :  0] Channel spacing config value 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define BAND_SPACE_VAL_SHIFT                   0
#define BAND_SPACE_VAL_MSK                     (0xFFFF << BAND_SPACE_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _band_space_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _band_space_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _band_space_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} BAND_SPACE_U ;


//-----------------------------------------------------------------------------
// Register name             : INT_EN
// Register offset           : 0x0030
// Register description      : Interrupt Enable Register
// Register field description:
//    fld_stc           : [      0] Seek/Tune Complete Interrupt enable bit. 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define INT_EN_STC                            BIT_0

//------------------------- Data Prototype ------------------------------------
typedef union _int_en_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _int_en_map
    {
        volatile unsigned int stc               :  1 ; // [      0] 
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
    } mBits ;

#else

    struct _int_en_map
    {
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
        volatile unsigned int stc               :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} INT_EN_U ;


//-----------------------------------------------------------------------------
// Register name             : INT_CLR
// Register offset           : 0x0034
// Register description      : Interrupt Clear Register
// Register field description:
//    fld_stc           : [      0] Seek/Tune Complete Interrupt clear bit. 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define INT_CLR_STC                           BIT_0

//------------------------- Data Prototype ------------------------------------
typedef union _int_clr_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _int_clr_map
    {
        volatile unsigned int stc               :  1 ; // [      0] 
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
    } mBits ;

#else

    struct _int_clr_map
    {
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
        volatile unsigned int stc               :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} INT_CLR_U ;


//-----------------------------------------------------------------------------
// Register name             : INT_STS
// Register offset           : 0x0038
// Register description      : Interrupt Status
// Register field description:
//    fld_stc           : [      0] Seek/Tune Complete Interrupt status. 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define INT_STS_STC                           BIT_0

//------------------------- Data Prototype ------------------------------------
typedef union _int_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _int_sts_map
    {
        volatile unsigned int stc               :  1 ; // [      0] 
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
    } mBits ;

#else

    struct _int_sts_map
    {
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
        volatile unsigned int stc               :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} INT_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : SEEK_CH_TH
// Register offset           : 0x0040
// Register description      : Seek Channel valid Threshold
// Register field description:
//    fld_val            : [15 :  0] Seek channel valid threshold 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SEEK_CH_TH_VAL_SHIFT                   0
#define SEEK_CH_TH_VAL_MSK                     (0xFFFF << SEEK_CH_TH_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _seek_ch_th_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _seek_ch_th_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _seek_ch_th_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SEEK_CH_TH_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_TBL_RFRSSI0
// Register offset           : 0x0044
// Register description      : AGC table RFRSSI control register0
// Register field description:
//    fld_upd_cnt        : [25 : 16] AGC table RF RSSI update counter 
//    fld_hyst           : [13 :  8] AGC table RF RSSI hysteresis 
//    fld_mode           : [ 1 :  0] AGC table RF RSSI mode 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_TBL_RFRSSI0_MODE_SHIFT             0
#define AGC_TBL_RFRSSI0_MODE_MSK               (0x3 << AGC_TBL_RFRSSI0_MODE_SHIFT)
#define AGC_TBL_RFRSSI0_HYST_SHIFT             8
#define AGC_TBL_RFRSSI0_HYST_MSK               (0x3F << AGC_TBL_RFRSSI0_HYST_SHIFT)
#define AGC_TBL_RFRSSI0_UPD_CNT_SHIFT          16
#define AGC_TBL_RFRSSI0_UPD_CNT_MSK            (0x3FF << AGC_TBL_RFRSSI0_UPD_CNT_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_tbl_rfrssi0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_tbl_rfrssi0_map
    {
        volatile unsigned int mode               :  2 ; // [ 1 :  0] 
        volatile unsigned int reserved_2         :  6 ; // [ 7 :  2] 
        volatile unsigned int hyst               :  6 ; // [13 :  8] 
        volatile unsigned int reserved_14        :  2 ; // [15 : 14] 
        volatile unsigned int upd_cnt            : 10 ; // [25 : 16] 
        volatile unsigned int reserved_26        :  6 ; // [31 : 26] 
    } mBits ;

#else

    struct _agc_tbl_rfrssi0_map
    {
        volatile unsigned int reserved_26        :  6 ; // [31 : 26] 
        volatile unsigned int upd_cnt            : 10 ; // [25 : 16] 
        volatile unsigned int reserved_14        :  2 ; // [15 : 14] 
        volatile unsigned int hyst               :  6 ; // [13 :  8] 
        volatile unsigned int reserved_2         :  6 ; // [ 7 :  2] 
        volatile unsigned int mode               :  2 ; // [ 1 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_TBL_RFRSSI0_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_TBL_RFRSSI1
// Register offset           : 0x0048
// Register description      : AGC table RFRSSI control register1
// Register field description:
//    fld_avg_len        : [30 : 24] RFRSSI average length 
//    fld_avg_sh         : [18 : 16] RFRSSI average acc shift bits 
//    fld_th             : [15 :  0] AGC table RF RSSI threshold 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_TBL_RFRSSI1_TH_SHIFT               0
#define AGC_TBL_RFRSSI1_TH_MSK                 (0xFFFF << AGC_TBL_RFRSSI1_TH_SHIFT)
#define AGC_TBL_RFRSSI1_AVG_SH_SHIFT           16
#define AGC_TBL_RFRSSI1_AVG_SH_MSK             (0x7 << AGC_TBL_RFRSSI1_AVG_SH_SHIFT)
#define AGC_TBL_RFRSSI1_AVG_LEN_SHIFT          24
#define AGC_TBL_RFRSSI1_AVG_LEN_MSK            (0x7F << AGC_TBL_RFRSSI1_AVG_LEN_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_tbl_rfrssi1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_tbl_rfrssi1_map
    {
        volatile unsigned int th                 : 16 ; // [15 :  0] 
        volatile unsigned int avg_sh             :  3 ; // [18 : 16] 
        volatile unsigned int reserved_19        :  5 ; // [23 : 19] 
        volatile unsigned int avg_len            :  7 ; // [30 : 24] 
        volatile unsigned int reserved_31        :  1 ; // [     31] 
    } mBits ;

#else

    struct _agc_tbl_rfrssi1_map
    {
        volatile unsigned int reserved_31        :  1 ; // [     31] 
        volatile unsigned int avg_len            :  7 ; // [30 : 24] 
        volatile unsigned int reserved_19        :  5 ; // [23 : 19] 
        volatile unsigned int avg_sh             :  3 ; // [18 : 16] 
        volatile unsigned int th                 : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_TBL_RFRSSI1_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_TBL_WBRSSI
// Register offset           : 0x004C
// Register description      : WB RSSI measure control
// Register field description:
//    fld_th                  : [23 : 16] AGC table WBRSSI Threshold 
//    fld_hyst                : [13 :  8] AGC table WBRSSI hysteresis 
//    fld_wbrssi_shway        : [      4] WNRSSI scaling method 
//    fld_wbrssi_sh           : [ 3 :  2] WBRSSI scaling shift bits 
//    fld_mode                : [ 1 :  0] AGC table WBRSSI mode
//                                        [0]: mode
//                                        [1]: mode2 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_TBL_WBRSSI_MODE_SHIFT                   0
#define AGC_TBL_WBRSSI_MODE_MSK                     (0x3 << AGC_TBL_WBRSSI_MODE_SHIFT)
#define AGC_TBL_WBRSSI_WBRSSI_SH_SHIFT              2
#define AGC_TBL_WBRSSI_WBRSSI_SH_MSK                (0x3 << AGC_TBL_WBRSSI_WBRSSI_SH_SHIFT)
#define AGC_TBL_WBRSSI_WBRSSI_SHWAY                 BIT_4
#define AGC_TBL_WBRSSI_HYST_SHIFT                   8
#define AGC_TBL_WBRSSI_HYST_MSK                     (0x3F << AGC_TBL_WBRSSI_HYST_SHIFT)
#define AGC_TBL_WBRSSI_TH_SHIFT                     16
#define AGC_TBL_WBRSSI_TH_MSK                       (0xFF << AGC_TBL_WBRSSI_TH_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_tbl_wbrssi_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_tbl_wbrssi_map
    {
        volatile unsigned int mode                    :  2 ; // [ 1 :  0] 
        volatile unsigned int wbrssi_sh               :  2 ; // [ 3 :  2] 
        volatile unsigned int wbrssi_shway            :  1 ; // [      4] 
        volatile unsigned int reserved_5              :  3 ; // [ 7 :  5] 
        volatile unsigned int hyst                    :  6 ; // [13 :  8] 
        volatile unsigned int reserved_14             :  2 ; // [15 : 14] 
        volatile unsigned int th                      :  8 ; // [23 : 16] 
        volatile unsigned int reserved_24             :  8 ; // [31 : 24] 
    } mBits ;

#else

    struct _agc_tbl_wbrssi_map
    {
        volatile unsigned int reserved_24             :  8 ; // [31 : 24] 
        volatile unsigned int th                      :  8 ; // [23 : 16] 
        volatile unsigned int reserved_14             :  2 ; // [15 : 14] 
        volatile unsigned int hyst                    :  6 ; // [13 :  8] 
        volatile unsigned int reserved_5              :  3 ; // [ 7 :  5] 
        volatile unsigned int wbrssi_shway            :  1 ; // [      4] 
        volatile unsigned int wbrssi_sh               :  2 ; // [ 3 :  2] 
        volatile unsigned int mode                    :  2 ; // [ 1 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_TBL_WBRSSI_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_IDX_TH
// Register offset           : 0x0050
// Register description      : AGC table Index Threshold
// Register field description:
//    fld_max            : [19 : 16] Seek AGC index High Limit 
//    fld_mid            : [11 :  8] Seek AGC index Middle value 
//    fld_min            : [ 3 :  0] Seek AGC index Low Limit 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_IDX_TH_MIN_SHIFT                   0
#define AGC_IDX_TH_MIN_MSK                     (0xF << AGC_IDX_TH_MIN_SHIFT)
#define AGC_IDX_TH_MID_SHIFT                   8
#define AGC_IDX_TH_MID_MSK                     (0xF << AGC_IDX_TH_MID_SHIFT)
#define AGC_IDX_TH_MAX_SHIFT                   16
#define AGC_IDX_TH_MAX_MSK                     (0xF << AGC_IDX_TH_MAX_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_idx_th_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_idx_th_map
    {
        volatile unsigned int min                :  4 ; // [ 3 :  0] 
        volatile unsigned int reserved_4         :  4 ; // [ 7 :  4] 
        volatile unsigned int mid                :  4 ; // [11 :  8] 
        volatile unsigned int reserved_12        :  4 ; // [15 : 12] 
        volatile unsigned int max                :  4 ; // [19 : 16] 
        volatile unsigned int reserved_20        : 12 ; // [31 : 20] 
    } mBits ;

#else

    struct _agc_idx_th_map
    {
        volatile unsigned int reserved_20        : 12 ; // [31 : 20] 
        volatile unsigned int max                :  4 ; // [19 : 16] 
        volatile unsigned int reserved_12        :  4 ; // [15 : 12] 
        volatile unsigned int mid                :  4 ; // [11 :  8] 
        volatile unsigned int reserved_4         :  4 ; // [ 7 :  4] 
        volatile unsigned int min                :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_IDX_TH_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_RSSI_TH
// Register offset           : 0x0054
// Register description      : AGC RSSI Threshold
// Register field description:
//    fld_max            : [23 : 16] Seek AGC RSSI High Limit 
//    fld_min            : [ 7 :  0] Seek AGC RSSI Low Limit 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_RSSI_TH_MIN_SHIFT                  0
#define AGC_RSSI_TH_MIN_MSK                    (0xFF << AGC_RSSI_TH_MIN_SHIFT)
#define AGC_RSSI_TH_MAX_SHIFT                  16
#define AGC_RSSI_TH_MAX_MSK                    (0xFF << AGC_RSSI_TH_MAX_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_rssi_th_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_rssi_th_map
    {
        volatile unsigned int min                :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8         :  8 ; // [15 :  8] 
        volatile unsigned int max                :  8 ; // [23 : 16] 
        volatile unsigned int reserved_24        :  8 ; // [31 : 24] 
    } mBits ;

#else

    struct _agc_rssi_th_map
    {
        volatile unsigned int reserved_24        :  8 ; // [31 : 24] 
        volatile unsigned int max                :  8 ; // [23 : 16] 
        volatile unsigned int reserved_8         :  8 ; // [15 :  8] 
        volatile unsigned int min                :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_RSSI_TH_U ;


//-----------------------------------------------------------------------------
// Register name             : SEEK_ADPS
// Register offset           : 0x0058
// Register description      : Seek Adaptive Scaling pre-demodulation 
// Register field description:
//    fld_sft            : [27 : 24] Seek adaptive scaling pre-demodulation bit Shift 
//    fld_lbnd           : [23 : 16] Seek adaptive scaling pre-demodulation Low-Boundary 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SEEK_ADPS_LBND_SHIFT                   16
#define SEEK_ADPS_LBND_MSK                     (0xFF << SEEK_ADPS_LBND_SHIFT)
#define SEEK_ADPS_SFT_SHIFT                    24
#define SEEK_ADPS_SFT_MSK                      (0xF << SEEK_ADPS_SFT_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _seek_adps_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _seek_adps_map
    {
        volatile unsigned int reserved_0         : 16 ; // [15 :  0] 
        volatile unsigned int lbnd               :  8 ; // [23 : 16] 
        volatile unsigned int sft                :  4 ; // [27 : 24] 
        volatile unsigned int reserved_28        :  4 ; // [31 : 28] 
    } mBits ;

#else

    struct _seek_adps_map
    {
        volatile unsigned int reserved_28        :  4 ; // [31 : 28] 
        volatile unsigned int sft                :  4 ; // [27 : 24] 
        volatile unsigned int lbnd               :  8 ; // [23 : 16] 
        volatile unsigned int reserved_0         : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SEEK_ADPS_U ;


//-----------------------------------------------------------------------------
// Register name             : STER_PWR
// Register offset           : 0x005C
// Register description      : FM Stereo Power Threshold
// Register field description:
//    fld_th            : [ 8 :  0] FM Stereo Power Threshold 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define STER_PWR_TH_SHIFT                     0
#define STER_PWR_TH_MSK                       (0x1FF << STER_PWR_TH_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _ster_pwr_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _ster_pwr_map
    {
        volatile unsigned int th                :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9        : 23 ; // [31 :  9] 
    } mBits ;

#else

    struct _ster_pwr_map
    {
        volatile unsigned int reserved_9        : 23 ; // [31 :  9] 
        volatile unsigned int th                :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} STER_PWR_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_CTRL
// Register offset           : 0x0060
// Register description      : AGC Control Register
// Register field description:
//    fld_tab_size         : [27 : 24] AGC table size 
//    fld_sw_gain          : [23 : 16] Software maunal config gain value when AGC is disabled. 
//    fld_gain_step        : [11 :  8] AGC Gain Step  
//    fld_mthd             : [ 5 :  4] AGC calculate method 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_CTRL_MTHD_SHIFT                      4
#define AGC_CTRL_MTHD_MSK                        (0x3 << AGC_CTRL_MTHD_SHIFT)
#define AGC_CTRL_GAIN_STEP_SHIFT                 8
#define AGC_CTRL_GAIN_STEP_MSK                   (0xF << AGC_CTRL_GAIN_STEP_SHIFT)
#define AGC_CTRL_SW_GAIN_SHIFT                   16
#define AGC_CTRL_SW_GAIN_MSK                     (0xFF << AGC_CTRL_SW_GAIN_SHIFT)
#define AGC_CTRL_TAB_SIZE_SHIFT                  24
#define AGC_CTRL_TAB_SIZE_MSK                    (0xF << AGC_CTRL_TAB_SIZE_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_ctrl_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_ctrl_map
    {
        volatile unsigned int reserved_0           :  4 ; // [ 3 :  0] 
        volatile unsigned int mthd                 :  2 ; // [ 5 :  4] 
        volatile unsigned int reserved_6           :  2 ; // [ 7 :  6] 
        volatile unsigned int gain_step            :  4 ; // [11 :  8] 
        volatile unsigned int reserved_12          :  4 ; // [15 : 12] 
        volatile unsigned int sw_gain              :  8 ; // [23 : 16] 
        volatile unsigned int tab_size             :  4 ; // [27 : 24] 
        volatile unsigned int reserved_28          :  4 ; // [31 : 28] 
    } mBits ;

#else

    struct _agc_ctrl_map
    {
        volatile unsigned int reserved_28          :  4 ; // [31 : 28] 
        volatile unsigned int tab_size             :  4 ; // [27 : 24] 
        volatile unsigned int sw_gain              :  8 ; // [23 : 16] 
        volatile unsigned int reserved_12          :  4 ; // [15 : 12] 
        volatile unsigned int gain_step            :  4 ; // [11 :  8] 
        volatile unsigned int reserved_6           :  2 ; // [ 7 :  6] 
        volatile unsigned int mthd                 :  2 ; // [ 5 :  4] 
        volatile unsigned int reserved_0           :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_CTRL_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_ITV_TH
// Register offset           : 0x0064
// Register description      : AGC Interval Threshold
// Register field description:
//    fld_max            : [23 : 16] AGC Interval Threshold MAX value 
//    fld_min            : [ 7 :  0] AGC Interval Threshold MIN value 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_ITV_TH_MIN_SHIFT                   0
#define AGC_ITV_TH_MIN_MSK                     (0xFF << AGC_ITV_TH_MIN_SHIFT)
#define AGC_ITV_TH_MAX_SHIFT                   16
#define AGC_ITV_TH_MAX_MSK                     (0xFF << AGC_ITV_TH_MAX_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_itv_th_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_itv_th_map
    {
        volatile unsigned int min                :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8         :  8 ; // [15 :  8] 
        volatile unsigned int max                :  8 ; // [23 : 16] 
        volatile unsigned int reserved_24        :  8 ; // [31 : 24] 
    } mBits ;

#else

    struct _agc_itv_th_map
    {
        volatile unsigned int reserved_24        :  8 ; // [31 : 24] 
        volatile unsigned int max                :  8 ; // [23 : 16] 
        volatile unsigned int reserved_8         :  8 ; // [15 :  8] 
        volatile unsigned int min                :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_ITV_TH_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_ADPS0
// Register offset           : 0x0068
// Register description      : AGC Adaptive Scaling pre-demodulation
// Register field description:
//    fld_hbnd           : [31 : 24] Pre-demodulation High Boundary 
//    fld_lbnd           : [23 : 16] Pre-demodulation :Low Boundary 
//    fld_sft_lmt        : [ 3 :  0] Pre-demodulation Bit Shift Limit 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_ADPS0_SFT_LMT_SHIFT                0
#define AGC_ADPS0_SFT_LMT_MSK                  (0xF << AGC_ADPS0_SFT_LMT_SHIFT)
#define AGC_ADPS0_LBND_SHIFT                   16
#define AGC_ADPS0_LBND_MSK                     (0xFF << AGC_ADPS0_LBND_SHIFT)
#define AGC_ADPS0_HBND_SHIFT                   24
#define AGC_ADPS0_HBND_MSK                     (0xFF << AGC_ADPS0_HBND_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_adps0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_adps0_map
    {
        volatile unsigned int sft_lmt            :  4 ; // [ 3 :  0] 
        volatile unsigned int reserved_4         : 12 ; // [15 :  4] 
        volatile unsigned int lbnd               :  8 ; // [23 : 16] 
        volatile unsigned int hbnd               :  8 ; // [31 : 24] 
    } mBits ;

#else

    struct _agc_adps0_map
    {
        volatile unsigned int hbnd               :  8 ; // [31 : 24] 
        volatile unsigned int lbnd               :  8 ; // [23 : 16] 
        volatile unsigned int reserved_4         : 12 ; // [15 :  4] 
        volatile unsigned int sft_lmt            :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_ADPS0_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_ADPS1
// Register offset           : 0x006C
// Register description      : AGC Adaptive Scaling pre-demodulation
// Register field description:
//    fld_hlev          : [31 : 24] Pre-demodulation High Level for method not equal 0 
//    fld_llev          : [23 : 16] Pre-demodulation :Low Boundary for method not eque 0 
//    fld_mthd          : [ 1 :  0] Pre-demodulation adaptive scaling method 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_ADPS1_MTHD_SHIFT                  0
#define AGC_ADPS1_MTHD_MSK                    (0x3 << AGC_ADPS1_MTHD_SHIFT)
#define AGC_ADPS1_LLEV_SHIFT                  16
#define AGC_ADPS1_LLEV_MSK                    (0xFF << AGC_ADPS1_LLEV_SHIFT)
#define AGC_ADPS1_HLEV_SHIFT                  24
#define AGC_ADPS1_HLEV_MSK                    (0xFF << AGC_ADPS1_HLEV_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_adps1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_adps1_map
    {
        volatile unsigned int mthd              :  2 ; // [ 1 :  0] 
        volatile unsigned int reserved_2        : 14 ; // [15 :  2] 
        volatile unsigned int llev              :  8 ; // [23 : 16] 
        volatile unsigned int hlev              :  8 ; // [31 : 24] 
    } mBits ;

#else

    struct _agc_adps1_map
    {
        volatile unsigned int hlev              :  8 ; // [31 : 24] 
        volatile unsigned int llev              :  8 ; // [23 : 16] 
        volatile unsigned int reserved_2        : 14 ; // [15 :  2] 
        volatile unsigned int mthd              :  2 ; // [ 1 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_ADPS1_U ;


//-----------------------------------------------------------------------------
// Register name             : PDP_TH
// Register offset           : 0x0070
// Register description      : Pilot Detect PowerThreshold
// Register field description:
//    fld_val            : [12 :  0] Pilot Detect PowerThreshold 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define PDP_TH_VAL_SHIFT                       0
#define PDP_TH_VAL_MSK                         (0x1FFF << PDP_TH_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _pdp_th_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _pdp_th_map
    {
        volatile unsigned int val                : 13 ; // [12 :  0] 
        volatile unsigned int reserved_13        : 19 ; // [31 : 13] 
    } mBits ;

#else

    struct _pdp_th_map
    {
        volatile unsigned int reserved_13        : 19 ; // [31 : 13] 
        volatile unsigned int val                : 13 ; // [12 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} PDP_TH_U ;


//-----------------------------------------------------------------------------
// Register name             : PDP_DEV
// Register offset           : 0x0074
// Register description      : Pilot Detect Power Deviation
// Register field description:
//    fld_val            : [12 :  0] Pilot Detect Power Deviation 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define PDP_DEV_VAL_SHIFT                      0
#define PDP_DEV_VAL_MSK                        (0x1FFF << PDP_DEV_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _pdp_dev_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _pdp_dev_map
    {
        volatile unsigned int val                : 13 ; // [12 :  0] 
        volatile unsigned int reserved_13        : 19 ; // [31 : 13] 
    } mBits ;

#else

    struct _pdp_dev_map
    {
        volatile unsigned int reserved_13        : 19 ; // [31 : 13] 
        volatile unsigned int val                : 13 ; // [12 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} PDP_DEV_U ;


//-----------------------------------------------------------------------------
// Register name             : ADP_ST_CONF
// Register offset           : 0x0078
// Register description      : Adaptive Stereo Configuration Register
// Register field description:
//    fld_mode           : [29 : 28] Adaptive stereo configuration mode 
//    fld_hys            : [24 : 16] Stereo Hysteresis Adaptive Configuration  
//    fld_th             : [ 8 :  0] Stereo Threshold Adaptive Configuration  
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define ADP_ST_CONF_TH_SHIFT                   0
#define ADP_ST_CONF_TH_MSK                     (0x1FF << ADP_ST_CONF_TH_SHIFT)
#define ADP_ST_CONF_HYS_SHIFT                  16
#define ADP_ST_CONF_HYS_MSK                    (0x1FF << ADP_ST_CONF_HYS_SHIFT)
#define ADP_ST_CONF_MODE_SHIFT                 28
#define ADP_ST_CONF_MODE_MSK                   (0x3 << ADP_ST_CONF_MODE_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _adp_st_conf_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE
    struct _adp_st_conf_map
    {
        volatile unsigned int th                 :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int hys                :  9 ; // [24 : 16] 
        volatile unsigned int reserved_25        :  3 ; // [27 : 25] 
        volatile unsigned int mode               :  2 ; // [29 : 28] 
        volatile unsigned int reserved_30        :  2 ; // [31 : 30] 
    } mBits ;

#else

    struct _adp_st_conf_map
    {
        volatile unsigned int reserved_30        :  2 ; // [31 : 30] 
        volatile unsigned int mode               :  2 ; // [29 : 28] 
        volatile unsigned int reserved_25        :  3 ; // [27 : 25] 
        volatile unsigned int hys                :  9 ; // [24 : 16] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int th                 :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} ADP_ST_CONF_U ;


//-----------------------------------------------------------------------------
// Register name             : ADP_LPF_CONF
// Register offset           : 0x007C
// Register description      : Adaptive LPF Configuration Register
// Register field description:
//    fld_val           : [ 2 :  0] Adaptive LPF Configuration 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define ADP_LPF_CONF_VAL_SHIFT                0
#define ADP_LPF_CONF_VAL_MSK                  (0x7 << ADP_LPF_CONF_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _adp_lpf_conf_tag
{ 
#ifdef CHIP_ENDIAN_LITTLE
    struct _adp_lpf_conf_map
    {
        volatile unsigned int val               :  3 ; // [ 2 :  0] 
        volatile unsigned int reserved_3        : 29 ; // [31 :  3] 
    } mBits ;

#else

    struct _adp_lpf_conf_map
    {
        volatile unsigned int reserved_3        : 29 ; // [31 :  3] 
        volatile unsigned int val               :  3 ; // [ 2 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE
    volatile unsigned int dwValue ;
} ADP_LPF_CONF_U ;


//-----------------------------------------------------------------------------
// Register name             : DEPHA_SCAL
// Register offset           : 0x0080
// Register description      : De-emphasis scaling factor
// Register field description:
//    fld_val           : [ 2 :  0] De-emphasis scaling factor value. 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define DEPHA_SCAL_VAL_SHIFT                  0
#define DEPHA_SCAL_VAL_MSK                    (0x7 << DEPHA_SCAL_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _depha_scal_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _depha_scal_map
    {
        volatile unsigned int val               :  3 ; // [ 2 :  0] 
        volatile unsigned int reserved_3        : 29 ; // [31 :  3] 
    } mBits ;

#else

    struct _depha_scal_map
    {
        volatile unsigned int reserved_3        : 29 ; // [31 :  3] 
        volatile unsigned int val               :  3 ; // [ 2 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} DEPHA_SCAL_U ;


//-----------------------------------------------------------------------------
// Register name             : HW_MUTE
// Register offset           : 0x0084
// Register description      : Hardware mute control
// Register field description:
//    fld_mnd           : [      0] Mandatory to use hardware mute function 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define HW_MUTE_MND                           BIT_0

//------------------------- Data Prototype ------------------------------------
typedef union _hw_mute_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _hw_mute_map
    {
        volatile unsigned int mnd               :  1 ; // [      0] 
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
    } mBits ;

#else

    struct _hw_mute_map
    {
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
        volatile unsigned int mnd               :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} HW_MUTE_U ;


//-----------------------------------------------------------------------------
// Register name             : SW_MUTE
// Register offset           : 0x0088
// Register description      : Software mute control
// Register field description:
//    fld_hbnd           : [24 : 16] Software mute high boundary 
//    fld_lbnd           : [ 8 :  0] Software mute low boundary 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SW_MUTE_LBND_SHIFT                     0
#define SW_MUTE_LBND_MSK                       (0x1FF << SW_MUTE_LBND_SHIFT)
#define SW_MUTE_HBND_SHIFT                     16
#define SW_MUTE_HBND_MSK                       (0x1FF << SW_MUTE_HBND_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _sw_mute_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _sw_mute_map
    {
        volatile unsigned int lbnd               :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int hbnd               :  9 ; // [24 : 16] 
        volatile unsigned int reserved_25        :  7 ; // [31 : 25] 
    } mBits ;

#else

    struct _sw_mute_map
    {
        volatile unsigned int reserved_25        :  7 ; // [31 : 25] 
        volatile unsigned int hbnd               :  9 ; // [24 : 16] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int lbnd               :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SW_MUTE_U ;


//-----------------------------------------------------------------------------
// Register name             : UPD_CTRL
// Register offset           : 0x008C
// Register description      : Update counter control registers
// Register field description:
//    fld_stdif_dly           : [25 : 24] Stereo Dif Delay 
//    fld_agc_vs_rssi         : [23 : 20] AGC Update Counter vs RSSI 
//    fld_seek_agc_dly        : [19 : 16] SEEK AGC delay  
//    fld_agc_adps            : [15 : 12] AGC adaptive scaling pre-demodulation update time 
//    fld_predem_dly          : [11 :  8] AGC adaptive scaling pre-demodulation delay 
//    fld_soft_mute           : [ 7 :  4] Softmute update counter 
//    fld_adp_st              : [ 3 :  0] Adaptive stereo config update counter 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define UPD_CTRL_ADP_ST_SHIFT                       0
#define UPD_CTRL_ADP_ST_MSK                         (0xF << UPD_CTRL_ADP_ST_SHIFT)
#define UPD_CTRL_SOFT_MUTE_SHIFT                    4
#define UPD_CTRL_SOFT_MUTE_MSK                      (0xF << UPD_CTRL_SOFT_MUTE_SHIFT)
#define UPD_CTRL_PREDEM_DLY_SHIFT                   8
#define UPD_CTRL_PREDEM_DLY_MSK                     (0xF << UPD_CTRL_PREDEM_DLY_SHIFT)
#define UPD_CTRL_AGC_ADPS_SHIFT                     12
#define UPD_CTRL_AGC_ADPS_MSK                       (0xF << UPD_CTRL_AGC_ADPS_SHIFT)
#define UPD_CTRL_SEEK_AGC_DLY_SHIFT                 16
#define UPD_CTRL_SEEK_AGC_DLY_MSK                   (0xF << UPD_CTRL_SEEK_AGC_DLY_SHIFT)
#define UPD_CTRL_AGC_VS_RSSI_SHIFT                  20
#define UPD_CTRL_AGC_VS_RSSI_MSK                    (0xF << UPD_CTRL_AGC_VS_RSSI_SHIFT)
#define UPD_CTRL_STDIF_DLY_SHIFT                    24
#define UPD_CTRL_STDIF_DLY_MSK                      (0x3 << UPD_CTRL_STDIF_DLY_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _upd_ctrl_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _upd_ctrl_map
    {
        volatile unsigned int adp_st                  :  4 ; // [ 3 :  0] 
        volatile unsigned int soft_mute               :  4 ; // [ 7 :  4] 
        volatile unsigned int predem_dly              :  4 ; // [11 :  8] 
        volatile unsigned int agc_adps                :  4 ; // [15 : 12] 
        volatile unsigned int seek_agc_dly            :  4 ; // [19 : 16] 
        volatile unsigned int agc_vs_rssi             :  4 ; // [23 : 20] 
        volatile unsigned int stdif_dly               :  2 ; // [25 : 24] 
        volatile unsigned int reserved_26             :  6 ; // [31 : 26] 
    } mBits ;

#else

    struct _upd_ctrl_map
    {
        volatile unsigned int reserved_26             :  6 ; // [31 : 26] 
        volatile unsigned int stdif_dly               :  2 ; // [25 : 24] 
        volatile unsigned int agc_vs_rssi             :  4 ; // [23 : 20] 
        volatile unsigned int seek_agc_dly            :  4 ; // [19 : 16] 
        volatile unsigned int agc_adps                :  4 ; // [15 : 12] 
        volatile unsigned int predem_dly              :  4 ; // [11 :  8] 
        volatile unsigned int soft_mute               :  4 ; // [ 7 :  4] 
        volatile unsigned int adp_st                  :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} UPD_CTRL_U ;


//-----------------------------------------------------------------------------
// Register name             : AUD_BLD0
// Register offset           : 0x0090
// Register description      : Audio blend control register 0
// Register field description:
//    fld_hbnd           : [24 : 16] Audio blend high boudary 
//    fld_lbnd           : [ 8 :  0] Audio blend low boundary 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AUD_BLD0_LBND_SHIFT                    0
#define AUD_BLD0_LBND_MSK                      (0x1FF << AUD_BLD0_LBND_SHIFT)
#define AUD_BLD0_HBND_SHIFT                    16
#define AUD_BLD0_HBND_MSK                      (0x1FF << AUD_BLD0_HBND_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _aud_bld0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _aud_bld0_map
    {
        volatile unsigned int lbnd               :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int hbnd               :  9 ; // [24 : 16] 
        volatile unsigned int reserved_25        :  7 ; // [31 : 25] 
    } mBits ;

#else

    struct _aud_bld0_map
    {
        volatile unsigned int reserved_25        :  7 ; // [31 : 25] 
        volatile unsigned int hbnd               :  9 ; // [24 : 16] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int lbnd               :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AUD_BLD0_U ;


//-----------------------------------------------------------------------------
// Register name             : AUD_BLD1
// Register offset           : 0x0094
// Register description      : Audio blend control register 1
// Register field description:
//    fld_mode           : [     31] Audio blend mode 
//    fld_lev2           : [24 : 16] Audio blend level 2 
//    fld_lev1           : [ 8 :  0] Audio blend level 1 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AUD_BLD1_LEV1_SHIFT                    0
#define AUD_BLD1_LEV1_MSK                      (0x1FF << AUD_BLD1_LEV1_SHIFT)
#define AUD_BLD1_LEV2_SHIFT                    16
#define AUD_BLD1_LEV2_MSK                      (0x1FF << AUD_BLD1_LEV2_SHIFT)
#define AUD_BLD1_MODE                          BIT_31

//------------------------- Data Prototype ------------------------------------
typedef union _aud_bld1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _aud_bld1_map
    {
        volatile unsigned int lev1               :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int lev2               :  9 ; // [24 : 16] 
        volatile unsigned int reserved_25        :  6 ; // [30 : 25] 
        volatile unsigned int mode               :  1 ; // [     31] 
    } mBits ;

#else

    struct _aud_bld1_map
    {
        volatile unsigned int mode               :  1 ; // [     31] 
        volatile unsigned int reserved_25        :  6 ; // [30 : 25] 
        volatile unsigned int lev2               :  9 ; // [24 : 16] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int lev1               :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AUD_BLD1_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_HYS
// Register offset           : 0x0098
// Register description      : AGC Hysteresis control register
// Register field description:
//    fld_thresh         : [11 :  8] AGC hysteresis thresh 
//    fld_step           : [ 3 :  0] AGC hysteresis step 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_HYS_STEP_SHIFT                     0
#define AGC_HYS_STEP_MSK                       (0xF << AGC_HYS_STEP_SHIFT)
#define AGC_HYS_THRESH_SHIFT                   8
#define AGC_HYS_THRESH_MSK                     (0xF << AGC_HYS_THRESH_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_hys_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_hys_map
    {
        volatile unsigned int step               :  4 ; // [ 3 :  0] 
        volatile unsigned int reserved_4         :  4 ; // [ 7 :  4] 
        volatile unsigned int thresh             :  4 ; // [11 :  8] 
        volatile unsigned int reserved_12        : 20 ; // [31 : 12] 
    } mBits ;

#else

    struct _agc_hys_map
    {
        volatile unsigned int reserved_12        : 20 ; // [31 : 12] 
        volatile unsigned int thresh             :  4 ; // [11 :  8] 
        volatile unsigned int reserved_4         :  4 ; // [ 7 :  4] 
        volatile unsigned int step               :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_HYS_U ;


//-----------------------------------------------------------------------------
// Register name             : MONO_PWR
// Register offset           : 0x009C
// Register description      : FM Mono Power Threshold
// Register field description:
//    fld_th2            : [24 : 16] FM Mono Power Threshold2 
//    fld_th1            : [ 8 :  0] FM Mono Power Threshold1 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define MONO_PWR_TH1_SHIFT                     0
#define MONO_PWR_TH1_MSK                       (0x1FF << MONO_PWR_TH1_SHIFT)
#define MONO_PWR_TH2_SHIFT                     16
#define MONO_PWR_TH2_MSK                       (0x1FF << MONO_PWR_TH2_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _mono_pwr_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _mono_pwr_map
    {
        volatile unsigned int th1                :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int th2                :  9 ; // [24 : 16] 
        volatile unsigned int reserved_25        :  7 ; // [31 : 25] 
    } mBits ;

#else

    struct _mono_pwr_map
    {
        volatile unsigned int reserved_25        :  7 ; // [31 : 25] 
        volatile unsigned int th2                :  9 ; // [24 : 16] 
        volatile unsigned int reserved_9         :  7 ; // [15 :  9] 
        volatile unsigned int th1                :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} MONO_PWR_U ;


//-----------------------------------------------------------------------------
// Register name             : RF_CFG_DLY
// Register offset           : 0x00A0
// Register description      : RF Config Delay
// Register field description:
//    fld_val            : [15 :  0] RF Config Delay 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define RF_CFG_DLY_VAL_SHIFT                   0
#define RF_CFG_DLY_VAL_MSK                     (0xFFFF << RF_CFG_DLY_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _rf_cfg_dly_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _rf_cfg_dly_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _rf_cfg_dly_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} RF_CFG_DLY_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_TBL_STS
// Register offset           : 0x00A4
// Register description      : AGC Table Status
// Register field description:
//    fld_sel           : [      4] AGC Table Select Status 
//    fld_idx           : [ 3 :  0] AGC Table Index Status 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_TBL_STS_IDX_SHIFT                 0
#define AGC_TBL_STS_IDX_MSK                   (0xF << AGC_TBL_STS_IDX_SHIFT)
#define AGC_TBL_STS_SEL                       BIT_4

//------------------------- Data Prototype ------------------------------------
typedef union _agc_tbl_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_tbl_sts_map
    {
        volatile unsigned int idx               :  4 ; // [ 3 :  0] 
        volatile unsigned int sel               :  1 ; // [      4] 
        volatile unsigned int reserved_5        : 27 ; // [31 :  5] 
    } mBits ;

#else

    struct _agc_tbl_sts_map
    {
        volatile unsigned int reserved_5        : 27 ; // [31 :  5] 
        volatile unsigned int sel               :  1 ; // [      4] 
        volatile unsigned int idx               :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_TBL_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : ADP_BIT_SFT
// Register offset           : 0x00A8
// Register description      : Pre-demodulation Adaptive Bit Shift
// Register field description:
//    fld_val           : [ 3 :  0] Pre-demodulation Adaptive Bit Shift 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define ADP_BIT_SFT_VAL_SHIFT                 0
#define ADP_BIT_SFT_VAL_MSK                   (0xF << ADP_BIT_SFT_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _adp_bit_sft_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _adp_bit_sft_map
    {
        volatile unsigned int val               :  4 ; // [ 3 :  0] 
        volatile unsigned int reserved_4        : 28 ; // [31 :  4] 
    } mBits ;

#else

    struct _adp_bit_sft_map
    {
        volatile unsigned int reserved_4        : 28 ; // [31 :  4] 
        volatile unsigned int val               :  4 ; // [ 3 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} ADP_BIT_SFT_U ;


//-----------------------------------------------------------------------------
// Register name             : SEEK_CNT
// Register offset           : 0x00AC
// Register description      : Current Seek channel Counter
// Register field description:
//    fld_val            : [ 9 :  0] Current Seek channel Counter 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SEEK_CNT_VAL_SHIFT                     0
#define SEEK_CNT_VAL_MSK                       (0x3FF << SEEK_CNT_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _seek_cnt_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _seek_cnt_map
    {
        volatile unsigned int val                : 10 ; // [ 9 :  0] 
        volatile unsigned int reserved_10        : 22 ; // [31 : 10] 
    } mBits ;

#else

    struct _seek_cnt_map
    {
        volatile unsigned int reserved_10        : 22 ; // [31 : 10] 
        volatile unsigned int val                : 10 ; // [ 9 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SEEK_CNT_U ;


//-----------------------------------------------------------------------------
// Register name             : RSSI_STS
// Register offset           : 0x00B0
// Register description      : RSSI Status Register
// Register field description:
//    fld_pilot_det        : [19 : 18] Pilot detection status 
//    fld_st               : [     17] Stero Indicator.
//                                     0: Mono
//                                     1: Stereo 
//    fld_sf               : [     16] Seek Fail Status.
//                                     0: Seek successful
//                                     1: Seek failure 
//    fld_rssi             : [ 7 :  0] Received Signal Strength Indicator 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define RSSI_STS_RSSI_SHIFT                      0
#define RSSI_STS_RSSI_MSK                        (0xFF << RSSI_STS_RSSI_SHIFT)
#define RSSI_STS_SF                              BIT_16
#define RSSI_STS_ST                              BIT_17
#define RSSI_STS_PILOT_DET_SHIFT                 18
#define RSSI_STS_PILOT_DET_MSK                   (0x3 << RSSI_STS_PILOT_DET_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _rssi_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _rssi_sts_map
    {
        volatile unsigned int rssi                 :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8           :  8 ; // [15 :  8] 
        volatile unsigned int sf                   :  1 ; // [     16] 
        volatile unsigned int st                   :  1 ; // [     17] 
        volatile unsigned int pilot_det            :  2 ; // [19 : 18] 
        volatile unsigned int reserved_20          : 12 ; // [31 : 20] 
    } mBits ;

#else

    struct _rssi_sts_map
    {
        volatile unsigned int reserved_20          : 12 ; // [31 : 20] 
        volatile unsigned int pilot_det            :  2 ; // [19 : 18] 
        volatile unsigned int st                   :  1 ; // [     17] 
        volatile unsigned int sf                   :  1 ; // [     16] 
        volatile unsigned int reserved_8           :  8 ; // [15 :  8] 
        volatile unsigned int rssi                 :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} RSSI_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : CHAN_FREQ_STS
// Register offset           : 0x00B8
// Register description      : Current channel frequence
// Register field description:
//    fld_val            : [15 :  0] Current channel frequence status  
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define CHAN_FREQ_STS_VAL_SHIFT                0
#define CHAN_FREQ_STS_VAL_MSK                  (0xFFFF << CHAN_FREQ_STS_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _chan_freq_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _chan_freq_sts_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _chan_freq_sts_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} CHAN_FREQ_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : FREQ_OFF_STS
// Register offset           : 0x00BC
// Register description      : Frequence offset status
// Register field description:
//    fld_val            : [15 :  0] Frequence offset status 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define FREQ_OFF_STS_VAL_SHIFT                 0
#define FREQ_OFF_STS_VAL_MSK                   (0xFFFF << FREQ_OFF_STS_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _freq_off_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _freq_off_sts_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _freq_off_sts_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} FREQ_OFF_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : INPWR_STS
// Register offset           : 0x00C0
// Register description      : Input power status
// Register field description:
//    fld_val           : [ 8 :  0] Input power status 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define INPWR_STS_VAL_SHIFT                   0
#define INPWR_STS_VAL_MSK                     (0x1FF << INPWR_STS_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _inpwr_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _inpwr_sts_map
    {
        volatile unsigned int val               :  9 ; // [ 8 :  0] 
        volatile unsigned int reserved_9        : 23 ; // [31 :  9] 
    } mBits ;

#else

    struct _inpwr_sts_map
    {
        volatile unsigned int reserved_9        : 23 ; // [31 :  9] 
        volatile unsigned int val               :  9 ; // [ 8 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} INPWR_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : RF_RSSI_STS
// Register offset           : 0x00C4
// Register description      : RF RSSI status
// Register field description:
//    fld_val            : [15 :  0] RF RSSI status value 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define RF_RSSI_STS_VAL_SHIFT                  0
#define RF_RSSI_STS_VAL_MSK                    (0xFFFF << RF_RSSI_STS_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _rf_rssi_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _rf_rssi_sts_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _rf_rssi_sts_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} RF_RSSI_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : NO_LPF_STS
// Register offset           : 0x00C8
// Register description      : NO LPF status
// Register field description:
//    fld_val           : [ 1 :  0] NO LPF status value 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define NO_LPF_STS_VAL_SHIFT                  0
#define NO_LPF_STS_VAL_MSK                    (0x3 << NO_LPF_STS_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _no_lpf_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _no_lpf_sts_map
    {
        volatile unsigned int val               :  2 ; // [ 1 :  0] 
        volatile unsigned int reserved_2        : 30 ; // [31 :  2] 
    } mBits ;

#else

    struct _no_lpf_sts_map
    {
        volatile unsigned int reserved_2        : 30 ; // [31 :  2] 
        volatile unsigned int val               :  2 ; // [ 1 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} NO_LPF_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : SMUTE_STS
// Register offset           : 0x00CC
// Register description      : Software mute status
// Register field description:
//    fld_val           : [      0] Software mute status value 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SMUTE_STS_VAL                         BIT_0

//------------------------- Data Prototype ------------------------------------
typedef union _smute_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _smute_sts_map
    {
        volatile unsigned int val               :  1 ; // [      0] 
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
    } mBits ;

#else

    struct _smute_sts_map
    {
        volatile unsigned int reserved_1        : 31 ; // [31 :  1] 
        volatile unsigned int val               :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SMUTE_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : WBRSSI_STS
// Register offset           : 0x00D0
// Register description      : WideBand RSSI status
// Register field description:
//    fld_val           : [ 7 :  0] Wideband RSSI status value 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define WBRSSI_STS_VAL_SHIFT                  0
#define WBRSSI_STS_VAL_MSK                    (0xFF << WBRSSI_STS_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _wbrssi_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _wbrssi_sts_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _wbrssi_sts_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} WBRSSI_STS_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL0
// Register offset           : 0x100
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL0_VAL_SHIFT                0
#define AGC_BITS_TBL0_VAL_MSK                  (0xFFFF << AGC_BITS_TBL0_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl0_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl0_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL0_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL1
// Register offset           : 0x104
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL1_VAL_SHIFT                0
#define AGC_BITS_TBL1_VAL_MSK                  (0xFFFF << AGC_BITS_TBL1_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl1_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl1_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL1_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL2
// Register offset           : 0x108
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL2_VAL_SHIFT                0
#define AGC_BITS_TBL2_VAL_MSK                  (0xFFFF << AGC_BITS_TBL2_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl2_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl2_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl2_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL2_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL3
// Register offset           : 0x10c
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL3_VAL_SHIFT                0
#define AGC_BITS_TBL3_VAL_MSK                  (0xFFFF << AGC_BITS_TBL3_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl3_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl3_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl3_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL3_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL4
// Register offset           : 0x110
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL4_VAL_SHIFT                0
#define AGC_BITS_TBL4_VAL_MSK                  (0xFFFF << AGC_BITS_TBL4_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl4_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl4_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl4_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL4_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL5
// Register offset           : 0x114
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL5_VAL_SHIFT                0
#define AGC_BITS_TBL5_VAL_MSK                  (0xFFFF << AGC_BITS_TBL5_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl5_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl5_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl5_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL5_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL6
// Register offset           : 0x118
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL6_VAL_SHIFT                0
#define AGC_BITS_TBL6_VAL_MSK                  (0xFFFF << AGC_BITS_TBL6_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl6_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl6_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl6_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL6_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL7
// Register offset           : 0x11c
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL7_VAL_SHIFT                0
#define AGC_BITS_TBL7_VAL_MSK                  (0xFFFF << AGC_BITS_TBL7_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl7_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl7_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl7_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL7_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL8
// Register offset           : 0x120
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL8_VAL_SHIFT                0
#define AGC_BITS_TBL8_VAL_MSK                  (0xFFFF << AGC_BITS_TBL8_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl8_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl8_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl8_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL8_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL9
// Register offset           : 0x124
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL9_VAL_SHIFT                0
#define AGC_BITS_TBL9_VAL_MSK                  (0xFFFF << AGC_BITS_TBL9_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl9_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl9_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl9_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL9_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL10
// Register offset           : 0x128
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL10_VAL_SHIFT               0
#define AGC_BITS_TBL10_VAL_MSK                 (0xFFFF << AGC_BITS_TBL10_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl10_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl10_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl10_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL10_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL11
// Register offset           : 0x12c
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL11_VAL_SHIFT               0
#define AGC_BITS_TBL11_VAL_MSK                 (0xFFFF << AGC_BITS_TBL11_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl11_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl11_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl11_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL11_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL12
// Register offset           : 0x130
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL12_VAL_SHIFT               0
#define AGC_BITS_TBL12_VAL_MSK                 (0xFFFF << AGC_BITS_TBL12_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl12_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl12_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl12_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL12_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL13
// Register offset           : 0x134
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL13_VAL_SHIFT               0
#define AGC_BITS_TBL13_VAL_MSK                 (0xFFFF << AGC_BITS_TBL13_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl13_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl13_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl13_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL13_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL14
// Register offset           : 0x138
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL14_VAL_SHIFT               0
#define AGC_BITS_TBL14_VAL_MSK                 (0xFFFF << AGC_BITS_TBL14_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl14_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl14_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl14_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL14_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL15
// Register offset           : 0x13c
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL15_VAL_SHIFT               0
#define AGC_BITS_TBL15_VAL_MSK                 (0xFFFF << AGC_BITS_TBL15_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl15_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl15_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl15_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL15_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL16
// Register offset           : 0x140
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL16_VAL_SHIFT               0
#define AGC_BITS_TBL16_VAL_MSK                 (0xFFFF << AGC_BITS_TBL16_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl16_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl16_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl16_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL16_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BITS_TBL17
// Register offset           : 0x144
// Register description      : AGC Bits Table
// Register field description:
//    fld_val            : [15 :  0] AGC Bits Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BITS_TBL17_VAL_SHIFT               0
#define AGC_BITS_TBL17_VAL_MSK                 (0xFFFF << AGC_BITS_TBL17_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bits_tbl17_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bits_tbl17_map
    {
        volatile unsigned int val                : 16 ; // [15 :  0] 
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
    } mBits ;

#else

    struct _agc_bits_tbl17_map
    {
        volatile unsigned int reserved_16        : 16 ; // [31 : 16] 
        volatile unsigned int val                : 16 ; // [15 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BITS_TBL17_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL0
// Register offset           : 0x200
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL0_VAL_SHIFT                0
#define AGC_VAL_TBL0_VAL_MSK                  (0xFF << AGC_VAL_TBL0_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl0_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl0_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL0_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL1
// Register offset           : 0x204
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL1_VAL_SHIFT                0
#define AGC_VAL_TBL1_VAL_MSK                  (0xFF << AGC_VAL_TBL1_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl1_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl1_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL1_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL2
// Register offset           : 0x208
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL2_VAL_SHIFT                0
#define AGC_VAL_TBL2_VAL_MSK                  (0xFF << AGC_VAL_TBL2_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl2_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl2_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl2_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL2_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL3
// Register offset           : 0x20c
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL3_VAL_SHIFT                0
#define AGC_VAL_TBL3_VAL_MSK                  (0xFF << AGC_VAL_TBL3_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl3_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl3_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl3_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL3_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL4
// Register offset           : 0x210
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL4_VAL_SHIFT                0
#define AGC_VAL_TBL4_VAL_MSK                  (0xFF << AGC_VAL_TBL4_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl4_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl4_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl4_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL4_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL5
// Register offset           : 0x214
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL5_VAL_SHIFT                0
#define AGC_VAL_TBL5_VAL_MSK                  (0xFF << AGC_VAL_TBL5_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl5_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl5_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl5_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL5_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL6
// Register offset           : 0x218
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL6_VAL_SHIFT                0
#define AGC_VAL_TBL6_VAL_MSK                  (0xFF << AGC_VAL_TBL6_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl6_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl6_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl6_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL6_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL7
// Register offset           : 0x21c
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL7_VAL_SHIFT                0
#define AGC_VAL_TBL7_VAL_MSK                  (0xFF << AGC_VAL_TBL7_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl7_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl7_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl7_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL7_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL8
// Register offset           : 0x220
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL8_VAL_SHIFT                0
#define AGC_VAL_TBL8_VAL_MSK                  (0xFF << AGC_VAL_TBL8_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl8_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl8_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl8_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL8_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL9
// Register offset           : 0x224
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL9_VAL_SHIFT                0
#define AGC_VAL_TBL9_VAL_MSK                  (0xFF << AGC_VAL_TBL9_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl9_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl9_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl9_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL9_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL10
// Register offset           : 0x228
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL10_VAL_SHIFT               0
#define AGC_VAL_TBL10_VAL_MSK                 (0xFF << AGC_VAL_TBL10_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl10_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl10_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl10_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL10_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL11
// Register offset           : 0x22c
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL11_VAL_SHIFT               0
#define AGC_VAL_TBL11_VAL_MSK                 (0xFF << AGC_VAL_TBL11_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl11_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl11_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl11_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL11_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL12
// Register offset           : 0x230
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL12_VAL_SHIFT               0
#define AGC_VAL_TBL12_VAL_MSK                 (0xFF << AGC_VAL_TBL12_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl12_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl12_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl12_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL12_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL13
// Register offset           : 0x234
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL13_VAL_SHIFT               0
#define AGC_VAL_TBL13_VAL_MSK                 (0xFF << AGC_VAL_TBL13_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl13_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl13_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl13_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL13_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL14
// Register offset           : 0x238
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL14_VAL_SHIFT               0
#define AGC_VAL_TBL14_VAL_MSK                 (0xFF << AGC_VAL_TBL14_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl14_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl14_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl14_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL14_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL15
// Register offset           : 0x23c
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL15_VAL_SHIFT               0
#define AGC_VAL_TBL15_VAL_MSK                 (0xFF << AGC_VAL_TBL15_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl15_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl15_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl15_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL15_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL16
// Register offset           : 0x240
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL16_VAL_SHIFT               0
#define AGC_VAL_TBL16_VAL_MSK                 (0xFF << AGC_VAL_TBL16_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl16_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl16_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl16_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL16_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_VAL_TBL17
// Register offset           : 0x244
// Register description      : AGC Value Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Value Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_VAL_TBL17_VAL_SHIFT               0
#define AGC_VAL_TBL17_VAL_MSK                 (0xFF << AGC_VAL_TBL17_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_val_tbl17_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_val_tbl17_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_val_tbl17_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_VAL_TBL17_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL0
// Register offset           : 0x300
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL0_VAL_SHIFT               0
#define AGC_BOND_TBL0_VAL_MSK                 (0xFF << AGC_BOND_TBL0_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl0_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl0_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL0_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL1
// Register offset           : 0x304
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL1_VAL_SHIFT               0
#define AGC_BOND_TBL1_VAL_MSK                 (0xFF << AGC_BOND_TBL1_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl1_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl1_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL1_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL2
// Register offset           : 0x308
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL2_VAL_SHIFT               0
#define AGC_BOND_TBL2_VAL_MSK                 (0xFF << AGC_BOND_TBL2_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl2_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl2_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl2_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL2_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL3
// Register offset           : 0x30c
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL3_VAL_SHIFT               0
#define AGC_BOND_TBL3_VAL_MSK                 (0xFF << AGC_BOND_TBL3_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl3_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl3_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl3_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL3_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL4
// Register offset           : 0x310
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL4_VAL_SHIFT               0
#define AGC_BOND_TBL4_VAL_MSK                 (0xFF << AGC_BOND_TBL4_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl4_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl4_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl4_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL4_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL5
// Register offset           : 0x314
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL5_VAL_SHIFT               0
#define AGC_BOND_TBL5_VAL_MSK                 (0xFF << AGC_BOND_TBL5_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl5_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl5_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl5_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL5_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL6
// Register offset           : 0x318
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL6_VAL_SHIFT               0
#define AGC_BOND_TBL6_VAL_MSK                 (0xFF << AGC_BOND_TBL6_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl6_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl6_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl6_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL6_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL7
// Register offset           : 0x31c
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL7_VAL_SHIFT               0
#define AGC_BOND_TBL7_VAL_MSK                 (0xFF << AGC_BOND_TBL7_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl7_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl7_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl7_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL7_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL8
// Register offset           : 0x320
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL8_VAL_SHIFT               0
#define AGC_BOND_TBL8_VAL_MSK                 (0xFF << AGC_BOND_TBL8_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl8_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl8_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl8_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL8_U ;


//-----------------------------------------------------------------------------
// Register name             : AGC_BOND_TBL9
// Register offset           : 0x324
// Register description      : AGC Boundary Table
// Register field description:
//    fld_val           : [ 7 :  0] AGC Boundary Table 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define AGC_BOND_TBL9_VAL_SHIFT               0
#define AGC_BOND_TBL9_VAL_MSK                 (0xFF << AGC_BOND_TBL9_VAL_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _agc_bond_tbl9_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _agc_bond_tbl9_map
    {
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
    } mBits ;

#else

    struct _agc_bond_tbl9_map
    {
        volatile unsigned int reserved_8        : 24 ; // [31 :  8] 
        volatile unsigned int val               :  8 ; // [ 7 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} AGC_BOND_TBL9_U ;


//-----------------------------------------------------------------------------
// Register name             : SPI_CTRL
// Register offset           : 0x0810
// Register description      : SPI Control Register
// Register field description:
//    fld_rd_stp          : [20 : 16] Start position of read data[0] when spi read 
//    fld_tri_en          : [     12] Tri-state enable 
//    fld_twocs_en        : [     11] 0:single chip select signals
//                                    1:two chip select signals 
//    fld_wclk_inv        : [     10] 1:Invert clk_spi when SPI write 
//    fld_rclk_inv        : [      9] 1:Invert clk_spi when SPI read 
//    fld_mode            : [      8] SPI work Mode.
//                                    0: Normal mode
//                                    1:Renasense mode 
//    fld_len             : [ 4 :  0] SPI receive/transmit data bit width 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SPI_CTRL_LEN_SHIFT                      0
#define SPI_CTRL_LEN_MSK                        (0x1F << SPI_CTRL_LEN_SHIFT)
#define SPI_CTRL_MODE                           BIT_8
#define SPI_CTRL_RCLK_INV                       BIT_9
#define SPI_CTRL_WCLK_INV                       BIT_10
#define SPI_CTRL_TWOCS_EN                       BIT_11
#define SPI_CTRL_TRI_EN                         BIT_12
#define SPI_CTRL_RD_STP_SHIFT                   16
#define SPI_CTRL_RD_STP_MSK                     (0x1F << SPI_CTRL_RD_STP_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _spi_ctrl_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _spi_ctrl_map
    {
        volatile unsigned int len                 :  5 ; // [ 4 :  0] 
        volatile unsigned int reserved_5          :  3 ; // [ 7 :  5] 
        volatile unsigned int mode                :  1 ; // [      8] 
        volatile unsigned int rclk_inv            :  1 ; // [      9] 
        volatile unsigned int wclk_inv            :  1 ; // [     10] 
        volatile unsigned int twocs_en            :  1 ; // [     11] 
        volatile unsigned int tri_en              :  1 ; // [     12] 
        volatile unsigned int reserved_13         :  3 ; // [15 : 13] 
        volatile unsigned int rd_stp              :  5 ; // [20 : 16] 
        volatile unsigned int reserved_21         : 11 ; // [31 : 21] 
    } mBits ;

#else

    struct _spi_ctrl_map
    {
        volatile unsigned int reserved_21         : 11 ; // [31 : 21] 
        volatile unsigned int rd_stp              :  5 ; // [20 : 16] 
        volatile unsigned int reserved_13         :  3 ; // [15 : 13] 
        volatile unsigned int tri_en              :  1 ; // [     12] 
        volatile unsigned int twocs_en            :  1 ; // [     11] 
        volatile unsigned int wclk_inv            :  1 ; // [     10] 
        volatile unsigned int rclk_inv            :  1 ; // [      9] 
        volatile unsigned int mode                :  1 ; // [      8] 
        volatile unsigned int reserved_5          :  3 ; // [ 7 :  5] 
        volatile unsigned int len                 :  5 ; // [ 4 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SPI_CTRL_U ;


//-----------------------------------------------------------------------------
// Register name             : SPI_WD0
// Register offset           : 0x0814
// Register description      : SPI Write Data Register0
// Register field description:
//    fld_data        : [31 :  0] In write mode, DATA will be send by SPI, if for read action, SPI_WD DATA is not be used 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SPI_WD0_DATA_SHIFT                  0
#define SPI_WD0_DATA_MSK                    (0xFFFFFFFF << SPI_WD0_DATA_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _spi_wd0_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _spi_wd0_map
    {
        volatile unsigned int data            : 32 ; // [31 :  0] 
    } mBits ;

#else

    struct _spi_wd0_map
    {
        volatile unsigned int data            : 32 ; // [31 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SPI_WD0_U ;


//-----------------------------------------------------------------------------
// Register name             : SPI_WD1
// Register offset           : 0x0818
// Register description      : SPI Write Data Register1
// Register field description:
//    fld_data        : [31 :  0] In write mode, DATA will be send by SPI, if for read action, SPI_WD DATA is not be used 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SPI_WD1_DATA_SHIFT                  0
#define SPI_WD1_DATA_MSK                    (0xFFFFFFFF << SPI_WD1_DATA_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _spi_wd1_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _spi_wd1_map
    {
        volatile unsigned int data            : 32 ; // [31 :  0] 
    } mBits ;

#else

    struct _spi_wd1_map
    {
        volatile unsigned int data            : 32 ; // [31 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SPI_WD1_U ;


//-----------------------------------------------------------------------------
// Register name             : SPI_RD
// Register offset           : 0x081C
// Register description      : SPI Read Data Regsiter
// Register field description:
//    fld_data        : [31 :  0] The return data of SPI read action 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SPI_RD_DATA_SHIFT                   0
#define SPI_RD_DATA_MSK                     (0xFFFFFFFF << SPI_RD_DATA_SHIFT)

//------------------------- Data Prototype ------------------------------------
typedef union _spi_rd_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _spi_rd_map
    {
        volatile unsigned int data            : 32 ; // [31 :  0] 
    } mBits ;

#else

    struct _spi_rd_map
    {
        volatile unsigned int data            : 32 ; // [31 :  0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SPI_RD_U ;


//-----------------------------------------------------------------------------
// Register name             : SPI_FIFO_STS
// Register offset           : 0x0820
// Register description      : SPI FIFO status
// Register field description:
//    fld_ie            : [      3] Input FIFO Empyt 
//    fld_if            : [      2] Input FIFO Full 
//    fld_oe            : [      1] Output FIFO Empty 
//    fld_of            : [      0] Output FIFO Full 
//-----------------------------------------------------------------------------

//------------------------- Fields Definition ---------------------------------
#define SPI_FIFO_STS_OF                       BIT_0
#define SPI_FIFO_STS_OE                       BIT_1
#define SPI_FIFO_STS_IF                       BIT_2
#define SPI_FIFO_STS_IE                       BIT_3

//------------------------- Data Prototype ------------------------------------
typedef union _spi_fifo_sts_tag
{ 

#ifdef CHIP_ENDIAN_LITTLE

    struct _spi_fifo_sts_map
    {
        volatile unsigned int of                :  1 ; // [      0] 
        volatile unsigned int oe                :  1 ; // [      1] 
        volatile unsigned int inf               :  1 ; // [      2]  //if
        volatile unsigned int ie                :  1 ; // [      3] 
        volatile unsigned int reserved_4        : 28 ; // [31 :  4] 
    } mBits ;

#else

    struct _spi_fifo_sts_map
    {
        volatile unsigned int reserved_4        : 28 ; // [31 :  4] 
        volatile unsigned int ie                :  1 ; // [      3] 
        volatile unsigned int inf               :  1 ; // [      2]  //if
        volatile unsigned int oe                :  1 ; // [      1] 
        volatile unsigned int of                :  1 ; // [      0] 
    } mBits ;

#endif // CHIP_ENDIAN_LITTLE

    volatile unsigned int dwValue ;
} SPI_FIFO_STS_U ;



/**---------------------------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

/**---------------------------------------------------------------------------*/

#endif // _FM_SPRD_H_

