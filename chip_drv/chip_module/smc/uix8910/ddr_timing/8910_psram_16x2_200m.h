#ifndef _TGT_AP_PSRAM_TIMING_H_
#define _TGT_AP_PSRAM_TIMING_H_

#define UDELAY_SYMBOL   0x41b23671

struct ddr_save_pattern {
	uint32 offs;
	uint32 val;
};

const struct ddr_save_pattern dmc_off_val[] = {
	{
		REG_DMC_CTRL_FORMAT_CONTROL,
		DMC400_ALIGN_BOUNDARY_ALIGN_BOUNDARY_2_COL_2BIT |
		DMC400_ACC_GRANU_ACC_GRANU_2_DDR_4N |
		DMC400_MEM_BURST_MEM_BURST_2_DDR_BL4 |
		DMC400_MEM_WIDTH_PHY_WIDTH_32_X16_DDR
	},

	{
		REG_DMC_CTRL_ADDRESS_CONTROL,
		DMC400_CHANNEL_BITS_0_CHANNEL_BITS_1MEMIF |
		DMC400_CHIP_BITS_0_CHIP_BITS_1CS |
		DMC400_BANK_BITS_2_BANK_BITS_4BK |
		DMC400_ROW_BITS_13_ROW_BITS | DMC400_COLUMN_BITS_9_COL_BITS
	},

	{
		REG_DMC_CTRL_DECODE_CONTROL,
		DMC400_STRIP_DECODE_PAGE_ADDR_11_10 |
		DMC400_ADDR_DECODE_CHANNEL_CHIP_ROW_BANK_COL
	},

	{REG_DMC_CTRL_T_REFI,		0x00000186},
	{REG_DMC_CTRL_T_RFC,		0x008c008c},
	{REG_DMC_CTRL_T_MRR,		0x00000002},
	{REG_DMC_CTRL_T_MRW,		0x00000005},
	{REG_DMC_CTRL_T_RCD,		0x00000006},
	{REG_DMC_CTRL_T_RAS,		0x00000011},
	{REG_DMC_CTRL_T_RP,		0x00000008},
	{REG_DMC_CTRL_T_RPALL,		0x00000008},
	{REG_DMC_CTRL_T_RRD,		0x00000004},
	{REG_DMC_CTRL_T_FAW,		0x00000014},
	{REG_DMC_CTRL_READ_LATENCY,	0x0000000e},
	{REG_DMC_CTRL_T_RTR,		0x00000006},
	{REG_DMC_CTRL_T_RTW,		0x0000000c},
	{REG_DMC_CTRL_T_RTP,		0x00000008},
	{REG_DMC_CTRL_WRITE_LATENCY,	0x0000000a},
	{REG_DMC_CTRL_T_WR,		0x0000000c},
	{REG_DMC_CTRL_T_WTR,		0x000a000a},
	{REG_DMC_CTRL_T_WTW,		0x000c000c},
	{REG_DMC_CTRL_T_ECKD,		0x0000000b},
	{REG_DMC_CTRL_T_XCKD,		0x0000000b},
	{REG_DMC_CTRL_T_EP,		0x00000002},
	{REG_DMC_CTRL_T_XP,		0x00030003},
	{REG_DMC_CTRL_T_ESR, 		0x00000002},
	{REG_DMC_CTRL_T_XSR,		0x00380038},
	{REG_DMC_CTRL_T_SRCKD,		0x0000000b},
	{REG_DMC_CTRL_T_CKSRD,		0x0000000b},
	{REG_DMC_CTRL_T_RDDATA_EN,	0x00000006},// RL=6
	{REG_DMC_CTRL_T_PHYWRLAT,	0x00000103},
	//{REG_DMC_CTRL_MEMC_CMD,     0x0},
	//{REG_DMC_CTRL_DIRECT_CMD,   0x10001800},
	{REG_DMC_CTRL_TURNAROUND_PRIORITY,0x43},
	{REG_DMC_CTRL_HIT_PRIORITY,0x41},
	{REG_DMC_CTRL_QOS0_CONTROL,	((0xf << 8) | 0x0)},
	{REG_DMC_CTRL_QOS1_CONTROL,	((0xf << 8) | 0x1)},
	{REG_DMC_CTRL_QOS2_CONTROL,	((0xf << 8) | 0x2)},
	{REG_DMC_CTRL_QOS3_CONTROL,	((0xf << 8) | 0x3)},
	{REG_DMC_CTRL_QOS4_CONTROL,	((0x4 << 8) | 0x4)},
	{REG_DMC_CTRL_QOS5_CONTROL,	((0xf << 8) | 0x5)},
	{REG_DMC_CTRL_QOS6_CONTROL,	((0xf << 8) | 0x6)},
	{REG_DMC_CTRL_QOS7_CONTROL,	((0x6 << 8) | 0x7)},
	{REG_DMC_CTRL_DIRECT_CMD,   0x10001b00},   // 1/8, driver length longyan
	{REG_DMC_CTRL_DIRECT_CMD,   0x10008004},
	{0x70753159,				0x70753159},
};

const struct ddr_save_pattern dmc_cmd_off_val[] = {
	{UDELAY_SYMBOL, 200},// t_PU >= 150 us
	{REG_DMC_CTRL_DIRECT_CMD, 0x0},// NOPE
	{UDELAY_SYMBOL, 10},// wait dmc toggle dfi clk
	{REG_DMC_CTRL_DIRECT_CMD, 0x1000003f},// MRS, MR63, reset
	{UDELAY_SYMBOL, 10},// t_RST >= 2 us
	{UDELAY_SYMBOL, 100},// t_HSPU - tPU - tRST >= 1 ms
	// MRS, MR1, VL=6, Variable Latency
	//{REG_DMC_CTRL_DIRECT_CMD, 0x10001800},
	{REG_DMC_CTRL_DIRECT_CMD, 0x10001b00},  // 1/8, driver length longyan
	{UDELAY_SYMBOL, 10},
	// MRS, MR4, WL=2, PSRAM-200M
	{REG_DMC_CTRL_DIRECT_CMD, 0x10008004},
	{UDELAY_SYMBOL, 10},
};

const struct ddr_save_pattern phy_off_val[] = {
	{REG_PSRAM_PHY_PSRAM_RF_CFG_PHY,		0x00000001},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_0_WR_ADS0,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_0_WR_ADS1,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_1_WR_ADS0,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_2_WR_ADS0,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_3_WR_ADS0,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_1_WR_ADS1,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_2_WR_ADS1,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_DLL_DL_3_WR_ADS1,	0x0000003b},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_REG_SEL,		0x00000000},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_DQS_IE_SEL_F0,	0x00000001},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_DQS_OE_SEL_F0,	0x00000001},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_DQS_OUT_SEL_F0,	0x00000004},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_DQS_GATE_SEL_F0,	0x0000000f},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_DATA_IE_SEL_F0,	0x00000002},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG_DATA_OE_SEL_F0,	0x00000001},
	{REG_PSRAM_PHY_PSRAM_DRF_T_DATA_OE_EXT,		0x00000011},
	{REG_PSRAM_PHY_PSRAM_DRF_T_DQS_OE_EXT,		0x00000001},
	{REG_PSRAM_PHY_PSRAM_DRF_FORMAT_CONTROL,	0x00000001},
	{REG_PSRAM_PHY_PSRAM_DRF_T_RCD,			0x00000006},
	{REG_PSRAM_PHY_PSRAM_DRF_T_RDDATA_EN,		0x00000006},
	{REG_PSRAM_PHY_PSRAM_DRF_T_RDDATA_LATE,		0x00000002},
	{REG_PSRAM_PHY_PSRAM_DRF_T_CPH_WR,		0x00000006},
	{REG_PSRAM_PHY_PSRAM_DRF_T_CPH_RD,		0x00000012},
	{REG_PSRAM_PHY_PSRAM_DRF_T_XPHS,		0x0000000c},
	{REG_PSRAM_PHY_PSRAM_DRF_CFG,			0x00000001},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_CLOCK_GATE,		0x0000001f},
	{REG_PSRAM_PHY_PSRAM_RF_CFG_PHY,		0x00000003},
	{0x70753159,				0x70753159},
};

const struct ddr_save_pattern pad_off_val[] = {
	//{PSRAM,		PSRAM},	
	{0x8801708,		0x0},
	//{0x8801720,		0x1080},
	{0x8801720,		0x420},     // 4ma longyan
	{0x8801728,		0x551},
	{0x8801724,		0x1},
	{0x70753159,	0x70753159},
};

const struct ddr_save_pattern cmd_off_val[] = {
	//{0x08803008,	0x3},
	{0x50090264,	0x0},    //IDL_DDR_LATCH
	{0x500A0048,	0x0},    //PWR_DDR_HOLD_CTRL
	{0x08803008,	0x3},
	{0x70753159,	0x70753159}, //endflag
};

const uint32 basedata_off_val[] = {
	    REG_PSRAM_PHY_BASE,		//psram_phy_addr_base
	    REG_DMC_CTRL_BASE,
};

#endif
